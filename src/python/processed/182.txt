{"i": "5086690337095680", "t": "given a string without space \"iamstudent\" output \"i am student\" u are provided with a dictionary to check words", "k": ["string without space", "check words", "dictionary to check", "iamstudent", "output"]}
{"i": "5134949294276608", "t": "Write a program that reverses a linked list without using more than O(1) storage.", "k": ["write a program", "program that reverses", "reverses a linked", "linked list", "storage"]}
{"i": "5669407776833536", "t": "Write a program that answers YES/NO search queries containing * placeholders. Example: if the data you have is (hazem, ahmed, moustafa, fizo), then you should answer as follows for:\r\u2028ahmed: YES\r\u2028m**stafa: YES\r\u2028fizoo: NO\r\u2028fizd: NO\r\u2028*****: YES\r\u2028****: YES\u2028\r**: NO\r\u2028Your program should be able to answer each search query in O(1).", "k": ["search queries", "write a program", "placeholders", "ahmed", "search query"]}
{"i": "5714436482400256", "t": "If I was a marketer for a large company, tell me how I can increase the number of likes I have on my Facebook business page to 5 million?", "k": ["facebook business page", "facebook business", "large company", "increase the number", "business page"]}
{"i": "4868944789766144", "t": "You are given an unsorted sequence of integers 'a'. Find the longest subsequence 'b' such that elements of this subsequence are strictly increasing numbers. Elements in the subsequence 'b' must appear in the same relative order as in the sequence 'a'. You may assume that 'a' can fit to the memory.\r Example:\rinput:    a = [-1 2 100 100 101 3 4 5 -7]\routput:  b = [-1 2 3 4 5]", "k": ["unsorted sequence", "strictly increasing numbers", "sequence of integers", "integers", "subsequence"]}
{"i": "5128716894076928", "t": "In a single pass, find Nth node from last in a Linked List.\r{ N can be any value. }", "k": ["find nth node", "linked list", "find nth", "nth node", "single pass"]}
{"i": "6309126244139008", "t": "To within a constant factor, how much time does the following algorithm take, in terms of n?\r   twoToTheN(n)\r    if n == 1\r      return 0\r    else\r      return twoToTheN(n-1) + twoToTheN(n-1)", "k": ["constant factor", "twotothen", "factor", "constant", "time"]}
{"i": "6308236649037824", "t": "A polygon is a piecewise-linear, closed curve in the plane. That is, it is a curve\rending on itself that is formed by a sequence of straight-line segments, called the\rsides of the polygon. A point joining two consecutive sides is called a vertex of\rthe polygon. If the polygon is simple, as we shall generally assume, it does not\rcross itself. The set of points in the plane enclosed by a simple polygon forms the\rinterior of the polygon, the set of points on the polygon itself forms its boundary,\rand the set of points surrounding the polygon forms its exterior. A simple polygon\ris convex if, given any two points on its boundary or in its interior, all points on\rthe line segment drawn between them are contained in the polygon\u2019s boundary or\rinterior.\rProfessor Amundsen proposes the following method to determine whether a sequence\rhp0, p1, . . . , pn\u22121i of n points forms the consecutive vertices of a convex\rpolygon. Output \u201cyes\u201d if the set {6 pi pi+1 pi+2 : i = 0, 1, . . . , n \u2212 1}, where sub\rscript addition is performed modulo n, does not contain both left turns and right\rturns; otherwise, output \u201cno.\u201d Show that although this method runs in linear time,\rit does not always produce the correct answer. Modify the professor\u2019s method so\rthat it always produces the correct answer in linear time.", "k": ["polygon", "points", "simple polygon", "polygon forms", "closed curve"]}
{"i": "5094957612269568", "t": "Input any string, count the maximum depth of parenthesis nesting, i.e. \"abc(123(xyz))m(((n)))o\" -> 3.\r if input is null or contains a mismatch \"a)b(c\" or \"a(b\"\r Also some other samples:\r(((()))) -> 4  \r()()()() -> 1", "k": ["count the maximum", "parenthesis nesting", "maximum depth", "depth of parenthesis", "abc"]}
{"i": "5655160296570880", "t": "Consider the 52 cards of a deck. You generated a random sequence for these cards and want to send that sequence to a receiver. You want to minimize the communication between you and the receiver, i.e., minimize the number of bits required to send the sequence.\r What is the minimum number of bits required to send the sequence?\rHint: It is not 6 x 52", "k": ["required to send", "bits required", "sequence", "send", "number of bits"]}
{"i": "4911380140392448", "t": "Input: A string equation that contains numbers, '+' and '*'\rOutput: Result as int.\r For example:\rInput: 3*5+8 (as String)\rOutput: 23 (as int)", "k": ["result as int", "input", "string equation", "result", "output"]}
{"i": "5676064539934720", "t": "Given a class Rangeclass Range {\r\n\tpublic int begin;\r\n\tpublic int end;\r\n\tpublic Range(int begin, int end) {\r\n\t\tthis.begin = begin;\r\n\t\tthis.end = end;\r\n\t}\r\n}The problem:\rIntput: \r1) list of Ranges that don't overlap (not sorted) \r2) newRange that might overlap.\rOutput:\rlist of merged Ranges\r For example:\rInput: [1..5] [9..13] [17..22]\rnewRange: [4..10]\rOutput: [1..13] [17..22]", "k": ["public int begin", "public int end", "class rangeclass range", "int begin", "int end"]}
{"i": "5651446861135872", "t": "Find the number of substrings of 2 strings that are palindromes.", "k": ["find the number", "number of substrings", "find", "strings", "palindromes"]}
{"i": "5754895443427328", "t": "On a table there are four papers, one with the letter X written on top, one with the letter Y written on top, one with the number 1 written on top, and one with the number 2 written on top. Every paper has one of those letters on one side and one of those numbers on the other side. To prove that a paper with the letter x contains even number on the other side, what is the minimum number of conditions we have to check?", "k": ["written on top", "top", "written", "number", "letter"]}
{"i": "5106967313907712", "t": "How would you get all of the unique IDs out of a single file? What if it was a very large file?", "k": ["unique ids", "single file", "file", "large file", "unique"]}
{"i": "5733953082228736", "t": "to print pattern\r p\rPu\rpUl\rPuLc\rpUlCh\rPuLcHo\rpUlChOw\rPuLcHoWk", "k": ["pulcho pulchow pulchowk", "pul pulc pulch", "pulc pulch pulcho", "pulch pulcho pulchow", "pulchow pulchowk"]}
{"i": "5930542325301248", "t": "command which will tell all the running process and amount memory consumed by them", "k": ["amount memory consumed", "running process", "process and amount", "amount memory", "memory consumed"]}
{"i": "5715545926139904", "t": "Garbage collection in java", "k": ["garbage collection", "collection in java", "garbage", "java", "collection"]}
{"i": "5087228449521664", "t": "find the max length of name(1stName+2ndName+MiddleName) table value.", "k": ["middlename", "find the max", "max length", "find", "table"]}
{"i": "5647453514629120", "t": "Convert a binary tree into a In Order traversal circular list re-purposing the node's pointers Left & Right as Previous and Next respectively.\r Hint: A single node Left & Right points to itself.\r Note: This is not a binary search tree.", "k": ["order traversal circular", "traversal circular list", "circular list re-purposing", "node pointers left", "order traversal"]}
{"i": "5103480605769728", "t": "New CareerCup Android App!!!\r Hey Guys,\r Lately I was trying to get android app for this website and no single app was good enough for me.\r So I thought of developing it myself. After 2 weekends of work I released first version of the app. With lot more new features lined up.\r Please download it here\r https://play.google.com/store/apps/details?id=com.careercup\r and give your reviews and ratings.\r Thanks", "k": ["careercup android app", "android app", "careercup android", "hey guys", "app"]}
{"i": "5753462836953088", "t": "A plumber working for a company as a contractor. His job is attend services and submit the bill to get his salary on basis of daily work including his service charge 500 rupees. For a typical plumbing work he need pipes with different lengths. But in market he will get new pipe with standard size 100m of cost 100 rupees. (no small or large sized pipes available) Now , he need 10 , 40 , 60, 70 lengths of pipes for a jobwork.  \r Generally company  gives him (4 pipes * 100 rupees) + 500rupees as service charge = 900 rupees.\rbut plumber bought only 2 pipes cut as follows and get his job done...\r1st pipe => 40+60\r2nd pipe => 10+70 + extra left(20)\rBy buying only 2 pipes he get his job done. remaining 2 pipes money saved.\r write an efficient algorithm to calculate minimum number of standard size pipes required for given number of different pipes lengths:\r Input:\rN => total pipes for jobwork\rarr[N] => lengths of pipes. (for simplicity, pipe size will be either smaller or equal to standard size)\r outpud:\r minimum statdard sized(100m) pipes required\r constraint: you can only cut them can not join them back as follows\rsay he need 10 95 95, \rwith two pipes 100 100 = > 95+5 95+5 => 95 95 (5+5)// this is not accepted\r EX:\r Input:\r5\r20 30 50 60 80\r output:\r3\r Input:\r5\r10 10 10 15 20 35 55 60 70 75 75 80\r output:\r6", "k": ["pipes", "rupees", "input", "lengths", "pipe"]}
{"i": "5726852159111168", "t": "2. CURIOUS ANT (easier)\r Assume you have a typical tree-like structure. Each branch can have more children branches but it can also have some number of fruits (this is just a number associated with each branch). \rImagine an ant that wants to start at the root or the tree and go to the very end of some branch path. The ant is asking you: is it possible for me to encounter at least N fruits on my way? \rWrite a program that answers Yes or No to this question.\r Write the code in Python", "k": ["curious ant", "ant", "typical tree-like structure", "branch", "curious"]}
{"i": "6310422518956032", "t": "1. DR. ROPES (harder)\r Assume you have some number of ropes of varying length.\rFor example:     2 ft,   5 ft,   6 ft,   6 ft    (possible to have two or more ropes of the same length). \rWrite a program that determines if it is possible to string together the ropes to produce length of exactly N. \rFor the example set above, your program would answer:\rN of 7    : yes\rN of 11   : yes\rN of 3    : no\rN of 12   : yes\rN of 18   : no\rNote: Please write your solution without using the itertools package.\r Write the code in Python", "k": ["ropes", "length", "write", "assume", "program"]}
{"i": "5660503504322560", "t": "2. CURIOUS ANT (easier)\r Assume you have a typical tree-like structure. Each branch can have more children branches but it can also have some number of fruits (this is just a number associated with each branch). \rImagine an ant that wants to start at the root or the tree and go to the very end of some branch path. The ant is asking you: is it possible for me to encounter at least N fruits on my way? \rWrite a program that answers Yes or No to this question.\r Please write the code in Python", "k": ["curious ant", "ant", "typical tree-like structure", "branch", "curious"]}
{"i": "5738983025803264", "t": "1. DR. ROPES (harder)\r Assume you have some number of ropes of varying length.\rFor example:     2 ft,   5 ft,   6 ft,   6 ft    (possible to have two or more ropes of the same length). \rWrite a program that determines if it is possible to string together the ropes to produce length of exactly N. \rFor the example set above, your program would answer:\rN of 7    : yes\rN of 11   : yes\rN of 3    : no\rN of 12   : yes\rN of 18   : no\rNote: Please write your solution without using the itertools package.\r Please write the code in Python", "k": ["ropes", "length", "write", "assume", "program"]}
{"i": "5643916340625408", "t": "Write a function that takes an array of numbers and returns the maximum and minimum values.\r Give BigO for runtime.\r (This is a basic coding question. There are no real tricks or shortcuts.)", "k": ["write a function", "array of numbers", "numbers and returns", "returns the maximum", "maximum and minimum"]}
{"i": "5738825991061504", "t": "Your are given two strings str1 and str2, you have to generate another unique string str3, which can only generated by these two string str1 and str2, no other string can generate that string str3. Some later point you have to retrieve back those two string str1 and str2 form that unique string str3.", "k": ["unique string", "string", "generate", "unique", "generate another unique"]}
{"i": "5737528105631744", "t": "You are given an array, you have to replace each element of the array with product of the rest element. Example: {1,2,3}==> {6,3,2}", "k": ["rest element", "array", "element", "replace each element", "array with product"]}
{"i": "5637711991930880", "t": "Singleton(write a singleton class , and when we use singleton ) , design pattern , serialize , implement with existing code : Comparable(compareTo()) , hashCode() , equals , synchronize . what is SWING ? , what is WebStart ?", "k": ["design pattern", "implement with existing", "existing code", "singleton class", "comparable"]}
