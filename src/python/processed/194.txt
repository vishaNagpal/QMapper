{"i": "5729626833813504", "t": "Given a large array of unsigned ints, quickly find two who's sum is 10\r Then the interviewer asked me to write test cases.\r Followed by how to implement this on a distributed system, where multiple systems can read/write simultaneously on a shared cache (HINT: It is ok if you do not return the first instance)", "k": ["write test cases", "unsigned ints", "quickly find", "test cases", "large array"]}
{"i": "5744968524103680", "t": "A seller sells lot of products in his store and people place orders,just like any other store. Each item has a different weight and price.\r And each order can be a combination of different number of items with random quantity. Now each of these orders areto be put into different packages and sent to the courier company for delivery.\r But there are certain rules while splitting items into packages, they are as below:\r 1. If the cost of all the items in an order is more than $1000, split those items into multiple\rpackages, otherwise one package would be enough.\r 2. If the items in the same order are split into multiple packages, then the weight of the\r packages should be equally distributed over the packages with consideration of optimum\rcourier charges.\r 3. While splitting, NO PACKAGE can have a total price above $1000", "k": ["seller sells lot", "people place orders,just", "seller sells", "sells lot", "lot of products"]}
{"i": "5153263227764736", "t": "In a city year of birth/death of people who where born and died between year 1900 to 2000 are given. Write an algorithm to find the year in which max people were alive.", "k": ["born and died", "city year", "death of people", "birth", "death"]}
{"i": "6314916858298368", "t": "What is the maximum number of edges you could add to n vertexes to make a acyclic undirected graph?\r Follow up:\rWhat is the maximum number of edges you could add to n vertexes to make a acyclic directed graph?", "k": ["acyclic undirected graph", "maximum number", "number of edges", "vertexes to make", "make a acyclic"]}
{"i": "5138798180564992", "t": "There is a string whose characters can only be either \u2018a\u2019, \u2018b\u2019 or \u2018_\u2019 (there can be only one \u2018_\u2019 in the string). At each step, we can modify the string as follows:\r1. \u2018_\u2019 can be swapped with its adjacent character, example \u201ca_ba\u201d can be changed to either \u201c_aba\u201d or \u201cab_a\u201d.\r2. Two characters adjacent to \u2018_\u2019 (both on the same side of \u2018_\u2019) can be reversed along with the \u2018_\u2019 if both characters are different, example, \u201caa_ba\u201d can be changed to \u201caaab_\u201d but not to \u201c_aaba\u201d because both characters are \u2018a\u2019.\rYou are given two strings, the initial state and the final state (lengths will be same), you have to output the minimum number of steps required to change the string in initial state to the string in the final state.\rexample:\rinput: a_b ab_\routput: 1\rinput: abaa_a b_aaaa\routput: 4\rreason for example 2:- abaa_a -> aba_aa -> ab_aaa -> _baaaa -> b_aaaa", "k": ["string", "characters", "state", "output", "aba"]}
{"i": "5683933280731136", "t": "Implement a vector-like data structure from scratch.\r This question was to be done in C or C++.\r Discussion topics:\r1. Dealing with out of bounds accesses.\r2. What happens when you need to increase the vector's size?\r3. How many copies does the structure perform to insert n elements? That is, n calls to vector.push_back", "k": ["vector-like data structure", "implement a vector-like", "vector-like data", "data structure", "implement"]}
{"i": "5642432622362624", "t": "You have a sorted array containing the age of every person on Earth.\r [0, 0, 0, 0, ..., 1, 1, ..., 28, 28, ..., 110, ...]\r Find out how many people have each age.", "k": ["person on earth", "sorted array", "earth", "sorted", "array"]}
{"i": "5723227936522240", "t": "Design a queue (FIFO) structure using only stacks (LIFO).\r Code is not necessary.\r Follow-up: provide a complexity analysis of push and remove operations.", "k": ["design a queue", "fifo", "lifo", "design", "queue"]}
{"i": "5146925198213120", "t": "Write a program to find pattern.\r 0: 1\r1: 11\r2: 21\r3: 1211\r4: 111221\r5:  312211\r Iterate over the previous number, and find count for same number number.  Append that count before number.\r e.g., \r public String pattern(int input){} \r If input = 4, function should return 111221.", "k": ["write a program", "public string pattern", "number", "write", "string pattern"]}
{"i": "6218545979457536", "t": "Given a string S, you are allowed to convert it to a palindrome by adding 0 or more characters in front of it. \rFind the length of the shortest palindrome that you can create from S by applying the above transformation.", "k": ["allowed to convert", "characters in front", "palindrome by adding", "adding", "find the length"]}
{"i": "6282194710429696", "t": "I think it's one system design question. Design one google's API, qps (query per second).", "k": ["system design question", "design question", "system design", "google api", "question"]}
{"i": "6321385347481600", "t": "Given two string you need to tell whether edit distance between two string is 1 or not.", "k": ["edit distance", "string", "edit", "distance"]}
{"i": "5195485440638976", "t": "Two sorted array of integer are given, you need to find nth rank element from combine array.", "k": ["find nth rank", "nth rank element", "find nth", "nth rank", "rank element"]}
{"i": "6197575795343360", "t": "There is a set of n bolts and n nuts given. You have only API that tells whether given nut is smaller or larger then for a bolt no any other relative number. You need to match all nuts and bolts in O(nlogn).", "k": ["set", "api", "bolts", "nuts", "relative number"]}
{"i": "5115786416881664", "t": "Given an abstract class A having a function sumBill(int a, int b). Now assume that you have 3 or 4 class extending class A and implementing their version of sumBill. And in various locations in the code you are making calls to sumBill with integer parameters. \rLater on it is identified that the parameters need to be of type double rather than int. So now one has to go refactor all the places which make a call to sumBill to pass parameters of double data type.\rSo the question is what could the developer had done better to avoid such a problem in the first place.\rIts a design pattern question.", "k": ["class extending class", "abstract class", "function sumbill", "class", "sumbill"]}
{"i": "5707995163918336", "t": "Minesweeper question: Given an n x m grid holding individual mine co-ordinates, identify all of the mine clusters. A mine cluster is the largest collection of neighboring mines.\r Example input:\r  0 1 2 3\r---------\r0|0|1|0|1\r1|0|0|1|1\r2|0|0|0|0\r3|1|1|0|0\r Expected output:\r [cluster 1] (0,1),(1,2),(1,3),(0,3)\r[cluster 2] (3,0),(3,1)", "k": ["grid holding individual", "individual mine co-ordinates", "holding individual mine", "minesweeper question", "grid holding"]}
{"i": "5767787551129600", "t": "Let's say there is a double square number X, which can be expressed as the sum of two perfect squares, for example, 10 is double square because 10 = 3^2 + 1^2\r Determine the number of ways which it can be written as the sum of two squares", "k": ["double square number", "double square", "determine the number", "perfect squares", "square number"]}
{"i": "5753125069651968", "t": "6\r\n    /  \\\r\n   3    5\r\n  / \\     \\\r\n 2   5    4\r\n    / \\\r\n   7  4There are 4 leaves, hence 4 root to leaf paths:\r   Path           Sum\r6->3->2           632\r6->3->5->7       6357\r6->3->5->4       6354\r6->5>4            654   \rAnswer: 632+6357+6354+654=13997", "k": ["path sum", "root to leaf", "leaf paths", "answer", "sum"]}
{"i": "5725495008165888", "t": "6\r                                      /      \\\r                                    3          5\r                                  /   \\          \\\r                                 2     5          4  \r                                      /   \\\r                                     7     4\rThere are 4 leaves, hence 4 root to leaf paths:\r   Path                    Sum\r  6->3->2                   632\r  6->3->5->7               6357\r  6->3->5->4               6354\r  6->5>4                    654   \r  Answer = 632 + 6357 + 6354 + 654 = 13997", "k": ["path sum", "root to leaf", "leaf paths", "answer", "sum"]}
{"i": "5647601481285632", "t": "Write a program to make the following possible with any given tree. \r                                           6\r                                      /      \\\r                                    3          5\r                                  /   \\          \\\r                                 2     5          4  \r                                      /   \\\r                                     7     4\r  There are 4 leaves, hence 4 root to leaf paths:\r   Path                    Sum\r  6->3->2                   632\r  6->3->5->7               6357\r  6->3->5->4               6354\r  6->5>4                    654   \r   Answer = 632 + 6357 + 6354 + 654 = 13997", "k": ["write a program", "program to make", "path sum", "leaf paths", "write"]}
{"i": "5668740639227904", "t": "Suggest a Data Structure to do the following opperations with time complexity O(1).\rinsert(int element); //insertes an element in O(1);\rdelete(int element); //deletes an element in O(1);\rlookup(); // returns any element in random from the list at O(1);", "k": ["data structure", "suggest a data", "opperations with time", "time complexity", "int element"]}
{"i": "5654684419227648", "t": "Write an algorithm that uses the divide and conquer technique. Given an array V with n int elements the algorithm should calculate the number of times that two consecutive 0's appear. Example :If V = [3, 0, 0, 1, 0, 1, 3, 2, 0, 0, 0, 1, 2], the algorithm should return 3, Note that 0, 0, 0 corresponds to having 2 pairs of consecutive zeros.\rI was wondering if you guys can give me a step by step approach in solving these questions. I'm a recent grad and I want to know the best solutions to solve these problems. Thanks!", "k": ["conquer technique", "divide and conquer", "algorithm", "write an algorithm", "write"]}
{"i": "6203903899074560", "t": "Sort the elements inside a stack using only push and pop opperation. Is it possible to do it only with one additional stack?", "k": ["sort the elements", "pop opperation", "elements inside", "push and pop", "sort"]}
{"i": "5711318931734528", "t": "Build a function that takes one string and one regex expression in inputs and output true if the string matches the regex expression.\rstring: a-z\rregex: a-z + * (where '*' matches 0 or more character and '+' matches one character)", "k": ["build a function", "regex expression", "inputs and output", "output true", "expression"]}
{"i": "5732682099064832", "t": "O/p the expected value of the number of people to deliver the information\r I/P dependency graph\r   1234\r1-0111\r2-1000\r3-1001\r4-1010\r o/p\r2.66", "k": ["1-0111 2-1000 3-1001", "2-1000 3-1001 4-1010", "dependency graph", "1-0111 2-1000", "number of people"]}
{"i": "5754245519245312", "t": "given a range of number 1 through N, where N >=3. you have  to take an array of length 2N and place each number ( from the range 1 to N) twice. such a that the distance between two indexes of a number is equal to the number. example\r N=3\r       ( 3, 1, 2, 1, 3, 2 ) \r I know we can Use Backtracking but is there any other solution.", "k": ["number", "range", "array of length", "backtracking", "length"]}
{"i": "5190388790853632", "t": "t's laundry day, and, as usual, you've been putting this off for quite some time. Also, unfortunately, you lacked the foresight to actually ensure all your dirty laundry stayed in your hamper whilst it accumulated (what? we can't ALL be underwear basketball pros!).\r Begrudgingly, you've gathered up all the clothing you could find and sent them through the wash. Now you have a disheveled pile of clean, albiet disorganized, accoutrements. You come to the realization that you probably lost some items in the fray, so now it's time to fold and figure out what's gone missing!\r To get a good idea of the state of your wardrobe, count up the number of distinct shirts, pants, and underwear you have as you go through the laundry. Also pair up your socks, noting the number of pairs of each kind of sock and if there are any lonely souls (single (and ready to mingle) socks).\r  Input Specifications\r Each article of clothing will have its own separate line. You have a penchant for hoarding, so there is no guarantee as to the number of pieces, but you can assure yourself that each article can be easily categorized by description (name).\r Articles of clothing will be fed in as line-delimited list. See below for examples.\r  Output Specifications\r Output should be an alphabetically (case-insensitive) sorted, line-delimited list of the articles of clothing along with their count. Each field (count, category) should be separated by a pipe (|). If you come across a sock without a soulmate, the count should be designated by a 0 (zero). Socks that are in pairs should be on separate lines from the socks of the same category without pairs, and should come before the pairless sock. See below for examples.\r Sample Input/Output\r INPUT\rwhite shirt\rpolka dot sock \rred sock \rsuperhero shirt \rtorn jeans \rpolka dot sock \rwhite shirt \rpolka dot sock \r OUTPUT\r1|polka dot sock\r0|polka dot sock\r0|red sock\r1|superhero shirt\r1|torn jeans\r2|white shirt\r EXPLANATION\rAs described above in the input and output specifications.", "k": ["sock", "polka dot sock", "polka dot", "dot sock", "output"]}
{"i": "5698760178925568", "t": "In gmail, while composing an email, upon adding a contact, related contacts are displayed. How would you implement that feature? \r - Write an algorithm for that.\r - What data structure would you use to store the weights?\r - In what format would you persist this data?", "k": ["composing an email", "related contacts", "contacts are displayed", "adding a contact", "gmail"]}
{"i": "5720615388446720", "t": "We have words and there positions in a paragraph in sorted order. Write an algorithm to find the least distance for a given 3 words. \reg. for 3 words\rjob: 5, 9 , 17\rin: 4, 13, 18\rgoogle: 8, 19, 21\r...\r...\rAnswer: 17, 18, 19\rCan you extend it to \"n\" words?\r Context: In Google search results, the search terms are highlighted in the short paragraph that shows up. We need to  find the shortest sentence that has all the words if we have word positions as mentioned above.", "k": ["sorted order", "words", "order", "google", "sorted"]}
{"i": "5168773019467776", "t": "Write an algorithm to convert the given input string to the expected output string. The input string shall be the length of few million characters. So the output has to be updated in the same string...\r Input String = \"ABBCDEFGGGGGGGGHHXX..<20 more X>..XYY...\"\rExpected output = \"A1B2C1D1E1F1G8H2X23Y2...\"\r Note: The count of each character has to be appended with the same character in the output string", "k": ["input string", "write an algorithm", "algorithm to convert", "string", "output string"]}
