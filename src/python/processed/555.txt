{"i": "244739", "t": "Given 2 linked lists(which need not have unique elements) find intersection point in the form of Y.(it can be anywhere--middle or tail)\r   Hint: dont compare values, compare addresses", "k": ["find intersection point", "linked lists", "middle or tail", "unique elements", "find intersection"]}
{"i": "244738", "t": "Given a custom function Rev(char *) eg: abc cde returns edc cba utilizing only this function convert\r I/P: My name is tom\r O/P: tom is name My", "k": ["custom function rev", "abc cde returns", "cde returns edc", "returns edc cba", "edc cba utilizing"]}
{"i": "245709", "t": "Given a array of 0's,1's and 2's arrange in a way that all 0's come first, then 1's then 2's.\r ANS: Arrays.sort(array) (Java)\r     Basically, sort the elements in any prog lang.", "k": ["ans", "arrays.sort", "java", "basically", "arrange"]}
{"i": "244737", "t": "Reverse a linked list. First I gave recursive. Then was asked for iterative.", "k": ["reverse a linked", "linked list", "reverse", "list", "linked"]}
{"i": "245699", "t": "Interview for Kindle in Amazon Chennai.\r couple of questions on basic sql\r1.get max salary of employees from each dept.\r2. Find 3rd max sal of employees given a dept.", "k": ["amazon chennai", "kindle in amazon", "interview for kindle", "chennai", "kindle"]}
{"i": "245697", "t": "given an array of n elements, find if there is a subset of 3 elements sum up to value T with time complexity O(nlgn).", "k": ["time complexity", "elements sum", "nlgn", "find", "elements"]}
{"i": "244708", "t": "Why do we have main memory in our computers?  Speed and Cost are never accepted answers.", "k": ["main memory", "computers", "speed and cost", "main", "memory"]}
{"i": "245681", "t": "Check whether the number is palindrome or not without using array?\rConvert the 6 decimal system into 10 decimal system?", "k": ["number is palindrome", "decimal system", "decimal", "check", "array"]}
{"i": "245680", "t": "how to find the number of rotations in O(logn) complexity?", "k": ["logn", "complexity", "find the number", "number of rotations", "find"]}
{"i": "245679", "t": "find the longest palindrome in a string?", "k": ["find the longest", "longest palindrome", "find", "string", "longest"]}
{"i": "244695", "t": "How would you test the line function in paint?", "k": ["function in paint", "test the line", "line function", "paint", "test"]}
{"i": "243731", "t": "Unix: You have 50,000 html files in a UNIX directory structure, some of which contain phone numbers in the format ***-***-****. How would you create a list of all the files which contain phone numbers? (Assume that you already have the regular expression)", "k": ["unix directory structure", "unix directory", "directory structure", "phone numbers", "html files"]}
{"i": "242725", "t": "1. What happens when exception is thrown from Destructor?\r2. Memory layout of an object ( mainly how many bytes for an object with virtual functions ).\r3. Finding a longest consecutive subsequence sum.\r4. Finding a loop in a linked list\r5. Finding the first non-repeating character in a string.", "k": ["finding", "thrown from destructor", "memory layout", "destructor", "object"]}
{"i": "243729", "t": "what r static functions in C", "k": ["static functions", "static", "functions"]}
{"i": "242722", "t": "Given an array of integers where some numbers repeat 1 time, some numbers repeat 2 times and only one number repeats 3 times, how do you find the number that repeat 3 times.\rI gave the hashmap solution. He was looking for a bitwise operator solution.", "k": ["numbers repeat", "number repeats", "repeat", "times", "array of integers"]}
{"i": "242694", "t": "Given an array of 999 distinct integers ranging from 1 to 1000 including. Find which number is missing. Restrictions: loop over the array only once, can't allocate an additional array.", "k": ["distinct integers ranging", "distinct integers", "integers ranging", "including", "distinct"]}
{"i": "242678", "t": "What data structure would you use to implement a routing table. Discuss about optimizing it.", "k": ["routing table", "data structure", "implement a routing", "table", "data"]}
{"i": "243665", "t": "Design an LRU cache with all the operations including getting the least recently used item to be O(1).", "k": ["design an lru", "lru cache", "operations including", "recently used item", "lru"]}
{"i": "241696", "t": "Given 2 lists find the intersection point of the 2 lists?\r The characteristics of these lists are they at some point will share the same tail.\r B->A->C->D->E->//\rT->F->I->C->D->E->//\r in this example ( C->D->E->// ) are the same list with same address space and nodes.\r---------------------\r B->A->C->D->E->//\rT->F->I->\r  The lists can be of any length and not sorted.\r 1) give any method to solve this\r2) if performance is a problem can we do this in linear time?\r3) if space and performance is a problem, give a solution that will solve this in linear time without the auxiliary memory overhead.\r4) code it", "k": ["find the intersection", "intersection point", "lists find", "lists", "point"]}
{"i": "241687", "t": "Given one huge linked list and one small linked list(both unsorted), how do you find intersection of these two lists(common elements).", "k": ["huge linked list", "small linked list", "common elements", "linked list", "find intersection"]}
{"i": "240679", "t": "delete a single link list which is a loop in it", "k": ["single link list", "delete a single", "single link", "link list", "delete"]}
{"i": "239672", "t": "What is the difference detween ISR & function call", "k": ["difference detween isr", "function call", "detween isr", "isr", "difference detween"]}
{"i": "236861", "t": "How could a linked list and a hash table be combined to allow someone to run through the list from item to item while still maintaining the ability to access an individual element in O(1) time", "k": ["hash table", "table be combined", "maintaining the ability", "ability to access", "access an individual"]}
{"i": "236846", "t": "what type of values cant be used in switch case can we use alphabets,floats,strings", "k": ["switch case", "type", "switch", "case"]}
{"i": "236845", "t": "do inplace merging of 2 arrays", "k": ["arrays", "inplace merging", "inplace", "merging"]}
{"i": "236841", "t": "Write a function to shuffle a deck of 52 cards.  Explain how you would test that the deck was properly shuffled", "k": ["write a function", "function to shuffle", "cards", "write", "deck"]}
{"i": "236840", "t": "Write a function to determine whether the binary representation of a specified 32-bit integer is a palindrome.  For example, the 32-bit integer 0xFCA8153F is a palindrome, but 0xFCA88ACF is not.  Show how you would test this function.", "k": ["binary representation", "palindrome", "integer", "write a function", "write"]}
{"i": "237788", "t": "where is the memory map for the process stored and is it in hardware or in software", "k": ["memory map", "process stored", "software", "memory", "map"]}
{"i": "237781", "t": "Two databases, each containing n elements (for a total of 2n elements, with no two elements being the same). Want to find the median (n-th smallest value). The only way you can access these values is through queries to the databases. For each query, you can only specify a parameter k and the chosen DB will return its k-th smallest value. Give an algorithm that finds the median using at most O(log n) queries.", "k": ["elements", "databases", "total", "n-th smallest", "smallest"]}
{"i": "236809", "t": "What function(s) or hook(s) would you use in Drupal to define a url that maps to a function?\r \u2022 hook_url\r\u2022 hook_menu\r\u2022 hook_form\r\u2022 hook_uri", "k": ["drupal to define", "hook", "function", "drupal", "url that maps"]}
