{"i": "57326", "t": "Tell me about a time where you did something that was difficult from a technical perspective and it solved a problem.", "k": ["solved a problem", "technical perspective", "problem", "time", "difficult"]}
{"i": "57264", "t": "Brain teaser. You have 8 coins, only 1 is more heavy. How to detect it", "k": ["brain teaser", "coins", "brain", "teaser", "heavy"]}
{"i": "57263", "t": "List as many data structures as you can think of.  How do you detect a loop in a linked list?", "k": ["data structures", "list", "data", "structures", "linked list"]}
{"i": "57254", "t": "Write an algorithm to print a binary tree level wise and that too from leaves to root. Also only one queue and one stack can be used for the purpose.", "k": ["binary tree level", "tree level wise", "write an algorithm", "leaves to root", "algorithm to print"]}
{"i": "57210", "t": "Write a function to add two numbers, without using any arithmetic operator. Even the ++ in for statement is not allowed", "k": ["write a function", "add two numbers", "arithmetic operator", "function to add", "write"]}
{"i": "57209", "t": "If u have to write your own printf and u don't have va_arg how would you get the arguments in the variable list.", "k": ["variable list", "arg", "list", "write", "printf"]}
{"i": "57208", "t": "Write function similar to malloc.\rvoid* myMalloc(int n)\r'n' is the num of bytes to allocate.\rYou are given a void* f pointer that points to the location free in the memory.", "k": ["write function similar", "write function", "similar to malloc", "function similar", "write"]}
{"i": "57207", "t": "Write the function my2DAlloc.\rMinimize the number of calls to malloc.\rAlso, the memory should be accessible by the notation arr[i][j].", "k": ["write the function", "write", "function", "minimize the number", "calls to malloc"]}
{"i": "57156", "t": "Give you a simplest computer: CPU + 2k RAM. Write a slowest program. \r(Hint: use the 2k as a huge number, then use a loop statement to loop from 0 to this number. It will take almost forever.)", "k": ["simplest computer", "cpu", "ram", "give", "computer"]}
{"i": "57139", "t": "Design an algorithm to find the kth number divisible by only 3 or 5 or 7 i.e the only factors of these numbers should be 3,5 and 7.", "k": ["kth number divisible", "design an algorithm", "algorithm to find", "find the kth", "kth number"]}
{"i": "57141", "t": "Difference between int and Integer in Java.", "k": ["integer in java", "int and integer", "difference between int", "java", "integer"]}
{"i": "57120", "t": "Design for card game where you have a deck, cards, players. This was straight from Career Cup.\r I had given a simpler design first with no factory pattern. He extended the problem to have functionality for creating some different kinds of decks also. So I introduced Factory pattern in my design.", "k": ["career cup", "card game", "players", "straight from career", "factory pattern"]}
{"i": "57119", "t": "Fibonacci Series: write a simple algorithm to find it. He first wanted me to write a recursive one. \r What is the running time of this recursive one?\r Can you write a better implementation? Its running time? Asked to code it in Java dictate the code.", "k": ["fibonacci series", "series", "simple algorithm", "algorithm to find", "write a simple"]}
{"i": "57118", "t": "Where will you use Hashmap as opposed to a Tree?  What is the disadvantage of using HashMap?", "k": ["tree", "hashmap", "hashmap as opposed", "opposed", "disadvantage"]}
{"i": "57136", "t": "You are given a lots of files each with billions of lines. You have to extract out ip addresses that occur in them.\r (Since interviewer did not ask anything more specific, I suggested doing it using Unix scripting OR use a high level language like Java/C++ OR best use Perl since it is well suited for such tasks.)", "k": ["billions of lines", "lots of files", "lines", "language like java", "lots"]}
{"i": "57116", "t": "What are the interfaces in Collection classes that you worked with?\r(Collection, Set, Map, List, Queue)", "k": ["collection classes", "collection", "set", "map", "list"]}
{"i": "57131", "t": "You have a class that many libraries depend on. You need to modify the class for one application. Which of the following changes require recompiling all libraries before it is safe to build the application?\r    \ta.  add a constructor\r   \tb. add a data member\r   \tc. change destructor into virtual\r   \td. add an argument with default value to an existing member function", "k": ["libraries depend", "application", "class", "add", "depend"]}
{"i": "57126", "t": "What would impair your ability to take a decision in a group environment?", "k": ["group environment", "impair your ability", "environment", "impair", "ability"]}
{"i": "57112", "t": "Tell me about a time when you had to use your creativity to resolve a problem.", "k": ["resolve a problem", "creativity to resolve", "problem", "time", "creativity"]}
{"i": "57111", "t": "What's your greatest strength?", "k": ["greatest strength", "strength", "greatest"]}
{"i": "57110", "t": "What kind of leadership experience do you have?", "k": ["kind of leadership", "leadership experience", "kind", "leadership", "experience"]}
{"i": "57109", "t": "What position (s) are you applying for and why?", "k": ["position", "applying"]}
{"i": "57108", "t": "If you have other offers what will you look for in the offer to make a decision?", "k": ["make a decision", "decision", "offer to make", "make", "offers"]}
{"i": "57125", "t": "What would your previous managers tell about you?", "k": ["previous managers", "previous", "managers"]}
{"i": "57124", "t": "What is memory leakage? how do you detect it?", "k": ["memory leakage", "leakage", "memory", "detect"]}
{"i": "57123", "t": "Write code to remove spaces from a string in-place", "k": ["write code", "string in-place", "code to remove", "remove spaces", "write"]}
{"i": "57107", "t": "After fork, does new process get file handles and locks?", "k": ["handles and locks", "process get file", "file handles", "fork", "locks"]}
{"i": "57122", "t": "How do you find dependencies in a large code base?", "k": ["large code base", "code base", "find dependencies", "large code", "base"]}
{"i": "57106", "t": "Find the number of 1's in a 7 bit data using any numbers of half adder. The output format \rshould be in 3 bits. Eg: 1101001 should give a output of 100.", "k": ["half adder", "numbers of half", "bit data", "find the number", "find"]}
{"i": "57105", "t": "Let suppose there is a FIFO. Data is written into the FIFO at the speed of 4 ns. A maximum\rof 80 words /100 cycle are expected. The read port reads the data at the speed of 5ns. It\rcan read 80 words/ 80 cycles. What should be the depth of the FIFO so that we dont lose any\rdata. Hint: Consider the previous cycle as well", "k": ["fifo", "words", "data", "speed", "suppose"]}
