{"i": "5755784207007744", "t": "Write a C program charcount.c that\rreads in a string of no more than 255 characters from the user;\rcounts how many instances there are of each letter in the string; (note, for this program we ignore case so, e.g., the number of letter 'a' characters includes the total number of lower case 'a's and upper case 'A's.)\rprints out the resulting count for each letter.\ri.e. if the user enters \"Time and Tide Wait for No Man\", the program should print\r a: 3  b: 0  c: 0  d: 2  e: 2  f: 1  g:  0  h: 0  i:  3  j:  0  k:  0  l:  0  m:  2\r n: 3  o: 2  p: 0  q: 0  r: 1  s: 0  t:  3  u: 0  v:  0  w:  1  x:  0  y:  0  z:  0\rHint: This program is a bit trickier than the others so here is an outline of the processing required\rdeclare a char array to store the string\rdeclare an int array of size 26 to store the count for each letter e.g. count[0] is the number of a's, count[1] the number of b's etc.\rread in the string and then process it element by element\rif the element is not an alphabetic character i.e. A -Z or a - z, ignore it\rotherwise, convert it to a number between 0 and 25 (i.e. a or A become 0, z or Z become 25) and update the corresponding count.", "k": ["lower case", "upper case", "includes the total", "total number", "program charcount.c"]}
{"i": "5123231489982464", "t": "Write a C program called string3.c that reads in a string of no more than 80 characters and then prints it back out (within double quotes) with all lower case characters changed to upper case.\rYour string? C programming is fun\rModified to: \"C PROGRAMMING IS FUN\"", "k": ["lower case characters", "case characters changed", "program called", "double quotes", "prints it back"]}
{"i": "5704632757125120", "t": "So i have this code :\r #include <stdio.h>\rint main()\r{\r    int i, j;\r    int * p, * q;\r    int ** x;\r     i = 100;\r    j = 200;\r    p = &i;\r    q = &j;\r    x = &p;\r     *p = *p + *q;\r    *q = **x / 2;\r    **x = *p + j;\r     printf(\" i = %d\\n\",   i);\r    printf(\"&i = %p\\n\",  &i);\r    printf(\" j = %d\\n\",   j);\r    printf(\"&j = %p\\n\",  &j);\r     printf(\" p = %p\\n\",   p);\r    printf(\"&p = %p\\n\",  &p);\r    printf(\"*p = %d\\n\",  *p);\r    printf(\" q = %p\\n\",   q);\r    printf(\"&q = %p\\n\",  &q);\r    printf(\"*q = %d\\n\",  *q);\r     printf(\" x = %p\\n\",   x);\r    printf(\"&x = %p\\n\",  &x);\r    printf(\"*x = %p\\n\",  *x);\r    printf(\"**x= %d\\n\", **x);\r     return 0;\r}\r  I need to modify the program by adding a new variable that stores the address of x. Then use your variable to update (indirectly) the value of i and then print out the new value to demonstrate that your modification has worked.", "k": ["printf", "int main", "modify the program", "program by adding", "stores the address"]}
{"i": "5126382519582720", "t": "So i have this :\r #include <stdio.h>\rint main()\r{\r    int i = 200, *p, *q;\r    p = &i;  q = p;\r    *q = *q + 1;\r    printf(\"*p = %d\\n\", *p); \r    return 0;\r}\r I need to modify the program by adding another integer pointer variable r which is also an alias for variable i. Add print statements to output the dereferenced values of q and r.", "k": ["integer pointer variable", "int main", "modify the program", "program by adding", "adding another integer"]}
{"i": "5690330784464896", "t": "There is a Deployment Window of fixed time T. There are multiple patches (independent of each other),\rthat are to be deployed in the fixed time T. Find solution to deploy patches such that maximum time is\rutilized in the window.\r Test Case 1:\rInput:\rWindow Size 4, List of Patches: [1,1,1,2,3]\rOutput: \r[3,1] or [1,1,2]\r Test Case 2:\rInput:\rWindow Size 5, List of Patches: [1,2,3,6]\rOutput: \r[2, 3]", "k": ["deployment window", "test case", "window size", "fixed time", "deployment"]}
{"i": "5699511948148736", "t": "Given a million list of co-ordinates in the form of longitude and latitude just as Google maps .How will you print closest k cities to a given location .", "k": ["google maps", "million list", "list of co-ordinates", "form of longitude", "longitude and latitude"]}
{"i": "5672407617503232", "t": "Given start time and end time of parking (below is the table of price rule). Come up with data structure you can store these price rules\r Price Rules:\rOn Weekday      On Weekend\rHours   Price       Hours       Price\r0 \u2013 2      $5           0 \u2013 2          $8\r2 \u2013 6      $10         2 \u2013 6         $13\r6 \u2013 12    $15         6 \u2013 12        $18\r12 \u2013 24  $20        12 \u2013 24      $25\r Design an architecture for the system which shows parking spaces available near customer's  location in a mobile app.", "k": ["price rules price", "rules price rules", "price hours price", "hours price hours", "weekend hours price"]}
{"i": "5666344952397824", "t": "This was the 2nd round. Face to face. DS and Algo\r Q1) Given an array 'A' of size 'n' and a number 'm' such that 'm <= n'. For all subsets of 'A' of size 'm', return the difference between the number of non-increasing and non-decreasing sub-sequences.\r He asked me to write the program on paper in any language.\r This is how i approached it.\r1) First i gave the brute force solution and explained it to him. He liked it.\r2) Then he asked for the complexity of the solution. I gave right ans.\r3) Then i told him that it can be optimized by 'xyz' approach. \r4) Then he asked me if i can write the solution. I said i will first explain him how it can be solved. Then if he wants me to write the code, he will have to leave me alone for some time. He agreed. I explained. \r5) There was a bug in my solution. He gave a test case that exposed it. Then i rectified the bug. He accepted.\r6) He said that it. He does not need the full code.", "k": ["solution", "round", "asked", "write", "gave"]}
{"i": "5121304794497024", "t": "This was the first round. A written test. I was asked to write a complete program that can execute with proper syntax. Also comment on the complexity and add comments to code where necessary. And i had to write it on Paper. Three questions were given and was asked to answer any two. I was given 1hr time for this.\r This was one of the questions\rQ) You are given a BST and a number k. Find the node in the tree which has the value closest to k.", "k": ["round", "written test", "asked", "write", "asked to write"]}
{"i": "5142676769865728", "t": "This was the first round. A written test. I was asked to write a complete program that can execute with proper syntax. Also comment on the complexity and add comments to code where necessary. And i had to write it on Paper. Three questions were given and was asked to answer any two. I was given 1hr time for this.\r This was one of the questions.\rQ) You are given a linked list and two integer nums 'm' and 'n'. Retain 'm' elements and delete 'n' elements. Do this repeatedly till the end of the linked list.", "k": ["round", "written test", "asked", "write", "linked list"]}
{"i": "5705626723287040", "t": "guys this is one my interview question , pls help me out.\rThis is a large file with 1million lines , without opening the file how to add the phrase end of each line using perl .", "k": ["interview question", "guys", "question", "pls", "interview"]}
{"i": "5763893373698048", "t": "is there a way to make the bean not initialize when spring application context coming up", "k": ["spring application context", "application context coming", "make the bean", "bean not initialize", "initialize when spring"]}
{"i": "5631887822290944", "t": "What data str should we use to store restaurants(having location info), So that we can easily find the list of restaurants near my current location ?", "k": ["location info", "data str", "easily find", "find the list", "store restaurants"]}
{"i": "5656862738350080", "t": "A flipping rule is given as a follows: Consider a series of positive integer.  Take three numbers in the series next to each other. On applying the flipping rule to these numbers, the right most number will go to the left most number position and the other two numbers will move one position to the right at the same time. The rule can be applied to any three numbers present next to each in the series and can be applied as many times as needed.\rGiven n as the number of element in the original series, elements of the original series and a target series of a numbers, figures out if the target series can be created by flipping numbers of the original number and output the word \u201cPOSSIBLE\u201d followed by the number of times the flipping rule has to be applied. In case, the target series cannot be formed, output the word \u201cIMPOSSIBLE\u201d.\rExample :\rFor a series with 4 elements in it, 1 3 4 2 a new series = 4 3 2 1  can be formed by applying flipping rule as follows, From the table below we can say the output is POSSIBLE 3.\rSteps\rSeries\rThe three Numbers Flipped\rResultant Series\r1\r1 3 4 2\r1 3 4\r4 1 3 2\r2\r4 1 3 2\r1 3 2\r4 2 1 3\r3\r4 2 1 3\r2 1 3\r4 3 2 1  \r  Example input\rExample OutPut\r4 1 3 4 2 4 3 2 1\rPOSSIBLE 3\r6 1 2 3 4 5 6  6 5 4 3 2 1\rIMPOSSIBLE", "k": ["series", "flipping rule", "numbers", "number", "target series"]}
{"i": "5731317120499712", "t": "Implement a solution nth_largest( array, n ) that takes in an array of arbitrary size and returns the nth largest element.Eg. array = [1, 8, 4, 5, 9, 7, 2, 10, 44, 55, 67]\r\n\r\nnth_largest( array, 2) = 55\r\nnth_largest( array, 5) = 9", "k": ["implement a solution", "arbitrary size", "size and returns", "solution nth", "nth largest"]}
{"i": "6304839404355584", "t": "Write a program to identify if a given binary tree is balanced or not.", "k": ["write a program", "program to identify", "binary tree", "tree is balanced", "write"]}
{"i": "4799405803700224", "t": "Write a program to print all permutations of a given string.", "k": ["write a program", "program to print", "print all permutations", "write", "string"]}
{"i": "6300335812378624", "t": "If you have the chapter of a book and you're supposed to build an index such that given a word, you can tell which pages the word occurs on, what data structure can you use? Optimize for space utilization.", "k": ["supposed to build", "build an index", "data structure", "word occurs", "pages the word"]}
{"i": "5722338759802880", "t": "Write a Python program to print numbers from 1 to 100 except for multiples of 3 for which you should print \"fuzz\" instead, for multiples of 5 you should print 'buzz' instead and for multiples of both 3 and 5, you should print 'fuzzbuzz' instead.", "k": ["write a python", "python program", "print numbers", "multiples", "print"]}
{"i": "5178939497512960", "t": "Implement a function DoIt( o,a ) such that the following code:Object o = SomeClass()\r\nO.first = 'fizz'\r\nO.second = 'buzz'\r\n\r\nprint DoIt( o, 'first)\r\nprint DoIt(o, 'second')prints\r fizz\rbuzz", "k": ["prints fizz buzz", "print doit", "function doit", "implement a function", "fizz buzz"]}
{"i": "5658268316729344", "t": "Write a iterative Python function to print the factorial of a number n (ie, returns n!).", "k": ["iterative python function", "iterative python", "python function", "write a iterative", "function to print"]}
{"i": "5174435905536000", "t": "Write a recursive Python function to print the factorial of a number n (ie, returns n!).", "k": ["recursive python function", "recursive python", "python function", "write a recursive", "function to print"]}
{"i": "5735071458787328", "t": "Board Game: \r 1) Write a program that can take a board of N x N filled with alphabets and print/return all the words that can be constructed by connecting alphabets together. You're allowed to connect alphabets in any direction including diagonally, the only restriction is that you cannot cross over the same alphabet twice. So for eg:\r A,B,C,D\rE,K,L,A\rC,A,M,N\rD,I,N,G\r So example words that can be made are: BEAD, CALM, CAN, DAMN, MAKE.\r 2) What's the run time for your algorithm? Does your algorithm scale for large sizes of the matrix? What optimizations can you make to improve the run time.", "k": ["board game", "write a program", "constructed by connecting", "game", "write"]}
{"i": "5717738531061760", "t": "You are given an array of  return the sum of the two elements closest to zero \rExample \r input {10,20,30}     O/P : 30\ragain give the input \rinput  {-5,-13,5}   output  : 0", "k": ["array of return", "return the sum", "elements closest", "output", "input input"]}
{"i": "5769882974027776", "t": "compute all mnemonics for a phone number", "k": ["compute all mnemonics", "phone number", "compute", "number", "mnemonics"]}
{"i": "5718590863966208", "t": "You are given an array of variable length, which contains only following integers: -1, 0, 1. \rExample A[] = {0, 1, 0, 1, 1, -1, 1}\rYou are also given an integer S. \r Write a program with O(n) time that can find out the length of the largest sub-array which sums up to S. \rExample, if S = 2, then the length of the largest sub-array in the above array is 6. \r If there is no such sub-array that can sum up to S, then output 0.", "k": ["variable length", "length", "largest sub-array", "sub-array", "array of variable"]}
{"i": "5133790532861952", "t": "Can you please tell me the implementation of full adder ?", "k": ["full adder", "implementation of full", "adder", "implementation", "full"]}
{"i": "5151176023605248", "t": "Write a program in C that:\rdeclares a string variable called buffer with maximum size 80\rinputs a string from the keyboard into the buffer\rmodifies the string contained in buffer by replacing any vowels (upper or lower case 'a', 'e', 'i', 'o' or 'u') with a plus sign (+)\rprints out the modified string\rprints out the total number of vowels that were replaced", "k": ["modified string prints", "string variable called", "variable called buffer", "write a program", "maximum size"]}
{"i": "5739497154150400", "t": "thanks", "k": []}
{"i": "5174694727647232", "t": "Given a 2D matrix of integers, sort it such that:\r  - every row is sorted in ascending order from left to right\r - every column is sorted in ascending order from top to down\r - all items in the same row are unique\r You may assume the input matrix is always valid, meaning that such a sort is always possible.\r For example:\rfor input matrix1 3 5\r\n3 2 4the output could be any of the following:\rvalid output #1:1 3 4\r\n2 3 5valid output #2:1 2 3\r\n3 4 5valid output #3:1 3 4\r\n2 3 5One kinda trivial solution is to sort the 2D matrix column wise. For example, you can push all items into a heap and pop one after another, putting it into the matrix column after column. This would be a `O(n lg n)` time complexity where `n` is the number of items in the matrix, i.e., `n = rows*cols`. Can you design a more efficient algorithm?\r Follow-up: What if all items in the same column are also required to be unique?", "k": ["sorted in ascending", "ascending order", "order from left", "order from top", "sorted"]}
