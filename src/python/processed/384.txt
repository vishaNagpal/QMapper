{"i": "13141678", "t": "You r given an sorted bt rotated array of integer like: 6 7 8 1 2 3 4 5\r          You have to search an element...\r          I answered vd an O(logn) solution...\r          then he told me to write the code...", "k": ["search an element", "sorted bt rotated", "rotated array", "array of integer", "element"]}
{"i": "13140673", "t": "WAP to find maximum sum sub-matrix from a give matrix.", "k": ["wap to find", "find maximum sum", "maximum sum sub-matrix", "give matrix", "wap"]}
{"i": "13142674", "t": "Given two trees T1 and T2. WAP to check whether T1 is a subtree of T2 or T2 is a subtree of T1", "k": ["wap to check", "trees", "subtree", "wap", "check"]}
{"i": "13143676", "t": "WAP to merge two linked lists like: \r          list1: 1->2->3->4\r          list2: 5->6->7\r          o/p list: 1->5->2->6->3->7->4", "k": ["wap to merge", "merge two linked", "linked lists", "wap", "merge"]}
{"i": "13146677", "t": "Find the seed of a number.\rEg : 1716 = 143*1*4*3 =1716 so 143 is the seed of 1716. find all possible seed for a given number.", "k": ["seed", "find", "number", "find the seed"]}
{"i": "13146673", "t": "Given a binary tree and 2 values. Write a function to find the 1st common ancestor in the binary tree.\r The method I have used is that the common ancestor is the one who would have value between the given 2 values. So for example if the values are 3 and 10. so the common ancestor would be a node with value greater than 3 and less than 10.\r here is my code.public Node getCommonAncestor(Node root,int a, int b)\r\n{\r\n     if((root.value>a && root.value<b) || (root.value<a&&root.value>b))\r\n   {\r\n     if(checkvalue(root,a) && checkvalue(root,b))\r\n     {\r\n         return root;\r\n      }\r\n     else\r\n      {\r\n        return null;\r\n        }\r\n   }\r\n  else if(root.value>a && root.value>b)\r\n   {\r\n        if(root.left != null)\r\n         {\r\n             return getCommonAncestor(root.left,a,b)\r\n         }\r\n         else\r\n         {\r\n            return null;\r\n           }\r\n    }\r\n   else\r\n   {\r\n   \r\n        if(root.right != null)\r\n         {\r\n             return getCommonAncestor(root.right,a,b)\r\n         }\r\n         else\r\n         {\r\n            return null;\r\n           }\r\n    }\r\n}\r\npublic boolean checkvalue(Node root,int a)\r\n{\r\n    if(check.value == a)\r\n   {\r\n     return true;\r\n   }\r\n   else if(check.value>a)\r\n    {\r\n       if(check.left != null)\r\n      {\r\n         return checkvalue(check.left,a)\r\n       }\r\n      else\r\n      {\r\n          return false;\r\n       }\r\n     }\r\n     else\r\n     {\r\n          if(check.right != null)\r\n      {\r\n         return checkvalue(check.right,a)\r\n       }\r\n      else\r\n      {\r\n          return false;\r\n       }\r\n      }\r\n}\r\nclass Node\r\n{\r\n    int value;\r\n    Node left;\r\n    Node right;\r\n}Can you suggest whether I am right or not?", "k": ["return", "node", "root.value", "null", "binary tree"]}
{"i": "13141674", "t": "Given a binary tree and 2 values. Write a function to find the 1st ancestor of the binary tree.", "k": ["binary tree", "binary", "tree", "write a function", "write"]}
{"i": "13142665", "t": "There are two arrays of length 100 each. Each of these has initially n (n<=100)\relements. First array contains names and the second array contains numbers\rsuch that ith name in array1 corresponds to ith number in array2.\rWrite a program which asks the user to enter a name, finds it in array1,\r a. if it exists, then print the corresponding number in array2,\rb. else ask the user to input its associated number and add the number and\rname to array2 and array1 respectively, and update the size of list.", "k": ["number", "length", "arrays of length", "array", "user"]}
{"i": "13125686", "t": "create an Objective-C class, with accompanying header file. The class will represent a book, and should have a title, author, and a year of publication. Be sure to provide a designated initializer and accessors for these properties.\r You may optionally provide a small main() function that demonstrates its use.", "k": ["accompanying header file", "create an objective-c", "header file", "accompanying header", "objective-c class"]}
{"i": "13128680", "t": "what is normalization", "k": ["normalization"]}
{"i": "13129677", "t": "explain list, set and map", "k": ["explain list", "set and map", "explain", "list", "set"]}
{"i": "13129675", "t": "A singly linked list has integer as data in each node. Write a function to delete a node from the list given an integer as argument. (Assume all the nodes have unique integers)", "k": ["singly linked list", "singly linked", "linked list", "integer as data", "list"]}
{"i": "13125679", "t": "Given a Binary tree , you need to traverse and only print all nodes on given level L.", "k": ["binary tree", "print all nodes", "binary", "tree", "traverse"]}
{"i": "13128677", "t": "Write a function which sets the bits in an integer when start bit position and end bit positions are passed as argument. \r For eg, if I call function setbit(2,4) , it should return 14. (1110)\rleast significant bit on 1st position and so on..", "k": ["passed as argument", "integer when start", "start bit position", "end bit positions", "call function setbit"]}
{"i": "13124675", "t": "Write a function to sort the linked list given the head as parameter. Do not use extra memory. You have to sort it in place. Time complexity is secondary. (He told me that he wants to see how fast I can code with any of of the solutions)", "k": ["write a function", "head as parameter", "linked list", "function to sort", "write"]}
{"i": "13129674", "t": "If I send a ping request from one host to another, what exactly happens in the network. Explain in detail", "k": ["send a ping", "ping request", "explain in detail", "network", "send"]}
{"i": "13125678", "t": "Write an algorithm to find F(n) the number of bits set to 1, in all numbers from 1 to n for any given value of n.\r Complexity should be O(log n)\r For example:\r 1: 001\r2: 010\r3: 011\r4: 100\r5: 101\r6: 110\rSo\r F(1) = 1,  \rF(2) = F(1) + 1 = 2,\rF(3) = F(2) + 2 = 4,\rF(4) = F(3) + 1 = 5,\retc.\rI can only design an O(n) algorithm.", "k": ["bits set", "number of bits", "write an algorithm", "algorithm to find", "write"]}
{"i": "13127670", "t": "You are working on an exam and the question is smudged and you can\u2019t see the question. Based on the answers only, what is the answer? I am not certain if I remember the question exactly, but it is some variation of these statements .\rA) All of the below\rB) None of the below\rC) Some of the above \rD )None of the above \rE )None of the above", "k": ["question", "question is smudged", "remember the question", "working", "exam"]}
{"i": "13126665", "t": "You are given a 2D array of characters and a character pattern. WAP to find if pattern is present in 2D array. Pattern can be in any way (all 8 neighbors to be considered) but you can\u2019t use same character twice while matching. Return 1 if match is found, 0 if not.\r eg : \r Matrix\r{'A','C','P','R','C'},\r{'X','S','O','P','C'},\r{'V','O','V','N','I'},\r{'W','G','F','M','N'},\r{'Q','A','T','I','T'}\r  And pattern is microsoft. \r It's funny when google looks for pattern of microsoft ;)", "k": ["pattern", "wap to find", "array", "wap", "character"]}
{"i": "13119670", "t": "All the shoes are Reebok  with the exception of two shoes , All the shoes are Nike with the exception on two shoes. All the shoes are Fubu  with the exception of two shoes. How many shoes are there ?", "k": ["shoes", "shoes are reebok", "shoes are nike", "reebok", "nike"]}
{"i": "13115667", "t": "Given the start and an ending integer as user input, generate all integers with the following property. \rExample : 123    ,  1+2 = 3   ,   valid number\r                  121224    12+12 = 24 , valid number\r                  1235          1+2 = 3 , 2+3 = 5 , valid number\r                  125             1+2 <5 , invalid number", "k": ["valid number", "user input", "ending integer", "number", "generate all integers"]}
{"i": "13115666", "t": "Write a program to generate all palindrome dates by taking the beginning and the ending dates as an input from the user.   The format of the date is given as MMDDYYYY.", "k": ["write a program", "program to generate", "generate all palindrome", "taking the beginning", "palindrome dates"]}
{"i": "13119661", "t": "How many spaces does the following struct take on a 32-bit computer?\rstruct s{\rchar c;\rint i;\rdouble d;\rvoid *p;\rint a[0];\r}", "k": ["computer", "int", "void", "struct", "spaces"]}
{"i": "13116662", "t": "Given a linked list of integers, delete all the nodes from the linked list which data value equals to a given value.\rvoid delete(Node **l, int target);", "k": ["linked list", "data value equals", "list of integers", "linked", "list"]}
{"i": "13096674", "t": "write a function to determine if a string contains a repeated sequence", "k": ["write a function", "repeated sequence", "function to determine", "write", "sequence"]}
{"i": "13093670", "t": "write a fucntion to delete a node from a linked list if pointer to head and node no. is given", "k": ["write a fucntion", "fucntion to delete", "linked list", "list if pointer", "pointer to head"]}
{"i": "13093669", "t": "write a function to rotate an m x n array by 90 degrees", "k": ["degrees", "write a function", "function to rotate", "write", "function"]}
{"i": "13096664", "t": "How can we avoid a stack overflow ?\r The problem is like this. Lets say I have a method A() invoked from main(). Now A() invokes B(), B() inturn invokes C() ... keep going... \rso the current process stack will have limited capacity to accomodate all the activation frames that are being created dynamically when each new method is invoked.\r so if this continues, at one point of time, stack will exhaust. so whats the method to handle this.\r The very simple example can be:\rvoid main (){\r main();\rreturn 0;\r}\r if you run this, we can see the error as run time error for stack overflow. in such scenario whats the optimal way to deal with it?", "k": ["stack", "stack overflow", "main", "method", "overflow"]}
{"i": "13093663", "t": "How to add (to find sum) a1+a2+a3+.....an ,where a1,a2,...an are integers but they are large enough (so they can't handle by any primitive data type in C).", "k": ["primitive data type", "find sum", "primitive data", "data type", "add"]}
{"i": "13087662", "t": "create an Objective-C class, with accompanying header file. The class will represent a book, and should have a title, author, and a year of publication. Be sure to provide a designated initializer and accessors for these properties.\r You may optionally provide a small main() function that demonstrates its use.", "k": ["accompanying header file", "create an objective-c", "header file", "accompanying header", "objective-c class"]}
