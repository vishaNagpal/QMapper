{"i": "5647915193204736", "t": "--", "k": []}
{"i": "5181145932103680", "t": "Given an array of task and k wait time for which a repeated task \rneeds to wait k time to execute again. please rearrange the task \rsequences to minimize the total time to finish all the tasks.\rExample\rTasks = 111222, k = 2,\rOne possible task sequence is\r12_12_12, \ranother possible task sequence is 21_21_21\rthus you shoud return 8\rpublic int getMiniTime(int[] nums, int k){\r }\rfollow up, output one of the sequence  12_12_12, or 21_21_21", "k": ["wait time", "task", "repeated task", "task sequence", "time"]}
{"i": "6195568083730432", "t": "Given an unsorted array, sort it in such a way that the first \relement is the largest value, the second element is the smallest, \rthe third element is the second largest element and so on.\r[2, 4, 3, 5, 1] -> [5, 1, 4, 2, 3]\rcan you do it without using extra space\rpublic void sortAlternate(int[] nums){}", "k": ["unsorted array", "largest element", "element", "public void sortalternate", "extra space public"]}
{"i": "5196022759292928", "t": "/**\r* A tournament tree is a binary tree\r* where the parent is the minimum of the two children.\r* Given a tournament tree find the second minimum value in the tree.\r* A node in the tree will always have 2 or 0 children.\r* Also all leaves will have distinct and unique values.\r*     2             \r*    / \\\r*   2   3\r*  / \\  | \\\r* 4   2 5  3\r*\r* In this given tree the answer is 3.\r*/class Node {\r\n  Integer value;\r\n  Node left, right;\r\n  Node(Integer value, Node left, Node right) {\r\n    this.value = value;\r\n    this.left = left;\r\n    this.right = right;\r\n  }\r\n}\r\nclass Solution {\r\n  /**\r\n  * This should return the second minimum\r\n  * int value in the given tournament tree\r\n  */\r\n   public static Integer secondMin(Node root) {\r\n\r\n    }\r\n}", "k": ["node", "tournament tree", "tree", "node left", "tournament"]}
{"i": "6263110739427328", "t": "Given a number n that represents n lockers and n students. All lockers start closed. First student goes and opens all the lockers. Second goes and toggles 2nd, 4th, 6th.. lockers. Third student toggles  3rd, 6th, 9th.. lockers. Print the lockers that remain open after all students pass.public void lockers(int n) {\r\n    // Implementation here    \r\n}", "k": ["lockers", "number", "represents", "toggles", "lockers start closed"]}
{"i": "5699787392286720", "t": "An HTTP request must consist of both a(n) ----- and a(n) -----\rCRUD action, database\rheader, cookie\rURL, wildcard\rURI, HTTP request method", "k": ["http request method", "crud action", "cookie url", "wildcard uri", "http request"]}
{"i": "5753208732385280", "t": "Given a number of tasks (T) and servers (S), find out if the tasks can be accommodated on the servers. Each Task has a number of Units and each server has a number of Slots on which Units can run. \r The only condition is that two Units of the same Task \"cannot\" run on the same Server. \r Servers \rS[0] = \"SS1\", \"SS2\", \"SS3\", SS4 //Slots //  4 -> 3 -> 2 -> 1\rS[1] = \"SS1\", \"SS2\"                    // 2 -> 1 -> 0 -> false\rS[2] = \"SS1\", \"SS2\", SS3, SS4, SS5     // 5 -> 4 -> 3 -> 2\rS[3] = \"SS1\", \"SS2\", SS3, SS4, SS5     // 5 -> 4 -> 3 -> 2\rExample:\rS[0] = 4\rS[1] = 3  \rS[2] = 5\rS[3] = 5\r...\r Tasks \rT[0] = U0, U1, U2, U3   //Tasks\rT[1] = U0, U1 \rT[2] = U0, U1, U2\r...\r  Example:  \rT[0] = 4\rT[1] = 2 \rT[2] = 3\r implement \rboolean   boolean CanRunTasks(S[], T[]){\r}", "k": ["tasks", "number", "units", "servers", "slots"]}
{"i": "5157836607717376", "t": "deleted", "k": ["deleted"]}
{"i": "5725837040025600", "t": "Design a data structure to support following operation:\rInsert, delete, search and min difference \rTime complexity of finding min Difference should be less than O(log n).", "k": ["difference time complexity", "min difference time", "finding min difference", "difference time", "min difference"]}
{"i": "5068226007400448", "t": "class UndirectedGraphNode {\r\n     int label;\r\n     List<UndirectedGraphNode> neighbors;\r\n     UndirectedGraphNode(int x) { \r\n        label = x; \r\n        neighbors = new ArrayList<>(); \r\n     }\r\n }\r\npublic boolean isBipartite(List<UndirectedGraphNode> nodes){\r\n\r\n}use DFS algorithm  to check the bipartite-ness of a graph", "k": ["public boolean isbipartite", "dfs algorithm", "int label", "class undirectedgraphnode", "public boolean"]}
{"i": "5737277222289408", "t": "override \"+\" operator for class Point to achieve the following: \r  Point a(1,2), b(3,4);\r  Point c = a+b; // c => (4,6)", "k": ["operator for class", "class point", "point", "point to achieve", "override"]}
{"i": "5194711049437184", "t": "1)c program for test cases for factorial", "k": ["cases for factorial", "program for test", "test cases", "factorial", "program"]}
{"i": "5725965217955840", "t": "Given a sorted array with \"n\" elements, distributed them into \"k\" nearly equally weighing buckets.\r Space is not constraint.\r Ex: [1,3,6,9,10]\rbucket size: 3\r output:[10],[9,1],[3,6]", "k": ["equally weighing buckets", "sorted array", "equally weighing", "elements", "distributed"]}
{"i": "5669873616158720", "t": "Add two link list, can not modify the link list, can not reverse the link list first and second.\r Link list 1 -\t 1->2->3->7\rLink list 2 -                   2->9\rOut put Sum -   1->2->6->6", "k": ["link list", "link", "list", "put sum", "modify the link"]}
{"i": "5730002487214080", "t": "Find the frequency of a number in array in less than bigo n time\rArray 1,2,2,3,4,5,5,5,2\rInput 5\rOutput 3\rArray 1,1,1,1,\rInput 1\rOutput 4\r Keep in mind less than bigo n\r Thanks", "k": ["input", "output", "find the frequency", "bigo n time", "time array"]}
{"i": "5673959203799040", "t": "Find the best seat selection in online ticket booking system?\rFor example if you want to book 5 seat, best selection is 5 consecutive seat. But if 5 consecutive seat is not available it select (3,2) because (4,1) is not a best solution,\r same like if you want to book 10, if not available (8,2), (7,3), (6,4), (5,5)\r You can assume seat arrangement is 2D matrix, where already book seat is 1, and available seat is 0.", "k": ["ticket booking system", "online ticket booking", "booking system", "online ticket", "ticket booking"]}
{"i": "5684411812020224", "t": "Delhi Route Traffic Optimizer\r Traffic congestion is an annoying issue in Delhi, the capital of India. Every morning thousands of people drivea residential area to the International Technology Park (ITPL). There are various routes one can take to reach ITPL and each route takes its own time making some routes faster than the others. People obviously take faster routes which causes congestion on those roads too. Congestion results into increased travel time, air pollution and wastage of fuel. As a Traffic commissioner of Delhi, you are asked to optimize the traffic by putting toll to various roads so that resultant cost of every route (driving time cost and toll cost) ends up the same. This has to be done in such a way that any driver pays toll only once no matter which route he/she takes.roads have one-way traffic and there is no cycle in any of the routes. You need to create a toll plan for a given road layout. \r The toll plan must adhere to following rules:\r 1. Toll should be levied in such a way that perceived cost (base road cost and toll cost) remains same forroads.\r2. The tolls should be levied such that the total cost for each route is minimized.\r3. A route cannot have more than one toll.\r4. In case of multiple solutions for a route, add toll to a road that is closer to destination. \rIn some use cases, it might be impossible to impose tolls that satisfy the above conditions.\r http://qa.geeksforgeeks.org/11340/delhi-route-traffic-optimizer", "k": ["international technology park", "traffic optimizer traffic", "capital of india", "optimizer traffic congestion", "route traffic optimizer"]}
{"i": "5742754647769088", "t": "Get Online Yahoo Technical support number 1800 \u2013 360 \u2013 519: Yahoo is one of the prime assets to open any website very smoothly. Due to some technical difficulty, some person has to face cracking issue and fixing this issue is not under the control of other person. So, it is advised that you should have to end your query at our third party technical support team destination because we have perfect knowledge to chase the problem in the correct manner. Our professional will help to you as you dial Yahoo Technical support number speak out all problems at our toll free number. To know more information: http://www.customercarenumber.co.nz/yahoo-customer-care-number", "k": ["online yahoo technical", "yahoo technical support", "online yahoo", "technical support number", "yahoo technical"]}
{"i": "6193420734300160", "t": "Design backend system for bookMyShow.com like system  which supports below use cases:\r 1) When user selects cities, list of cities is displayed.\r2) When user selects city, movie list is displayed.\r3) When user selects movie, list of theatre is displayed.\r4) When user selects theatre, show timing is displayed.\r5) When show timing is selected, user is asked for no of seats that he wants to book\r6) When user selects no of seats, seats are displayed to choose from.\r7) When user selects seats, then total price is displayed.\r8) When total price is selected, then user is directed to payment gateway and payment is done and on payment success, ticket is mailed to him.\r More questions on how can we scale the system, and handle concurrent users request for same seat etc.", "k": ["user selects", "user selects cities", "user", "design backend system", "design backend"]}
{"i": "5667866524254208", "t": "Design a movie ticket booking system like bookmyshow.com\r Follow-up question -\r1) How do you handle issues like scalability, concurrency, fault-tolerance etc.\r2) Show movie theaters near to user where movie is playing and seats are available\r3) Design database. What kind of DB would you use SQL or No-SQL\r4) In real time how would you show which seats are booked which are free\r5) If theaters do not have any api for fetching information then what can we do about it.", "k": ["bookmyshow.com follow-up question", "ticket booking system", "follow-up question", "bookmyshow.com follow-up", "movie ticket booking"]}
{"i": "5643997780377600", "t": "Given some email ids, and a similarity function which says whether two email ids are similar, determine all the sets of email ids that are similar to each other.", "k": ["email ids", "similarity function", "email", "ids", "similar"]}
{"i": "5087841659912192", "t": "Design Uber. Low level Design needed (OOPS based - classes, relations, message flow etc.)", "k": ["design uber", "uber", "oops based", "level design needed", "low level design"]}
{"i": "6319956913291264", "t": "Design Cricinfo website", "k": ["design cricinfo website", "design cricinfo", "cricinfo website", "cricinfo", "design"]}
{"i": "6302981323489280", "t": "Design snake n ladder game to be played online", "k": ["design snake", "played online", "snake n ladder", "ladder game", "design"]}
{"i": "5127399114014720", "t": "In product System , we receive lots of data and in some case data contains duplicate .\r In order to process the data correctly we need to identify the row which contains the duplicate . \r In this problem , You are receiving data onto 2d Array (m*n ) formate \r you and need to find the number of row containing duly data based on on criteria . \r Opretaion 1 Return the number of row containing the duplicate data in rows ( minimum count of duplicates can vary ) .\r  Opreation 2 Retrun the number of rows wherever there are duplicates in the column across the row\r (minimum count of of duplicates to consider the row can varry )\r  if none of the above operating the program will return - 1 .\r   static int findDuplicates(int[][] data, int operation, int numOfDuplicates) {\r }\r   Example \r 1,3,5,9\r 1,2,1,2\r 1,4,7,9\r 20,25,20,35\r   Operation 1  answer  = 2 \r Operation 2 numOfDuplicate=2  then  answer = 1", "k": ["static int findduplicates", "duly data based", "minimum count", "retrun the number", "product system"]}
{"i": "5766905248874496", "t": "This is a system design question. Design a Event booking system. Imagine that event registry etc is all implemented. A user can log in, check the available events and then books it. Design a system for event booking", "k": ["system design question", "design question", "system", "design", "event"]}
{"i": "5187290822344704", "t": "* Definition for a binary tree node.\r * public class TreeNode {\r *     int val;\r *     TreeNode left;\r *     TreeNode right;\r *     TreeNode(int x) { val = x; }\r * }\rGiven an array of Binary Tree Node, check if all of these nodes can form a binary tree?\rPublic boolean canForm(TreeNode[] nodes){\r}", "k": ["binary tree node", "binary tree", "tree node", "tree", "binary"]}
{"i": "5757178221690880", "t": "Design a movie ticketing system where ticket prices goes up or down based on demand. If no tickets were booked in the last 4 hours, the prices should fall by 10%", "k": ["movie ticketing system", "design a movie", "based on demand", "movie ticketing", "ticketing system"]}
{"i": "5639831662100480", "t": "You have a string consisting of open and closed parentheses, but parentheses may be imbalanced.\rMake the parentheses balanced and return the new string.", "k": ["consisting of open", "open and closed", "string consisting", "closed parentheses", "imbalanced"]}
{"i": "5657488708861952", "t": "the maximum number of pebbles collected when you move from cell-(1,1) to cell -(4,5) is 127 and the path that leads to it is given by:(1,1)->(2,1)->(3,2)->(4,3)->(4,4)->(4,5)\rwrite an algorithm to find maximum pebbles while going from cell -(1,1) to cell -(m,n)", "k": ["find maximum pebbles", "write an algorithm", "path that leads", "algorithm to find", "cell"]}
