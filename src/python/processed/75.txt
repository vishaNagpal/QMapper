{"i": "5079884190711808", "t": "How to print nested array ?\rInput : [1, 5, 8, [9, 10, 24, 20, [39, 48], 89], 105, 99]\rOutput : 1, 5, 8, 9, 10, 24, 20, 39, 48, 89, 105, 99.\r Which data structure you will use to store the values?", "k": ["print nested array", "nested array", "input", "output", "print nested"]}
{"i": "5674757562302464", "t": "Insert a number into an array of sorted intervals.\r\nFor example, [1,4], [6,8], after insert 5, return [1,8].\r\nclass Interval{\r\n\tint start;\r\n\tint end;\r\n\tpublic Interval(int start, int end){\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\t}\r\n}\r\nclass Solution{\r\n\tpublic List<Interval> insert(List<Interval> list, int val){\r\n\t\t \r\n\t}\r\n}", "k": ["sorted intervals", "interval", "array of sorted", "int", "int start"]}
{"i": "5644052841103360", "t": "Write code to find unmatched parentheses and return it in the below format:\r((a) -> -10a1\r(a)) -> 0a1-1\r(((abc))((d))))) -> 000abc1100d111-1-1", "k": ["find unmatched parentheses", "write code", "code to find", "find unmatched", "unmatched parentheses"]}
{"i": "5744617889726464", "t": "give a bunch of job dependency, such as A-> B, A -> C, B-> D, and so on,  implement two interfaces.\rThe first one is get_next_stage, which returns jobs in parallel for the next phase. The second is job_done, which tells you which job completed.", "k": ["implement two interfaces", "give a bunch", "job dependency", "give", "dependency"]}
{"i": "5630111779913728", "t": "Given an array of sorted integers and find the closest value to the given number. Array may contain duplicate values and negative numbers.\r Example :  Array : 2,5,6,7,8,8,9\rTarget number : 5 \rOutput : 5\r Target number : 11\rOutput : 9\r Target Number : 4\rOutput : 5", "k": ["target number", "output", "sorted integers", "integers and find", "find the closest"]}
{"i": "5655795550126080", "t": "Suppose you have an input character stream (StreamReader) and you have a list of pattens like ABCAS, ASGKT. KHTSD etc. You need to read the stream one by one character and you need to keep count on number of each pattern found so far and when EOF occures just print all the patterns along with count.\r Example:\r Input String: 011100010 \rPattern 1: 011 \rPattern 2: 010\r Output: \r011 => 1 \r010 => 1", "k": ["pattens like abcas", "asgkt", "list of pattens", "abcas", "streamreader"]}
{"i": "5183492223664128", "t": "Give a list of the company's Mergers and Acquisitions relationships, for example\r[\r[\"baidu\", \"ofo\"],\r[\"mobike\", \"alibaba\"],\r]\rSaid baidu acquired ofo,  mobike acquired Alibaba.\rSeeking the longest of a M & A chain. No cycle", "k": ["mobike acquired alibaba", "mergers and acquisitions", "baidu acquired ofo", "acquisitions relationships", "company mergers"]}
{"i": "5662573545390080", "t": "Get fast and reliable technical support for your any type of issue related to facebook. Facebook is the largest used social platform, many time users got some technical issue that are not solvable from their end. In this situation they need help from technical experts of facebook. By dialing facebook contact number 1 866 324 3042 toll-free, you will get connected with the most reputed team of technical experts.\r For more info, visit at http://www.facebookhelp.us", "k": ["reliable technical support", "fast and reliable", "issue related", "technical", "reliable technical"]}
{"i": "5662256254681088", "t": "You are given a rooted tree. The tree is not necessarily binary. The tree contains N nodes, labeled 1 to N. You are given the tree in the form of an array P[1..N] of size N. P[i] denotes label of the parent of node labeled i. For clarity, you may assume that the tree satisfies the following conditions.\r The root of the tree is labeled 1. Hence P[1] is set to 0.\rThe parent of node T will always have a label less than T. Hence P[i] < i will always be true.\rAll nodes contain a mutable value (or, more simply, a variable), which is initially set to 0.\rYou are asked to perform several operations of the following type\r ADD X Y: add Y to the value at node X.\r ADDUP X Y: add Y to the value at node X. Then, add Y to the value at P[X] (i.e. the parent of X). The, add Y to the value at P[P[X]] (i.e. the parent of P[X]).. and so on, till you add Y to the value at root.\r After you have performed all the given operations, you are asked to answer several queries of the following type\r VAL X: print the value at node X.\r VALTREE X: print the sum of values at all nodes in the subtree rooted at X (including X).\r Input\rThe first line of input contains the number T, the number of test cases. Then follows the description of T test cases. The first line of each test case contains the numbers N, M and Q respectively (separated by single space character). N depicts the number of nodes. M depicts the number of operations you must perform. Q depicts the number of queries you must answer.\r The next N lines contain a number each, depicting the array P[1..N]. Of course the number on the first such line is always 0.\r The next M lines contain description of the respective operation. An operation will be either \"ADD X Y\" or \"ADDUP X Y\" (without the quotes). Please refer to the problem statement and sample I/O explanation for clarity on the meaning of the operations.\r After the operations, the next Q lines contain description of the queries. A query will be either \"VAL X\" or \"VALTREE X\" (without the quotes). Please refer to the problem statement and sample I/O explanation for clarity on the meaning of the queries.\r Output\rPrint the result of each query on a line by itself. Since the answer for some queries may be too large, please print the result modulo 1,000,000,007. Do not print any blank lines between test cases.\r Constraints\r1 \u2264 T \u2264 10\r1 \u2264 N \u2264 50000\r1 \u2264 M \u2264 50000\r1 \u2264 Q \u2264 50000\r1 \u2264 X \u2264 N\r1 \u2264 Y \u2264 50000\r The input file will be smaller than 2 MB.\rSample Input\r2\r5 5 3\r0\r1\r1\r1\r3\rADD 1 10\rADD 2 20\rADD 3 30\rADD 4 40\rADDUP 5 50\rVAL 3\rVALTREE 3\rVALTREE 1\r7 4 5\r0\r1\r2\r2\r2\r1\r2\rADD 6 76\rADDUP 1 49\rADD 4 48\rADDUP 2 59\rVALTREE 1\rVALTREE 5\rVAL 5\rVALTREE 2\rVAL 2\r Sample Output\r80\r130\r250\r291\r0\r0\r107\r59\r Explanation\rIn the first sample case, at the end of app the operations, the values at each of the nodes is as follows\r 1: 60\r2: 20\r3: 80\r4: 40\r5: 50\r Also, the sum of the values of all the nodes in the subtree rooted at each of the nodes is as follows\r 1: 250\r2: 20\r3: 130\r4: 40\r5: 50", "k": ["add", "valtree", "nodes", "tree", "addup"]}
{"i": "5116545763115008", "t": "You are given a grid with 3 rows and N columns. Each cell in the grid contains the value 0 initially. You perform several operations of the following type on the grid\r Pick a row, say r. Pick a start column and end column, say s and e. Of course 1 \u2264 s \u2264 e \u2264 N. Now, set all values in the grid in row r, from column s to column e to 1.\r After you perform all the operations, you wish to find subgrids in this grid (or rectangles, if you please) which contain only 1s. Most importantly, you wish to find the rectangle that has the largest area. Print the area of this rectangle.\r Input\rThe first line of input contains a number T, the number of test cases. The first line of each test case contains the number N and M respectively, separated by a single space. N is the number of columns in the grid. M is the number of operations you perform on the grid. Each of the next M lines contain three integers R, C1 and C2 respectively to describe the operation. R is the row in which the operation is performed. C1 and C2 are the start and end columns respectively. You may assume that 1 \u2264 C1 \u2264 C2 \u2264 N.", "k": ["grid", "number", "column", "columns", "row"]}
{"i": "5768011502845952", "t": "Consider a string with brackets for eg: [ytu[78]][12]. If the start index of the open bracket is given, find the index of the closing bracket.", "k": ["ytu", "string", "bracket", "string with brackets", "open bracket"]}
{"i": "5642986078601216", "t": "Implement zad-off-chu sequence for LTE eNodeB in c language?", "k": ["sequence for lte", "implement", "lte enodeb", "lte", "sequence"]}
{"i": "5666912267665408", "t": "determine whether a number is the sum of two squares, such as 17 = 16 +1", "k": ["determine", "squares", "number", "sum"]}
{"i": "5657983299092480", "t": "Give a matrix, for example\r\n1 0 0 1 0\r\n0 0 1 0 1\r\n0 0 0 1 0\r\n1 0 1 0 1\r\nFind if there is a rectangle in the matrix, all four corners are 1\r\nFor the example,  there is only one rectangle, that is\r\n1 0 1\r\n0 1 0\r\n1 0 1", "k": ["give a matrix", "matrix", "rectangle", "find", "give"]}
{"i": "6302456362303488", "t": "How to use Facebook Messenger?", "k": ["facebook messenger", "messenger", "facebook"]}
{"i": "5960399261270016", "t": "class DirectedGraphNode {\r     int label;\r     List<DirectedGraphNode> neighbors;\r     DirectedGraphNode(int x) { \r        label = x; \r        neighbors = new ArrayList<>(); \r     }\r}\r check if there is a cycle in a directed graph, if there is a cycle,  remove all the cycles", "k": ["class directedgraphnode", "int label", "directed graph", "neighbors", "list"]}
{"i": "5724761450610688", "t": "How to fix Dell Printer Technical Issues?", "k": ["printer technical issues", "dell printer technical", "fix dell printer", "technical issues", "dell printer"]}
{"i": "5693536837042176", "t": "Sachin wants to buy a laptop for programming. he plans on buying a laptop whose price is made of digits 4 and 7 only. The number of 4s and 7s in the price should be equal. You are given laptop brand names and their prices. Find and print the name of the laptop brand that satisfies the above criteria. If there are multiple brands that meet the criteria, print the name of the one with the minimum price. If none of the laptops meet the criteria print -1.\r For example, if Sharon has a choice between laptops 'BestBook' priced at 444777 and 'LapBook' priced at 7744, the solution should indicate ideal choice to be 'LapBook'. Although both 'BestBook' and 'LapBook' have equal number of 4s and 7s in the price, 'LapBook' is priced lower which makes it the right choice for Sharon.", "k": ["lapbook", "laptop", "price", "laptop brand", "print"]}
{"i": "5704021053538304", "t": "You are given a binary tree and a function shouldBeErased(node to check whether a node should be erased. Erase all nodes that should be erased in the binary tree and return the resulting forest in the form of an array of every root node.\r Follow up:\r  What if this is a Binary Search Tree? (In this case you are given a list of nodes that should be erased instead of the function.) Does it make the problem simpler or more complicated or just the same?", "k": ["binary search tree", "binary tree", "search tree", "tree", "binary search"]}
{"i": "5718859091804160", "t": "given a string and a segmentation length k \rFor example:\r\"This is a good day\" k = 10\rCut into:\r\"This (1/4)\"\r\"is a (2/4)\"\r\"good (3/4)\"\r\"day (4/4)\"\rEach line followed by a suffix in the form of (i/n) has 10 chars including space (except for the last line), return the minimum cut required, for the example, just  return 4.", "k": ["chars including space", "minimum cut required", "cut required", "chars including", "including space"]}
{"i": "5676259794223104", "t": "trie search, Search Return all words that match the wildcard  * \rsuch as\radd (\"car\")\radd (\"caw\")\radd (\"cauw\")\rsearch (\"c*w\") returns \"caw\" and \"cauw\".", "k": ["match the wildcard", "trie search", "caw", "cauw", "words that match"]}
{"i": "5739760550150144", "t": "Given two sorted linked lists, how can you combine them into one big sorted list? Do not create additional nodes.", "k": ["sorted linked lists", "big sorted list", "linked lists", "sorted list", "sorted linked"]}
{"i": "5666609808015360", "t": "There is going to be a sale during this month. You are interested in a particular item and you found that different Vendors have different prices during different time periods. You collected the following information:Vendor => (start date, end date, price) both sides inclusive\r\nA => (1, 5, $20)\r\nB => (3, 6, $15)\r\nC => (2, 8, $25)\r\nD => (7, 12, $18)\r\nE => (1, 31, $22)As you can see, there are conflicting entries. You need to print out a non-conflicting schedule of prices, taking the best price from each period:\r e.g. \r(1, 2, $20), (3, 6, $15), (7, 12, $18), (13, 31, $22)", "k": ["month", "sale", "time periods", "date", "start date"]}
{"i": "5631096870928384", "t": "Given a list of currency exchange rates like this:\rEUR/USD => 1.2\rUSD/GBP => 0.75\rGBP/AUD => 1.7\rAUD/JPY => 90\rGBP/JPY => 150\rJPY/INR => 0.6\r write a methoddouble convert(String sourceCurrency, double amount, String destCurrency);For example, convert(EUR, 100, INR)\r The method should minimize the number of intermediate conversions.", "k": ["currency exchange rates", "string sourcecurrency", "string destcurrency", "gbp", "jpy"]}
{"i": "5729760255672320", "t": "You are given an arbitrary number of graphs using sets such as {a,b,c,d,a}, {a,b,a}, {e,f,g,h,e}... etc. Assume each element at position x_i in a set has a directed edge to x_{i+1}. so a-->b, b-->c etc. Write a program that selects a subset of at mot k vertices that contains at least one vertex from every directed cycle in the graph.", "k": ["arbitrary number", "number of graphs", "assume each element", "arbitrary", "number"]}
{"i": "5664648551464960", "t": "Write a program that always produces a two-way Euler tour that can be drawn such as it does not cross itself at any vertex.", "k": ["two-way euler tour", "two-way euler", "euler tour", "write a program", "produces a two-way"]}
{"i": "5647242995171328", "t": "let's say you're given an arbitrary list of relations r1 and r2 from objects in a set of arbitrary size. find the size of th largest subset with the property that no two are related. for e.g., given set S = {a,b,c,d,e,f} and relations {a,d}, {b,c}, {a,c}, {a,e}, find the subset of S such that no two a connected.", "k": ["arbitrary list", "arbitrary size", "arbitrary", "find", "list of relations"]}
{"i": "5731585952317440", "t": "There was given total physical energy H and total distance D. Five pace information speed and corresponding physical energy was given. Find the minimum time that is required in order to complete total distance D making sure that some of the physical energy does not exceed H", "k": ["physical energy", "total distance", "physical", "energy", "total"]}
{"i": "5743957068742656", "t": "I came across this in a contest and haven't been able to solve it yet.\rYou are located at point 0 having p units of petrol, and you need to reach a point N. car consumes one unit of petrol every unit of distance it travels. Find minimum number of stops you need to make to reach the end.\r for eg:\rdis, petrol\r 3 , 15\r 6 , 4\r 8 , 5\r 15 , 6\r output is 1 is distace to travel is 20 and inital petrol is 17.\r The town is situated at co-ordinate 0. All the other distances are given with respect to town's location.\r I initally though about the greedy approach but that only working in case you have enough petrol in petrol station to reach the next station.", "k": ["petrol", "reach", "unit", "contest", "solve"]}
{"i": "5744699292778496", "t": "given a target node in a directed graph, find the shortest cycle including this node, return the whole path.", "k": ["shortest cycle including", "directed graph", "find the shortest", "shortest cycle", "cycle including"]}
