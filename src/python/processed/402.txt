{"i": "12454663", "t": "You have a string representation of a number. Convert it to integer value.", "k": ["string representation", "number", "string", "representation", "convert"]}
{"i": "12453667", "t": "Write a function to detect anagram (eg. dad). Extension: Extend it for detecting multiple anagram(e.g dadana has 2 anagram.) What are the test cases. For test cases think about anagram embedded   inside anagram (alala).", "k": ["write a function", "function to detect", "anagram", "detect anagram", "write"]}
{"i": "12411025", "t": "Determine whether a number is colorful or not. 263 is a colorful number because (2,6,3,2x6,6x3,2x3x6) are all different whereas 236 is not because (2,3,6,2x3,3x6,2x3x6) have 6 twice. So take all consecutive subsets of digits, take their product and ensure all the products are different", "k": ["determine", "colorful number", "number", "colorful", "subsets of digits"]}
{"i": "12452665", "t": "Given a 2 dimensional point of a rectangle and its area, find permutations of all the other 3 points of the rectangle in 2-D space.\r Ex:- Given X=(0,0) and A=1\r(0,1),(1,0),(1,1)\r(0,-1),(-1,0),(-1,-1)\r....", "k": ["dimensional point", "find permutations", "space", "rectangle", "dimensional"]}
{"i": "12338224", "t": "Suppose you are given an ordered array of strings representing a file system.  Ex: {'\\', '\\Documents\\', '\\Documents\\School\\', '\\Documents\\School\\Project.docx', '\\Documents\\Work\\', '\\Pictures\\', '\\Pictures\\me.jpg'}.\r Write a function that will take this array as input and build a tree.  \r From the example above, the tree would have a head with the value '\\', which has the children 'Documents' and 'Pictures.  'Documents' has children with values 'School' and 'Work', and so on.", "k": ["documents", "pictures", "school", "file system", "strings representing"]}
{"i": "12341681", "t": "given a byte array.which consists of 1 byte char and 2 byte characters, 1 byte character can store value between 0-127,1st byte of 2 byte character can store value between 128-255 and 2nd byte of 2 byte character can store value between 0-255; given a position k find whether it is start of 1 byte character or 1st byte of 2 byte character or 2nd byte of 2byte character", "k": ["byte array.which consists", "byte character", "character can store", "array.which consists", "position k find"]}
{"i": "12343697", "t": "p,p+2 are prime numbers .prove that (p+7) is divisible by 6 .given p>10.", "k": ["prime numbers", "numbers", "prove", "prime", "divisible"]}
{"i": "12345688", "t": "stock market simulation: given a set of values {{v1,t1},{v2,t2}........}vi->value of stock at time ti;suggest a method to determine a single selltime,buytime.to get maximum profit .", "k": ["stock market simulation", "market simulation", "suggest a method", "determine a single", "maximum profit"]}
{"i": "12347514", "t": "How do you partition an array into 2 parts such that the two parts have equal average? Each partition may contain elements that are non-contiguous in the array..", "k": ["equal average", "average", "parts", "parts have equal", "partition"]}
{"i": "12446663", "t": "How do you partition an array into 2 parts such that the two parts have equal average? Each partition may contain elements that are non-contiguous in the array..", "k": ["equal average", "average", "parts", "parts have equal", "partition"]}
{"i": "12348685", "t": "The columns that I get in a table after a clustering process is not specific but varies from 150 to 210. I need to get the column name that has the max value for each row and add that column name to a target column.. \rSchema looks like this\r    cluster_name ---> varchar(20) \r    col1 ----> decimal \r    col2 ----> decimal \r    ... \r    coln ----> decimal \r  The result of the query should look like this\r    cluster_name -----> varchar(20) \r    col_name(that had the max value for that row)------> varchar(20) \r    col_max(max value across all columns for that row)-------->decimal \rshould use only mysql query..", "k": ["clustering process", "specific but varies", "varchar", "max", "decimal"]}
{"i": "12347504", "t": "Given a sequence of integers corresponding to a stock price over a period of time, write a function that will find the best day to buy and the best day to sell that will yield the most profit.", "k": ["period of time", "write a function", "day to buy", "day to sell", "sequence of integers"]}
{"i": "12342689", "t": "Given a time of day, write a function that returns the angle between the hour hand and the minute hand.  For simplicity, you can create your own basic Time object to be used as a parameter for your function.", "k": ["returns the angle", "hour hand", "minute hand", "basic time object", "time of day"]}
{"i": "12348675", "t": "Lets say you have a room with 100 doors in it.  Initially, all of these doors are open.  You have 100 people that will be entering the room.  The 1st person toggles every door, 2nd person toggles every other door, 3rd toggles every 3rd door, ... , nth person toggles every nth door.  How would you determine the state of all 100 doors after all 100 people have entered the room?", "k": ["toggles", "person toggles", "door", "room", "person"]}
{"i": "12343681", "t": "Assume you already have a function that returns a random integer between 0 and integer max (2^32).  Create a random number generator that will return an integer between a user-specified range R1 and R2.  You can assume that R1 < R2.", "k": ["integer max", "random number generator", "integer", "random integer", "create a random"]}
{"i": "12341670", "t": "\"DESCRIBE\" and write code to return LCA of any two given nodes in __Binary Tree__.", "k": ["binary tree", "describe", "return lca", "binary", "tree"]}
{"i": "12442672", "t": "There is an sorted array rotated unknown number of times. Find the minimum - follow up, return second min and/or second max.", "k": ["sorted array rotated", "array rotated unknown", "rotated unknown number", "number of times", "sorted array"]}
{"i": "12442671", "t": "Print the binary tree level by level. Suggest  methods. If one of your method is using queue and some delimiter is detect the change in levels, what is its space and time complexity. Prove your analysis. (yes, CLRS style proof is expected)", "k": ["binary tree level", "print the binary", "binary tree", "tree level", "print"]}
{"i": "12342686", "t": "Given number n, return true if n is prime otherwise false.", "k": ["return true", "prime otherwise false", "return", "false", "number"]}
{"i": "12341668", "t": "Given set of elements and all the elements repeat even number of times and one repeats odd number of time, which is that odd number?", "k": ["repeats odd number", "odd number", "repeats odd", "elements repeat", "number of times"]}
{"i": "12342685", "t": "Write class for binary expression tree.", "k": ["binary expression tree", "write class", "expression tree", "class for binary", "binary expression"]}
{"i": "12442670", "t": "What is polymorphism, inheritance, method overriding.", "k": ["method overriding", "inheritance", "polymorphism", "method", "overriding"]}
{"i": "12348670", "t": "Check if two linked merge.", "k": ["linked merge", "check", "merge", "linked"]}
{"i": "12347501", "t": "Print odd powers of three.", "k": ["print odd powers", "print odd", "odd powers", "print", "odd"]}
{"i": "12442669", "t": "Delete a node in Linked list.", "k": ["linked list", "node in linked", "delete a node", "linked", "delete"]}
{"i": "12343679", "t": "Given 2 arrays which are sorted in non-decreasing order and your told that one of the two arrays have sufficient memory allocated to have elements combined from both arrays, merge the arrays and keep the sorting order.", "k": ["sufficient memory allocated", "sorted in non-decreasing", "sufficient memory", "memory allocated", "elements combined"]}
{"i": "12343678", "t": "How do you improve IE?", "k": ["improve"]}
{"i": "12347500", "t": "Test address bar in IE.", "k": ["test address bar", "test address", "address bar", "test", "address"]}
{"i": "12341667", "t": "Given a sentence, count the palindromes inside the sentence. Do not worry about the palindrome inside a palindrome. Write test cases.", "k": ["sentence", "count the palindromes", "palindromes inside", "palindrome", "count"]}
{"i": "12342684", "t": "Given two integer arrays which may contain duplicates, report the intersection of both the arrays.", "k": ["report the intersection", "integer arrays", "duplicates", "report", "arrays"]}
