{"i": "12654686", "t": "You are give n images with  width length dimensions w1*l1,w2*l2........wn*ln .Now you have write an algorithm to fit these n images on a big rectangle of dimension W*H.\rConstraint:\r1)Image resolution should not be changed.you can scale the images keeping aspect ratio unchanged\r2)You can perform cropping but as minimum as posisble", "k": ["width length dimensions", "width length", "write an algorithm", "algorithm to fit", "big rectangle"]}
{"i": "12705676", "t": "one unsorted array is given.Find out the index i and j ,j> i for which a[j]  - a[i]  is maximum.perform in linear time complexity", "k": ["linear time complexity", "time complexity", "unsorted array", "array is given.find", "maximum.perform in linear"]}
{"i": "12702673", "t": "one unsorted array is given ,find the index i and j and j > i for which a[j] - a[i] is maximum.Perform in linear time", "k": ["find the index", "linear time", "unsorted array", "maximum.perform in linear", "find"]}
{"i": "12668691", "t": "Find k'th element to the last of a linked list.Standard one", "k": ["find k'th element", "find k'th", "k'th element", "linked list.standard", "find"]}
{"i": "12698695", "t": "You are given C containers, B black balls and an unlimited number of white balls. You want to distribute balls between the containers in a way that every container contains at least one ball and the probability of selecting a white ball is greater or equal to P percent. The selection is done by randomly picking a container followed by randomly picking a ball from it. \r Find the minimal required number of white balls to achieve that.\r INPUT\r The first line contains 1 <= T <= 10 - the number of testcases.\r Each of the following T lines contain three integers  C B P separated by a single space 1<= C <= 1000; 0 <= B <= 1000; 0 <= P <= 100;\r OUTPUT\r For each testcase output a line containing an integer - the minimal number of white balls required.  (The tests will assure that it's possible with a finite number of balls)\r SAMPLE INPUT\r 3\r1 1 60\r2 1 60\r10 2 50\r SAMPLE OUTPUT\r 2\r2\r8\r EXPLANATION\r In the 1st testcase if we put 2 white balls and 1 black ball in the box the probability of selecting a white one is 66.(6)% which is greater than 60%\r In the 2nd testcase putting a single white ball in one box and white+black in the other gives us 0.5 * 100% + 0.5 * 50% = 75%\r For the 3rd testcase remember that we want at least one ball in each of the boxes.", "k": ["white balls", "white", "balls", "ball", "number"]}
{"i": "12698685", "t": "design Multi level categories in eCommerce website using no sql.    How is it better than modified preorder traversal with relational database like mysql.", "k": ["design multi level", "multi level categories", "design multi", "multi level", "level categories"]}
{"i": "12697675", "t": "Given an array, subarray size k and a number ssum, find the number of subarrays of size k that sum up to ssum.", "k": ["number ssum", "subarray size", "ssum", "find the number", "size"]}
{"i": "12642686", "t": "Which of C++, Java languages supports Multiple Inheritance and which does not ? Follow up: What do you think of Java not supporting Multiple Inheritance?", "k": ["supports multiple inheritance", "languages supports multiple", "multiple inheritance", "java languages supports", "supports multiple"]}
{"i": "12696671", "t": "Given two nodes of a BST and all elements in BST are distinct, write code to determine the shortest distance between the two nodes. (unit distance between two adjacent nodes). Nodes dont have parent pointer.", "k": ["write code", "bst are distinct", "code to determine", "determine the shortest", "bst"]}
{"i": "12698674", "t": "Given references to roots of two binary trees, how do you short circuit determine whether the sequences of the leaf elements of both the trees are same ? The structure of two BTs may be different. Short circuit : for ex. If the very first leaf element of each tree is different, the algorithm should stop immediately returning false instead of checking all the leaf elements of both trees.", "k": ["short circuit determine", "short circuit", "leaf elements", "references to roots", "circuit determine"]}
{"i": "12695674", "t": "they asked some quesyion from fym :\r a horse is in chessboard. given its x,y find the probability through program that it will remain in board after n moves.", "k": ["quesyion from fym", "asked some quesyion", "fym", "chessboard", "asked"]}
{"i": "12697674", "t": "write algo for longest palindrome?", "k": ["write algo", "longest palindrome", "algo for longest", "write", "palindrome"]}
{"i": "12627678", "t": "given two binary trees' root node, judge whether they're mirrored.", "k": ["trees' root node", "binary trees' root", "root node", "binary trees'", "trees' root"]}
{"i": "12695668", "t": "how do you perform string compression:\r i/p-->str=\"aabbbcdddd\"\r o/p-->str=\"a2b3cd4\"", "k": ["perform string compression", "str", "string compression", "perform string", "aabbbcdddd"]}
{"i": "12695667", "t": "my prog is not working.....(compression of sring)\r #include <cstdlib>\r#include <iostream>\r#include <string>\r using namespace std;\rint main()\r{\rstring s;\rcout<<\"Enter String:\";\rcin>>s;\rint count=0;\rint i=0,j=-1;\rif(s[i]!='\\0')\r{ if(s[i]!=s[i+1])\r  {  \r   s[count++]=s[i];\r   s[count++]=i-j;\r   j=i;\r  }\ri++;\r}\rs[count]='\\0';\rcout<<s;\rgetchar();\r}", "k": ["enter string", "int count", "int main", "compression of sring", "namespace std"]}
{"i": "12642678", "t": "given two stacks implemetn queue and give the time complexity", "k": ["stacks implemetn queue", "time complexity", "stacks implemetn", "implemetn queue", "queue and give"]}
{"i": "12697666", "t": "Given k n-length integer arrays which are sorted. Merge them into one sorted integer array . State the time complexity", "k": ["n-length integer arrays", "n-length integer", "sorted integer array", "state the time", "integer arrays"]}
{"i": "12698664", "t": "Imagine that you are developing a text editor. What is the best data structure to implement the buffer of text?\r Then imagine that you have to paste 3000chars into your buffer. How does your structure handles that?", "k": ["text editor", "editor", "text", "imagine", "developing a text"]}
{"i": "12658675", "t": "Imagine that you have an histogram stored in an array. Now imagine that you can pour water on top of your histogram. Describe an algorithm that computes the amount of water that remains trapped among the columns of the graph. Clearly on the edges the water would fall off. Use the language or the pseudocode you prefer.", "k": ["histogram stored", "imagine", "histogram", "array", "water"]}
{"i": "12697664", "t": "Given (i) a non-empty binary search tree with double values (e.g. 3.5) in each node and (ii) a key value K\r Write a method to find the closest value to K.", "k": ["non-empty binary search", "binary search tree", "write a method", "non-empty binary", "binary search"]}
{"i": "12680670", "t": "Take an input as integer from user. Check whether it's a palindrome. Say-23432, the answer is true. Check boundary conditions for the input. Consider all cases--+ve/-ve numbers.", "k": ["integer from user", "user", "check", "integer", "input"]}
{"i": "12678666", "t": "Given an n*n matrix. Print the main diagonal elements starting from bottom-left to top-right.", "k": ["matrix", "print the main", "bottom-left to top-right", "main diagonal elements", "diagonal elements starting"]}
{"i": "12619667", "t": "write a program to find min and max element in queue using linked list", "k": ["write a program", "linked list", "program to find", "find min", "min and max"]}
{"i": "12677664", "t": "write a program to find min and max element in stack  using linked list", "k": ["write a program", "linked list", "program to find", "find min", "min and max"]}
{"i": "12672672", "t": "FInd all nodes which are of distance K from a given node.\rA\rB | C\r    | D  E ( C children)\r    | I J  | M N  (D,E Children\r    | P ( I children) \r    | Q ( p children)\rfor a given node J and distance 2 you should print all the below nodes Q,M,N,C (its children, parent, siblings children) etc....", "k": ["children", "siblings children", "find", "distance", "find all nodes"]}
{"i": "12674664", "t": "Implement LRU cache .", "k": ["implement lru cache", "implement lru", "lru cache", "lru", "implement"]}
{"i": "12672668", "t": "An array contains only 0's and 1's. Code the best way to sort it( Time complexity and space complexity). Length of the array could be very large.", "k": ["time complexity", "time", "array", "complexity", "code"]}
{"i": "12662675", "t": "First Round \" Find the fault in the program...a very big program(:)),with assert on function in Java. He explained Assert will return True/ False(Boolean).......not clear on this one......Hope this helps.......", "k": ["find the fault", "function in java", "big program", "round", "find"]}
{"i": "12666683", "t": "Write a program to calculate the number of occurances of letters(chars) in a string. Eg:\"Test\".(This was the second round for Automation Interview in Amazon)Feb 2012", "k": ["write a program", "occurances of letters", "program to calculate", "calculate the number", "number of occurances"]}
{"i": "12662674", "t": "Write a program to Print for n=3,5,7,...... \rif n=3 print \r * \r***\r *,\rFor n=5,print,\r  *\r **  \r****\r  **\r   *....so on.....only for odd numbers.", "k": ["write a program", "program to print", "print", "write", "odd numbers"]}
