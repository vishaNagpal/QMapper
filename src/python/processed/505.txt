{"i": "3477277", "t": "Give a string, print total count of substrings (length>=2) which are palindromes. He was expecting better than O(n2) time complexity", "k": ["print total count", "give a string", "length", "print total", "count of substrings"]}
{"i": "3533259", "t": "IBM sells laptops from its website. The total cost is base price + shipping (depends on customer location). How will you design this?\r Now imagine millions of transactions. Will you have a separate class per transaction or a single class for all transactions or something else?", "k": ["ibm sells laptops", "ibm sells", "sells laptops", "ibm", "website"]}
{"i": "3515195", "t": "You have a binary tree of some shape. Convert it to BST search tree of same shape.", "k": ["bst search tree", "binary tree", "shape", "bst search", "tree"]}
{"i": "3522213", "t": "You have a graph with and start point A and end point B. All edges have positive weights. Now the shortest path from A to B can be found using Djikstra. \r 1) Find the kth shortest path\r2) Find the longest path", "k": ["start point", "end point", "find", "point", "path"]}
{"i": "3543159", "t": "java:\rstatic void printN(int a, double b) {System.out.println(\"Print 1\");}\rstatic void printN(float a, int b) {System.out.println(\"Print 2\");}\rstatic void printN(double a, float b) {System.out.println(\"Print 3\");}\rstatic void printN(int a, int b) {System.out.println(\"Print 4\");}\r static void main(String args[]){\r   printN(2, 2.0f);\r}\r Which one will print and why?", "k": ["static void printn", "static void main", "static void", "void printn", "string args"]}
{"i": "3549128", "t": "write a function isAngram(String s1, String s2) ==> boolean\r   what's the complexity? how to improve it", "k": ["string", "write a function", "function isangram", "write", "isangram"]}
{"i": "3483212", "t": "Which one of the following statements accurately expresses the disadvantages\rof making a function inline?\r a) Inline functions always make the program bigger.\rb) Inline functions always make the program slower.\rc) Inline functions always make the program bigger and slower.\rd) It is not possible to take the address of an inline function.\re) It increases compile-time dependencies.", "k": ["statements accurately expresses", "inline functions", "inline", "make the program", "statements accurately"]}
{"i": "3492147", "t": "There is a byte array which contains the character of one byte and two bytes. One byte character has range 0 to 127 and first character of 2 byte character is 128 to 255 and second byte character has range 0 to 255. Now, two pointers are given, one points to the start of the and another points to somewhere else. \rTell which character 2nd pointers points to?", "k": ["byte character", "character", "byte", "byte array", "points"]}
{"i": "3556804", "t": "Implement Stack with Push() Pop() and Mininum() operation in O(1).", "k": ["stack with push", "implement stack", "pop", "push", "mininum"]}
{"i": "3538036", "t": "Write a function to find the nearest link on a webpage given the mouse x,y coordinates.  \r If your algorithm just iterates through all the links, give an idea of how to make it faster.", "k": ["write a function", "mouse x,y coordinates", "function to find", "find the nearest", "nearest link"]}
{"i": "3515013", "t": "Given an array of integers as input, filter the array such as to eliminate duplicates(e.g.  [1,2,3,2,4,4] => [1,2,3,4]).", "k": ["integers as input", "eliminate duplicates", "filter the array", "array of integers", "input"]}
{"i": "3514054", "t": "Interviewer drew an 2D graph on the board (X and Y axis).  Given a set of buildings, defined by (x1,x2,height) discuss an algorithm to determine the silhouette of the buildings (line, the skyline).  Buildings can overlap each other.", "k": ["interviewer drew", "interviewer", "graph", "board", "axis"]}
{"i": "3507065", "t": "In C++, write functions for:\r string serialize(vector<string> v);\rvector<string> deserialize(string s);\r such that a string returned from 'serialize' can be passed into deserialize to get the original set of strings back.", "k": ["write functions", "original set", "strings back", "string serialize", "string returned"]}
{"i": "3544061", "t": "Pretend there is a robot that has to navigate a maze (N x M).  The robot can only move down or right and the maze can contain walls.  Write an algorithm to determine the number of paths the robot can take.", "k": ["robot", "pretend", "navigate a maze", "maze", "navigate"]}
{"i": "3514931", "t": "In a single linked list, how to delete a node (no head node given).", "k": ["single linked list", "linked list", "single linked", "head node", "list"]}
{"i": "3525964", "t": "Given array of 3 integers. Write a method that returns possible numbers of those 3 integers. \rFor example: int[] a = {1,2,3}\rOutput: 12,13,123,321,213 etc..", "k": ["integers", "output", "array", "write a method", "int"]}
{"i": "3509968", "t": "Write a method that returns 40% A, 50% B and 10% C.", "k": ["write a method", "method that returns", "write", "returns", "method"]}
{"i": "3483977", "t": "Find repeated number in a sorted array", "k": ["find repeated number", "find repeated", "sorted array", "repeated number", "find"]}
{"i": "3545907", "t": "Write pattern matching algorithm.\ri.e isMatch(String,Pattern)\rPattern can have ?(one character) and *(many characters).\rex. abbdef and a?b*f are a match\r    aaabab and a*ba are not a match", "k": ["write pattern matching", "pattern matching algorithm", "matching algorithm", "write pattern", "pattern matching"]}
{"i": "3508903", "t": "Write a code to implement the Sodoku problem.\rLets say you have a matrix of 9*9 and i can have valued from 1 to 9.\rthe rules are as below:\r1. all the 3*3 matrix shouldn't have any duplicate number.\r2. all the rows and columns can't have duplicate numebers.\r3. all the diagonal elements in the 9*9 matrix can't have duplicate number.", "k": ["sodoku problem", "implement the sodoku", "write a code", "code to implement", "sodoku"]}
{"i": "3491945", "t": "you have given a node of a tree. that node is defined as below:\rnode(\rint value,\rnode left;\rnode right;\rnode grandparent)\r at the starting the grand parent node is null in the tree. you have to assign the grandparent node for all the nodes in the tree.", "k": ["grand parent node", "starting the grand", "grand parent", "node", "node left"]}
{"i": "3491908", "t": "4th interview with the HR guy:\rAsked me about the desired salary.", "k": ["desired salary", "asked", "interview", "guy", "salary"]}
{"i": "3483900", "t": "3rd interview: You are in a maze(like a labyrinth), and you open your eyes so you don't know your position. The maze has walls and you can move only in up, right, left and down directions. You can escape the maze when you find a ladder.\rThe following API is given:\rbool TryMove(direction) - returns true when you don't hit a wall;\rbool HasLadder() - return true if you found the ladder.\rWrite a method bool Explore() that returns true if you can escape the maze, false otherwise. Also, provide test cases.", "k": ["open your eyes", "maze", "returns true", "escape the maze", "interview"]}
{"i": "3521895", "t": "3rd interview:Given a 4x4 board with pieces in it, find if the board has 4 identical pieces. Each piece has a shape and a color. Two pieces are identical if have the same shape and color. The pieces for this board have 6 colors and 6 shapes.", "k": ["interview", "pieces", "board", "find", "identical"]}
{"i": "3491907", "t": "2nd interview:Given a MxN matrix, in how many ways can you go from top-left to bottom-right?", "k": ["interview", "mxn matrix", "top-left to bottom-right", "matrix", "bottom-right"]}
{"i": "3549786", "t": "2nd interview:Serialize and deserialize a tree. (I had to ask some questions until we setteled on rooted tree and the root node was given).", "k": ["serialize and deserialize", "interview", "serialize", "tree", "deserialize a tree"]}
{"i": "3528881", "t": "1st interview:Generate a product key for a given product, having this conditions:\r1. should be upper roman literals or 0-9 digits;\r2. the key should be validated by the installer;\r3. how would you check if the key was not registered before?\r4. how would you find bad/offensive words in it?(eg. F**K, TIT, T1T...)", "k": ["generate a product", "generate", "interview", "product", "conditions"]}
{"i": "3532828", "t": "sort a linked list in O(n)....", "k": ["sort a linked", "linked list", "sort", "linked", "list"]}
{"i": "3475780", "t": "How will you find the page with most incoming links from billions of web-pages", "k": ["billions of web-pages", "find the page", "incoming links", "links from billions", "web-pages"]}
{"i": "3516767", "t": "Amazon.com has a link below each product which gives a list of items that \"customers who bought this also bought\". How will you design that?", "k": ["list of items", "customers who bought", "amazon.com", "customers", "bought"]}
