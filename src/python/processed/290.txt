{"i": "18989663", "t": "Given a file of n lines, where n-1 lines are identical and 1 line is different. Find the unique line in not more than one scan of the file.", "k": ["file", "identical", "find the unique", "lines", "line"]}
{"i": "18892662", "t": "There are exactly N advertising boards on the highway. Now a company want to advertise on some of these advertising boards (each advertising board costs some money).\r Company strategy is that, they want at least 'K' advertisement should be there among M consecutive advertising boards. But at the same time Company want to pay minimum for its advertisement.\r Now, what is the total number of ways Company can advertise meeting its minimum cost strategy.\r Also 1 <= K <= M <= 50 and M <= N <= 10^9\r As for Example: N = 3, M = 2, K = 1 ==> there is only one way for minimum cost, ie. 0C0 , where '0' denotes No company advertisement, and 'C' denotes company advertisement board.\r Similarly, for N = 4, M = 2, K = 1 ==> there are 3 possible ways, ie. C0C0, 0C0C, 0CC0.", "k": ["company", "advertising boards", "advertising", "advertisement", "boards"]}
{"i": "18801666", "t": "Problem: you are given 2 words with equal number of characters. Find an algorithm to go from first word to second word, changing one character at each step, in such a way that each intermediate word exist in a given dictionary.\rExample: \rWords are pit, map. A possible solution:\rpit, pot, pet, met, mat, map", "k": ["equal number", "problem", "word", "map", "number of characters"]}
{"i": "18844662", "t": "How would you test each of the 3 layers in a 3-tier web app?", "k": ["web app", "layers", "web", "app", "test"]}
{"i": "18839665", "t": "How would you test amazon search functionality on the home page?", "k": ["test amazon search", "amazon search functionality", "home page", "test amazon", "amazon search"]}
{"i": "18822671", "t": "Give me real time application of BST.....", "k": ["application of bst", "real time application", "give me real", "bst", "real time"]}
{"i": "18824667", "t": "You are given an array of 1's 2's and 3's. Sort this list so the 1's are first, the 2's come second, and the 3's come third.\r Ex:  Input [1, 3, 3, 2, 1]\r        Output [1, 1, 2, 3, 3]\r But there is a catch!! The algorithm must be one pass, which means no merge/quick sort. Also no extra list allocations are allowed, which means no bucket/radix/counting sorts. \r You are only permitted to swap elements.", "k": ["array", "input", "output", "list", "sort"]}
{"i": "18809662", "t": "If you are going to debug a program with about 5000 lines of codes (written in C), given  that some of its features are working fine while other are not, how are you going to fix it?", "k": ["lines of codes", "debug a program", "features are working", "working fine", "lines"]}
{"i": "18788682", "t": "Given an array with different numbers and a number  of C,so how to find all the combinations which the sum is C..like..array={1,2,3,4},C=3,,return is 2,which contains two combinations{{1,2},{3}}.", "k": ["like.", "number of c,so", "c,so", "return", "array"]}
{"i": "18782681", "t": "You visit a website and it is slow today (it is not slow everyday). What could be the cause(s) of the slowness?", "k": ["slow today", "slow everyday", "visit a website", "today", "everyday"]}
{"i": "18786675", "t": "which data structure should be used to implement thread pool ? How to assign particular thread from thread pool ?", "k": ["implement thread pool", "thread pool", "data structure", "implement thread", "pool"]}
{"i": "18781674", "t": "Given a list of n points in 2D space. Lets call them (X1,Y1), (X2,Y2) .... (Xn,Yn). Find the optimal way to retrieve the result of following query.\r SELECT min(X) FROM (2D Points) WHERE Y between Ymin and Ymax.", "k": ["space", "ymin and ymax", "points", "list", "select min"]}
{"i": "18789677", "t": "Suppose there is a directory XYZ having too many files (100 to 10000). Each file contain the format like first line having company name and second line some data values.  We need to read each files in directory and create the new directories at some path with company names and move that file (1.txt ) to that directory. \rwhat should be design.\rMy suggestion was to Create a function ScanDir() which will read the count of files and will make loop to read the file and will create a thread for that file and move to next file and process the all files.", "k": ["directory xyz", "file", "xyz", "files", "create"]}
{"i": "18774665", "t": "Two numbers are missing from the first hundred numbers. They are NOT sorted. How to find them?\rYou can't sort.. and can't iterate one by one.. has to be less than O(N)? Can't use stack , set or any collection interface or in fact any other data structure or array!", "k": ["hundred numbers", "numbers are missing", "numbers", "missing", "hundred"]}
{"i": "18766664", "t": "An array contains N numbers where N is huge. There are only k distinct numbers. Sort those k numbers.\r I tld him to use a hashmap for this. He was fine with the solution. But he wanted me to optimise it for a multicore machine. I couldn't come up with an answer. :(", "k": ["huge", "numbers", "array", "distinct numbers", "sort"]}
{"i": "18471684", "t": "You are given a long list of integers, so long that you can not fit the entire list into memory, implement an algorithm to get the max 100 elements in the list.", "k": ["implement an algorithm", "fit the entire", "entire list", "long list", "list of integers"]}
{"i": "18753666", "t": "Given these 4 commands :INCREMENT: \r\n    READ V\r\n    WRITE V + 1\r\n\r\nZERO\r\n    WRITE 0\r\n\r\n\r\nASSIGN : =\r\n\r\nLOOP : FOR <integer> = <start> to <finish> do\r\n\t \t...\r\n\t     END FORDefine these 4 functions: Decrement, Divide, test If equal (pseudo code).", "k": ["read v write", "increment", "assign", "loop", "write"]}
{"i": "18536687", "t": "You have an array of binary numbers as \"00001101000001010100000...\"... We need to find the First occurrence of 1 in this series.. using binary search. \r we need to design an algorithm  of complexity less than O(n).. and we need to use binary search strictly..", "k": ["binary numbers", "binary", "array", "numbers", "binary search"]}
{"i": "18716668", "t": "Using these 3 functions:INCREMENT:\r\n    READ N1\r\n    WRITE N1 + 1\r\n\r\nMINUS:\r\n    READ N1, N2\r\n    WRITE N1 - N2\r\n\r\nMULTIPLY:\r\n    READ N1,N2\r\n    WRITE N1*N2Define these four functions: Greater than, Equality, Nonequality, Divide.", "k": ["read", "write", "increment", "minus", "multiply"]}
{"i": "18717665", "t": "How can you implement multiplication operator using increment operator (No arithmetic operation is allowed)?", "k": ["implement multiplication operator", "operation is allowed", "implement multiplication", "arithmetic operation", "multiplication operator"]}
{"i": "18716666", "t": "Write a function to evaluate a string that has only integers, and operators '+' & '*'. The evaluation should be done in a single pass.  For example passing \"3*2+5*6\" should result in this function returning 36.", "k": ["evaluate a string", "write a function", "write", "integers", "operators"]}
{"i": "18717664", "t": "Write a function fix a loop in the linked list based on the assumption that the linked list is sorted.", "k": ["linked list based", "linked list", "write a function", "function fix", "fix a loop"]}
{"i": "18484666", "t": "How would you find if a linked list has a loop? How would you do it without using additional memory, if the linked list is sorted.", "k": ["linked list", "loop", "linked", "list", "find"]}
{"i": "18723662", "t": "Write a function to find a key in Hash map if the value associated to that key is given as input. As a followup, swap key & value assuming that value is not equal to any of the existing keys.", "k": ["hash map", "write a function", "function to find", "hash", "key in hash"]}
{"i": "18722662", "t": "Write a function to perform string replace without using any inbuilt functions.", "k": ["perform string replace", "perform string", "string replace", "inbuilt functions", "write a function"]}
{"i": "18536673", "t": "// Given two lists of strings build a new list that has all strings that appear in both the original lists. If the same string appears more than once output it as many times as it appears in both lists\r// \r// Example:\r// \"dog\", \"bird\", \"elephant\", \"dog\", \"dog\", \"cat\"\r// \"cat\", \"dog\", \"dog\", \"cat\", \"cat\", \"fish\"\r// Result (order doesn't matter)\r// \"dog\", \"dog\", \"cat\"", "k": ["dog", "cat", "strings build", "original lists", "lists"]}
{"i": "18529667", "t": "//Given an array of NxN, print its diagonals from top-right to bottom-left.\r //Sample Input: \r//        [[1, 2, 3],\r//         [4, 5, 6],\r//         [7, 8, 9]]\r //Sample Output: \r//1, \r//2, 4, \r//3, 5, 7, \r//6, 8, \r//9", "k": ["array of nxn", "print its diagonals", "top-right to bottom-left", "sample input", "sample output"]}
{"i": "18517665", "t": "Given an array of values, design and code an algorithm that returns whether there are two duplicates within k indices of each other? k indices and within plus or minus l (value) of each other? Do all, even the latter, in O(n) running time and O(k) space.", "k": ["design and code", "code an algorithm", "algorithm that returns", "design", "indices"]}
{"i": "18601675", "t": "Give three Hash tables has some values.you need compare three hash tables and store the common values in fourth hash table?", "k": ["fourth hash table", "hash tables", "fourth hash", "give three hash", "values.you need compare"]}
{"i": "18460667", "t": "Eliminate all \u2018b\u2019 and \u2018ac\u2019 in an array of characters, you have to replace them in-place, and you are only allowed to iterate over the char array once.\r Examples:\rabc -> ac\rac->''\rreact->rt", "k": ["replace them in-place", "allowed to iterate", "char array", "array of characters", "eliminate"]}
