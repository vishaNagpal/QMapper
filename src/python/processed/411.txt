{"i": "11739703", "t": "Write a function for pow(double a,int b)? Prepare floating point intricacies in java...", "k": ["write a function", "function for pow", "double a,int", "write", "pow"]}
{"i": "11719718", "t": "How to design a good hash function if the key is a person`s name", "k": ["good hash function", "design a good", "good hash", "hash function", "person"]}
{"i": "11728726", "t": "There are 10 boxes of apples. Each apple in the boxes weights 1 pound, except that one of the boxes contains bad apples, which weights 0.9 pound each. You are given a digital weight (not a scale), and you can take apples out of the boxes. what is the minimum time of weighs to find out which box has bad apples?\rI gave one solution of 3 times using divide and conquer, but the interviewer said that 1 step is possible. So I couldn`t come up with the solution.", "k": ["boxes", "apples", "bad apples", "boxes weights", "weights"]}
{"i": "11720667", "t": "Generate all possible unique 4 digit numbers such that no two adjacent numbers are the same and any number starting with 4 should end with a 4 . eg 1234 , 1232 are both correct but 1223 is not .", "k": ["digit numbers", "adjacent numbers", "number starting", "generate", "unique"]}
{"i": "11716673", "t": "Given an NxN matrix with unique integers : Find and print positions of all numbers such that it is the biggest in its row and also the smallest in its collumn . \r eg : In 3 x 3 with elements  \r 1   2    3\r4   5    6\r7   8    9 \r the number is 3 and position (2,2)", "k": ["find and print", "unique integers", "nxn matrix", "matrix with unique", "print positions"]}
{"i": "11726666", "t": "Print all the increasing subsequence from the given range 54782369862345 .. ex: 5,7,8,9; 4,7,8,9; 2,3,6,9 ..", "k": ["increasing subsequence", "print", "range", "increasing", "subsequence"]}
{"i": "11678818", "t": "What is Height balanced tree ?\r Difference between Red Black Tree and AVL Tree ?", "k": ["red black tree", "height balanced tree", "difference between red", "red black", "black tree"]}
{"i": "11685824", "t": "There are two arrays.\r int arr1[5] = { 3, 5, 2, 5, 2}\rint arr2[5] = { 2, 3, 5, 5, 2}\r The arrays will be called similar if they contain same number of elements equally.\r Write the pseudo code to check this ?\r I was not allowed to use sorting and hashtable.", "k": ["int", "arrays", "elements equally", "called similar", "number of elements"]}
{"i": "11670724", "t": "int a[10];\r\n\r\na[-1] = 20;where is 20 stored?\rI said this won't compile in C under normal circumstances, he agreed, and then said let's assume C allows this, what happens?? I said maybe then previous local variable of the function will get overwritten with this value.?? Nay insights?", "k": ["stored", "int", "normal circumstances", "nay insights", "previous local variable"]}
{"i": "11678745", "t": "char *p=NULL;\r\n\r\np = (char *) malloc(10);\r\np++;\r\nfree(p)'What happens, is there a leak?? are 10 bytes freed??\r I answered yes.", "k": ["bytes freed", "char", "null", "malloc", "free"]}
{"i": "11655778", "t": "Find the substring of length 3 which is present in the reverse order from the string.\rEx: if the string is abcdcba (cba is the reverse of abc) so we should return cba.\rAnd was asked to improve upon the complexity.", "k": ["find the substring", "substring of length", "reverse order", "reverse", "string"]}
{"i": "11641132", "t": "define a struct imitate ip_header as it is in a packet.\r actually, he wanted to see how i handle things with aren't a byte long or odd number of bytes long, like flags, ihl, version and all.\r what's the best struct to define a ip_header, and tcp header.", "k": ["struct imitate", "packet", "header", "define", "imitate"]}
{"i": "11546132", "t": "write a program to convert char *mac_address to int array.\reg mac_address =\"ab:cd:ef:12:34:56\" to\rresult= [ab, cd, ef, 12,34,56]\r I was able to do it, but wasn't sure, how do we store hex values in int array. i mean a[0]=a, will essentially be a[0]=10, can we store hex directly in array, so that when we do memcmp or something, we can directly compare hex against hex?\r Not sure if me making sense here, still let me know, if you have suggestions.", "k": ["write a program", "convert char", "int array", "program to convert", "array"]}
{"i": "11641125", "t": "Given a set of numbers [1-N] . Find the number of  subsets such that the sum of numbers in the subset is a prime number.", "k": ["prime number", "find the number", "find", "set of numbers", "sum of numbers"]}
{"i": "11640843", "t": "how to find a duplicate element in an array without using extra memory....do this in O(n)?", "k": ["extra memory", "find a duplicate", "duplicate element", "memory", "find"]}
{"i": "11561969", "t": "Given a doubly linked list containing only three integers 1,2,3. Sort the list without exchanging the values.\r Eg- 1->3->2->1->2->3->2->1->1\routput: 1->1->1->1->2->2->2->3->3", "k": ["doubly linked list", "doubly linked", "linked list", "list", "integers"]}
{"i": "11635902", "t": "Given a Binary tree where nodes may have positive or negative value, store the sum of the left and right subtree in the nodes.\r Eg-10\r\n   -2        6\r\n8    -4    7    5Output:20(-2+6+4+12)\r\n   4(8-4)    12(7+5)\r\n 0    0    0    0", "k": ["binary tree", "store the sum", "positive or negative", "tree where nodes", "binary"]}
{"i": "11543949", "t": "Given a number,find the next higher number using the same digits in the number. Eg- 15432, Soln- 21345.", "k": ["higher number", "number", "soln", "number,find", "higher"]}
{"i": "11556048", "t": "what is the difference web crawling and web scraping?", "k": ["difference web crawling", "web scraping", "difference web", "web crawling", "scraping"]}
{"i": "11635893", "t": "What is Web crawling?", "k": ["web crawling", "web", "crawling"]}
{"i": "11555907", "t": "What is the fastest way print output to STDOUT in Java?", "k": ["stdout in java", "output to stdout", "java", "fastest way print", "print output"]}
{"i": "11563914", "t": "Please tell the code of how to sort a singly linkedlist in C# or C++.", "k": ["sort a singly", "singly linkedlist", "code", "sort", "singly"]}
{"i": "11510713", "t": "given  an integer  find the next(smallest number greater than given number) integer which is palendrom\rfor ex  111   next palendrom 121\r        301   next palendrom 313", "k": ["smallest number greater", "smallest number", "integer find", "number greater", "palendrom"]}
{"i": "11503015", "t": "For a stream of insertions and deletions, recall that x[j] = #insertions - #deletions of element j.\rGiven such a stream satisfying x[j] >= 0 for all elements j, let\r A = { j : x[j] > 0 }\r Determining whether A is empty is easy: just check if the sum of all x[j]'s equals 0 (which is easily doable in a stream).\r Problem: devise a small memory streaming algorithm to determine if |A| = 1.\r Extensions: What about higher sizes of A? What if the promise is not satisfied and we define A to be the set of j's with x[j] not equal to 0.", "k": ["stream", "insertions", "deletions", "insertions and deletions", "stream satisfying"]}
{"i": "11503014", "t": "Algorithm to output for a length m of a number stream, the value of the element j appearing in the stream for which freq[j]>m/2 with space complexity O(1) and time complexity O(m). Dont need to worry about the case when there are no elements with freq > m/2.\r  The question in simpler terms: \rIn a collection of 'M' elements, some elements are repeated. Find the element which occurred at least M/2 times.", "k": ["algorithm to output", "space complexity", "number stream", "time complexity", "complexity"]}
{"i": "11623959", "t": "You have two arrays A and B of strings. In the array B all element are from A except one. ex:\rA = {\"abc\", \"bcd\", \"dpr\"}; \rB = {\"abc\", \"mnp\", \"bcd\", \"dpr\"};\rYou have find out the string which is extra in B in O(n) time.\rIn the above example it is \"mnp\".", "k": ["mnp", "abc", "bcd", "dpr", "arrays"]}
{"i": "11461909", "t": "There is a very Primitive Database and it has a table say \"Travel\". The content of table is as follows:\rSource | Dest\r--------------\rSea    |  LA\rLA     | FL\rLA     | MA\rFL     | Sea\rSea    | FL\r The ask is to find out all routes between (Sea) to (FL) with mininum hop.\rthe Result would be:\r1. Sea -> FL\r2. Sea -> LA - > FL\r You have to write a Middle tier function to achieve above result. You can assume there is DBAPI that return the Destination city if you provide the source city.", "k": ["primitive database", "travel", "sea", "primitive", "database"]}
{"i": "11524728", "t": "How to find out memory leak in a c/c++ program both static and dynamic memory leak.", "k": ["dynamic memory leak", "program both static", "memory leak", "static and dynamic", "dynamic memory"]}
{"i": "11556776", "t": "Give you a number N, print all valid combinations of ( and ). \re.g.N == 1, then print ()\r    N == 2, then print ()(), (())\r    N == 3, then print ()()(), (())(), ()(()), ((()))\r    N == ...", "k": ["valid combinations", "print", "give", "number", "valid"]}
{"i": "11553942", "t": "You are given a word and a dictionary. Now propose an algorithm edit\rthe word (insert / delete characters) minimally to get a word that\ralso exists in the dictionary. Cost of insertion and deletion is same.\rWrite pseudocode for it.\r Seems like minimum edit distance problem but some modification is\rneeded.", "k": ["word", "dictionary", "delete characters", "insert", "edit"]}
