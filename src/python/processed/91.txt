{"i": "5650014710792192", "t": "How do you reverse the words in a linked list?\rFor ex, Convert  \" H-e-l-l-o- -W-o-r-l-d \" (There is a space between the word), into \" o-l-l-e-H- -d-l-r-o-W \"\r Write a Java code to use as less Space Complexity as possible. (So not too many spaces should be used)\r Linked List Structure:class Node {\r\n\tchar val;\r\n\tNode next;\r\n}", "k": ["linked list structure", "linked list", "write a java", "reverse the words", "list structure"]}
{"i": "5731901886169088", "t": "Given a string, find the longest substring without repeating any character.", "k": ["find the longest", "repeating any character", "longest substring", "substring without repeating", "string"]}
{"i": "5160800084819968", "t": "[System Design] Design a mobile application to provide nearest parking lot locations and availability?", "k": ["provide nearest parking", "nearest parking lot", "parking lot locations", "system design", "locations and availability"]}
{"i": "5680668026601472", "t": "[System-Design] Design air traffic control system?", "k": ["design air traffic", "traffic control system", "design air", "air traffic control", "system-design"]}
{"i": "5672092990177280", "t": "Lazy Bartender :\r\n\r\nThere are N number of possible drinks.(n1,n2..)\r\nHas C number of fixed customers.\r\nEvery customer has fixed favourite set of drinks.\r\nBartender has to create least possible number of drinks\r\nto suffice need of all the customers\r\nExample:\r\nCust1: n3,n7,n5,n2,n9\r\nCust2: n5\r\nCust3: n2,n3\r\nCust4: n4\r\nCust5: n3,n4,n3,n5,n7,n4\r\n\r\nOutput: 3(n3,n4,n5)", "k": ["lazy bartender", "number", "lazy", "drinks.", "bartender"]}
{"i": "5674791169163264", "t": "You have N toffee packets, each containing different number of toffees. The number of toffees contained in the ith packet is denoted by ci. You need to put these toffee packets in M boxes such that each box contains at least one toffee packet, and the maximum number of toffees in a box is minimum.\rYou can only choose consecutive toffee packets to put in a box.\r Input\rThe first line of the input contains an integer T denoting the number of test cases. The first line of each test case contains two space separated integers N, M denoting the number of toffee packets and the number of boxes respectively. The second line of each test case contains N space separated integers c1, c2, ..., cN where ci denotes the number of the toffees in the ith toffee packet.\r Output\rFor each test case, output a single line containing the maximum number of toffees in a box. Also, output -1 if such an assignment of toffee packets to boxes is not possible.\r Constraints\r1 \u2264 T \u2264 20\r1 \u2264 N,K \u2264 100000\r1 \u2264 ci \u2264 1000\r Example\rInput:\r1\r4 2\r10 3 5 7\r Output:\r13\r Explanation\rBelow are the possible assignments of toffee packets to boxes.\r 10 [3 5 7]\r10 3 [5 7]\r10 3 5 [7]\rFor minimizing the maximum number of toffees in a box, we choose the second assignment, and hence the output should be 13", "k": ["toffee packets", "number", "toffee", "number of toffees", "toffees"]}
{"i": "5634244261969920", "t": "Amr bought a new video game \"Guess Your Way Out!\". The goal of the game is to find an exit from the maze that looks like a perfect binary tree of height h. The player is initially standing at the root of the tree and the exit from the tree is located at some leaf node.\r Let's index all the leaf nodes from the left to the right from 1 to 2^h. The exit is located at some node n where 1\u2009\u2264\u2009n\u2009\u2264\u20092^h, the player doesn't know where the exit is so he has to guess his way out!\r Amr follows simple algorithm to choose the path. Let's consider infinite command string \"LRLRLRLRL...\" (consisting of alternating characters 'L' and 'R'). Amr sequentially executes the characters of the string using following rules:\rCharacter 'L' means \"go to the left child of the current node\";\rCharacter 'R' means \"go to the right child of the current node\";\rIf the destination node is already visited, Amr skips current command, otherwise he moves to the destination node;\rIf Amr skipped two consecutive commands, he goes back to the parent of the current node\rbefore executing next command;\rIf he reached a leaf node that is not the exit, he returns to the parent of the current\rnode;\rIf he reaches an exit, the game is finished.\r Now Amr wonders, if he follows this algorithm, how many nodes he is going to visit before reaching the exit?\r Input\rFirst Line contains T the number of test cases\rThe next T lines contains 2 integers h,\u2009n\r Output\rOutput T lines each containing an integer representing the number of nodes (excluding the exit node) Amr is going to visit before reaching the exit by following this algorithm.\r Constraints\r1 \u2264 T \u2264 10\r1 \u2264 h \u2264 50\r1 \u2264 n \u2264 2^h\r Example\rInput:\r1\r2 2\r Output:\r2\r Explanation\rExample case 1. Amr would visit first root node then root->left node and then go to the root->left->right node which is the exit. hence 2 nodes visited before reaching the exit", "k": ["exit", "node", "amr", "current node", "reaching the exit"]}
{"i": "5715129502007296", "t": "You are walking down the escalator to catch a subway train. The escalator itself moves at a speed of Ve meters per minute. You can walk down the escalator at a relative speed of Vy meters per minute. The length of the escalator is L meters. Trains arrive T minutes apart. Let t be the time between your arrival to the station if you stand still on the escalator and the arrival of the last train before your arrival. Assume that t is a random variable uniformly distributed between 0 and T. Return the probability of catching an earlier train if you choose to walk down the escalator instead of standing still on it.\r Input :\rThe first line of the input contains an integer Tc denoting the number of test cases. Each test case contains the following 4 lines \rVe - velocity of escalator \rVy - your relative velocity with the escalator \rL - length of escalator \rT - Time Period of Trains \rOutput\rFor each test case, output a single line containing the expected probability having an absolute or relative error less than 10^-6.\r Constraints\r0 \u2264 Tc \u2264 5 * 10 ^ 7\r1 \u2264 Ve \u2264 1000\r1 \u2264 Vy \u2264 1000\r1 \u2264 L \u2264 10 ^ 5\r1 \u2264 T \u2264 10 ^ 6\r Example\rInput:\r2\r10\r10\r20\r2\r10\r10\r100\r4\r Output:\r0.5\r1.0\r Explanation\rExample case 1. If you stand still, it'll take you 20/10 = 2 minutes to reach the bottom of the escalator. If you choose to walk, it'll make you 20/(10+10) = 1 minute. In the second case you save 1 minute and in 50% of the cases it'll allow you to catch an earlier train.\rExample Case 2. Here, if you choose to walk instead of stand still, you will save 5 minutes and you will certainly be guaranteed to catch an earlier train.", "k": ["escalator", "train", "case", "earlier train", "minute"]}
{"i": "5700133086822400", "t": "number_one = \"193283492420348904832902348908239048823480823\"\rnumber_two = \"3248234890238902348823940990234\"\r Question:\r1) I need to multiply this and get the answer\r2) DO NOT CONVERT TO INT AND DO THE MULTIPLICATION", "k": ["convert to int", "number", "question", "multiplication", "convert"]}
{"i": "5656654864449536", "t": "I have two tables \rSupplier Table:\rSupp_id\rsupp_name\r Invoice Table:\rinv_id\rsupp_id\rinv_date\rinv_amt\rpayment_date\rpaid_amt\r I want to list the invoice(s) that have highest invoice_amt for the year 2016.  \r DO NOT USE MIN/MAX function", "k": ["tables supplier table", "tables supplier", "supplier table", "supp", "date paid"]}
{"i": "5749000687845376", "t": "Given transactions between group of friends. How to minimize the number of transactions by eliminating redundant cash flow paths?", "k": ["group of friends", "friends", "cash flow paths", "transactions", "transactions between group"]}
{"i": "5693402671742976", "t": "Need special expensive recommendations for article?\r Howdy I am research understudy. I need to complete my exposition composing paper. I need one of a kind substance. I know composing work is exceptionally muddled errand. Paper composing is vital for all understudies now a day's understudies look for expositions on the web. It will be give great expositions for scholastic work and Project works for understudies. So I completely look on online best article composing administration. It is giving incredible potential outcomes of composing papers.  Feel free to surf (https://www.collegepaperwritingservices.com)", "k": ["special expensive recommendations", "special expensive", "expensive recommendations", "composing", "understudies"]}
{"i": "5749108934443008", "t": "Need facilitate to start my discussion?", "k": ["start my discussion", "facilitate to start", "discussion", "facilitate", "start"]}
{"i": "5748104113422336", "t": "Write second most repeating word in a string\reg aaa bbb ccc aaa bbb aaa\ranswer  - bbb", "k": ["bbb aaa answer", "aaa bbb ccc", "bbb ccc aaa", "ccc aaa bbb", "aaa bbb aaa"]}
{"i": "4894109996154880", "t": "Design a service that keeps track of mobile users as they check in at different locations. This service will get informed of each check-in in real time (a user/location pair) and must be able to answer the following queries in real time:\r 1. Where is user U right now?\r2. What users are at location L right now?\r The following requirements apply:\r 1. A user can only be at one location at a time. If user U checks in at location X and then at location Y, they are no longer at location X.\r 2. A check-in only valid for at most 2 hours. If user U checks in at location X and then does nothing for 2 hours, they are no longer at location X.\r The service should have durable enough storage that you can restart it without losing all of your data It should not store everything in memory.\r what kind of DB will you use and how data will be organized and any indexes. If storage is spread out over multiple databases(locations), how is that done?\r scalability/availability consideration, how will be distribute multiple servers. what happens when the traffic goes 10x all of sudden. What happens if one of the server goes down.", "k": ["location", "track of mobile", "user", "real time", "service"]}
{"i": "5631403208212480", "t": "Design a suggestions list [system design] for words starting with prefix that user has typed on kindle device . The search is based on most frequent item occurring at the top to least frequent item at the bottom. Most frequent item depends on the usage of word globally. \r For e.g user types \"dra\" . There should be a list of suggestions starting with dra such as dragon, drape, dracula etc based on their frequency of usage.", "k": ["frequent item occurring", "frequent item", "kindle device", "system design", "typed on kindle"]}
{"i": "5128033577992192", "t": "Design a image slide show 1) put image method 2) get image 3) random method. Random method should return a list of images such that images should be in randomized order and no image should be displayed twice without exhausting all images at once. I used list to store images . I used random class to generate randomly generated images based on the interval {0,list.size()}. But he insist on using randomization without depending on the list size.", "k": ["image slide show", "put image method", "slide show", "random method", "put image"]}
{"i": "6301484879708160", "t": "Given a set of points in a plane, determine the position/angle where a yacht of 30 degree angle could be placed such that it could cover maximum points", "k": ["cover maximum points", "determine the position", "degree angle", "cover maximum", "maximum points"]}
{"i": "5712549635948544", "t": "Balance a string with parentheses. \"a(b)\" -> \"a(b)\"; \"(((((\" -> \"\"; \"(()())\" -> \"(()())\"; \")ab(()\" -> \"ab()\"; etc...", "k": ["balance a string", "string with parentheses", "balance", "parentheses", "string"]}
{"i": "5703540942045184", "t": "design an employee swap in swap out system.\rThe system will have a machine which records the swap in and swap out.\rThe user can also login in a portal where he can check his swap in /swap out time. He can correct his time also.\rThere will be managers for employee who can check the entry for all the employees which are under them and correct their subordinates timings also\rThere will be HR who can only view the entries for all the employees.\rWe have to come up with the HLD and LLD for the system", "k": ["swap", "system", "employee swap", "hld and lld", "design"]}
{"i": "5670428623241216", "t": "Make 100 HTTP GET requests to http://en.wikipedia.org/wiki/Main_Page and print the following statistics for the response time to stdout:\r \u2022 10th, 50th, 90th, 95th, 99th Percentile\r \u2022 Mean\r \u2022 Standard Deviation\r Your solution must be parallel. You must make at least N (say 10, but should be configurable). Use ExecutorService in Java for making the requests at a time.\r Explain design choices, known limitations and edge cases.\r What challenges did you face? How would you improve the code if you had more time?", "k": ["standard deviation", "deviation your solution", "percentile", "http get requests", "http"]}
{"i": "5681691772321792", "t": "Design an algorithm that provided your current location and a list of ATMs locations in the area, get you the closest K ATMs to your location. \rAssume you have a method getDistance(a, b) that calculates the distance between a and b. \r Follow Up: \rMake your solution O(k) space and O(n) time", "k": ["design an algorithm", "algorithm that provided", "provided your current", "current location", "atms locations"]}
{"i": "5732530092244992", "t": "Design an algorithm to find the shortest substring in a synopsis such that it contains all the words in a provided list. \r So, search for the shortest substring that contains ['Hello', 'World'].", "k": ["design an algorithm", "provided list", "shortest substring", "algorithm to find", "find the shortest"]}
{"i": "5737727539544064", "t": "Design a system for a parking lot where drivers can also have memberships (but also support guest drivers). The parking lot has counter screens on each row.", "k": ["support guest drivers", "design a system", "support guest", "parking lot", "guest drivers"]}
{"i": "5758206748917760", "t": "Design a message board system like Reddit were users can reply with messages on posted topics. How will you handle system scalability.", "k": ["reddit were users", "posted topics", "message board system", "users can reply", "message board"]}
{"i": "5710511673966592", "t": "Google full-time phD candidate w/ work experience.\r Q1. On a 1 meter walkroad, randomly generate rain. The raindrop is 1 centimeter wide.\rSimulate how raindrops cover the 1 meter [0~1] road. How many drops does it take to fully cover the 1meter?\r Q2. Find out the maximum number of isosceles triangles you can make from a plane of points(cannot reuse points)\r Q3.Longest holiday - Every city has a different days of holidays every week. You may only travel to another city at the weekends. What is the max days of holiday you can get this year.\r Q4.\rDesign merchandising product data storage service", "k": ["google full-time phd", "full-time phd candidate", "work experience", "google full-time", "full-time phd"]}
{"i": "4831609699172352", "t": "There is a tree of nodes . each node is of type either place, area name, city, district , state, country \r they are in tree like order like country contains multiple states ,states contain multiple cities ...so on \r i want define the node structure and define the strategy to print the address of any node given from parent to all the child address of the nodepackage com.girish.sample;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Node {\r\n\r\n\tprivate String name;\r\n\tprivate Node parent;\r\n\tprivate List<Node> childNodes;\r\n\tprivate String nodeType;\r\n\t\r\n\t\r\n\tpublic Node(String name,String nodeType){\r\n\t\tthis.name = name;\r\n\t\tthis.nodeType = nodeType;\r\n\t\r\n\t}\r\n\r\n\t/**\r\n\t * @return the name\r\n\t */\r\n\tpublic String getName() {\r\n\t\treturn name;\r\n\t}\r\n\r\n\t/**\r\n\t * @param name\r\n\t *            the name to set\r\n\t */\r\n\tpublic void setName(String name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the parent\r\n\t */\r\n\tpublic Node getParent() {\r\n\t\treturn parent;\r\n\t}\r\n\r\n\t/**\r\n\t * @param parent\r\n\t *            the parent to set\r\n\t */\r\n\tpublic void setParent(Node parent) {\r\n\t\tthis.parent = parent;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the childNodes\r\n\t */\r\n\tpublic List<Node> getChildNodes() {\r\n\t\treturn childNodes;\r\n\t}\r\n\r\n\t/**\r\n\t * @param childNodes\r\n\t *            the childNodes to set\r\n\t */\r\n\tpublic void setChildNodes(List<Node> childNodes) {\r\n\t\tthis.childNodes = childNodes;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the nodeType\r\n\t */\r\n\tpublic String getNodeType() {\r\n\t\treturn nodeType;\r\n\t}\r\n\r\n\t/**\r\n\t * @param nodeType\r\n\t *            the nodeType to set\r\n\t */\r\n\tpublic void setNodeType(String nodeType) {\r\n\t\tthis.nodeType = nodeType;\r\n\t}\r\n\r\n\tpublic String getAddress() {\r\n\t\treturn getparentAddress();\r\n\t}\r\n\r\n\tpublic String getparentAddress() {\r\n\t\tif (parent == null)\r\n\t\t\treturn \"\";\r\n\r\n\t\treturn parent.getparentAddress().concat(\",\" + this.nodeType + \": \" + this.name);\r\n\t}\r\n\r\n\tpublic List<String> getchildAddress() {\r\n\r\n\t\tList<String> childAddress = new ArrayList();\r\n\r\n\t\tfor (Node node : childNodes) {\r\n\r\n\t\t\tchildAddress.add(node.getchildAddress());\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n}", "k": ["public string getparentaddress", "public string getname", "public string getnodetype", "public string getaddress", "public node getparent"]}
{"i": "5750059061739520", "t": "Question regarding largest possible sum of subarray of size K.", "k": ["question regarding largest", "largest possible sum", "sum of subarray", "subarray of size", "question"]}
{"i": "5653470481743872", "t": "6   8   7\r3   64  4\r24 48  ?", "k": []}
{"i": "5734641202888704", "t": "producer consumer problem", "k": ["producer consumer problem", "producer consumer", "consumer problem", "producer", "problem"]}
