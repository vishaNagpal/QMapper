{"i": "13541661", "t": "An cellphone company provides service on 7 different frequencies. They have fixed the locations of 100 towers for their new service. The company has to ensure that two towers broadcasting on the same frequency are at least 100 km apart, so that there is no interference of signals. Describe an algorithm which will answer \u201cfeasible\u201d if it is feasible, otherwise output the minimum\rnumber of frequencies needed to utilise all 100 towers.", "k": ["cellphone company", "service", "towers", "cellphone", "company"]}
{"i": "13478680", "t": "Given an undirected graph. Each vertex has degree at most 5. Give an algorithm to find the largest clique in G. What will be the complexity ?\r Only designing idea will be sufficient.", "k": ["undirected graph", "graph", "undirected", "vertex has degree", "give an algorithm"]}
{"i": "13384669", "t": "Consider a plate stacked with several disks, each of a different diameter. We want to sort these disks in decreasing order according to their diameter so that the widest disk is at bottom of the pile. The only operation available for manipulating the disks is to pick up a stack of them from the top of the pile and invert that stack.\rGive an algorithm for sorting the disks using this operation.", "k": ["plate stacked", "disks", "diameter", "plate", "stacked"]}
{"i": "13534667", "t": "Write an algorithm to preprocess a list in O(n) time such we can find sum(i,j), i,j E A[ ] & i<j in O(1) time", "k": ["write an algorithm", "find sum", "algorithm to preprocess", "preprocess a list", "time"]}
{"i": "13450671", "t": "There are 1000 balls in a bag, of which 900 are black and 100 are white. I randomly draw 100 balls from the bag. What is the probability that the 101st ball will be black?\ra)9/10  b)More than 9/10 but less than 1  c)Less than 9/10but more than 0  d)0  e)1", "k": ["bag", "balls", "white", "black", "randomly draw"]}
{"i": "13438685", "t": "Amar and Akbar both tell the truth with probability 3/4 and lie with probability 1/4. Amar watches a test match and talks to Akbar about the outcome. Akbar, in turn, tells Anthony, \"Amar told me that India won\". What probability should Anthony assign to India's win?\ra)9/16  b)6/16  c)7/16  d)10/16  e)None of the above", "k": ["amar", "akbar", "amar watches", "probability", "anthony"]}
{"i": "13463679", "t": "Implement a LRU Cache. 1st tell pseudo code then write clean code.", "k": ["lru cache", "implement a lru", "cache", "lru", "implement"]}
{"i": "13529661", "t": "Implement JAVA code which takes 2 dimensional integer array as input and prints out heaviest island.", "k": ["implement java code", "dimensional integer array", "implement java", "java code", "dimensional integer"]}
{"i": "13373665", "t": "Write a code that will check whether the memory allotted to the program at the initial and the memory returned to the system is same or not.", "k": ["write a code", "memory allotted", "memory returned", "memory", "write"]}
{"i": "13526661", "t": "write a function\r int dominator(const vector<int> &A);\r that, given a zero-indexed array A consisting of N integers, returns index of any element of array A in which the dominator of A occurs. The function should return -1 if array A does not have a dominator.\r Assume that:\rN is an integer within the range [0..1,000,000];\reach element of array A is an integer within the range [-2,147,483,648..2,147,483,647].\r For example, given array A such that\r A[0] = 3    A[1] = 4    A[2] =  3 A[3] = 2    A[4] = 3    A[5] = -1 A[6] = 3    A[7] = 3\r the function may return 0, 2, 4, 6 or 7, as explained above.\r Complexity:\r expected worst-case time complexity is O(N);\rexpected worst-case space complexity is O(1), beyond input storage (not counting the storage required for input arguments).", "k": ["function int dominator", "const vector", "int dominator", "function int", "zero-indexed array"]}
{"i": "13441690", "t": "time consuming of removing space from a string.", "k": ["time consuming", "consuming of removing", "removing space", "time", "string"]}
{"i": "13517670", "t": "remove spaces when they occur more than one time consecutively in string.#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#define SPACE ' '\r\n \r\nmain()\r\n{\r\n   char string[100], *blank, *start;\r\n   int length, c = 0, d = 0;\r\n \r\n   printf(\"Enter a string\\n\");\r\n   gets(string);\r\n \r\n   length = strlen(string);\r\n \r\n   blank = string;\r\n \r\n   start = (char*)malloc(length+1);\r\n \r\n   if ( start == NULL )\r\n      exit(EXIT_FAILURE);\r\n \r\n   while(*(blank+c))\r\n   {\r\n      if ( *(blank+c) == SPACE && *(blank+c+1) == SPACE )\r\n      {}\r\n      else\r\n      {\r\n         *(start+d) = *(blank+c);\r\n\t d++;\r\n      }\r\n      c++;\r\n   }\r\n   *(start+d)='\\0';\r\n \r\n   printf(\"%s\\n\", start);\r\n \r\n   free(start);     \r\n \r\n   return 0;", "k": ["start", "blank", "remove spaces", "define space", "int length"]}
{"i": "13448677", "t": "Implement a bi-directional map in Java. Given a key, map should return corresponding value and given a value, it should return the key.", "k": ["implement a bi-directional", "map in java", "java", "bi-directional map", "implement"]}
{"i": "13382675", "t": "Given a BST, convert it so that each node has value equal to sum of all the nodes (including itself) which are greater than that node in the whole tree.", "k": ["equal to sum", "bst", "convert", "including", "tree"]}
{"i": "13424679", "t": "You are given a string of \u2018n\u2019 characters where n is even. The string only consist of 6 type of characters: (){}[]. The task is to form a well formed expression. A well formed expression consist of proper nesting of braces and their is no priority between the braces like [ > } > ). You can edit any bracket and change it to remaining types for accomplishing the task.\rExample\rA. \"(){}\" is valid\rB. \"({[]})\u201d is valid\rC. \u201c((})\u201d is invalid", "k": ["formed expression", "string", "characters", "formed expression consist", "formed"]}
{"i": "13507662", "t": "Given an array having positive integers, find a continous subarray which adds to a given number.", "k": ["positive integers", "find a continous", "array having positive", "continous subarray", "subarray which adds"]}
{"i": "13467664", "t": "A log of wood has n marks on it. Cost of cutting wood at a particular mark is proportional to the length of the log. The log of wood can be cut at all the marks. Find the optimal order of the marks where the log should be cut in order to minimize the total cost of cutting.", "k": ["log", "wood", "cost of cutting", "marks", "log of wood"]}
{"i": "13451670", "t": "What is the output of:main ()\r\n{\r\n printf(\"%x\", -1<<4);\r\n}", "k": ["main", "printf", "output"]}
{"i": "13361668", "t": "What does the following program do ?\r main ()\r{\r unsigned int num ;\r int i ;\r scanf(\"%u \", &num);\r for(i=0;i<16;1++)\r printf(\"%d\",(num<<i & 1<<15) ? 1:0);\r}\r  A. print all even bits from num\rB. print all odd bits from num \rC. prints binary equivalent of num", "k": ["prints binary equivalent", "unsigned int num", "unsigned int", "binary equivalent", "odd bits"]}
{"i": "13438679", "t": "Are all the system calls interfaced in glibc ?", "k": ["system calls interfaced", "interfaced in glibc", "system calls", "calls interfaced", "glibc"]}
{"i": "13463676", "t": "What are the steps in a core generation after a panic is hit ? What all does a core contain, basically what all data, segments you can access.", "k": ["panic is hit", "core generation", "core", "hit", "basically"]}
{"i": "13503661", "t": "You are given a positive integer A. The goal is to construct the shortest possible sequence of integers ending with A, using the following rules:\r the first element of the sequence is 1,\reach of the successive elements is the sum of any two preceding elements (adding a single element to itself is also permissible),\reach element is larger than all the preceding elements; that is, the sequence is increasing.\r For example, for A = 42, a possible solutions is [1, 2, 3, 6, 12, 24, 30, 42]. Another possible solution is [1, 2, 4, 5, 8, 16, 21, 42].", "k": ["positive integer", "preceding elements", "sequence", "element", "elements"]}
{"i": "13379664", "t": "You are given a positive integer A. The goal is to construct the shortest possible sequence of integers ending with A, using the following rules:\r the first element of the sequence is 1,\reach of the successive elements is the sum of any two preceding elements (adding a single element to itself is also permissible),\reach element is larger than all the preceding elements; that is, the sequence is increasing.\r For example, for A = 42, a possible solutions is [1, 2, 3, 6, 12, 24, 30, 42]. Another possible solution is [1, 2, 4, 5, 8, 16, 21, 42].", "k": ["positive integer", "preceding elements", "sequence", "element", "elements"]}
{"i": "13379663", "t": "Write code to remove a node from a linked list. Choose the node which would be most efficient to remove.\rHint: Head node.", "k": ["write code", "linked list", "code to remove", "write", "list"]}
{"i": "13383685", "t": "Reverse an array without using iteration.\rHint: Recursion.", "k": ["reverse an array", "recursion", "hint", "reverse", "iteration"]}
{"i": "13443673", "t": "Write functions for insertion and deletion in a circular queue implemented using an array in C.\rHint: Remove the node from the end.\rAdd a node in the front. Move the pointer for removal and insertion. Pointer is just a counter for the index. Modulus it by size of array so that it circles from 0-n.\rWhen pointers match , array is full.", "k": ["circular queue implemented", "write functions", "circular queue", "queue implemented", "write"]}
{"i": "13499672", "t": "Given an array of integers, return the first integer which occurs only once in O(n).", "k": ["return", "array of integers", "integer which occurs", "array", "occurs"]}
{"i": "13499670", "t": "Is singleton a class level OR JVM level implementation?", "k": ["jvm level implementation", "jvm level", "level implementation", "singleton a class", "class level"]}
{"i": "13437690", "t": "Is singleton a class level OR JVM level implementation?", "k": ["jvm level implementation", "jvm level", "level implementation", "singleton a class", "class level"]}
{"i": "13499669", "t": "If my hashcode() method returns zero will it compile, run or throw error?\rIs it good practice for hashcode() method returns zero?", "k": ["method returns", "run or throw", "throw error", "method", "hashcode"]}
