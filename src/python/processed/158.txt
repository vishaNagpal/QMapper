{"i": "5147773542334464", "t": "Generate all possible sorted arrays from alternate elements of two given sorted arrays.\r Given two sorted arrays A and B, generate all possible arrays such that once first element is taken from A then from B then from A and so on in increasing order till the arrays exhausted. Then first element is taken from B then From A, and do same as above.", "k": ["sorted arrays", "arrays", "alternate elements", "sorted", "generate"]}
{"i": "5157571436478464", "t": "Given a tree and   a number N, construct another tree such that each node of the tree has either 0 or N elements,except for one node which has between 0 to N elements.Only other constraint is that ancestry is preserved in the new tree.", "k": ["elements.only other constraint", "ancestry is preserved", "tree", "node", "construct another tree"]}
{"i": "5737855072600064", "t": "There are five classes having inheritance a,b,c,d,e. We have to solve an equation with all the possible methods defined in the above classes.We have multiply(), add(),subtract() and divide() methods in the above classes.", "k": ["classes having inheritance", "inheritance", "classes.we have multiply", "classes", "add"]}
{"i": "5116908397395968", "t": "There are n persons and k different type of dishes. Each person has some preference for each dish. Either he likes it or not. We need to feed all people. Every person should get atleast one dish of his chioce. What is the minimum number of different type of dishes we can order?\r Input is n x k matrix boolean matrix.For each person a row represent his likes or not likes each row.\r n = 6 k = 7\r1 0 0 0 1 0 0\r1 0 0 0 0 1 0\r1 0 0 0 0 0 1\r0 1 0 0 1 0 0\r0 0 1 0 0 1 0\r0 0 0 1 0 0 1\r Output \r3\r Explanation\rTake dish number 5,6,7.", "k": ["type of dishes", "person", "dish", "type", "dishes"]}
{"i": "5733795254763520", "t": "Model a restaurant reservation system, where staff can a reservation, pull up, cancel reservations. The reservation system is very simple local to just one terminal at the restaurant not connected to network.", "k": ["restaurant reservation system", "cancel reservations", "reservation system", "model a restaurant", "reservation"]}
{"i": "5657447916109824", "t": "Find an algorithm to find a word ladder between 2 words by changing just one letter at a time. All the words formed should be valid dictionary words.\rEg. \rFOOL ->POOL->POLL->POLE->PALE->SALE->SAGE\rCOLD \u2192 CORD \u2192 CARD \u2192 WARD \u2192 WARM", "k": ["sage cold", "word ladder", "algorithm to find", "find an algorithm", "find"]}
{"i": "5149445358354432", "t": "Maga gives a hard problem to Alex. And Alex couldn't solve yet. Could you help him?\r The grid is n by m. Each cell contains a unique number on it. Maga is at the left-top and wants to go to right-bottom. But there is a condition. Maga can go through only two way - right and down. And the path of your move is called the nodes you have passed through over them. The path is called the most beautiful if the following condition is satisfied: The sorted of the path has to be lexicographic smallest as possible as. Output the most beautiful path for given grid.\r Input:\rIn the first line you are given two numbers: the dimensions of grid - n and m. The next n lines contains m numbers. Each number is unique.\r Output:\rOutput the most beautiful path.\r Contraints:\r1 <= n,m <= 1000\r1 <= A[i][j] <= n*m, All of the numbers in the grid are unique.\r  Sample Input\r2 2\r4 2\r3 1\r Sample Output\r1 2 4\r Explanation\rThere are 2 ways to reach at (2,2) cell. The pathes are 4, 3, 1 or 4, 2, 1 respectively. So The most beautiful of them is 4, 2, 1 because if looking the sorted of them it looks like these : 1, 3, 4 and 1, 2, 4 respectively. So 1, 2, 4 is lexicographic smaller than the other. So the ans is 1 2 4.", "k": ["hard problem", "alex", "problem to alex", "path", "output"]}
{"i": "5157641867231232", "t": "Little Chandan is a friend everyone feels lucky to have. He is a happy-go-lucky-fellow and makes sure that everyone around him is happy. But recently, he came to know that his friend little Arjit is in serious trouble, and needs help. Like the great friend little Chandan is, he took the challenge upon himself without any serious thought, to make sure that little Arjit feels fine.\r Now, little Arjit explains the story of his problems (His life, in general!) to let little Chandan figure out his troubles. After all, everyone needs help. All little Arjit needs is to get an internship somewhere, and complete his dual degree course, somehow, anyhow.\r Little Chandan being the great genius man with psychic power decides to enter the brain of his friend to help him out.\r Here are the contents of little Arjit's brain:\r- His goals. (Internship, dual degree, remember?) - what Chandan needs to free. - Predictable empty spaces in his brain - plain empty spaces. - Ex-girlfriends and their memories - which CANNOT be penetrated, while traversing. - Windows which lead to the goal - which need to be open for little Chandan to pass.\r Little Chandan knows the location of the two goals in his brain, the problem is while traveling through the path of his brain he'll have to break down the windows - once he has opened a window to cross that path, it remains open forever. So, he wants to minimize the number of windows he opens inside his friend's mind.\r Help him plan his path accordingly, so he ends up breaking the minimum number of windows!\r Input Format:\r- First line contains a number t, denoting the number of test cases.\r- Every test case will have the following:\r- One line with two integers hm, wm - determining the width of the brain and the height of the brain.\r The following characters define the state:\r- X is the space which cannot be penetrated filled by the memories of ex-girlfriends. - W is the windows which little Chandan need to cross to reach the goal. - . is an empty space in the brain. - G are the two goals to be rescued.\r Output Format:\r1. Minimum number of windows Chandan needs to open to get to both the goals in Arjit's mind.\r Constraints:\r1 <= t <= 100\r2 <= hm, wm <= 100\r There are EXACTLY two goals in his mind.\rFor each goal, a path from the outside to that goal is surely going to exist.\rChandan can move around freely outside the mind.\r   Sample Input\r1\r5 9\rXXXXWXXXX\rX..W.W..X\rXXXX.XXXX\rXGW.W.WGX\rXXXXXXXXX\r Sample Output\r4", "k": ["chandan", "arjit", "brain", "windows", "friend"]}
{"i": "5714792977268736", "t": "Write an algorithm to create tables of a given set of players (i.e divide the players into groups) for a game in the following manner. Each table will have 6 players. Total number of players will be a multiple of 6. There are some conditions that must be fulfilled to decide which player takes which table. These conditions are defined later and requires some definitions that we will look into first.\r 'Distance' between the players:\rSince these players have been playing with each other in the past, we have history (available in a data set) about who played with whom in the past. Using this player game history we can plot a graph of players where each player is a node in the graph. A player is connected to another player if they have played on the same table in the past. In such a case distance between them is 1. \r For example: If Pi and Pj have played on the same table in the past then they are connected with each other and 'Distance' between Pi and Pj is 1. Distance between any 2 players is defined as length of the shortest path between 2 players. If 2 players are not connected then distance between them is same as maximum of distance between any 2 players + 1\r Degree of separation of a table\rDegree of separation of a table is defined as sum of (Distances of all players taken 2 at a time)\rExample: For a table of 6 players: Degree of separation = Sum of all 15 distances (6 choose 2)\r The condition on table formation is:\rWe have to create tables (i.e divide the players into groups) such that Sum of (degree of separation of all the tables) is minimum.\r The constraints on data size:\rNumber of history records is upto 100M records\rNumber of unique players in history upto 200K\rNumber of tables possible in the solution is upto 1K", "k": ["players", "table", "distance", "degree of separation", "number"]}
{"i": "6209512006483968", "t": "write a program how many squares in chessboard ?", "k": ["write a program", "squares in chessboard", "write", "chessboard", "program"]}
{"i": "5723171921592320", "t": "Write program to print the value of the second last node in a single linked list and write the test cases (code to test) for the same .", "k": ["single linked list", "test cases", "program to print", "single linked", "linked list"]}
{"i": "5199975111720960", "t": "Write test data to check the e-mail id field\re.g:- abc@xmail.com", "k": ["write test data", "write test", "test data", "data to check", "check the e-mail"]}
{"i": "5137832303656960", "t": "Enumerate test cases for testing an online payment using credit card for a purchase done through mobile app.Test cases should have description and expected result", "k": ["enumerate test cases", "mobile app.test cases", "enumerate test", "expected result", "testing an online"]}
{"i": "5692441162153984", "t": "How would you debug the following case\rYour phone gets switched off every time you click on the alarm icon", "k": ["alarm icon", "case your phone", "phone gets switched", "time you click", "icon"]}
{"i": "5694329337151488", "t": "Write program for the following case\rReverse string (string is stored in an array)\rInput:- \"This is an example\"\rOutput:-sihT si na elpmaxe", "k": ["case reverse string", "case reverse", "write program", "reverse string", "input"]}
{"i": "5697297964859392", "t": "Write program for the following scenario\rInput Array :- {1,2,3,4,5,5,5,6,7,7}\rOutput:- 5 is repeated 3 times\r              7 is repeated 2 times", "k": ["scenario input array", "input array", "scenario input", "times", "write program"]}
{"i": "5658483003228160", "t": "Write code for square root function? Basic Math Square Root. (Discuss your solution first with the interviewer then code while interviewer was watching over online)", "k": ["square root function", "math square root", "square root", "basic math square", "root function"]}
{"i": "5121890190360576", "t": "Samu's Birthday is near so she had started planning a party for all of her friends. Being a kind and caring girl she calls each of her friend and asks for his/her favorite dish.Now each friend has own liking/disliking for different dishes.\r A friend can only like or dislike a dish it means if we are having three dishes 1,2,3 then if a friend says that he likes Dishes 1 and 2 then its obvious that he dislikes Dish 3. So for each friend we are given a string of 1 and 0 where 1 shows that this person like this particular dish.\r Now we are given that Samu has\u00a0N\u00a0friends and total of\u00a0K\u00a0dishes available to make her menu. Now Samu doesn't want to make any of her friend unhappy , After all its her birthday.\r So she got confused on what dishes to count in menu and calls you for help. You need to find count of minimum dishes to order so that all of her N friends are happy which means everyone has at least one dish to eat in party.\r Note : Its for sure that everyone has at least liking for one dish.\r Input :\u00a0Input will contain T test cases and each of the test case has following description :\r First line of test case has N denoting the total number of friends and K denoting the total number of dishes available.Both separated by a space (Dishes are numbered from 1 to K) .\r Then it is followed by N lines each of length K . Each of the N lines contains a string of 0 and 1 where if jth (1<=j<=K) value in ith line (1<=i<=N) is set 1 then it shows that dish", "k": ["dishes", "started planning", "friend", "dish", "friends"]}
{"i": "5741482172481536", "t": "how would you design a microwave for the blind?", "k": ["design a microwave", "blind", "design", "microwave"]}
{"i": "6181202803294208", "t": "How would you increase Youtube revenue?", "k": ["increase youtube revenue", "youtube revenue", "increase youtube", "youtube", "revenue"]}
{"i": "5753438019256320", "t": "How much is Youtube Revenue", "k": ["youtube revenue", "revenue", "youtube"]}
{"i": "5749266532270080", "t": "2. There is a maze of size n*n. Tom is sitting at (0,0). Jerry is sitting in another cell (the position of Jerry is input). Then there are k pieces of cheese placed in k different cells (k <= 10). Some cells are blocked while some are not. Tom can move to 4 cells at any point of time (left, right, up, down one position). Tom has to collect all the pieces of cheese and then reach to Jerry\u2019s cell. You need to print the minimum no. of steps required to do so. \r  I know it is possible throgh dp but please provide me solution with approoch i am unable to solve it please", "k": ["jerry", "tom", "cells", "sitting", "pieces"]}
{"i": "5191526374178816", "t": "Write a program in that determines the members and parents of nested groups without using recursion.\r These are the requirements.\r 1. A group can have 0 or more members.\r2. A group can be member of one or more groups\r3. A group can be member of itself.\r4. If there is a path from a group either directly or through multiple hops, then that user is considered as member of the group.\r5. A group can have users or groups as members\r EX: Input looks like thisvar groupMembers = new Dictionary<string, HashSet<string>>\r\n            {\r\n                {  \"G4\", new HashSet<string> { \"U1\",\"G1\"} },\r\n                {  \"G1\", new HashSet<string> { \"G2\",\"G3\",\"G6\"} },\r\n                {  \"G3\", new HashSet<string> { \"G3\",\"G5\"} },\r\n                {  \"G2\", new HashSet<string> { \"G4\",\"U2\"} },\r\n                {  \"G5\", new HashSet<string> { \"U2\",\"G6\"} },\r\n                {  \"G6\", new HashSet<string> { \"U3\"} },\r\n            };Signature of function is:private List<MyGroup> FindMembers(Dictionary<string, HashSet<string>> groupMembers)You need to make sure that you take care of cycles in the graph and not go into infinite recursion.\r Output should look like a list of groups where a group is as follows.private class MyGroup\r\n    {\r\n        public string Identity { get; set; }\r\n\r\n        public Dictionary<string, MyGroup> MemberOf { get; set; }\r\n\r\n        public Dictionary<string, MyGroup> Members { get; set; }\r\n\r\n        public HashSet<string> Users { get; set; }\r\n\r\n        public MyGroup(string name)\r\n        {\r\n            this.Identity = name;\r\n            this.MemberOf = new Dictionary<string, MyGroup>();\r\n            this.Members = new Dictionary<string, MyGroup>();\r\n            this.Users = new HashSet<string>();\r\n        }\r\n}Each group object should contain all the groups it's a memberOf (directly or indirectly), all the groups that are it's members (directly or indirectly) and all users that are it's members.", "k": ["hashset", "dictionary", "string", "group", "members"]}
{"i": "5669891241672704", "t": "You have a farm of 400m * 600m where coordinates of the field are from (0, 0) to (399, 599). Some part of the farm is barren. All the barren land is in form of rectangles. Due to these rectangles of barren land, the remaining area of fertile land is present in form of holes in the farm. Each hole is a maximal area of land that is not covered by any of the rectangles of barren land.\r Input\rYou are given a set of rectangles that contain the barren land. Each String in rectangles consist of four integers separated by single spaces, with no additional spaces in the string. The first two integers are the coordinates of the bottom left corner in the given rectangle, and the last two integers are the coordinates of its top right corner.\r Output\rOutput all the holes\u2019s area in square meters, sorted from smallest area to greatest, separate by space.\r Sample Input/ Output\rSample Input\tSample Output\r{\u201c0 292 399 307\u201d}\t116800    116800\r {\u201c48 192 351 207\u201d, \u201c48 392 351 407\u201d, \u201c120 52 135 547\u201d, \u201c260 52 275 547\u201d}\r\t22816    192608\r   Deliverables \u2013 the code below or similar structure\rimport java.io.*;\rpublic class Solution { public static void main(String args[] ) throws Exception { /* Enter your code here. ead input from STDIN. Print output to STDOUT */   }}", "k": ["barren land", "land", "barren", "output", "rectangles"]}
{"i": "5153273919045632", "t": "Design a game like angry birds", "k": ["design a game", "angry birds", "game like angry", "design", "birds"]}
{"i": "5656411218378752", "t": "Check if the given cordinates on a map correspond to the correct address (where address or cordinates are provided in a tab separated file)", "k": ["tab separated file", "separated file", "map correspond", "tab separated", "correct address"]}
{"i": "5663098348240896", "t": "Reverse string except spaces. A string has mix of alphabets and spaces. Your task is to reverse the string, but preserve the positions of spaces. For example, reverse of \" a if\" is \" f ia\".", "k": ["spaces", "string", "reverse", "mix of alphabets", "mix"]}
{"i": "5691946704044032", "t": "You have a farm of 400m * 600m where coordinates of the field are from (0, 0) to (399, 599). Some part of the farm is barren. All the barren land is in form of rectangles. Due to these rectangles of barren land, the remaining area of fertile land is present in form of holes in the farm. Each hole is a maximal area of land that is not covered by any of the rectangles of barren land.\r Input\rYou are given a set of rectangles that contain the barren land. Each String in rectangles consist of four integers separated by single spaces, with no additional spaces in the string. The first two integers are the coordinates of the bottom left corner in the given rectangle, and the last two integers are the coordinates of its top right corner.\r Output\rOutput all the holes\u2019s area in square meters, sorted from smallest area to greatest, separate by space.\r Sample Input/ Output\rSample Input\tSample Output\r{\u201c0 292 399 307\u201d}\t116800    116800\r {\u201c48 192 351 207\u201d, \u201c48 392 351 407\u201d, \u201c120 52 135 547\u201d, \u201c260 52 275 547\u201d}\r\t22816    192608\r   Deliverables \u2013 the code below or similar structure\rimport java.io.*;\rpublic class Solution {\r    public static void main(String args[] ) throws Exception {\r        /* Enter your code here. Read input from STDIN. Print output to STDOUT */\r    }\r}", "k": ["barren land", "land", "barren", "output", "rectangles"]}
{"i": "5736260834426880", "t": "Implement hashtable put function in C++ without using STL stuff.", "k": ["implement hashtable put", "stl stuff", "hashtable put function", "implement hashtable", "hashtable put"]}
{"i": "5661985280622592", "t": "LOOKING FOR IAS TOPPERS PERSONAL INTERVIEW QUESTION AND ANSWERS", "k": ["ias toppers personal", "toppers personal interview", "personal interview question", "question and answers", "ias toppers"]}
