{"i": "10073470", "t": "Write an algorithm to find the first non-repeated character in a string using O(1) space and O(n) time. you can only use 1 bit space for each character.", "k": ["write an algorithm", "algorithm to find", "time", "non-repeated character", "write"]}
{"i": "10073341", "t": "When people search at Google, they often type two words without space. For example, instead of typing \"binary tree\", someone can type \"binarytree\". Given an input, what is a good way of finding if it is a combination of two valid words?", "k": ["search at google", "people search", "google", "words without space", "space"]}
{"i": "10073313", "t": "find the intersection point of 2 linked list (without hashing at a lesser complexity preferably O(m+n))....\r..(the 2 nodes from the seperate lists point to a same node from which the list continues as a single list)", "k": ["lesser complexity preferably", "find the intersection", "lesser complexity", "complexity preferably", "linked list"]}
{"i": "10073213", "t": "what is \"type equivalence\" and \"structure equivalence\"? how  does C support both of them?", "k": ["type equivalence", "structure equivalence", "equivalence", "type", "structure"]}
{"i": "10071148", "t": "can someone explain me native file system(NFS)???..", "k": ["native file system", "nfs", "file system", "explain me native", "native file"]}
{"i": "10072145", "t": "three points are randomly chosen on a circle.what the probability that\r1.triangle formed is right angled triangle.\r2.triangle formed is acute angled triangle.\r3.triangle formed is obtuse angled triangle.", "k": ["angled triangle", "formed", "triangle", "points are randomly", "randomly chosen"]}
{"i": "10071104", "t": "given a set of letters and a length N, produce all possible output.(Not permutation).  For example, give the letter (p,o) and length of 3, produce the following output(in any order you want, not just my example order)\r ppp ppo poo pop opp opo oop ooo\r another example would be given (a,b) and length 2\r answer: ab aa bb ba", "k": ["produce", "length", "ppp ppo poo", "output.", "permutation"]}
{"i": "10033215", "t": "how can we calculate the time complexity of recursive problems??", "k": ["recursive problems", "calculate the time", "time complexity", "complexity of recursive", "problems"]}
{"i": "9994080", "t": "I am having online test for Amazon SDE can anyone help ??", "k": ["amazon sde", "test for amazon", "online test", "amazon", "sde"]}
{"i": "10072832", "t": "design a data structure that can do all four operationm in O(1) e.g. constant time \r 1.insert()\r2.delete(0\r3.search()\r4.random() this generate only that random number that are inserted in data structure & it has be in O(1)", "k": ["constant time", "data structure", "random number", "design a data", "inserted in data"]}
{"i": "10000827", "t": "how to copy passwords from  gtalk box", "k": ["gtalk box", "copy passwords", "passwords from gtalk", "box", "copy"]}
{"i": "9994054", "t": "how to write test cases for backspace", "k": ["write test cases", "cases for backspace", "write test", "test cases", "backspace"]}
{"i": "10060840", "t": "Let's say you have a phrase without any spaces - eg. \"thisisawesome\".  Given a dictionary, how would you add spaces in this string?", "k": ["thisisawesome", "spaces", "phrase", "add spaces", "dictionary"]}
{"i": "10059669", "t": "1- reverse a pair of elements in a linked list. abcd - badc\r2 - find 3rd largest in an array in single pass\r3 - check  if a tree is symmetrical", "k": ["reverse a pair", "linked list", "pair of elements", "reverse", "list"]}
{"i": "10014684", "t": "Given a Binary Tree ( Comprising of +ve & -ve numbers ), represent each node of the tree with sum of its LeftSubTree & RightSubTree \r For Example :- \r       10         |          20\r   -2   6       |         4   12\r  8 -4 7  5     |        8 -4 7 5", "k": ["binary tree", "represent each node", "tree with sum", "comprising", "tree"]}
{"i": "10014683", "t": "Given a Doubly Linked List comprising of 1,2,3 nodes only. Write Code to Sort it.", "k": ["doubly linked list", "linked list comprising", "doubly linked", "linked list", "list comprising"]}
{"i": "10043202", "t": "Given a Binary Tree, Convert it into Doubly Linked List where the nodes are represented Spirally. \r For Example :- \r        A \r     B  C      ----> ABCGED || ACBDEG\r   D  E   G", "k": ["doubly linked list", "binary tree", "doubly linked", "linked list", "represented spirally"]}
{"i": "10033132", "t": "Print triplets that sum to 0 in an  integers array", "k": ["print triplets", "integers array", "triplets that sum", "print", "array"]}
{"i": "10045098", "t": "Round 4 :\r1)Why Amazon?\r2)Talk about any software related work of yours that you are really proud of.\r3)Weakness & Working on getting out of it.\r4)Given a preorder traversal construct a binary search tree. Time complexity of average case in particular. Since I said binary search \rcan be applied, I was asked about using that algorithm and find if the time complexity has improved.\rAnd of course, the last question- Any Questions?", "k": ["amazon", "round", "software related work", "binary search", "talk"]}
{"i": "10044087", "t": "Round 3 :  Coding Skills .\rTell me about yourself.\rExplain any of your projects\r1) You are given a singly linked list. On seeing a node, if it has a node with greater value than itself on its right delete it. Return the head of the result singly linked list.\r 2) Find the maximum sum subsequence in an array with positive nos such that no two nos are adjacent.\rShould explain code, write the code with base conditions properly, and give all possible test cases.", "k": ["coding skills", "singly linked list", "coding", "skills", "linked list"]}
{"i": "10034077", "t": "Round 2 : Problem solving skills\rTell me about yourself.\r1) Design an API for this scenario. There is a one time input of a set of data. The user works on a interface that has two options-\ra) Find(x) which returns x if found.\rb) Findkthmin()\rThis interface is used several hundred times a day. Describe the data structure& algorithm that you will use.\r 2) What is a stack- what is the time complexity of push()&pop(). Define another operation findmin() on the stack efficiently.\r 3) Given a rectangle of dimensions b*h, and a input no N, find the size(side length) a such that N squares of size a can fit into the rectange. Optimize based on the minimum wasted of space in the rectangle b*h \rWas not asked to write the code, only the  algorithm.", "k": ["problem solving skills", "problem solving", "solving skills", "design an api", "problem"]}
{"i": "10042085", "t": "Thanks to careercup that gave me an exposure to amazon qns. My interview experience.\r1st was an online round for 90 mins- 2 sections each with a min cut off for selection.\r Section 1 : 20 multiple choice qns.\rSection 2 : coding- There was a compile &test option, after ensuring that the code really works,we can submit!\ra)How will you add two nos represented as a singly linked list ( 2->9->1->7+5->1->7= 3->4->3->4 )\rb) reverse a doubly linked list", "k": ["careercup that gave", "exposure to amazon", "amazon qns", "linked list", "qns"]}
{"i": "9968683", "t": "eBay coding interview question really sucks and unreasonable. After I finished it, I realized that it was in the Internet. Which means if you google the question well, you can finish in 10 min. This cannot tell your coding skill at all. It tests your googling skill.", "k": ["ebay coding interview", "sucks and unreasonable", "ebay coding", "coding interview question", "interview question"]}
{"i": "9960240", "t": "Given  N pens and n caps . Sort them. you cant compare pens with other pens and caps with other caps", "k": ["sort", "pens", "caps", "compare pens", "compare"]}
{"i": "10033006", "t": "let f(n, k) be the # of ways of choosing k integers without replacement from\rn consecutive integers so that no two selected are consecutive.\r a. give a recurrence for f(n, k)\r b. efficient implementation of f(n, k)", "k": ["selected are consecutive.", "consecutive. a. give", "give a recurrence", "efficient implementation", "consecutive integers"]}
{"i": "10044880", "t": "what is triggering in sql", "k": ["triggering in sql", "sql", "triggering"]}
{"i": "10024094", "t": "Write a C program to print semicolon without using semicolon, even in your program.\rI did this\r#define SEMI ;", "k": ["print semicolon", "define semi", "write", "program", "semicolon"]}
{"i": "9997010", "t": "given machines[] where machine[i] denotes number of jobs ith machine can do. and \rjobs[] is given ,where job[i] is the length of the ith job;\rwrite algo to find minimum time required to complete jobs;\rAssumption: Total number of jobs is equal to sum of machines[i]", "k": ["find minimum time", "minimum time required", "jobs ith machine", "total number", "write algo"]}
{"i": "9976073", "t": "We have two sorted int arrays\ra[] --> size N --> contains N elements\rb[] --> size 2N --> contains N elements, and N vacant locations\r Write an algorithm of complexity O(n) such that b[] contains elements of a[] and b[] in ascending order.", "k": ["vacant locations write", "sorted int arrays", "locations write", "write an algorithm", "ascending order"]}
{"i": "10023749", "t": "Find all the pairs of integers whose sum is S in an int array.", "k": ["int array", "pairs of integers", "integers whose sum", "find", "array"]}
