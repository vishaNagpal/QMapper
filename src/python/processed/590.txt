{"i": "60202", "t": "Asked during second round telephonic interview:\rGiven two lists. Write a function to check whether both the lists are equivalent or not.", "k": ["round telephonic interview", "telephonic interview", "round telephonic", "asked", "interview"]}
{"i": "60380", "t": "4. (A) Explain Garbage Collection in .NET framework.\rOR\r4. (B) How buffer overrun is dangerous, and can be used for hacking.", "k": ["explain garbage collection", "explain garbage", "net framework", "garbage collection", "explain"]}
{"i": "60379", "t": "3. (A) Given two Link List on integers which are sorted, you have to merge those two link lists and create a new LinkList which is also sorted.\r 3. (B) Give few example link lists to test the above implemented Link Lists.", "k": ["link lists", "link", "implemented link lists", "lists", "link list"]}
{"i": "60378", "t": "2. Given an array of integers, {10203004567000}, you have to create a new array which will be like (12345670000000}, without using any other temporary array.", "k": ["array", "integers", "temporary array", "create", "temporary"]}
{"i": "60377", "t": "Hi Guys,\r  I went to the Microsoft written test held in EGL, Bangalore today, and the questions that were asked are as follows:\r   The pattern of the test was they had given 4 questions and we had to answer within 90 min.\r   So, the questions are:\r 1. You are given a TreeNode, and you have to write an algorithm which will return the no. of nodes in the tree.", "k": ["microsoft written test", "written test held", "bangalore today", "held in egl", "microsoft written"]}
{"i": "60368", "t": "You have a scooter which needs two tires.  You are given three tires. Each tire has a max life of one year. What is the max time you can run your scooter?", "k": ["tires", "scooter", "max", "year", "tire"]}
{"i": "60366", "t": "hi,\rcan anyone tel me the difference b/w file pointer and file\rdescriptor and in\rwhich situation both of them should be used , i need example for both\rof them.", "k": ["file pointer", "file descriptor", "pointer and file", "file", "tel"]}
{"i": "60180", "t": "A duck, pursued by a fox, escapes to the center of a perfectly circular pond. The fox cannot swim, and the duck cannot take flight from the water (it\u2019s a deficient duck). The fox is four times faster than the duck. Assuming the fox and duck pursue optimum strategies, is it possible for the duck to reach the edge of the pond and fly away without being eaten? If so, how?", "k": ["perfectly circular pond", "perfectly circular", "duck", "fox", "circular pond"]}
{"i": "60179", "t": "A room has 3 light bulbs. There are 3 switches outside the room. You cannot see the lights from outside the room. You can go into the room once. Find out the corresponding switch to each light bulb.", "k": ["room", "light", "light bulbs", "bulbs", "bulb"]}
{"i": "60175", "t": "1. What is hash table?\r   Its access time?\r   Procedure to insert new element?\r 2. Given integer array of 199 numbers with 99 numbers repeating twice, find number that did not repeat it self?\r   Went to ask what if if the array is of Strings instead of number?\r 3. Program to reverse linked list, where I tumbled.", "k": ["hash table", "array", "numbers", "number", "program"]}
{"i": "60349", "t": "Given a puzzle of letters/ characters e.g.\r a e r o p s\rb h a r l s\rw r i s l o \ra s n k t q\r Write a function to which this puzzle and a word will be passed to test whether that word exists in the puzzle or not. \re.g. rain and slow will return true. rain is present in the second column and slow in the third row wrapped around.", "k": ["write a function", "word exists", "passed to test", "puzzle", "puzzle of letters"]}
{"i": "60340", "t": "A big cube is made of 1000 small cubes. How many small cubes are there at the surface?", "k": ["small cubes", "big cube", "small", "cubes", "big"]}
{"i": "60339", "t": "What methods are used for collision resolution in hashing? When would you use a tree versus a hashmap?", "k": ["resolution in hashing", "collision resolution", "hashing", "versus a hashmap", "methods"]}
{"i": "60155", "t": "Print a sorted binary search tree both recursive and non recursive solution. \r(inorder traversal)", "k": ["sorted binary search", "binary search tree", "print a sorted", "recursive solution", "sorted binary"]}
{"i": "60135", "t": "Just tell me how would you go about reversing a linked list. Told that I would use two pointers, one for the head and one as a temp he was ok with it I guess.", "k": ["linked list", "reversing a linked", "list", "reversing", "linked"]}
{"i": "60330", "t": "Find out the maximum depth of a binary tree. Hint: its not balanced. I was not able to formulate this solution but was almost there.", "k": ["binary tree", "maximum depth", "find", "tree", "hint"]}
{"i": "60118", "t": "Give an efficient algorithm to solve this problem. Given \"N\" files as input, find the common text fragments that occurs in all the files in input and remove them from the files.\r(A fragment is a piece of text that has at least 3 words)\r E.g.\rInput\r=====\rFile1\r------\rIt is snowing and I want to drive home.\r File2.txt\r----------\rIt is snowing and I want to go skiing.\r File3.txt\r----------\rIt is hot and I want to go swimming.\r Output\r=======\rOut.File1.txt\r---------------\rIt is snowing drive home.\r Out.File2.txt\r-----------------\rIt is snowing go skiing.\r Out.File3.txt\r----------------\rIt is hot go swimming.", "k": ["give an efficient", "solve this problem", "efficient algorithm", "algorithm to solve", "snowing"]}
{"i": "60292", "t": "Given a binary tree,find efficiently if its a binary search tree.", "k": ["binary search tree", "binary tree,find efficiently", "search tree", "tree,find efficiently", "binary tree,find"]}
{"i": "60279", "t": "In a class, the new operator is used for allocating memory for objects created . Can this be done using malloc ? If yes, how and if no , why not ? Are there any restrictions associated with the use of malloc in place of new ?", "k": ["objects created", "allocating memory", "memory for objects", "malloc in place", "class"]}
{"i": "60078", "t": "If in a tree , a node can have more than 2 children , is it possible to traverse it in inorder ? If yes , then how would it be done ?", "k": ["children", "tree", "inorder", "node", "traverse"]}
{"i": "60276", "t": "What is the difference between Java and C++?\rWhy doesn't java has virtual functions?\rWhat is platform independence and how it is achieved?", "k": ["difference between java", "java", "difference", "virtual functions", "java has virtual"]}
{"i": "60274", "t": "Find the first non- repeated character in an array", "k": ["repeated character", "find", "repeated", "array", "character"]}
{"i": "60072", "t": "Given a 3 liter jug and a 5 liter jug, explain how you would measure 4 liters.\r He was making it more complex by asking to formulate an equation for that .. was just for stress check..", "k": ["liter jug", "liter", "liters", "jug", "explain"]}
{"i": "60071", "t": "How to debug thousands of lines of software code ?", "k": ["software code", "debug thousands", "thousands of lines", "lines of software", "code"]}
{"i": "60070", "t": "declaration of \"static function\" -- what it means ?", "k": ["static function", "declaration", "static", "function"]}
{"i": "60069", "t": "What does this code do?\r int *p=0; \rdouble *q=0;\rprintf(\"%u %u\",p,q);\rp++;\rq++;\rprintf(\"%u %u\",p,q);", "k": ["printf", "code", "int", "double"]}
{"i": "60268", "t": "Code for replacing multiple spacing by single spacing in a string... \r e.g. \"  a b c  d\" --> \" a b c d\".", "k": ["replacing multiple spacing", "code for replacing", "replacing multiple", "multiple spacing", "single spacing"]}
{"i": "60068", "t": "Reverse a Binary Tree (not BST)\r Interviewer started with giving me a sample of balance binary tree with Depth 3 i.e. so total 7 nodes.", "k": ["balance binary tree", "binary tree", "interviewer started", "tree with depth", "balance binary"]}
{"i": "59874", "t": "Write a program to generate all the possible magic squares of order N*N where N is odd.A magic square is one in which the sum of all the rows,columns and diagonals is the same", "k": ["odd.a magic square", "write a program", "magic squares", "odd.a magic", "program to generate"]}
{"i": "59524", "t": "OOP Concept - He wanted me to design a player playing a card game. \rMy Ans: I explained how a card class can be created with its properties like - Value of a card, Sign of card\rThen i explained a class for a player. \r He asked - how i will represent a player holding a set of cards.\rMy Ans: I told that player is a different class and card is a different type of class as explained. And a card's properties can be inherited to a player's class and can be used to represent \"a player holding a set of cards.", "k": ["oop concept", "player", "card", "oop", "concept"]}
