{"i": "3525749", "t": "You have millions of documents numbered 1,2,3,4,5 ......\rYou also have a mapping from a word to the list of documents that contains it\r Find all the 'pair of words' that occur together in one and only document", "k": ["documents numbered", "millions of documents", "numbered", "documents", "pair of words'"]}
{"i": "3532731", "t": "Design Farmville,\r Consider only crops and animals for now. \r Whats classes will you have?\rHow will you handle interactions between various objects?\rWhat design patterns can you use?\r How will you handle millions of users?", "k": ["design farmville", "crops and animals", "farmville", "crops", "animals"]}
{"i": "3543697", "t": "What would you do if your Stored Procedure starts performing badly overnight?", "k": ["stored procedure starts", "procedure starts performing", "performing badly overnight", "stored procedure", "starts performing badly"]}
{"i": "3546699", "t": "Unix script to find the specific string from the given file?", "k": ["unix script", "script to find", "find the specific", "specific string", "unix"]}
{"i": "3531705", "t": "What could be the max value that you can set for jvm -xmx", "k": ["xmx", "set for jvm", "jvm", "max", "set"]}
{"i": "3535695", "t": "How to find how much memory your program will need?", "k": ["memory your program", "find", "memory", "program"]}
{"i": "3486704", "t": "Write a program to return distinct numbers from a given list?", "k": ["return distinct numbers", "write a program", "program to return", "return distinct", "distinct numbers"]}
{"i": "3510708", "t": "Write a program to find if a string is a palindrome e.g aabbcbbaa?", "k": ["write a program", "palindrome e.g aabbcbbaa", "program to find", "write", "aabbcbbaa"]}
{"i": "3527696", "t": "Difference e.g. 10.08 and 10.08-SNAPSHOT in maven?", "k": ["difference", "maven"]}
{"i": "3519695", "t": "Difference between mvn intall and deploy?", "k": ["difference between mvn", "intall and deploy", "mvn intall", "difference", "deploy"]}
{"i": "3501681", "t": "What is Java Reflection API?", "k": ["java reflection api", "reflection api", "java reflection", "api", "java"]}
{"i": "3452065", "t": "how will u creat own bool data type which can take only true false or 0,1 in C", "k": ["bool data type", "creat own bool", "bool data", "data type", "true false"]}
{"i": "3457024", "t": "How to divide a number by 3 without using *, /, +, %, - operators... ??", "k": ["operators", "divide a number", "divide", "number"]}
{"i": "3377060", "t": "Write a program to find integer equivalent of a string. E.g : for \"121\" input o/p should be integer 121", "k": ["find integer equivalent", "write a program", "program to find", "find integer", "integer equivalent"]}
{"i": "3411062", "t": "Design a backend for a Chess Application", "k": ["chess application", "design a backend", "application", "chess", "design"]}
{"i": "3462862", "t": "How will you go about implementing google suggest kind of functionality  for a cellphone", "k": ["implementing google suggest", "google suggest kind", "implementing google", "google suggest", "suggest kind"]}
{"i": "3378070", "t": "How will you go about implementing BlockedQueue with a List", "k": ["list", "implementing blockedqueue", "implementing", "blockedqueue"]}
{"i": "3409066", "t": "How many string exists of the following form\r1) Only characters from 'a' to 'z' allowed\r2) No character is repeated\r3) Length = 10\r4) One and only one character in the string is lexicographically greater than the previous character\r For example: \rzyxwvutsrq = invalid (0)\rzyxwvutrqs = valid! since q>r", "k": ["lexicographically greater", "string exists", "length", "previous character", "string is lexicographically"]}
{"i": "3462812", "t": "A huge file contains unsorted integers. Find the median. The file cannot be loaded in memory", "k": ["unsorted integers", "integers", "huge file", "find the median", "huge"]}
{"i": "3373955", "t": "Given a list of Integers,Find the tuple of 3 adjacent elements in this list that adds up to the maximum sum.", "k": ["adjacent elements", "maximum sum", "integers,find the tuple", "list of integers,find", "list that adds"]}
{"i": "3455938", "t": "how can we find the longest palindrome in the given sentence???\r Ex..hello .how are you uoy era woh..\r here both 'are you' and 'how are you' are palindromes...but i want to know how to get 'how are you'...the longest palindrome of that sentence.....", "k": ["find the longest", "longest palindrome", "uoy era woh.", "longest", "sentence"]}
{"i": "3385972", "t": "How would you explain OOPs to a 10 years old child?", "k": ["years old child", "explain oops", "years", "child", "explain"]}
{"i": "3428940", "t": "An array is given like {1,4,5,2,3,6,7}. sort the odd elements in descending order and even numbers in ascending order. so result would be \r{7,5,3,1,2,4,6}", "k": ["array", "sort the odd", "order", "sort", "odd elements"]}
{"i": "3416911", "t": "Prove that you can't build a random number generator function that will output numbers 1 to 7 with uniform distribution and guaranteed to work in finite time using a random number generator that outputs either 1 or 2 with equal probability", "k": ["random number generator", "number generator function", "random number", "number generator", "equal probability"]}
{"i": "3378919", "t": "Given a number convert it into the roman notation", "k": ["roman notation", "number convert", "notation", "number", "convert"]}
{"i": "3405855", "t": "Given two arrays like {1,2,3,4,5} and {3,2,4,5,1}. Output an array which has the index positions on the elements from the first array in the second array.\rSo the answer would be {5,2,1,3,4} as 1 from 1st array exists at 5th position in the second array, 2 from first array exists at 2nd position in the 2nd array and so on.", "k": ["array", "array exists", "position", "exists", "index positions"]}
{"i": "3241862", "t": "How do you find if onetree is subset of the other?", "k": ["find if onetree", "onetree is subset", "find", "onetree", "subset"]}
{"i": "3449815", "t": "How do implement Circular Queue?", "k": ["implement circular queue", "circular queue", "implement circular", "queue", "circular"]}
{"i": "3445806", "t": "How do implement Queue using Stack and Stack using Queue", "k": ["implement queue", "queue", "stack", "queue using stack", "stack and stack"]}
{"i": "3446820", "t": "Given two arrays, 1,2,3,4,5 and 2,3,1,0,5 find which number is not present in the second array.", "k": ["find which number", "find", "arrays", "array", "number"]}
