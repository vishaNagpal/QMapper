{"i": "4873272745263104", "t": "How do we achieve (google news) personalization.", "k": ["personalization", "achieve", "google"]}
{"i": "4855286160424960", "t": "Given a random string S and another string T with unique elements, find the minimum consecutive sub-string of S such that it contains all the elements in T.\rexample:\rS='adobecodebanc'\rT='abc'\ranswer='banc'", "k": ["minimum consecutive sub-string", "find the minimum", "minimum consecutive", "consecutive sub-string", "random string"]}
{"i": "5651322294501376", "t": "Given an infinite stream of characters and a list L of strings, create a function that calls an external API when a word in L is recognized during the processing of the stream.\r Example:\rL = [\"ok\",\"test\",\"one\",\"try\",\"trying\"]\rstream = a,b,c,o,k,d,e,f,t,r,y,i,n,g.............\r the call to external API (let's call it some function callAPI()) would be called when the 'k' is encountered, again when the 'y' is encountered, and again at 'g'.", "k": ["external api", "infinite stream", "api", "stream", "create a function"]}
{"i": "5102229734293504", "t": "Given a large that consists of millions of lines, retrieve only the first and last lines.", "k": ["large that consists", "consists of millions", "millions of lines", "lines", "retrieve"]}
{"i": "5073378962571264", "t": "There is a circular train (the head is connected to the tail) where each car of the train contains a light bulb. Initially, the bulbs are randomly switched on/off. \r You need to determine the size of the train (the number of cars) \rby going from one car to another and switching the light bulbs", "k": ["head is connected", "circular train", "light bulb", "train", "tail"]}
{"i": "5190297283723264", "t": "Cadbury bar size of 5*3 can be distributed to 4 children.\r 5*4 can be distributed to 5 children.\r 6*3 can be distributed to 2 children.\r 6*4 can be distributed to 3 children. so the whole carton can be distributed among 14 children\r   Program output shall be 14.\r   Input/Output Specification: M,N,P,Q are the integer type (M,N values are the ranges for the length of cadburybar P,Q values are  the ranges for breadth of Cadbury bar)\r Output: Number of children who will receive cadbury bar from the carton.", "k": ["distributed", "cadbury bar size", "cadbury bar", "children", "cadbury"]}
{"i": "6192872791474176", "t": "Design a library to map a string of [a-zA-Z]+ to a positive integer value.\r For the strings, there could be:\r     An exact match. Eg: \"get\" will match only \"get\"\r     A prefix match. Eg: \"com\" will match anything that begins with \"com\"\r The conditions are:\r     An exact match takes preference over prefix match.\r     In cases of multiple matches, the longest match takes preference.", "k": ["design a library", "library to map", "positive integer", "match", "exact match"]}
{"i": "5983848678555648", "t": "How is the per-process file/socket descriptor table is implemented in Linux? Specifically, which data structure(s) and algorithms are used to implement it and keep it efficient.", "k": ["socket descriptor table", "implemented in linux", "per-process file", "socket descriptor", "descriptor table"]}
{"i": "6262661043978240", "t": "Given a set of ranges:\r(e.g. S = {(1, 4), (30, 40), (20, 91) ,(8, 10), (6, 7), (3, 9), (9, 12), (11, 14)}. \rAnd given a target range R (e.g. R = (3, 13) - meaning the range going from 3 to 13). Write an algorithm to find the smallest set of ranges that covers your target range. All of the ranges in the set must overlap in order to be considered as spanning the entire target range. (In this example, the answer would be {(3, 9), (9, 12), (11, 14)}.", "k": ["target range", "range", "target", "ranges", "set"]}
{"i": "5659046793183232", "t": "how to find all paths of a graph? \rhi , \ri have a directed graph as an input and i want to find in that graph subGraphs that fit to some path \r for example : i have the following graph   1[E] ->2[E] ->3[M]->4[E]->5[M]->6[M]->7[E]->8[M] .and i have the path E->M->E\rthen the program output should be  the subGraph 2->3->4 \rnote that the solution should be implemented as ADJ Matrix \rthe Graph is directed DAG\rthe program should be with C language", "k": ["adj matrix", "graph", "dag the program", "implemented as adj", "directed dag"]}
{"i": "4816567298686976", "t": "Given a prime set, we call \"prime expressible\" if a number can be factorized only using given prime numbers. Find n-th big expressible number. \r E.g., prime set = {2, 3} \rexpressible number = {1,2,3,4,6,8, 9, 12...} \rnon-expressible number = {5, 10... } \r The primes in the prime set are ordered in an increasing order, and can include a prime < 10^4 (don't remember the exact range), and n can also be as large as 1-10^6.", "k": ["prime", "prime set", "expressible number", "number", "expressible"]}
{"i": "5921450319937536", "t": "Given an array of both positive and negative integers , find all pairs whose sum is equal to zero.", "k": ["negative integers", "find all pairs", "positive and negative", "pairs whose sum", "sum is equal"]}
{"i": "5753545955475456", "t": "Given an array A = [3, 7, 2,5,6,4] for a number N, print the pairs from that array A that sums up to N. You should print each pair once.", "k": ["array", "print", "number", "sums", "pairs"]}
{"i": "5096151013392384", "t": "Given an array A [0, 1, 3, 4,9,5,7,6] and number N.\rThis means that the array consists of the numbers from 0 ... N. However, as you see, 8 is missing in A. Print the missing number.\r Think about the case N = 10^6", "k": ["array", "number", "array consists", "missing", "missing number"]}
{"i": "5681862682869760", "t": "Given an array of positive integers (excluding zero) and a target number. Detect whether there is a set of consecutive elements in the array that add up to the target.\r Example: a = {1, 3, 5, 7, 9}\rtarget  = 8\r output = true ({3, 5})\r or target = 15\routput = true : {3, 5, 8}\r but if target = 6, output would be false. since 1 and 5 are not next to each other.", "k": ["positive integers", "target number", "target", "output", "true"]}
{"i": "5767394003779584", "t": "Given an array of integers. Modify the array by moving all the zeros to the end (right side). The order of the other elements doesn't matter.", "k": ["array of integers", "integers", "array", "modify the array", "array by moving"]}
{"i": "5114303424233472", "t": "Given a dictionary containing a list of words, a starting word, and an ending word, return the minimum number of steps to transform the starting word into the ending word.  \r A step involves changing one letter at a time to a valid word that is present in the dictionary.\r Return null if it is impossible to transform the starting word into the ending word using the dictionary.\r Example:\r Starting word: cat\rEnding word: dog\r cat -> cot -> cog -> dog ('cot' and 'cog' are in the dictionary)\r return 3", "k": ["starting word", "ending word", "word", "minimum number", "starting"]}
{"i": "5715931705638912", "t": "Suppose we have two CPUs, each has an L1 cache associated with it. An L2 cache is shared by the two CPUs, and it requests data from DRAM:\r |CPU0|        |CPU1|\r|L1Cache0|    |L1Cache1|\r     |Shared L2C|\r        |DRAM|\r Let's say CPU0 and CPU1 send out a write signal at the same time:\r - At timestamp 0, CPU0 sends a wr request - write address A to 0;\r- Also at timestamp 0, CPU1 sends a wr request - write address A to 1;\r- At timestamp 0, all of the L1/L2 caches are empty, i.e. write req will result in a miss in the cache;\r- At timestamp 0, data in address A in DRAM is 100;\r- Cache coherency protocol is MOESI.\r What will the values be after these two writes complete? In L1, L2 and DRAM? and what are the states in each cache?", "k": ["timestamp", "dram", "cache", "cpus", "protocol is moesi"]}
{"i": "5180595304923136", "t": "Given predicted stock prices for next n days for a stock e.g : 10, 30, 42, 15, 20, 50, 10, 25 find the maximum profit that can be made with a single buy-sell transaction. If no profit can be made return 0. In the example buying at 15 and selling at 50 gives maximum profit. Note that the two prices are neither minimum nor maximum in the array.", "k": ["single buy-sell transaction", "predicted stock prices", "buy-sell transaction", "single buy-sell", "predicted stock"]}
{"i": "5636302206664704", "t": "Write a function to detect the number of cycles in a directed graph. The graph is passed as an adjacency matrix.", "k": ["write a function", "function to detect", "detect the number", "number of cycles", "directed graph"]}
{"i": "5631660689195008", "t": "Given an array of elements, return an array of values pertaining to how many elements are greater than that element remaining in the array.\r Brute force is obvious, but must be done faster than O(n^2)\r Ex.  [3,4,5,9,2,1, 3]\rReturn [3, 2, 1, 0, 1, 1, 0]\rFirst element is 3 because 3<4,5,9.  Second element is 2 because 4< 5,9 etc", "k": ["array", "return", "return an array", "element remaining", "element"]}
{"i": "5707919444148224", "t": "Given a 1D array, implement function Sum(x1,x2) where x1 and x2 are indices of array. Find sum of all elements in between the given indices inclusive of them. Do in Time complexity of O(1)", "k": ["implement function sum", "implement function", "function sum", "array", "find sum"]}
{"i": "5101575825522688", "t": "Given a set of values 0-9, return all permutations of that set of length n.  Example:  n=2, set ={2,3,4} Return: {2,2}, {3,3}, {4,4}, {2,3}, {3,2}, {3,4}, {4,3}, {2,4}, {4,2}", "k": ["return", "return all permutations", "set", "set of length", "permutations"]}
{"i": "6290452837826560", "t": "Given a pattern and a string, return a boolean of whether the string matches the pattern.\r Each character in pattern represents one of more characters in string.\r Method: is_match(pattern, string)\r  Sample Testcases\r  is_match('abba', 'dogfishfishdog') -> True\r is_match('aba', 'dogfishdog') -> True\r is_match('a', 'acdefghijk') -> True\r is_match('ab', 'acdefghijk') -> True\r   is_match('aba', 'dogfishfish') -> False\r is_match('aba', 'dogfishhorse') -> False\r  Preferable use Python, and say the Big O runtime and space.", "k": ["match", "return a boolean", "true", "false preferable", "sample testcases"]}
{"i": "5756151524229120", "t": "We have an array of objects A and an array of indexes B. Reorder objects in array A with given indexes in array B. Do not change array A's length.\r example:var A = [C, D, E, F, G];\r\nvar B = [3, 0, 4, 1, 2];\r\n\r\nsort(A, B);\r\n// A is now [D, F, G, C, E];", "k": ["array", "objects", "indexes", "reorder objects", "var"]}
{"i": "5127986787385344", "t": "c program using single linked list.\rAssume m nodes means 100 or 200 but we dont know exact. \rprint element m-4 node.\rExample: if m is 100 node print 96 node data", "k": ["single linked list", "linked list", "program using single", "single linked", "list"]}
{"i": "5139551926353920", "t": "C program to accept two strings and print characters which are not present in first string.\rExample: 1 string: apple\r\t\t2 string: aeroplane\r\t\toutput: ro", "k": ["program to accept", "print characters", "string", "aeroplane output", "program"]}
{"i": "6246201252904960", "t": "Given a system in which a musician is selling his CD's. User can enter how many CD\"s he/she wants. Enter his/her address detail and click on next. The cost for the number of CD's, tax for the order, Shipping cost for the order and Total values are displayed. User enter the credit card / debit card details. Click on next. If the transaction successful/unsuccessful display the message accordingly. There is a bank web service which reads card information and a response is sent based on if it is a valid card or not. A database which stores all the information about user orders and their status. An admin portal which accesses the database to edit/update on user order status and user information. Test the complete system.", "k": ["musician is selling", "user", "card", "enter", "order"]}
{"i": "4829355563810816", "t": "Test Amazon Website\rFunctionalities: Two categories with 100 products each, Buying a product, Customer information, Order tracking", "k": ["amazon website functionalities", "test amazon website", "website functionalities", "customer information", "order tracking"]}
{"i": "4866178197487616", "t": "Explain the complete automation design and What have you contributed in the automation framework", "k": ["complete automation design", "explain the complete", "automation framework", "complete automation", "automation design"]}
