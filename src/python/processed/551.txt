{"i": "291740", "t": "A client is deploying a web service from a server. The web service is slow. What would you do to find the root cause of the slowness?", "k": ["client is deploying", "web service", "server", "deploying a web", "web"]}
{"i": "292759", "t": "given 2 dates, find if the 2 dates are a month apart, more than a month apart, less than a month apart. \r I asked him to define \"month apart\"\r He said, same day but previous or next month.", "k": ["month", "dates", "find", "day but previous", "define"]}
{"i": "292758", "t": "Given a log file, which contains a series of websites, which the user has visited, find the most frequent path of 3 websites.\r e.g: If this is a log file\r A B C D E\rA C D B E\rC D E B A\rA C D E B\rC D E A B\r clearly, C D E in the most frequent website?\r First I said graph, then I said hash table. Hash every 3 consecutive web sites and increment in Hash Table. Parse through HT and keep a variable which stores the max value  you get the answer.", "k": ["log file", "user has visited", "frequent path", "frequent website", "hash table"]}
{"i": "291718", "t": "There are two nodes given in a tree(not binary tree). Find wether one node is parent/grand parent of other. \rorder should be O(1)", "k": ["binary tree", "tree", "binary", "parent", "find wether"]}
{"i": "291717", "t": "find pythagorean triplets in an array in O(N)", "k": ["find pythagorean triplets", "find pythagorean", "pythagorean triplets", "find", "pythagorean"]}
{"i": "292718", "t": "What is a time you failed or caused a problem that impacted coworkers or customers?", "k": ["coworkers or customers", "time you failed", "failed or caused", "caused a problem", "problem that impacted"]}
{"i": "292717", "t": "What is a bad online buying expierience?", "k": ["online buying expierience", "bad online buying", "buying expierience", "bad online", "online buying"]}
{"i": "292714", "t": "Table CustomerOrder, columns customerid, orderid, orderdate. \rGive a query for customers that placed orders today \rQuery to get the day in the last 30 days with the most orders \rWhat is an index? \rWhy not add an index to all the columns? \rWhat data structure to store index data? \rWhy a btree? \r  * Employees \r         o id \r         o name \r         o department_id \r         o start_date \r         o salary \r     * Departments \r         o id \r         o department \r  get max salary\rget all names and dept\rget dept that spends most on salary: \r Write a program/script to find a file in the current directory and sub-directories, tools like find and grep are missing.", "k": ["table customerorder", "columns customerid", "orders today query", "orderid", "orderdate"]}
{"i": "292680", "t": "There are 3 guys in a room, persons A, B and C. They are shown a box with 3 black hats and 2 white hats. They are all blindfolded and a random hat is placed on each head. Person A's blindfold is removed and is asked which colour hat he has on - answer is \"I don't know\". Person B's blindfold is removed and he gives the same answer. Person C answers, without having their blindfold removed, the colour of their hat and they are correct. What colour is person C wearing, and how did he know?", "k": ["person", "removed", "hat", "blindfold", "guys"]}
{"i": "292679", "t": "You have two ropes of equal length and an unlimited supply of matches. The ropes each take 60 minutes to burn, but do not burn uniformly (ie it does not necessarily take 30 minutes to burn half the rope). How do you use the ropes and matches to time 45 minutes?", "k": ["equal length", "unlimited supply", "minutes", "ropes", "burn"]}
{"i": "292678", "t": "A gold bar is in 7 segments and you need to cut off a segment and pay a member of staff every day. At the end of each day, they must have one more gold segment than they had the previous day. How do you issue 7 segments over 7 days with the fewest amount of cuts?", "k": ["pay a member", "member of staff", "gold bar", "day", "gold"]}
{"i": "292677", "t": "Given an array of any length holding integers (a buffer of bytes), write an algorithm to return the first unique element (ie not repeated in rest of the array).", "k": ["length holding integers", "holding integers", "buffer of bytes", "write an algorithm", "unique element"]}
{"i": "291663", "t": "how do you come to know what method in java is slow / has bad performance. how will you use the profiling tools for it?", "k": ["java is slow", "bad performance", "method in java", "slow", "performance"]}
{"i": "291662", "t": "array having 50 values. 2 values are missing. can u do it better than multiplication and addition method .", "k": ["array", "addition method", "missing", "method", "multiplication and addition"]}
{"i": "292666", "t": "write a Macro which when given an array willl return the array size", "k": ["array willl return", "write a macro", "array size", "willl return", "array willl"]}
{"i": "292661", "t": "Input: Many strings with alpha numeric numbers and integers\reg: String1= a,b,c,d,1,0,d,2,0]\rOutput: Integers with ascending order = \r[10,20] ( concatenate 1 and 0, 2 and 0]\rWrite a code for this in any language of your choice [ time given  15 mins ]", "k": ["alpha numeric numbers", "write a code", "ascending order", "strings with alpha", "alpha numeric"]}
{"i": "289710", "t": "Given an n X n array with rows sorted and cols sorted, find the number of negative elements in most efficient way", "k": ["find the number", "array with rows", "number of negative", "negative elements", "rows sorted"]}
{"i": "288734", "t": "Is static constuctor exist in C++?", "k": ["static constuctor exist", "static constuctor", "constuctor exist", "static", "constuctor"]}
{"i": "288710", "t": "Removed due to signed agreement for non-disclosure of proprietary information.", "k": ["removed due", "proprietary information", "due to signed", "signed agreement", "agreement for non-disclosure"]}
{"i": "288706", "t": "How can we traverse through all the files in a folder and the subfolders. What system calls should be used(in C).", "k": ["subfolders", "traverse", "files", "folder", "system calls"]}
{"i": "288695", "t": "int main()\r{int n = 12;std::cin >> std::hex >> n;std::cout << std::setprecision(2) <<n;return 0;}\r What would be the output given input is 12?\r choice a:\r12\r choice b:\r12.00\r choice c:\r18\r choice d:\r18.00\r choice e:\r1.80e+001", "k": ["std", "int main", "output given input", "int", "choice"]}
{"i": "289676", "t": "class A {};\r void foo()\r{throw new A;}\r Which of the following catch statement is valid?\r choice a:\rcatch (A && e)\r choice b:\rcatch (A e)\r choice c:\rcatch (A * e)\r choice d:\rcatch (A ** e)\r choice e:\rcatch (A & e)", "k": ["void foo", "statement is valid", "catch", "catch statement", "choice"]}
{"i": "288693", "t": "How would you find the Common elements from 2 Arrays which my or may not be of the same size?", "k": ["find the common", "common elements", "arrays", "common", "size"]}
{"i": "289675", "t": "You have 4 bottles each containing pills that weigh 10 grams each and 1 bottle containing pills that weigh 9 grams each, How would you find out the lighter of the 5 bottles by using a Digital Scale just Once?\r Hint: He asked to open the bottles and take the pills out, and also grouping them wont work.", "k": ["digital scale", "pills that weigh", "weigh", "grams", "digital"]}
{"i": "288681", "t": "Write a function to reverse the words in a string (\u201ccat and dog\u201d becomes \u201ctac dna god\u201d). Please do not use any string manipulation functions that you do not implement yourself.", "k": ["tac dna god", "cat and dog", "tac dna", "dna god", "reverse the words"]}
{"i": "288680", "t": "Write a function that receives three integer inputs for the lengths of the sides of a triangle and returns one of four values to determine the triangle type.\r1.\tScalene\r2.\tIsosceles\r3.\tEquilateral\r4.\tError", "k": ["write a function", "triangle type", "function that receives", "receives three integer", "integer inputs"]}
{"i": "288679", "t": "Write a function that would return the 5th  element from the tail (or end) of a singly linked list of integers, in one pass, and then provide a set of test cases against that function (please do not use any list manipulation functions that you do not implement yourself).", "k": ["singly linked list", "list manipulation functions", "singly linked", "provide a set", "set of test"]}
{"i": "286661", "t": "What is the difference between functors, call back functions and function pointers?", "k": ["call back functions", "difference between functors", "call back", "function pointers", "back functions"]}
{"i": "280712", "t": "Write the code for a program that takes in the infix and the prefix traversal as an array and generate the postfix traversal as another array", "k": ["write the code", "prefix traversal", "postfix traversal", "generate the postfix", "array and generate"]}
{"i": "280706", "t": "we know how to FIX the loop in a linked list using that two pointers trick. Interviewer asked  me to give proof for this.", "k": ["fix the loop", "pointers trick", "linked list", "fix", "trick"]}
