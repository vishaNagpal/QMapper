{"i": "7263132", "t": "Implement a queue in which push_rear(), pop_front() and get_min()  are all constant time operations.", "k": ["constant time operations", "rear", "pop", "front", "min"]}
{"i": "7177118", "t": "write a Java program that reads this file, sort the lines of the file using a reverse\rdictionary sort, then print the results to stdout.  Send the answer and\r attach the text file you used for testing.", "k": ["reverse dictionary sort", "write a java", "java program", "results to stdout", "program that reads"]}
{"i": "7212196", "t": "I was asked this question in a recent interview...could somebody tell me how to solve this one...\rwrite a function which sorts an array of strings based on their reversed representation.\r(Reversed representation means a string in reverse order: foobar => raboof)\r    Example: [\"xxxB\", \"yyyC\", \"zzzA\"] => [\"zzzA\", \"xxxB\", \"yyyC\"]\r    Note: The strings are not reversed in the result.  They're just sorted based on their reversed representation.", "k": ["recent interview", "asked this question", "reversed representation", "reversed", "xxxb"]}
{"i": "7278114", "t": "Telme about your work experience and challenging projects.", "k": ["challenging projects", "work experience", "experience and challenging", "telme", "projects"]}
{"i": "7271105", "t": "Write code to evaluate the value of e^x using the Taylor;s series.\r The series was given.\r An O(n ) solution was expected with no Overflow.", "k": ["write code", "code to evaluate", "taylor", "write", "series"]}
{"i": "7184083", "t": "1. A\r2. Ctrl+A\r3. Ctrl+C\r4. Ctrl+V\r If you can only press the keyboard for N times (with the above four keys), please write a program to produce maximum numbers of A. If possible, please also print out the sequence of keys. \r So the input parameter is N (No. of keys that you can press), the output is M (No. of As that you can produce).", "k": ["ctrl", "keys", "press", "produce", "times"]}
{"i": "7303678", "t": "write a program to Reverse the sentence in the following order specified\ri am an indian\ram an indian i\ran indian am i\rindian an am i.", "k": ["program to reverse", "reverse the sentence", "write a program", "indian", "reverse"]}
{"i": "7242013", "t": "My last round was pretty simple in which he wanted a depth first traversal of a tree for which i gave him the preorder traversal..\rI had time left in this round so he gave me another problem in which I was given a triangle class and he asked me what were the interesting cases where there arises a possiblity that the code may break.\r My answers were tri(int a ,int b,int c)\r -Niether of sides shd be 0\r-sum of two sides greater than the third.\r-No side shd be greater than INTMAX and also if a = INTMAX -6 , b = INTMAX -6 , c = 20\rFor this case there may be an int overflow so i told him that instead of checking for a+b>c we could check whether c> a-b, so that there would be no overflow.\r I thought I had done my interview well and was confident i would be selected but I donno what happened they rejected me.. But it  was a great experience....", "k": ["preorder traversal.", "pretty simple", "wanted a depth", "depth first traversal", "intmax"]}
{"i": "7182043", "t": "My third round question was\rHow do you find the 3rd largest word in a given string that is millions of characters long and he wanted me to give a solution in only one pass ?\r I gave him a solution with arraylists and he was like it is too expensive using them .\rThen i gave him a solution to find in a single pass in the same way we find the third largest number in a set of intergers ..", "k": ["set of intergers", "give a solution", "round question", "millions of characters", "characters long"]}
{"i": "7278016", "t": "My second round question was\rHow do you check if two pixels are overlapping or not.. ?\rI gave him the algorithm for the case where two rectangles overlap..", "k": ["overlapping or not.", "round question", "pixels are overlapping", "not.", "round"]}
{"i": "7174038", "t": "My first interview question was \rHow do you find the longest palindrome in a given string ?\r I gave him a O(n^2) algorithm but he was keen on me giving a O(n) one..", "k": ["interview question", "find the longest", "longest palindrome", "one.", "string"]}
{"i": "7284025", "t": "Had an onsite interview with Microsoft on 17th Dec .. Accommodation and travel was provided and they make sure that the interviewees are in their best spirits before the interview.. I was listed to be interviewed with the windows windows live group for DEV and mine started at 8.00AM in the morning and I was scheduled for 4 interviews each of which were 45 mins long.. Did not land into the job though but it was a great experience as this was my first interview.. The interviewers were really nice and helped a bit whenever i was stuck..", "k": ["dec", "interview with microsoft", "onsite interview", "microsoft", "accommodation and travel"]}
{"i": "7208022", "t": "The height of a tree is defined as follows:\rThe height of a terminal node is 0.\rThe height of an internal node is 1 + the maximum of the heights of its children.\rSuppose it is specified that height() will only be called on InternalNodes.\rConsider the following a implementation of InternalNode.height(), with no implementation in either Node or TerminalNode?\r     int height() {\r        int lheight = (left == null) ? 0 : left.height();\r        int rheight = (right == null) ? 0 : right.height();\r        return (lheight > rheight ? lheight : rheight);\r    }\r Which, if any, of the following are problems that will cause the above code to fail:\r A.It won\u2019t compile because there is no       definition (concrete or abstract) in Node.\r B. 1 should be added to the value of the return\r \t//options:\ra)The code is correct as is.\t\rb)A: it won\u2019t compile, but if that were fixed it would work and produce the correct result.\rc)B: it will compile but produce the wrong result.\rd)Both: it won\u2019t compile, and even if that were fixed, it would produce the wrong result.", "k": ["height", "tree is defined", "terminal node", "node", "n\u2019t compile"]}
{"i": "7284008", "t": "rearrange an array of integers such that on one side you have all even numbers and the other side you have all odd numbers.\rnow among the even numbers, they should be sorted and among the odd numbers they should be sorted", "k": ["rearrange an array", "array of integers", "odd numbers", "numbers", "side"]}
{"i": "7244009", "t": "find max and min in an array with the least number of comparisons", "k": ["find max", "number of comparisons", "max and min", "find", "comparisons"]}
{"i": "7247012", "t": "how do u remove duplicates from a list. \r1. list is sorted\r2. list is not sorted", "k": ["remove duplicates", "list", "sorted", "remove", "duplicates"]}
{"i": "7259985", "t": "find all permutations of a string", "k": ["find all permutations", "find", "string", "permutations"]}
{"i": "7165021", "t": "how do you know if a tree is a bst or not", "k": ["tree", "bst"]}
{"i": "7212064", "t": "design a data structure for a DNS server", "k": ["dns server", "design a data", "data structure", "dns", "design"]}
{"i": "7183008", "t": "you are given a bst where each node has a int value , parent pointer , and left and right pointers , write a function to find a path with a given sum value. Path can go from left subtree tree , include root and go to right tree as well . we need to find these paths also .\r                    5\r                   / \\\r                  1   10\r                 / \\  / \\\r                0  2  6  11\r so to find 16 we say it is 1 to 5 to 10", "k": ["parent pointer", "write a function", "function to find", "left subtree tree", "find"]}
{"i": "7192998", "t": "write  down String class  copy constructor ?", "k": ["string class copy", "class copy constructor", "write down string", "string class", "copy constructor"]}
{"i": "7299768", "t": "find a bug in following code :\r\n\r\nclass A\r\n{\r\npublic:\r\n    static int i;\r\n    void print()\r\n    {\r\n         cout<< i << endl ;\r\n    }\r\n};\r\n\r\nint main()\r\n{\r\n A a;\r\n a.print();\r\n}I run above code, and I am getting \"ndefined reference to `A::i'\" . Why I am getting this error ?", "k": ["void print", "find a bug", "ndefined reference", "static int", "int main"]}
{"i": "7293852", "t": "Suppose you have a map like this\rmap<key,value>.It is easy to find a key and update its value.But can you find a specific value and update its key assuming all key,value pairs are unique", "k": ["pairs are unique", "update its value.but", "find a specific", "key assuming", "key,value pairs"]}
{"i": "7221962", "t": "You Have File of Containing 1 Million Integers You need To Find 10\rMaximum Integer Out of Them.How You Will Do That ...what is Time &\rspace Complexity of Algorithm that you will use....", "k": ["million integers", "maximum integer", "complexity of algorithm", "space complexity", "million"]}
{"i": "7256927", "t": "Round-I Write a function that takes an array of five integers, each of which is between 1 and 10, and returns the number of combinations of those integers that sum to 15.  For example, calling the function with the array [1, 2, 3, 4, 5] should return 1, while calling it with [5, 5, 10, 2, 3] should return 4 (5 + 10, 5 + 10, 5 + 5 + 2 + 3, 10 + 2 + 3).  You may assume that the input has already been validated.", "k": ["round-i write", "number of combinations", "write a function", "integers that sum", "write"]}
{"i": "7215940", "t": "Asked about BFS algorithm. And then he asked about the approach of how do you print the all left nodes, then all leafs and then all right nodes of a binary tree.", "k": ["bfs algorithm", "asked about bfs", "bfs", "algorithm", "asked"]}
{"i": "7273953", "t": "How will you rotate a given matrix? Question from CC book.", "k": ["matrix", "rotate", "question", "book"]}
{"i": "7300709", "t": "If given a position (x,y) of knight on a chess board, how will you determine all the valid moves that a knight can move. I coded the function on the while board by using a helper function IsValidMove(x,y)", "k": ["valid moves", "chess board", "helper function isvalidmove", "knight", "position"]}
{"i": "7277927", "t": "Implement the circular queue? Interviewer was looking for complete requirements and design I would consider before implementing the queue.", "k": ["implement the circular", "circular queue", "queue", "implement", "circular"]}
{"i": "7243930", "t": "Write a function which determines whether provided string matches specified pattern. Signature:\r bool is_match(char* text, char* pattern)\r Pattern can contain any characters + '*' character which means zero or more characters. For example: is_match(\"hello\", \"h*o\") returns true; is_match(\"hello\", \"hel*lo\") also returns true.", "k": ["provided string matches", "write a function", "match", "function which determines", "determines whether provided"]}
