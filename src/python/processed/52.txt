{"i": "6691164816670720", "t": "What does XMPP offer over HTTP that makes it suitable for messaging application?", "k": ["xmpp offer", "offer over http", "http that makes", "messaging application", "makes it suitable"]}
{"i": "5211256441536512", "t": "Given multiple input streams of sorted numbers of infinite size, produce a single sorted output stream. \r (The size of all the input streams are unknown)\r For eg.\r Input Stream 1:             2,4,5,6,7,8...........\rInput Stream 2:             1,3,9,12..............\rInput Stream 3: \t      10,11,13,14........\r Output Stream:\r1,2,3,4,5,6,7,8,9,10,11,12,13...............", "k": ["multiple input streams", "input stream", "single sorted output", "sorted output stream", "produce a single"]}
{"i": "5631938103083008", "t": "Given an array and threshold value. The threshold represents the maximum length of subarrays that may be created. Each subarray created has a cost equal to the maximum integer within the subarray. Partition the entire array into subarrays no longer than the threshold and do it at minimum cost. The subarrays are to be chosen from contiguous elements and the given array must remain in its original order. Write a function to return an integer that denotes the minimum cost to partition the array.\r For more clarification, here are the test cases.\r1. Array: [1,2], threshold: 1. \r\twe divide the array to {(1),(2)} Total cost is 1+2 = 3\r2. Array: [1,5,2], threshold: 2. \r\twe divide the array to {(1),(5),(2)} with total cost 1+5+2 = 8. OR \r\twe divide to {(1,5),(2)} with total cost 5+2 = 7 OR \r\twe divide to {(1),(5,2)} with total cost 1+5 = 6. \r\t\tOf these minimum total cost is 6. So the ans is 6 with subarrays as {(1),(5,2)}", "k": ["total cost", "array", "cost", "total", "threshold"]}
{"i": "5385816814125056", "t": "Given a bench with n seats and few people sitting, tell the seat number each time when a new person goes to sit on the bench such that his distance from others is maximum?", "k": ["people sitting", "number each time", "seat number", "sitting", "maximum"]}
{"i": "5585312391102464", "t": "$$+91-9828791904$$ Wazifa for boyfriend love problem solution dua||wazifa||amal~~", "k": ["problem solution dua", "boyfriend love problem", "love problem solution", "solution dua", "boyfriend love"]}
{"i": "5706196074364928", "t": "A company wants to fly in a total of 100 candidates for the interview. The company has two office location, one in NY and other in SF and max capacity at each location is 50 candidates. You are given the cost it incurs to fly in each candidate to NY and SF.[500, 300],[540, 600],[550, 600],[300, 50]..so onWrite an algorithm for the minimum total cost?", "k": ["interview", "fly", "company", "incurs to fly", "total"]}
{"i": "6077023550701568", "t": "Given 3 unsorted arrays A, B and C you need to find all possible combinations such that A[i] + B[j] = B[k] + C[l].", "k": ["unsorted arrays", "unsorted", "arrays", "find", "combinations"]}
{"i": "5003339574542336", "t": "I have been given 2 strings namely A and B and I have to find the no. of strings lying between A and B where the inbetween lying strings must be formed only from the characters of A.\r Another restriction is that each letter has to be used exactly once.\r For example :\r A->abc\r B->ddd\r Ans=5\r From string abc, the strings obtained are acb,\u2009bac,\u2009bca,\u2009cab,\u2009cba, all of them are larger than abc, but smaller than ddd. So the answer is 5.\r Also, it may be the case that a given character in the string may repeat any number of times.ie- the below case is also included in the problem statement.\r A->abacaba\r B->ubuduba\r Ans=64\r How do I find the no. of such strings ?\r  link : https://codeforces.com/contest/895/problem/D", "k": ["inbetween lying strings", "inbetween lying", "lying", "strings lying", "lying strings"]}
{"i": "5736522234462208", "t": "I have been given an array whose elements lie between [1,70] and the size of array [1,10^5].\r I have to find the total number of subsets whose all elements multiply to give a perfect square number.\r Since, count of subsets can be very large, I have to give the ans mod (10^9\u2009+\u20097).\r How should go on to solve this problem ?\r One hint given to me is to utilise the range of value that every array element hold which is [1,70] and total no. of prime numbers between these [1,70] are 19.\r link: https://codeforces.com/contest/895/problem/C", "k": ["elements lie", "array", "elements", "lie", "size"]}
{"i": "5701666762915840", "t": "you are given two arrays .You have to print minimum number of swap operation to perform so that the median of two arrays are equal. if not possible then print -1.\rlink = https://www.hackerearth.com/practice/basic-programming/implementation/basics-of-implementation/practice-problems/algorithm/equal-median-8aba723b/", "k": ["print minimum number", "minimum number", "number of swap", "swap operation", "operation to perform"]}
{"i": "5066837092466688", "t": "Given the arraylist<meals> input, find the number of dishes with unique ingredients.class meals{\r\n        String cuisine;\r\n        ArrayList<String> dish = new ArrayList<String>();\r\n        meals(String s, String[] arr){\r\n                cuisine = s;\r\n                for(String i:arr){\r\n                    dish.add(i);\r\n                }\r\n        }\r\n    }Example:\rInput: [\r         {\r            \"cuisine\" : \"American\",\r            \"dish\" : [\"lettuce\", \"cheese\", \"olives\", \"tomato\"]\r         },\r         {\r            \"cuisine\" : \"Mexican\",\r            \"dish\" : [\"lettuce\", \"cheese\", \"pepper\", \"tomato\"]\r         },\r         {\r            \"cuisine\" : \"French\",\r            \"dish\" : [\"lettuce\", \"cheese\", \"pepper\", \"tomato\"]\r         },\r         {\r            \"cuisine\" : \"Continental\",\r            \"dish\" : [\"lettuce\", \"cheese\", \"olives\", \"tomato\"]\r         },\r       ]\r Output: 2 \r Because there are two unique ingredient-dishes; {Mexican, French} and {American, Continental}.\r I have tried different methods, but could not get to the solution. Thank you!", "k": ["unique ingredients.class meals", "string", "string cuisine", "dish", "lettuce"]}
{"i": "6196148293861376", "t": "Lets there are n stores.\r A customer order x items. All the stores might not have all the items from the order list.  So find the store/combination of stores that can serve the order request such that the set that contain least number of stores is selected so that there are lesser number of shipments.", "k": ["stores", "order", "items", "number", "customer order"]}
{"i": "6037220411047936", "t": "Pascal Triangle Hockey Stick Identity?", "k": ["hockey stick identity", "triangle hockey stick", "pascal triangle hockey", "stick identity", "triangle hockey"]}
{"i": "5641986179072000", "t": "Find Maximum power for the given value. Value can vary from negative Int. to positive Integer. (For example for 625 the value is 4, {5 to the power 4, so 4 would be answer})\r GCD/HCD Logic (Greater Common Divider) if there would be 2 different powers (for Example- 75, it would be 3 to the power 1 and 5 to the power two, so in this case find  GCD to get value.)", "k": ["find maximum power", "find maximum", "maximum power", "greater common divider", "maximum"]}
{"i": "6266160824188928", "t": "Given a room with thief on left side of the room with finite number of sensors. He has to reach on right side missing the sensors. Each sensor is placed at any random point in the room and has its coverage in the radius r. Find out if the thief can reach to the right side without touching the range of any sensor.?\r please discuss approach first & then code it..", "k": ["finite number", "left side", "room with finite", "room", "side"]}
{"i": "5741938657984512", "t": "1. Try to find whats wrong with this code\r 2. after fix it what is the out put\r 3 how to make this code more generic :D\r Initial state of an array \"a\":\r [[2, NULL, 2, NULL], \r[2, NULL, 2, NULL], \r[NULL, NULL, NULL, NULL], \r[NULL, NULL, NULL, NULL]]\r ========\rMain function:\r FUNCTION foo()\rFOR y := 0 to 3 \r FOR x := 0 to 3\rIF a[x+1][y] != NULL\rIF a[x+1][y] = a[x][y]\ra[x][y] := a[x][y]*2\ra[x+1][y] := NULL\rEND IF\rIF a[x][y] = NULL\ra[x][y] := a[x+1][y]\ra[x+1][y] := NULL\rEND IF\rEND IF\rEND FOR\rEND FOR\rEND FUNCTION", "k": ["null", "null end", "end", "end function", "end if end"]}
{"i": "5732040503197696", "t": "There are n number of stones. Each stone has a weight associated with it. 1st stone\u2019s weight is 1, 2nd stone\u2019s weight is 2.. and so on. You are given an integer x. You need to pick the maximum number of stones such that the total weight of stones picked is less than x.\rYou\u2019re also given an array of stones which you can not pick.?", "k": ["stones", "weight", "stone", "number of stones", "number"]}
{"i": "6583142731743232", "t": "Given an array of negative and positive integers, find the biggest sum of a sub-array.", "k": ["positive integers", "find the biggest", "array of negative", "negative and positive", "biggest sum"]}
{"i": "5144358047711232", "t": "Given an array of integers and a target. Find the two array elements if they are summed up, will result in the target.", "k": ["target", "array", "integers", "array of integers", "array elements"]}
{"i": "5136091913388032", "t": "Given a point and a radius r, draw a circle.", "k": ["draw a circle", "draw", "circle", "point", "radius"]}
{"i": "5105191032979456", "t": "print hockey stick number in pascal triangle where row of triangle can be upto 30000 and length of stick can be upto 100.", "k": ["print hockey stick", "hockey stick number", "print hockey", "number in pascal", "upto"]}
{"i": "6645295740354560", "t": "WELCOME TO ALFA CHEMICAL LABORATORY \r This is just to inform you that our company can clean out black money called Anti-Breeze (Stained money) Bank notes So please if you have made a kind of Money making Business that your money is stacked. We can help you clean the Money so please if you know some one that his money is Stacked as well we can help clen the money and you will receive a commission.\r We will Supply SSD Solution, ssd chemical,mercury/activation powder, ssd super automatic  universal ssd solution vectrol paste, Tebi-Manetic solution, Super Automatic Solution, for Cleaning Black Stain, Anti Breeze, Black Dollar black money, Black Currency, Black Notes, Defaced currency, defaced money and Other Currencies\r We also offer machines with our Technicians to do the large preservation jobs To client in any country and the cleaning of black notes. For more information please do contact us in different office and branch company\r Watch our demo on youtube:\rhttps://www.youtube.com/watchv=bkUBDCfQWFQ&feature=youtu.be\r Watch our product on youtube: \rhttps://www.youtube.com/watchv=a4bBO6QfmMc&feature=youtu.be\r  ALFA CHEMICAL LABORATORY\rHEAD OFFICE ADDRESS \r Address:No.8, Palace Road, Vasanth Nagar\rPostal Code 560052 Bangalore India\rEMAIL : alfachemical@yahoo.com\r Address: Sector 11 Dwarka, Delhi \rPostal Code 110075 new delhi India\rEMAIL : alfachemical@yahoo.com\r  Mobile +917642822817 /WhatssApp +917642034807\rKindly contact our Protocol Officer ( DR Ryan Stewart )\rEmail: ryanstewartryan@hotmail.com SKYPE ID: ryanstewartryan", "k": ["alfa chemical laboratory", "money making business", "alfa chemical", "chemical laboratory", "money called anti-breeze"]}
{"i": "5574879529664512", "t": "Which is the best mvc  training institute in noida?", "k": ["mvc training institute", "institute in noida", "mvc training", "training institute", "noida"]}
{"i": "6168771568336896", "t": "How to generate globally unique identifier(GUID)", "k": ["globally unique identifier", "guid", "generate globally unique", "unique identifier", "generate globally"]}
{"i": "4899744158056448", "t": "What is use bigpond", "k": ["bigpond"]}
{"i": "5642541135822848", "t": "Design a portal for registration for a dog show", "k": ["design a portal", "dog show", "portal for registration", "design", "show"]}
{"i": "5170590298669056", "t": "Find 2nd duplicate in an array", "k": ["find", "duplicate", "array"]}
{"i": "5070412568854528", "t": "Given 2 sets of words. Find the words in 2nd set that begin with any word in the 1st set.", "k": ["set", "words", "sets", "word", "find"]}
{"i": "5658385907712000", "t": "Largest Sum Contiguous Subarray", "k": ["sum contiguous subarray", "largest sum contiguous", "contiguous subarray", "sum contiguous", "largest sum"]}
{"i": "5300798641143808", "t": "Google Technical Support Number & Support Service\r For google related errors issues call on google customer service 1888-809-3891 toll free number for any google related problems such as how to reset gmail password,how to change google account youtube settings etc.For any google related help dial given toll free number for solution.\r http://www.supportcarenumber.com/blog/how-to-you-contact-google-technical-support", "k": ["technical support number", "toll free number", "google technical support", "google customer service", "related errors issues"]}
