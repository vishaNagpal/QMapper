{"i": "6448120300830720", "t": "Write a program to remove duplicates from array of prime numbers.", "k": ["write a program", "prime numbers", "program to remove", "remove duplicates", "duplicates from array"]}
{"i": "19802662", "t": "given two very big files , each having around 1 billion lines , u have to print all the lines that are common to both files . Please suggest a good optimal approach", "k": ["good optimal approach", "optimal approach", "big files", "billion lines", "suggest a good"]}
{"i": "19789662", "t": "Employees in my company are complaining about elevator, saying its too slow...  Lift operates for 50 floors\r I hire you and you have to tell me what is the problem and solutions to it.\r Input:\rMotor can't be changed\rYou can't get a new elevator as its too costly.\r Get 5 matrices you would collect and how would you use them.", "k": ["company are complaining", "complaining about elevator", "employees", "slow", "lift operates"]}
{"i": "19768663", "t": "How would you design a movie search engine.\r Think about both abstract and specific questions. How would you answer each of them.\r ex: get me romantic movies, latest movies, movies with fight of no more than 10 mins.", "k": ["movie search engine", "search engine", "movie search", "engine", "movies"]}
{"i": "19787662", "t": "How would you determine if ads clicks are coming through a human being or not (it could be a program, virus etc.)\r Identify 5 parameters and how would you use each of them.", "k": ["determine if ads", "ads clicks", "clicks are coming", "program", "virus"]}
{"i": "19782666", "t": "Once upon a time the following puzzle was suggested to pupils on a regional middle school olympiad on mathematics:\r    A set of coins consists of 15 coins: 14 coins are valid while a remaining 15-th coin is a false one. All valid coins have one and the same weight while the false coin has a different weight. One valid coin is marked. Is it possible to identify a false coin balancing coins 3 times at most?\rA jury member was a trainer of a team of undergraduates for programming contests. So a question on how to put the puzzle for programming arose naturally. Fin ally the problem was formulated as follows:\r    A set of coins consists of N coins: (N - 1) coins are valid while a remaining N-th coin is a false one. All valid coins have one and the same weight while the false coin has a different weight. One valid coin is marked. Write a program which for every input pair\r        a number N of coins under question,\r        a limit K of balancing\r outputs either ``POSSIBLE\" or ``IMPOSSIBLE\" with respect to existence of a strategy to identify the false coin balancing coins K times at most.\r Input \r The first line of input contains a single integer T that represents a total amount of different pairs (N, K) to process. \rOutput \rThe output file should contain T lines with ``POSSIBLE\" or ``IMPOSSIBLE\" per line.\r Sample Input \r3                           \r6 2                         \r10 2                        \r15 3\rSample Output \rPOSSIBLE \rIMPOSSIBLE \rPOSSIBLE", "k": ["regional middle school", "middle school olympiad", "coins", "false coin", "coin"]}
{"i": "19778663", "t": "Given a set of numbers, find the longest subset with consecutive numbers be it any order.\r Input:\rS = { 5, 1, 9, 3, 8, 20, 4, 10, 2, 11, 3}\r we have 2 consecutive sets\rs1 = {1, 2, 3, 4, 5}\rs2 = { 8, 9, 10, 11}\r Ans. \rs1 = {1, 2, 3, 4, 5}", "k": ["find the longest", "longest subset", "consecutive numbers", "numbers", "consecutive sets"]}
{"i": "19773662", "t": "how to solve this  ((3000000!)/(30!)^100000)%(any prime no.) in C++", "k": ["solve", "prime"]}
{"i": "19685712", "t": "Check if the given binary tree is BST or not.", "k": ["tree is bst", "binary tree", "bst", "check", "binary"]}
{"i": "19682725", "t": "Given an integer array, find pairs in an array which sum up to a given number. \rFor example: Array{4,5,1,3,2} and required sum=6 then output should be [1,5] and [2,4].", "k": ["find pairs", "integer array", "array", "find", "number"]}
{"i": "19695693", "t": "N nodes, each node consists of a couple fields and methods. These are:\r int id; //every node has an ID. All of these IDs are sequential, and begin with 0. I.e. all ids are uniquely in the range of 0 t N-1\rint val; //every node has a value\rint max; //max = N. Every node knows how many nodes are in the system.\r void send(int idTo, int payload)\rint recv(int idFrom)\r Write a single piece of code which runs on every node simultaneously, such that when it is finished running every node in the system knows the sum of the values of all the nodes in the system.", "k": ["fields and methods", "couple fields", "node", "int", "node consists"]}
{"i": "19691707", "t": "Given two array of integers write two functions that will return an Union and Intersection\r Time efficient\rBoth time and space efficient implemented", "k": ["intersection time efficient", "space efficient implemented", "union and intersection", "intersection time", "return an union"]}
{"i": "19674662", "t": "Write a writer thread and a Reader that share a fixed-size buffer and an index to access the buffer .The writer should place numbers into the buffer while the Reader thread should remove the numbers.The order in which the numbers are added or removed is not important.", "k": ["reader thread", "share a fixed-size", "index to access", "remove the numbers.the", "numbers.the order"]}
{"i": "19577750", "t": "find all set of elements in an array with sum equal to k(given)", "k": ["find all set", "set of elements", "array with sum", "sum equal", "find"]}
{"i": "19638671", "t": "Write a program to find whether a given number is a perfect square or not. You can only use addition and subtraction operation to find a solution with min. complexity.\r i/p : 25 \ro/p : True\r i/p : 44\ro/p: False", "k": ["write a program", "perfect square", "program to find", "operation to find", "write"]}
{"i": "19614665", "t": "Design a fixed size LRU cache that offers inserts into and retrievals from the cache in constant time.", "k": ["fixed size lru", "size lru cache", "size lru", "design a fixed", "constant time"]}
{"i": "19295671", "t": "Suppose you have an array of +ve numbers, -ve numbers and zeroes. Devise an algorithm to find the maximum contiguous subsequence product. \rFor 7 -3 -1 2 -40 0 3 6, the max subsequence product = -1 * 2 * -40 = 80\rFor -3 7 2 0 -5 7 -2 -2 2, the maximum subsequence product = -5 * 7 * -2 = 70", "k": ["subsequence product", "maximum subsequence product", "contiguous subsequence product", "numbers and zeroes", "max subsequence product"]}
{"i": "19151697", "t": "How to read a large file efficiently in java", "k": ["large file efficiently", "efficiently in java", "read a large", "large file", "file efficiently"]}
{"i": "18852695", "t": "Given an unsorted array  (of unknown length .. can be infinite even )..  at any point of time , how to find a number which is repeated for maximum times , followed questions is how to find a number which is repeated for n times.\r  Answer I proposed is using combination of binary st as ell as heap.\r   ex: this binary search tree will have structure which even has pointer to its correponding healelement's pointer.\r   while inserting an element into tree , will check whether it is repeated , if yes , will increase the priority of this element , and adjust heap accordingly.\r  Please comment on this solution", "k": ["unsorted array", "unknown length", "find a number", "repeated", "times"]}
{"i": "18964687", "t": "Write a calculator program in Java that evaluates expressions in a very simple integer expression language.   The program takes an input on the command line, computes the result, and prints it to the console.  For example:\r % java calculator.Main \u201cmult(2, 2)\u201d\r4\rFew more examples:\rInput\t\t\t\t\t\t\t\t\tOutput\radd(1, 2)\t\t\t\t\t\t\t\t\t3\radd(1, mult(2, 3))\t\t\t\t\t\t\t7\rmult(add(2, 2), div(9, 3))\t\t\t\t\t12\rlet(a, 5, add(a, a))\t\t\t\t\t\t\t10\rlet(a, 5, let(b, mult(a, 10), add(b, a)))\t\t\t55\rlet(a, let(b, 10, add(b, b)), let(b, 20, add(a, b))\t40\r  A \u201clet\u201d operator for assigning values to variables:\rlet(<variable name>, <value expression>, <expression where variable is used>)", "k": ["integer expression language", "simple integer expression", "write a calculator", "simple integer", "input output add"]}
{"i": "19602663", "t": "This was the question of two buckets of 3 and 5 litres each. Now measure four litre. I had given 2 solutions but still he wanted 3 solution.\r1st soln: fill 3 litre and then interchange in various ways to get 4 litre.\r2nd soln: fill 5 litre and then interchange in various ways. \r do you have any soln other than this.", "k": ["litre", "fill", "soln", "question", "buckets"]}
{"i": "19587667", "t": "Pattern Matching\r----------------\rCharacters: a to z\rOperators: * +\r* -> matches zero or more (of the character that occurs previous to this operator)\r+ -> matches one or more (of the character that occurs previous to this operator)\r Output if a given pattern matches a string.\rExample:\rpattern:a*b\rstring:aaab    b, ab, aab, aaab, ab\routput:1\r pattern:a+aabc    \rstring:ab    aabc, aaabc, aaaabc .. \routput:0\r pattern:aa*b*ab+\rstring:aab  aab, aabab, aaaabbab\routput:1\r pattern: a+a*b*\rstring: a ab, aab, aaabb\routput: 1\r Valid Assumptions: Please assume that both the pattern and string input are valid", "k": ["occurs previous", "character that occurs", "pattern matching", "operator", "character"]}
{"i": "19286747", "t": "Given an array of integers. Find two disjoint contiguous sub-arrays such that the absolute difference between the sum of two sub-array is maximum.\r* The sub-arrays should not overlap.\r eg- [2 -1 -2 1 -4 2 8] ans - (-1 -2 1 -4) (2 8), diff = 16\r I gave him o(n^2) algorithm but he was not satisfied.", "k": ["array of integers", "disjoint contiguous sub-arrays", "integers", "find two disjoint", "array"]}
{"i": "19579741", "t": "implement a method to print the transpose of a text file.\rexample if the text is \r=====\rabc\rdef\rgh\r====\r the method should print\r====\radg\rbeh\rcf\r=====", "k": ["text file", "implement a method", "implement", "file", "print the transpose"]}
{"i": "19114716", "t": "In a certain language which has same alphabets as in english language (ie.  a-z), but the order of the alphabets is different (for eg 's' is the first character, 'g' is second, and likewise). Given a dictionary of this new language (which has words arranged according to new alphabetical order), FInd out the order of alphabets in this language.", "k": ["order", "english language", "language", "alphabets", "alphabetical order"]}
{"i": "19575700", "t": "There is a server when a user can login.\rA used can login multiple times.\ryou have to return number of unique users in last 10 minutes.\rRetrieve unique user count operation should be as fast as possible.\rNote:\rA user who has done login in last 10 minutes more than once should be counted only 1.\rIt is possible that in a particular duration no user has logged in.", "k": ["login", "user", "login multiple times", "server", "minutes"]}
{"i": "19574703", "t": "Given a binary tree.\rPrint nodes of extreme corners of each level but in alternate order.10\r\n          5             11\r\n       9     20   -          15\r\n   14    - -     -         25\r\n                                   30then output should be 10,11,9,25,30\rleft most of 0th level\rright most of 1st level\rleft most of 2nd level \r& like this", "k": ["binary tree", "level", "tree", "print nodes", "binary"]}
{"i": "19286700", "t": "Write a program to reverse a sentence in a zigzag order.\ri/p: I am a software programmer\ro/p: programmer erawtfos a ma I", "k": ["write a program", "zigzag order", "program to reverse", "reverse a sentence", "write"]}
{"i": "19114694", "t": "Find the first non repeating character in a given string. You may assume that the string contains any character from any language in the world, for e.g. an Arabic \ror Greek character even.", "k": ["arabic or greek", "repeating character", "greek character", "find", "character"]}
{"i": "19286669", "t": "Given life time of different animals. Find period when maximum number of animals lived. ex [5, 11], [6, 18], [2, 5],[3,12] etc. year in which max no animals exists.", "k": ["life time", "animals", "life", "time", "find period"]}
