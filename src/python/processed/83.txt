{"i": "4920446624464896", "t": "Design an order tracking system using the below constraints.\r Once an order is received, it will be assigned to a delivery boy and sends notification at every stage of the order such as order received with expected time of delivery, delivery boy assigned, order picked up, order delivered.\r State how your design will help scale and what will be the performance SLAs that will you will set for your design. The system should be able to horizontally scalable from hundreds of orders to million orders and should perform at almost the same level irrespective of the number of orders received.", "k": ["order tracking system", "order", "order tracking", "delivery boy", "tracking system"]}
{"i": "5743058439110656", "t": "(Q2)what is output and explain why?\rstruct abc\r                  {\r                           double d;\r                            char c;\r                             int b;\r                   }st;\r                   int main()\r                  {\r                            int i=sizeof(st);\r                        printf(\"%d\",i);\r                  }", "k": ["output and explain", "int", "struct abc", "int main", "output"]}
{"i": "5711821678837760", "t": "please help me ...i am confused\r(Q1)what is output and explain why?\rstruct abc\r                  {\r                            char c;\r                            double d;\r                            int b;\r                   }st;\r                   int main()\r                  {\r                            int i=sizeof(st);      \r                      printf(\"%d\",i);\r                  }\r......................................................................................................................................................................................................", "k": ["output and explain", "int", "confused", "struct abc", "int main"]}
{"i": "5191669463908352", "t": "We start with a list of Integers. We can remove a group of integers from the list if the all but one equals the remaining number. This removal operation can be performed in the remaining number of list until no more operations can be performed.\rWrite a function which can accept an array of integers, and return the minimal number of remaining integers from performing this operation.\rExample [1, 3, 5, 6] -> remove 1, 5, 6 , because 1 + 5 = 6, thus only [3] left, so  return 1\r[48, 20, 1, 3, 4, 6, 9, 24] -> remove 3, 6, 9 , because 3 + 6 = 9, and remove 4, 20, 24,  48, because 4 + 20 + 24 + 48, thus only [1] left, so return 1\rint left(int[] nums){\r}", "k": ["integers", "remaining number", "remaining integers", "number", "list"]}
{"i": "6036910169391104", "t": "Consider an N*N game board, with a black and white pieces that can be placed on it. You are given a board with placed pieces around it in a random spots.\r You need to implement a function that determines if a piece (black or white) is captured on a given coordination (x, y).\r A piece is defined as captured by the following rules:\r1. If all sides (up, down, left & right) contains an opposite piece that surrounds/blocking it.\r2. If some of the sides are blocked (for example, right and down) and the other ones are out of bound (OOB defined for coords: x: <= 0, y: <= 0) it's considered as blocked.\r3. If one of the sides is empty, it's free.\r4. If one of the sides contains the same piece type, and that piece is not captured (by the rules above), it's free.\r5. Note that pieces may be captured in a clustered way (related to #4).\r For example, consider the following coordinates:\rcoord(1,1) = B\rcoord(1,2) = W\rcoord(2,1) = WX | 1 | 2\r\n1 | B | W \t\t\t\r\n2 | W |For the given coordination 1,1 the result would be `captured` (true).\r Another example, consider the following coordinates:\rcoord(2,2) = W\rcoord(2,3) = W\rcoord(3,1) = W\rcoord(3,2) = B\rcoord(3,3) = B\rcoord(3,4) = W\rcoord(4,2) = W\rcoords(4,3) = WX | 1 | 2 | 3 | 4 | 5 |\r\n2 | E  | W | W | W | E\r\n3 | W  | B | B | B | W\t\r\n4 | E  | W | W | W | EFor the given coordination 3,2 (or 3,3) the result would be `true` (captured).\rIf we would either remove one of the W coords (thus making it empty), or change it to be a B piece, the result would be `false` (not captured).\r As basic primitive, you are provided with a function that translates coordination into its state:getState (x, y) == Black, White, Out Of Bound, Empty", "k": ["coord", "piece", "captured", "coords", "game board"]}
{"i": "5769670324912128", "t": "123+123+123", "k": []}
{"i": "6271976011202560", "t": "Employees Per Department\rTwitter Interview Online Test SQL\r A company uses 2 data tables, Employee and Department, to store data about its employees and departments. \r Table Name: Employee\rAttributes: \rID Integer,\rNAME String,\rSALARY Integer,\rDEPT_ID Integer\r Table Name: Department\rAttributes:\rDEPT_ID Integer,\rName String,\rLOCATION String\r View sample tables:\rhttps://s3-us-west-2.amazonaws.com/aonecode/techblog/50cfcdd1d61f1bd6002cf4d3b4a61deb-min.jpeg\r Write a query to print the respective Department Name and number of employees for all departments in the Department table (even unstaffed ones). \r Sort your result in descending order of employees per department; if two or more departments have the same number of employees, then sort those departments alphabetically by Department Name.", "k": ["twitter interview online", "interview online test", "online test sql", "department twitter interview", "twitter interview"]}
{"i": "5716577684029440", "t": "The numbers on a telephone keypad are arranged thus:1 2 3\r\n4 5 6\r\n7 8 9\r\n  0Starting from any digit, and choosing successive digits as a knight moves in chess, determine how many different paths can be formed of length n. There is no need to make a list of the paths, only to count them.\r A knight moves two steps either horizontally or vertically followed by one step in the perpendicular direction; thus, from the digit 1 on the keypad a knight can move to digits 6 or 8, and from the digit 4 on the keypad a knight can move to digits 3, 9 or 0. A path may visit the same digit more than once.\r Your task is to write a function that determines the number of paths of length n that a knight can trace on a keyboard starting from any digit .  \rpublic int findNumberOfPaths(int digit, int step){", "k": ["choosing successive digits", "choosing successive", "knight moves", "knight", "telephone keypad"]}
{"i": "5136746361651200", "t": "Explain the Data Structure which is well suited to implement UNIX commands like PWD, LS, MKDIR, CD in an imaginary OS. No code required.", "k": ["data structure", "implement unix commands", "explain the data", "mkdir", "commands like pwd"]}
{"i": "5672770494005248", "t": "Unsorted array and a position \u2018P\u2019. Return the element that is likely to come to the given location upon sorting the array. TC in O(n).", "k": ["unsorted array", "unsorted", "position", "array", "return the element"]}
{"i": "5183905102561280", "t": "A thief trying to escape from a jail has to cross \u2018N\u2019 walls each with varying heights. He climbs \u2018X\u2019 feet every time. But, due to the slippery nature of those walls, every times he slips back by \u2018Y\u2019 feet. Now the input is given as (N, {H1, H2, H3,\u2026.Hn}, X, Y}. Calculate the total number of jumps required to cross all walls and escape from the jail.", "k": ["varying heights", "heights", "walls", "thief", "varying"]}
{"i": "6259418600570880", "t": "Singleton Design pattern. How you make it double ton(in even call of getInstance() first object should be return and odd call of getInstance() second instance should be return). Make it triple ton.", "k": ["singleton design pattern", "singleton design", "design pattern", "design", "call of getinstance"]}
{"i": "5082791237648384", "t": "Print series 010203040506. Using multi-threading 1st thread will print only 0 2nd thread will print only even numbers and 3rd thread print only odd numbers.", "k": ["print series", "print", "thread print", "thread", "thread will print"]}
{"i": "5203575515906048", "t": "Add a digit to a number that is represented by a linked list, where each node is a digit of the number. The linked list couldn\u2019t be modified, except the digits to be modified in answer and the number could be infinitely long. Need to do it in O(1) space.", "k": ["linked list", "add a digit", "number", "linked", "list"]}
{"i": "5133518693728256", "t": "Find the Minimum length Unsorted Subarray, sorting which makes the complete array sorted", "k": ["length unsorted subarray", "minimum length unsorted", "complete array sorted", "unsorted subarray", "find the minimum"]}
{"i": "5645741191069696", "t": "Maximum difference between node and its ancestor in Binary Tree in O(n) time.", "k": ["binary tree", "ancestor in binary", "maximum difference", "difference between node", "time"]}
{"i": "5633808161308672", "t": "Given a very large binary number which cannot be stored in a variable, determine the remainder of the decimal equivalent of the binary number when divided by 3. Then generalize to remainder of any number 'k'", "k": ["large binary number", "binary number", "large binary", "decimal equivalent", "binary"]}
{"i": "5745018957463552", "t": "Given a pre-order traversal, construct a binary search tree in O(n) time.", "k": ["binary search tree", "pre-order traversal", "construct a binary", "binary search", "search tree"]}
{"i": "5725309218324480", "t": "Given a large text file, find an efficient algorithm to find the least distance(measured in number of words) between any two given words.", "k": ["large text file", "text file", "measured in number", "large text", "efficient algorithm"]}
{"i": "5679804174041088", "t": "here are tuples given for each users of a website (Si,Ei) where Si denotes the when the user entered the website and Ei denotes when the user exits the website .Find the maximum number of users active of website at any time duration.", "k": ["find the maximum", "time duration", "maximum number", "user entered", "user exits"]}
{"i": "5735952684154880", "t": "There is a binary stream coming . You need to print true or false based on the fact whether the number formed is divisible by 5 or not.", "k": ["binary stream coming", "stream coming", "binary stream", "print true", "true or false"]}
{"i": "5669500950151168", "t": "What is the last digit of the largest prime number?", "k": ["largest prime number", "prime number", "largest prime", "number", "digit"]}
{"i": "5676812192448512", "t": "How many integers from 1  to 100 inclusive can be written as the product of two (not necessarily distinct) primes?", "k": ["primes", "necessarily distinct", "inclusive", "distinct", "integers"]}
{"i": "5680768931069952", "t": "Mr. White is an approximately forty years old father with 4 sons of distinct ages. Writing his age 3 times in succession, we get a 6-digit number that is equal to the product of his age, his wife's age and his 4 sons' ages.\r Give the sum of his wife's age and all 4 sons' ages.", "k": ["approximately forty years", "sons of distinct", "approximately forty", "forty years", "years old father"]}
{"i": "5740401733402624", "t": "2^2014 + 1007^4\rIs this sum equal to a prime number?", "k": ["prime number", "sum equal", "number", "sum", "equal"]}
{"i": "5756578861940736", "t": "If a prime 'p' can be expressed as the difference of square of two positive integers, then find the \rPrime Numbers: Level 1 Challenges\r  If a prime can be expressed as the difference of square of two positive integers, then find the remainder, when (p^2 + 138 ) is divided by 4.", "k": ["positive integers", "difference of square", "prime numbers", "find the remainder", "integers"]}
{"i": "5768194064121856", "t": "Find the number of primes among the numbers mentioned below. (! means factorial)\r345!+2, 345!+3, 345!+4, ......., 345!+345.", "k": ["find the number", "numbers mentioned", "number of primes", "find", "number"]}
{"i": "5130288341450752", "t": "The sum of three primes is 100. One of them exceeds the other by 36. Find the largest prime.", "k": ["sum", "find the largest", "largest prime", "find", "primes"]}
{"i": "5690127127937024", "t": "P, P+2, and P+3 \rIf P > 3, can all three numbers above be prime?", "k": ["prime", "numbers"]}
{"i": "5657798238011392", "t": "Consider a digital clock. The first time after midnight when the three digits are all prime numbers is 2:22 am. What is the last time before 10:00 am when the three digits on the clock are all prime numbers?", "k": ["prime numbers", "digital clock", "prime", "digital", "digits"]}
