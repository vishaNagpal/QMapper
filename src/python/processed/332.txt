{"i": "14948723", "t": "Given a sorted string s1 and an unsorted string s2. Sort s2 based on the sorting algorithm applied in s1. \rEx: \rs1 = fghab\rs2 = abfmgfghnaixcv\r Output: ffgghaabmnixcv", "k": ["sorted string", "unsorted string", "string", "abfmgfghnaixcv output", "sorting algorithm applied"]}
{"i": "14947723", "t": "Estimate the # of unique strings with limited memory\rGiven a large array of strings S = [s1, s2, ... sN], determine Uniq(S) = how many unique strings there are in S. \r(b) How large can N be to solve on one machine using only memory? \r(c*) What if N is too large to fully fit in memory?", "k": ["determine uniq", "unique strings", "strings", "estimate", "unique"]}
{"i": "14944714", "t": "Random number generator\r There is an ideal random number generator, which given a positive integer M can generate any real number between 0 to M with equal probability.\rSuppose we generate 2 numbers x and y via the generator by giving it 2 positive intergers A and B, what's the probability that x + y is less than C? where C is a positive integer.\r Input Format\rThe first line of the input is an integer N, the number of test cases.\rN lines follow. Each line contains 3 positive integers A, B and C.\rAll the integers are no larger than 10000.\r Output Format\rFor each output, output a fraction that indicates the probability. The greatest common divisor of each pair of numerator and denominator should be 1.\r Input\r3\r1 1 1\r1 1 2\r1 1 3\r Output\r1/2\r1/1\r1/1", "k": ["random number generator", "ideal random number", "random number", "ideal random", "number generator"]}
{"i": "14944711", "t": "In a hashmap, how to delete all the odd entries? i.e, if hash map contains key1, value1, key2, value2, key3, value3, ...   we've to delete all the odd entries, that is to remove all the keys alone without deleting values", "k": ["odd entries", "entries", "hashmap", "delete", "odd"]}
{"i": "14941713", "t": "JAVA Question:\rThere is one class which extends Thread and it takes \"Symbol (Clubs, Heart, Dice, Spade)\" as a parameter in constructor.\rWe've four threads one each for each symbol. Now they want to print as given below:\r Dice A\rHearts A\rSpade A\rClubs A\rDice 2\rHearts 2\rSpade 2\rClubs 2\r and so on...\r How to achieve this. I thought of using wait/notify, but we've to some how make sure that each thread gets run in a particular order to print this.", "k": ["java question", "parameter in constructor", "class which extends", "java", "question"]}
{"i": "14921787", "t": "In Basketball - score point system- 1 pointer , 2 pointer and 3 pointer score are valid. Given a team's total score ,you need to provide total number of combinations that sums to team's total score. Ex:\rTESTCASE 1: Team' score input:8, output:10\r//(valid point in rule)*(no of such points)=(Total Score)\r1*8=8;                 2*4=8;              1*2+3*2=8; \r1*6+2*1=8;         1*5+3*1=8;    1*4+2*2=8;    1*3+2*1+3*1=8;              1*1+2*2+3*1=8;            1*2+2*3=8;          2*1+3*2=8", "k": ["team total score", "score point system", "total score", "pointer score", "team total"]}
{"i": "14956684", "t": "A permutation is a list of  K numbers, each between 1 and K (both inclusive), that has no duplicate elements.\r Permutation X is lexicographically smaller than Permutation Y iff for some i <= K:", "k": ["duplicate elements", "permutation", "numbers", "inclusive", "elements"]}
{"i": "14954671", "t": "An operation \"swap\" means removing an element from the array and appending it at the back of the same array. Find the minimum number of \"swaps\" needed to sort that array.\r Eg :- 3124\rOutput: 2 (3124->1243->1234)\r How to do it less than O(n^2) ?", "k": ["removing an element", "swap", "swaps", "array", "operation"]}
{"i": "14955665", "t": "Mastermind is a game of two players. In the beginning, first player decides a secret key, which is a sequence (s1,s2,...sk) where 0 < si <= n, Then second player makes guesses in rounds, where each guess is of form (g1,g2, ...gk), and after each guess first player calculates the score for the guess. Score for a guess is equal to number of i's for which we have gi = si.\r For example if the secret key is (4,2,5,3,1) and the guess is (1,2,3,7,1),then the score is 2, because\rg2 = s2 and g5 = s5. \r Given a sequence of guesses, and scores for each guess, your program must decide if there exists at least one secret key that generates those exact scores.\r Input\r First line of input contains a single integer C (1 <=C <= 100). C test-cases follow. First line of each test-case contains three integers n,k and q. (1 <=n,k <=11, 1<=q<=8). Next q lines contain the guesses.\r Each guess consists of k integers gi,1, gi,2,....gi,k separated by a single space, followed by the score for the guess bi (1 <= gi,j<=n for all 1 <=i <=q, 1 <=j <=k; and 0 <= bi <=k )\r Output\r For each test-case, output \"Yes\" (without quotes), if there exists at least a secret key which generates those exact scores, otherwise output \"No\".\r Sample Input\r2\r 4 4 2\r2 1 2 2 0\r2 2 1 1 1\r4 4 2\r1 2 3 4 4\r4 3 2 1 1\r Sample Output\r Yes \rNo", "k": ["guess", "secret key", "score", "player", "secret"]}
{"i": "14942666", "t": "which is the best way to find most significant 1 in binary representation?", "k": ["find most significant", "binary representation", "significant", "representation", "find"]}
{"i": "14960662", "t": "Given a array of integers , find 3 indexes i,j,k such that, i<j<k and  a[i] < a[j] < a[k]. Best possible is a O(n) algorithm.", "k": ["array of integers", "find", "indexes", "integers", "array"]}
{"i": "14945667", "t": "Write a function to determine node in a tree at maximum depth , with ties to the right ( ties to the right means , right most node at MaxDepth D )", "k": ["write a function", "maximum depth", "function to determine", "tree at maximum", "determine node"]}
{"i": "14944663", "t": "Given an arrangement of balls on 2-D Euclidean plane (i.e a flat surface), you have to assign a color to each ball\rsuch that no two adjacent balls are of the same color. A greedy approach can be used to reduce the number of\rcolors required.\rQuestion:\rModel this as a graph problem. [Hint: Balls become vertices, adjacency relation is modeled by edges, and each\rvertex has a unique identification number and a color.]. Write a program that finds the number of colors\rrequired and outputs the balls (unique ids) along with their colors.. Note that to solve this problem, all balls and\rtheir neighbors must be inspected.\rUse adjacency lists to represent the graph.\rThe input to this program is a file containing the number of balls in the first line followed by the list of\radjacencies \u2013 one per line: e.g. an input line containing\rx,y\rdenotes that balls x and y are neighbors. Here x and y denote the unique ids of the two balls.\rA simple greedy algorithm for this color assignment problem is as follows:\rI. Sort all the vertices in the graph on the basis of their degrees [This sorting should be done in-place on\rthe array of adjacency lists.]. Assume colors are ordered c1, c2, \u2026\rII. Let u be the un-colored vertex with the smallest degree. [Break ties in favor of the vertex with the\rsmaller id]\ra. Assign first color ci in the list of colors to u such that\rcolor(u) \uf0e7 ci where ci != color(vj ) for any vertex vj in the adjacency list of u.\rIII. Repeat step II until all vertices are colored.\rImplement your solution using a Graph ADT that supports the following interfaces:\ra) Graph createGraph() : Creates an empty graph.\rb) Graph addEdge(Graph g, Vertex v1, Vertex v2): adds an edge from vertex v1 to vertex v2 to the graph g.\rIf a new vertex is found, then an entry has to be added in the adjacency list\rc) Iterator getNeighbors(Graph, Vertex): gets a list of neighbors of the vertex.\rd) Graph sortGraphbyDegree(Graph) : sorts the adjacency list based on degree of the vertices. The vertex\rwith smallest degree will appear first, and the vertex with the largest degree will appear last. If two\rvertices are having the same degree, then their order of appearance will not change.\re) Color chooseColor(Graph, Vertex): returns the first color in the list of colors that satisfies the condition\rmentioned in step (2) above.\rf) int assignColors(Graph) : invokes chooseColor vertex by vertex and stores the chosen color in the\rcorresponding vertex. This function returns the number of colors used.\rg) printGraph(Graph , num_colors_used, file) : prints the number of colors used, num_colors_used, in the\rfirst line of the output file. It then prints the graph into the file using the following format:\r(vertexid,color):v1,v2,v3,vn\rwhere vertexid is the unique id of the vertex, color is the color assigned to the vertex, and v1,v2,\u2026,vn\rcorrespond the unique identification numbers of the vertices that are adjacent to the current vertex.\rData structures Used:\rGraph: This is a dynamic array, such that each entry in the array contains a pointer to vertex vi, the degree of vi\rand a list of neighbors of vi.\rVertex: Each vertex contains the unique identification number of the vertex, its color.\rList: This is for the list of neighbors, such that each entry in the list corresponding to vertex vi consists of a\rpointer to vertex vj, \u2200 vj \u00ce neighborhood(vi)\rSteps to perform:\r1. Write the relevant Header files for an adjacency list representation of Graph\r2. Write a driver file that reads an input file containing the edges in the graph and prints the graph after\rcoloring the balls. This driver uses the adjacency list for graph representation.\ra. The driver takes the name of the input file and output file as command line parameters.\rb. From the file, find number of nodes involved.\rc. For each line in the input file corresponding to an edge\ri. add the edge using call to addEdge().\rd. The driver must then invoke function sortGraphbyDegree() to sort the vertices in the increasing\rorder of their degrees.\re. Invoke assignColors to assign colours to each vertex.\rf. Print the number of colours used and the resultant graph into the output file using the call to\rthe function printGraph(). If no output file is mentioned in the command-line, then print the\rgraph into the screen.\r3. Write the code for the functions a - g", "k": ["graph", "vertex", "euclidean plane", "color", "list"]}
{"i": "14912744", "t": "You are given an array of n elements [1,2,....n]. For example {3,2,1,6,7,4,5}.\rNow we create a signature of this array by comparing every consecutive pir of elements. If they increase, write I else write D. For example for the above array, the signature would be \"DDIIDI\". The signature thus has a length of N-1. Now the question is given a signature, compute the lexicographically smallest permutation of [1,2,....n]. Write the below function in language of your choice.\r vector* FindPermute(const string& signature);", "k": ["signature", "elements", "array", "write", "ddiidi"]}
{"i": "14923743", "t": "Input:\rGiven a hexadecimal value:\rint i=0x3b24\rOutput: 0x243b\r Some other case:\rinput: 0x123456\routput:0x456123", "k": ["output", "input", "int", "case", "hexadecimal"]}
{"i": "14933676", "t": "A stream of numbers of length not more than M will be given. You don't know the exact length of the stream but are sure that it wont exceed M. At the end of the stream, you have to tell the N/2 th element of the stream, considering that N elements came in the stream. what would be best space complexity with which you can solve this problem", "k": ["stream", "numbers of length", "length", "exact length", "numbers"]}
{"i": "14910746", "t": "Why would you chose Java of C# to build your application?", "k": ["chose java", "build your application", "java", "application", "chose"]}
{"i": "14931662", "t": "The purpose of the Lo-Fi UI and storyboards is to debug the UI before you program it.\r   True\r FalseThe purpose of the Lo-Fi UI and storyboards is to debug the UI before you program it.\r   True\r False", "k": ["true falsethe purpose", "true false", "lo-fi", "storyboards", "debug"]}
{"i": "14922718", "t": "What is a HashMap?  What is one advantage of using a HashMap versus a TreeMap?", "k": ["hashmap", "hashmap versus", "versus a treemap", "treemap", "advantage"]}
{"i": "14923726", "t": "Given an array of integers, find the mode and the frequency of the mode.  If possible, print each number along with its frequency.", "k": ["find the mode", "array of integers", "mode", "integers", "find"]}
{"i": "14922717", "t": "In a hash map with objects as keys,\ra) what method do you have to overwrite to do this?\rb) how would you resolve a collision?", "k": ["objects as keys", "hash map", "map with objects", "keys", "resolve a collision"]}
{"i": "14908715", "t": "Write a program which makes use of two classes named integer and character. The class integer has one integer data\rmember lying in the private section and one member function named input lying in the protected section.The member\rfunction input is used to enter the data in the data member.The class character publically inherits from the class\rinteger.The class character has one character data member and two member functions named calc and display.The calc\rfunction ask the user to input data in the character data member which will be a number from 1-9.The calc function will\rdivide the integer number (Data member of the class integer) entered earlier with the number entered in the character\rand the display function will display the message \u201cDivides Completely\u201d in the case the integer is divided completet and\rthe message \u201cDoes not divide\u201d otherwise.The ASCII values of numbers 0-9 range from 48-57.Eg. run is as follows:\rEnter Integer:10\rEnter Character :2\rResult: Divides completely.", "k": ["classes named integer", "character data member", "integer data member", "member function named", "data member"]}
{"i": "14924716", "t": "Write a program which contains a class named String (please take care of the case). The class should be capable of\rholding a string containing more than one word. The class should at least have a parametric constructors by which we\rare going to supply a sentence at run time. Class string should be defined in this way that the following statement\rshould be executed with their proper output.\rString str1; //string with length 0\rString str2;\rcin>>str2; // to print the char elements of str2;\r(Don\u2019t use any string library function for the any purpose)\rYou are free to add any C++ concepts, any other data members, member functions and constructors you think are\rnecessary to solve the problem.", "k": ["write a program", "class named string", "string", "class named", "class"]}
{"i": "14911731", "t": "Write a program which contains a class named String (please take care of the case). The class should be capable of\rholding a string containing more than one word. The class should at least have a parametric constructor by which we\rare going to supply a sentence at run time. The class should contain a member function \u2018palindromecheck()\u2019which\rreverses the words of the sentence in their proper original order. The class String should be user defined. You are free\rto add any other data members, member functions and constructors you think are necessary to solve the problem.\rSample Run:-\rEnter sentence:-\rMom\u2026nothing can be better than you\rOutput:-\rSentence with reversed words is:-\ryou than better be can nothing \u2026moM\rNot Palindrome\rSample Run:-\rEnter sentence:-\rwife loves husband,husband loves wife\rOutput:-\rSentence with reversed words is:-\rwife loves husband,husband loves wife.\rPalindrome\rYou are free to add any C++ concepts, any other data members, member functions and constructors you think are\rnecessary to solve the problem.", "k": ["class named string", "write a program", "named string", "sentence", "class"]}
{"i": "14908707", "t": ".What do you mean by free pool in data structures", "k": ["data structures", "free pool", "pool in data", "structures", "free"]}
{"i": "14921707", "t": "You are given an array of N elements.arrange array in such a way that sum of any cunsucative k numbers are divisible \rby NUM.if not possible print -1.(it may possible that there are many solution possible then return any one)\r For example:\rN=6\rk=3\rNUM=63\rarray={80,17,90,82,27,19}\r Answer:{19,17,27,82,80,90}\rany 3 cunsucative no. like (27+82+80)%63=0\ranother solution={27,19,17,90,82,80}\r may be a hint :try to group all no.'s in mod NUM map and use vector and map.", "k": ["mod num map", "mod num", "num map", "numbers are divisible", "divisible by num.if"]}
{"i": "14920703", "t": "Find all elements in an array that appears 1/k times where k is any number such that 1<k<n. n is the size of array.", "k": ["find all elements", "size of array", "array", "find", "elements"]}
{"i": "14916697", "t": "There is a given linked list where each node can consist of any number of characters :- For example \ra-->bcd-->ef-->g-->f-->ed-->c-->ba. \rNow please write a function where the linked list will return true if it is a palindrome .\rLike in above example the linked list should return true", "k": ["linked list", "number of characters", "node can consist", "linked", "bcd"]}
{"i": "14911702", "t": "given y bytes and you can transfer only x bytes at once..give a mathematical expression having only + - / * which gives the number of iterations to copy y bytes. ( dont try giving modulo operator answers )", "k": ["mathematical expression", "number of iterations", "iterations to copy", "bytes", "copy y bytes"]}
{"i": "14914698", "t": "If you 15,000 HTML files, find all phone numbers in the files?\rLast question and only asked to give general ideas!", "k": ["html files", "find all phone", "phone numbers", "html", "files"]}
