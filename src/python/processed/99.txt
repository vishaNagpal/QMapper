{"i": "5768946767626240", "t": "You are given two string (like two statements). You have to remove all the words of second string from first string and print the remaining first string. Please maintain the order of the remaining words from the first string. You will be only removing the first word, not all occurrence of a word.\rExample: Str1 = \"A Statement is a Statement\", Str2 = \"Statement a\"\rOutput: \"A is Statement\"", "k": ["statement", "string", "remaining", "words", "word"]}
{"i": "5749560358993920", "t": "You are given an integer, print its 4th least significant bit", "k": ["significant bit", "integer", "print", "bit", "significant"]}
{"i": "6530793972170752", "t": "A binary gap within a positive integer N is any maximal sequence of consecutive zeros that is surrounded by ones at both ends in the binary representation of N.\r For example, number 9 has binary representation 1001 and contains a binary gap of length 2. The number 529 has binary representation 1000010001 and contains two binary gaps: one of length 4 and one of length 3. The number 20 has binary representation 10100 and contains one binary gap of length 1. The number 15 has binary representation 1111 and has no binary gaps.\r Write a function:\r int solution(int N);\rthat, given a positive integer N, returns the length of its longest binary gap. The function should return 0 if N doesn't contain a binary gap.\r For example, given N = 1041 the function should return 5, because N has binary representation 10000010001 and so its longest binary gap is of length 5.\r Assume that:\r N is an integer within the range [1..2,147,483,647].\rComplexity:\r expected worst-case time complexity is O(log(N));\rexpected worst-case space complexity is O(1).", "k": ["binary gap", "binary", "binary representation", "gap", "longest binary gap"]}
{"i": "5941866982801408", "t": "You are given a rotated sorted array of size N. You have to search a given number into it.\rExample: [4,6,8,14,90,-9,-2,0,3], Search -2.", "k": ["rotated sorted array", "rotated sorted", "sorted array", "array of size", "search"]}
{"i": "4914013663133696", "t": "You are given an array of words. from each word, you make a chain, in that, you remove one char at a time and you remove that char only when the remaining word is present in the input array.\rFor Example, if the input is {a, b, ab, ac, aba}\rthen the possible chains are\rfrom 'a', there is no chain, the chain it 'a' itself (of length 1)\rsimilarly, from 'b', the chain length is 1 one (length is defined by the number of words in the chain)\rnow from 'ab', there are two possibilities which are ({ab -> b when you remove a},{ab -> a when you remove b}). So the max length is 2 here\rnow from 'ac', we only have one possibility which is ({ac -> a when we remove c}), because, when we remove 'a', we left with 'c' which is not present in the input.\rNow, you have to find the length of the biggest such chain.\rInput: array of words\rOutput: length of the biggest such chain.", "k": ["remove", "chain", "length", "input", "remaining word"]}
{"i": "4815967075958784", "t": "Friends have transitive property where if A is the friend of B, and B is the friend of C then A is also the friend to C. Like that we make friend circle.\rYou have to find the number of such circles in a given list of friends\rYou are given a NxN matrix, where columns of each row will have either 'N' or 'Y', where 'N' represents not a friend and 'Y' represents Yes, they are friends.\rExample : \rYNY\rNYN\rYNY\rThe output is 2({0,2},{1}), as the 0 and 2 are friends of each other and 1 is another friend who is neither friend with 0 nor with 2.", "k": ["yny nyn yny", "transitive property", "friend", "friends", "yny nyn"]}
{"i": "6247626241474560", "t": "Find two strings are meta string or not\rfor eg:-\rConverse\rConserve\r are meta strings because if we swap s and v in the string both string will become equal. If swapping of more than one pair can be done then it is not a meta string", "k": ["converse conserve", "conserve are meta", "meta string", "converse", "meta"]}
{"i": "4882624968392704", "t": "Find the median of a bst in O(n) time and O(1) space", "k": ["find the median", "space", "find", "time", "median"]}
{"i": "5098998307225600", "t": "How you register one process with other process?\rEg: In c++ main is one process it has to create one process and then it forks other three process and each forked information should be registered with first forked process?", "k": ["process", "register one process", "forked process", "register", "forked"]}
{"i": "5153693776216064", "t": "How to pass c++ objects from one process to other process ?\rEg: one process constructs C++ object with some data other process should receive this c++ object and display the data in it.", "k": ["process constructs", "process", "object and display", "display the data", "object"]}
{"i": "5684676288053248", "t": "VMWare Standard Online Screen \r 3rd Question Given an array of strings and a long description about the formatting of IPv6 and IPv4 (it took me more than 5 minutes to read the description). Write a function to find if a string is IPv4 or IPv6 address or neither.\r 4th Question Given an integer array, whenever a duplicate number is found, you may increment it (++). Find the minimum sum of the numbers in the array by keep incrementing the dups until all the numbers are unique.", "k": ["standard online screen", "vmware standard online", "online screen", "standard online", "vmware standard"]}
{"i": "5727049898524672", "t": "VMWare Standard Online Screen \r The Online Assessment was called something like Life Cycle Challenge-qpan.\rThere are 4 questions in total given 60 minutes. The problem description was unexpectedly long that it takes 5 minutes just to read a question.\r 1st Question Design a function to create BST. Given an integer array, insert the integers into the binary search tree and print all the steps taken.\r 2nd Question Given an integer, print the index of all the positions in which the binary bit is 1 in order.", "k": ["life cycle challenge-qpan", "standard online screen", "vmware standard online", "cycle challenge-qpan", "standard online"]}
{"i": "5641470259232768", "t": "Write a program which takes input a sorted array and positive number and updates the array so that if x appears m times in array then it appears exactly min(2,m) times in array. the update should be performed in one pass with no additional memory", "k": ["write a program", "input a sorted", "positive number", "sorted array", "times in array"]}
{"i": "5696391079788544", "t": "Given a count and maxvalue, write a program to return count number of unique random integers between 0 and maxvalue.", "k": ["unique random integers", "return count number", "write a program", "program to return", "number of unique"]}
{"i": "4795310699184128", "t": "tokenize string, \"\" and [] are token flags, such as \rmytable \"foo\" [bar] \"\" [[[[]]]. \r \"\" Turned into \",]] turned into], [[not escaped\rThe results of the example given above:\rmytable\rfoo\rbar \"\r[[]\rpublic List<String> tokenizestring(String s){\r}", "k": ["token flags", "tokenize string", "mytable foo bar", "public list", "string"]}
{"i": "5927035386986496", "t": "Facebook Senior Engineer On-site 2017\r 1st Round\rQuestion 1: Binary tree to doubly linked list.\rQuestion 2: Read 4 (Given the read4 API, read an entire file)\r 2nd Round\rCulture fit. No coding.\r 3rd Round\rQuestion: System Design POI (Point of Interest. Given a point, find things within a radius).\r Lunch\r4th Round\rQuestion 1: Decode way\rQuestion 2: Random max index\r 5th Round\rQuestion: System design + component-wise design on download manager", "k": ["senior engineer on-site", "facebook senior engineer", "round question", "engineer on-site", "senior engineer"]}
{"i": "6259998431641600", "t": "What design pattern is used to implement a   SynchronizedHashMap?", "k": ["implement a synchronizedhashmap", "design pattern", "synchronizedhashmap", "design", "pattern"]}
{"i": "5716289126400000", "t": "wefa", "k": ["wefa"]}
{"i": "5640468256784384", "t": "13 13 13 18 18 18 18 18 18 18 18 18 =309", "k": []}
{"i": "5717938125406208", "t": "F (n) = 3n + 1 (if n is odd) or n / 2 (if n is even)\rCollapse sequence refers to each number according to this formula \runtil the sequence becomes equal to 1,\rFind the number (which is not greater than 10000), which will have the longest Collapse sequence.\r public int getlongestCollapsesequence(int n){\r }", "k": ["collapse sequence refers", "longest collapse sequence", "collapse sequence", "longest collapse", "find the number"]}
{"i": "5678734737670144", "t": "Find the Lexicographic next word of the input word from a list of words\rExample\rWords list\r[Cat, dog, cow, donkey, zebra, monkey], \rinput \rduck\routput \rmonkey\r Input \rdog\routput \rdonkey \rCan you use trie to solve it?\rpublic String findNextWord(List<String> words, String input){\r}", "k": ["duck output monkey", "dog output donkey", "find the lexicographic", "input duck output", "output monkey input"]}
{"i": "5679651176316928", "t": "You are given an island which contains cliffs of various heights. A water droplet is placed on one of the cliffs. The water droplet always flows from higher height to lower height. Write a program that can calculate the lowest height cliff in the island that the water droplet can reach in the most efficient way you can think of. Example: if the droplet is placed on a cliff of height 5 and it is surrounded by cliffs of heights 6,3,2,2; it can flow to either of the cliffs of height 3,2,2 and then further flow from there.", "k": ["water droplet", "cliffs", "droplet", "height", "water"]}
{"i": "5711393668988928", "t": "Given a equation in the form of \"3x+4y+2=-5y+2x+10\", simplify the equation to be in form \"y=Ax+B\", and return A,B. Also allow parenthesis to be in the equation. Ex. \"3y-4x+(3-(2x-3y))=10y\", result is \"y =0.75 - 1.5x\"", "k": ["simplify the equation", "form", "equation", "simplify", "return"]}
{"i": "5198851397910528", "t": "Q1. You are given a binary search tree (with unique values) and two values. You need to find their lowest common ancestor.  (Expected Complexity O(log(n)) + O(1))\rQ2. Now let's assume the tree has duplicates, and when a duplicate number come, the insertion logic chooses left node. (Expected Complexity O(log(n)) + O(1))\rQ3.Now let's assume the input tree is a binary tree instead of the binary search tree.(Expected Complexity O(n) + O(1))", "k": ["expected complexity", "expected", "complexity", "tree", "binary"]}
{"i": "5726355456000000", "t": "You are given a vector of integers. You have to delete the odd numbers from it.\rExpected complexity is O(N) Time and O(1) space", "k": ["vector of integers", "integers", "vector", "space", "time"]}
{"i": "5738269695279104", "t": "5th Round\rOpen-ended question What happens when you type a url in the browser and hit enter?\r Second question Given an array of integers, print all the numbers that meet the following requirement - when the number is greater than every number on its left and smaller than every number on the right.", "k": ["round open-ended question", "round open-ended", "hit enter", "open-ended question", "type a url"]}
{"i": "5717129664921600", "t": "interviewed by senior engineer\rQuestion Given two strings s1 and s2, combine the characters in the strings and maintain the sequence of characters \rFollow-up If s1 has a length of m and s2 has a length of n, how many ways the strings could be merged. Figure out the formula F(m, n) = ?", "k": ["senior engineer question", "engineer question", "characters follow-up", "interviewed by senior", "senior engineer"]}
{"i": "5717409575993344", "t": "write a function to generate a random 4 digit unique even number, the four digits cannot be the same, 1234 is valid, but 1134 is not valid", "k": ["write a function", "generate a random", "unique even number", "function to generate", "digit unique"]}
{"i": "5105947228766208", "t": "Group by with having related questions. ER provided was customer table.", "k": ["related questions", "group", "questions", "related", "customer table"]}
{"i": "5177656002740224", "t": "Find the % of all male customers in a specific area out of all the customers in that area.", "k": ["male customers", "specific area", "customers", "find", "area"]}
