{"i": "5761251936305152", "t": "Given a list of email list, find all email addresses that are in all the email list.", "k": ["email list", "email addresses", "list", "email", "find all email"]}
{"i": "5649138819530752", "t": "A new airline company is setting up operations and needs your help! They want to optimize their routes so as to cover a full list of cities, wile minimizing the cost of their operations.\rYou are provided with the number of N cities and with the costs of operating flights between some of the cities.\rCan you design an algorithm that will return the list of routes that cover all the N cities at the minimum operational cost?\r Assumtions:\r1. not all direct routes between cities are possible, but all cities can be reached either directly of via intermediate cities. You are provided with the complete set of routes that are possible as input to your algorithm.\r2. the costs of operating a route from any city to any other directly connected city is known and unique (i.e., no two costs between direct routes are the same)\r3. the cost of operating a route from city X to city Y is equal to the cost of operating the route from city Y to city X\r Your algorithm will get as input from stdin the following:\r1. on the first line, the number of cities N\r2. on the second line, the total number of possible routes K\r3. on the subsequent K lines, the possible routes between cities and their operational cost, separated by spaces. Cities are integer numbers from 0 to N-1. costs are floats.\r The output of your algorithm should be the list of routes chosen to be operated at the minimum cost, one route per line. After the list of routes, on the final line the total cost of operating all chosen routes should be printed.\r What is the time complexity of the algorithm you've created?\r Example:\rInput\r8\r16\r4 5 0.35\r4 7 0.37\r5 7 0.28\r0 7 0.16\r1 5 0.32\r0 4 0.38\r2 3 0.17\r1 7 0.19\r0 2 0.26\r1 2 0.36\r1 3 0.29\r2 7 0.34\r6 2 0.40\r3 6 0.52\r6 0 0.58\r6 4 0.93\r Output\r0 7 0.16\r2 3 0.17\r1 7 0.19\r0 2 0.26\r5 7 0.28\r4 5 0.35\r6 2 0.40\r1.81", "k": ["routes", "cities", "cost", "city", "airline company"]}
{"i": "5092414932910080", "t": "You are given a set of unique characters and a string.\r Find the smallest substring of the string containing all the characters in the set.\r ex:\rSet : [a, b, c]\rString : \"abbcbcba\"\r Result: \"cba\"", "k": ["unique characters", "set", "string", "characters", "result"]}
{"i": "5686962423857152", "t": "Suppose you are in the middle of Africa, each machine is on an Edge network, and each packet between the machines costs $1.00. Write a solution that minimizes the cost.", "k": ["edge network", "middle of africa", "machines costs", "africa", "edge"]}
{"i": "5633946689732608", "t": "You're the guard of a prison, you want to keep an eye on the most dangerous prisoner. Each prisoner has a danger rank of his own and a group of friends (prisoners, who also have danger ranks). The guard has a list of prisoners with their corresponding danger ranks and he also has a list of the friends of each of the prisoners in the prison.\r The danger rank is computed as follows: Prisoner 1 has a danger value of 5, his friends are Prisoner 2 and Prisoner 5, who have danger values of 3 and 4 respectively. So the danger value of Prisoner 1 is 5+3+4 = 12.\r There could be any number of prisoners. Whichever prisoner has the highest value is the most dangerous(computed using the above method).\r Friendship can be assumed to be symmetric.\r Come up with an efficient algorithm to find the most dangerous prisoner?\r The solution I came up with runs in quadratic time.\r A hash table which has the Prisoner as Key and list of his friends as value\rCompute the sum of danger rank of all friends one key at a Time. (n * N)\rMaintain a max count and update it as necessary.\rI believe there is a solution for this problem having better time complexity than O(N^2).", "k": ["prisoner", "danger", "danger rank", "prisoners", "friends"]}
{"i": "5734324101971968", "t": "You're the guard of a prison, you want to keep an eye on the most dangerous prisoner. Each prisoner has a danger rank of his own and a group of friends (prisoners, who also have danger ranks). The guard has a list of prisoners with their corresponding danger ranks and he also has a list of the friends of each of the prisoners in the prison.\r The danger rank is computed as follows: Prisoner 1 has a danger value of 5, his friends are Prisoner 2 and Prisoner 5, who have danger values of 3 and 4 respectively. So the danger value of Prisoner 1 is 5+3+4 = 12.\r There could be any number of prisoners. Whichever prisoner has the highest value is the most dangerous(computed using the above method).\r Friendship can be assumed to be symmetric.\r Come up with an efficient algorithm to find the most dangerous prisoner?", "k": ["prisoner", "danger", "prisoners", "danger rank", "dangerous prisoner"]}
{"i": "5717662313218048", "t": "From a web page, each logged in user can click on a plus icon and enter key-value pairs. There is restriction on the entered key and values. Design a schema to store the enter the key-value pairs entered by each user, such that given a key we should be able to retrieve all the username who entered that particular key.", "k": ["web page", "key-value pairs", "enter key-value pairs", "key-value pairs entered", "page"]}
{"i": "5687701183397888", "t": "IEEE float to IBM float value conversion", "k": ["ieee float", "ibm float", "float to ibm", "ieee", "float value conversion"]}
{"i": "4891677221191680", "t": "You are given as input on stdin the number of employees in a company and their direct line management relations between each other. Each person in the company can directly line-manage maximum 2 other employees. The input from stdin has the following format:\r1. on the first line, the number of employees\r2. on the subsequent lines, the line management relations in the format \u00abEmployeeM EmployeeN\u00bb - meaning EmployeeM manages EmployeeN (names are without spaces and spaces are used to separate the two names).\rThe input is correct (there are only direct management relations, no cycles).\rFor simplicity, the first line after the number of employees always contains the manager at the top of the hierarchy.\rWrite a program that reads the input file and then prints out the employees per level, in order of their importance (i.e. hierarchy):\r Example:\r Input:\r6\rJon Mark\rJon David\rMark Paul\rPaul Lee\rPaul Steve\r Output:\rJon\rMark David\rPaul\rLee Steve\r Input:\r7\rJon Lee\rLee Paul\rPaul Mark\rPaul David\rLee Steve\rSteve Mat\r Output:\rJon\rLee\rPaul Steve\rMark David Mat", "k": ["lee paul steve", "paul paul lee", "paul lee paul", "lee paul paul", "lee lee paul"]}
{"i": "4834977277542400", "t": "You given and instruction called DBNZ ( Decrement and Branch if Not Zero) \rwhich can be used as \"DBNZ X L10\". \rThis instruction decrement X by one and checks X, if X is not zero than branches line 10, \rif it is zero than continue to next instructions.\r By using DBNZ instruction implement CLEAR instruction.\rCLEAR can be used as \"CLEAR X\" which means set X to zero.\r By using DBNZ and CLEAR instructions implement NEGATE instruction\rNEGATE can be used as \"NEGATE X Y\" which means set Y to negative of X ( Y = -X)", "k": ["instruction called dbnz", "decrement and branch", "called dbnz", "dbnz", "clear"]}
{"i": "5631511174840320", "t": "write an algorithm to find sum of numbers which are smaller than N and divisible by 3 or 5\r Example:\rN = 9 => 3 + 5 + 6 = 14\rN = 10 => 3 + 5 + 6 + 9 = 23", "k": ["write an algorithm", "algorithm to find", "find sum", "sum of numbers", "write"]}
{"i": "5652925076471808", "t": "design and implement a calculater that can calculate expressions like:\r+ 2 4 \r* 8 ( + 7 12)\r( + 7 ( * 8 12 ) ( * 2 (+ 9 4) 7 ) 3 )\r (PS:all items are space delimetered.)\r Example answers\r+ 2 4 => 2 + 4 = 6\r* 8 ( + 7 12) => 8 * ( 7 + 12 ) = 152\r( + 7 ( * 8 12 ) ( * 2 (+ 9 4) 7 ) 3 ) => 7+8*12+2*(9+4)*7+3 = 148", "k": ["design and implement", "space delimetered", "implement a calculater", "calculate expressions", "items are space"]}
{"i": "5759194646970368", "t": "there are numbers in between 0-9999999999 (10-digits) which are assigened someone (does not matter which number assigned who)\r Write two methods called \"getNumber\" and \"requestNumber\" as follows\rNumber getNumber();\rboolean requestNumber(Number number);\r getNumber method should find out a number that did not assigened than marks it as assiged and  return that number.\r requestNumber method checks the number is assigened or not. If it is assigened returns false, else marks it as assiged and return true.\r design a data sturucture to keep those numbers and implement those methods", "k": ["number", "boolean requestnumber", "getnumber", "write", "methods called"]}
{"i": "6228759663345664", "t": "Write function to calculate sum of first N powers of 2 starting from 1. You shouldn't use any built-in function for calculating power. Implement the most efficient solution.", "k": ["calculate sum", "write function", "write", "starting", "function"]}
{"i": "5068409286950912", "t": "{{\rThere are 3 machines M1, M2 and M3. Each machine is 90% full of its capacity with integers. Now you have to sort all the integers combined and then store the first 1/3rd in M1, second 1/3rd in M2 and last 1/3rd in M3. \r Your objective is to minimize the number of sort operations and number of data transfer operations.\rEach sort operation/data transfer operation is counted as 1 irrespective of the count of values that are being sorted/transferred.\r }}", "k": ["sort", "data transfer", "transfer", "integers", "data"]}
{"i": "5186563703046144", "t": "A tree is given in which each edge is having some weight associated with it and you are given a number K. \r\n\r\nSo starting from root in K-steps how much maximum weight you can collect. You can traverse in any direction either from parent to child or child to parent. You can visit a node multiple times. \r\n\r\nEg:\r\n\t\t\t    O\r\n\t\t\t 5/   \\ 6\r\n\t\t\t O\tO\r\n\t\t   24/  1 \\     \\11\r\n\r\nFor K=1, ans=6\r\nFor K=2, ans=29 etc..", "k": ["root in k-steps", "ans", "weight", "maximum weight", "tree"]}
{"i": "5751698318426112", "t": "Entry in the log file is like this:\rUser 1 visited Page 4\rUser 3 visited Page 2\rUser 7 visited Page 9\r.\r.\r.\rDesign an efficient data structure which supports queries like the following:\rWhich page was visited by exactly 2 users in day?\rWhich page was visited by only one user exactly 2 times in a day?\rWhich page was visited by \u2018User 3? more than 5 times in a day?", "k": ["visited page", "page", "visited", "user", "log file"]}
{"i": "5768887180197888", "t": "Design a system for finding the costliest element always whenever we pick up an element from a box.(concept of Max Heap)", "k": ["max heap", "concept of max", "design a system", "system for finding", "finding the costliest"]}
{"i": "5726620541255680", "t": "Entry in the log file is like this:\rUser 1 visited Page 4\rUser 3 visited Page 2\rUser 7 visited Page 9\r.\r.\r.\rDesign an efficient data structure which supports queries like the following:\rWhich page was visited by exactly 2 users in day?\rWhich page was visited by only one user exactly 2 times in a day?\rWhich page was visited by \u2018User 3? more than 5 times in a day?", "k": ["visited page", "page", "visited", "user", "log file"]}
{"i": "5078015518179328", "t": "Given N scientists and K black holes, each scientist can query on radius, size and temperature of a black hole, what data structure would you use?\rFollowing queries are important.\rWhich scientist had queried on which black hole.\rWhat were the queries made by that scientist.", "k": ["query on radius", "size and temperature", "black hole", "data structure", "hole"]}
{"i": "5102434353414144", "t": "In a tennis tournament of N players every player plays with every other player.\rThe following condition always hold-\rIf player P1 has won the match with P2 and player P2 has won from P3, then Player P1 has also defeated P3.\rFind winner of tournament in O(N) time and O(1) space. Find rank of players in O(NlogN) time.", "k": ["player", "tennis tournament", "player plays", "tournament", "players"]}
{"i": "5724693979987968", "t": "Write code for scheduling algorithms for such a cab services provided you have a list of future bookings, and list of cabs in your fleet.", "k": ["cab services provided", "write code", "future bookings", "code for scheduling", "scheduling algorithms"]}
{"i": "5712173210796032", "t": "In an auctioning system, the bidder with the highest bid wins but charged at kth highest price. Develop a system for it. Solved it using a hashmap. Was asked to write a code for the same.", "k": ["kth highest price", "highest bid wins", "highest price", "bid wins", "wins but charged"]}
{"i": "5758399809585152", "t": "Design a system which would make a schedule for a user to complete a book in given number of days. A pre condition is that the schedule for every day should end at the end of some chapter.\rEx \u2013 3 chapter with 10 pages each and user has to complete this book in 2 days, then the schedule should be either be 2 chapters on first day and 1 chapter on second or 1 chapter on first day and 2 chapters on second. (code)", "k": ["design a system", "schedule", "chapter", "day", "design"]}
{"i": "5185781347909632", "t": "HR", "k": []}
{"i": "5759850166353920", "t": "Technical", "k": ["technical"]}
{"i": "6233875640483840", "t": "You toss a fair coin 400 times. What\u2019s the probability that you get at least 220 heads? Round your answer to the nearest per cent.", "k": ["fair coin", "toss a fair", "times", "coin", "heads"]}
{"i": "5092504456134656", "t": "How to find efficiently the minimum of an array of integers that is the maximum of other arrays?\r Example:\rA = [126, 110, 130]\rB = [125]\rC = [105, 115]\r The minimum element of array A that is the maximum of B and C is 126", "k": ["find efficiently", "efficiently the minimum", "maximum", "minimum element", "minimum"]}
{"i": "5715870640766976", "t": "#include<iostream>\r#include<stdio.h>\rusing namespace std;\rint main()\r{\r\tint i=1;\r\tprintf(\"He\");\r\t\tdo\r\t\t{\r\t\t\twhile(i<5)\r\t\t\t{\r\t\t\t\tcout<<\"Hello\";\r\t\t\t\ti++;\r\t\t\t}\r\t\t}\r\t\twhile(1);\r}\rWhat will be output of the program and why ??\r  class Demo\r{\r\tpublic static void main(String args[])\r\t{\r\t\tint i=1;\r\t\tdo\r\t\t{\r\t\t\twhile(i<5)\r\t\t\t{\r\t\t\t\tSystem.out.println(\"Hello\");\r\t\t\t\ti++;\r\t\t\t}\r\t\t}\r\t\twhile(true);\r\t}\r} \r what will be output of java program ??\rhow it diff ??", "k": ["namespace std", "int main", "include", "static void main", "int"]}
{"i": "5096352075743232", "t": "First they did ask to find pattern of this'this is a test sentence' => [t, h, i, s, i, s, a, t, e, s, t, s, e, n, t, e, n, c, e]\r\n'thiis iss a teest seentennce' => [i, s, e, e, n]\r\n'thiiis iss aa teeest seentennnce' => [i, e, n]\r\n'thiiiis iss a teeest seeentennncccce' => [i, c]after i have to do body of functiongetLongestConsecutiveChar", "k": ["test sentence", "teest seentennce", "body of functiongetlongestconsecutivechar", "thiis iss", "thiiis iss"]}
