{"i": "4875776829685760", "t": "Design the Goodreads recommendation model.\r Goodreads is a \"social networking book\" website that allows individuals to freely search its database of books.\r - Any given user has a List of friends. \r- User can add books to his/her shelve\r - When a user logs in, we need to show the top 10 books owned by his friends\r Example: \rUser1 has u2, u3, u4, u5 as friends\r u2 owns b1, b2, \u2026b10\ru3 own  b1, b2, b11\u2026b20\ru4 owns b1, b2, b11\u2026b20\ru5 owns b1, b33, b35, etc\r topmost book is b1, second topmost book is b2 and so on. \r If you maintain a cache of top 10 books in the user object for each of the users. How often will you update the cache ?", "k": ["goodreads recommendation model", "recommendation model", "goodreads recommendation", "design the goodreads", "goodreads"]}
{"i": "5040975717072896", "t": "There are hierarchy of class like super class and sub class. Yo have to make sure only one object can be create for any class using new keyword. How  you implement the class.", "k": ["class", "super class", "hierarchy", "super", "hierarchy of class"]}
{"i": "5868909633732608", "t": "Airbnb: Design webbrowser back button\r Your web browser supports will support three actions: back, forward and open. The init webpage is \u201cabout:blank\u201d. \rGiven a sequence of commands. Return the result page.", "k": ["design webbrowser back", "design webbrowser", "forward and open", "webbrowser back button", "web browser supports"]}
{"i": "5152046306033664", "t": "You have been given a generator string ab from which any number of strings can be generated recursively by inserting \u2018ab\u2019 at any location. You have been given an input string to check if that given string is valid or not.(i.e. generated by given with given string.)\r eg.\rInput: aabbab\rOutput: valid\rInput: abbaab\rOutput: Invalid \r I could not come up with a algorithm less than O(N*N)", "k": ["recursively by inserting", "generated recursively", "aabbab output", "abbaab output", "generator string"]}
{"i": "6260555839963136", "t": "find the sum of bit wise OR of minimum and Maximum element of all the subsets whose length is greater than 2 of the given of set.\r for ex:-\r {1,2,3} is set\rthen possible subsets of length is{ 1,2},{1,3},{2,3}{1,2,3} answer 1|2 +1|3 +2|3 +1|3=12", "k": ["minimum and maximum", "maximum element", "find the sum", "sum of bit", "bit wise"]}
{"i": "5710061828571136", "t": "Given a singly linked list, write code to find the most frequent element value in the list and its occurrence.\r In case of duplicate number of occurrences, return the element value closest to the head.\r A solution of time complexity O(N) average is preferred.\r   Sample Input: 1 2 3 4 2 3 2\r Sample Output: Element 2 occurs 3 time(s)\r   Sample Input: 4 3 5 3 4 5\r Sample Output: Element 4 occurs 2 time(s)", "k": ["singly linked list", "sample input", "sample output", "write code", "singly linked"]}
{"i": "6749289161162752", "t": "The wildcard regex can include the characters * and + .\r \u2018+\u2019 \u2013 matches any single character or empty character!\r \u2018*\u2019 \u2013 Matches any sequence of characters (including the empty sequence) For example,\r Text = \"baaabab\":\r regex = \"ba*a++\", output : true\r regex = \"ba*a+\", output : true\r regex = \"a*ab\", output : false\r //empty string\r Text=\"\"\r Regex= \"+\" , output : true", "k": ["matches any single", "output", "empty string text", "true regex", "matches"]}
{"i": "6283599681683456", "t": "Given a multiple tree, and multiple nodes that need to be deleted,\rIt is required to return a list of nodes so that the children of these nodes can be found after the nodes have been deleted.", "k": ["multiple tree", "required to return", "return a list", "multiple nodes", "deleted"]}
{"i": "4861416824635392", "t": "Gives you an int m, and a set of char (0,1,2,3,4,5,6,7,8,9)\rLets you implement a function that generates a id based on the characters in the set. Each time you return a string, it must be unique. satisfying the same character can not appear consecutively more than m times, such as m = 3, \"1000\" is valid,\r\"0000\" is not valid.\rThe smaller the string, the better.", "k": ["implement a function", "function that generates", "set of char", "set", "char"]}
{"i": "5956658181177344", "t": "Let\u2019s say you have two input arrays with sorted elements. Find the union.\r a[] = {2, 10, 14, 19, 51, 71}\rb[] = {2, 9, 19, 40, 51}\r Union = {2, 9, 10, 14, 19, 40, 51}", "k": ["sorted elements", "input arrays", "arrays with sorted", "union", "elements"]}
{"i": "5699760081076224", "t": "why we have a such long number value for object's hashcode in java.can we not have any small numbers or why java is giving that much large number for any object hash code ?", "k": ["object hash code", "hash code", "hashcode in java.can", "java is giving", "object hash"]}
{"i": "4810039754752000", "t": "A group of friends are tracking the miles  per gallon for each of their cars. Each time one of them fills up their gas tank, they record the following in a file: His or her name The type of car they drove How many miles driven since they last filled up How many gallons purchased at this fill up Date of the fill Their data is formatted as a comma separate value (csv) file with the following format for each row:(#person,carName,milesDriven,gallonsFilled,fillupDate) Miles are recorded as floating-point numbers and gallons as integers. Please create a program that allows members of this group to determine the miles per gallon (MPG) of each of their cars during a specific time range. Note: person may have more than one so a time range query might need to output data for one or more cars. A skeleton class will be provided; your job will be to complete the program. The principal function for querying MPG is of the form (the exact name, data types, etc., can be learned by inspecting the \"solution\" class in the skeleton code): GetRangeMPG(PersonName, StartDate, EndDate) Returns list of objects containing (CarName, MPG) MPG is calculated as (total miles traveled during time period)/ (total gallons filled during time period. The dates you receive in the query should be treated inclusively.", "k": ["friends are tracking", "miles", "mpg", "time", "time range"]}
{"i": "5636230535446528", "t": "To push dominoes, find out how many dominoes are standing in the end \r For example, the input is \".R...RL..R..L..\", which means pushing the 2nd, 6th, and 12th dominoes to the right and pushing the 8th and 15th dominoes to the left. This example returns 4th. 1,7,16,17 blocks are standing", "k": ["push dominoes", "dominoes", "pushing", "find", "left"]}
{"i": "4777889911275520", "t": "The question is that there are a lot of vm, what is the total vm consumption max. For example, (2,4,8), (3,5,3) this input,\r This means that 2 to 4 seconds have a memory usage of 8 and 3 to 5 seconds of 3, so the answer is 11 at 3 seconds.\r Return 11 to it. Note that (1,2,3) and (2,3,4) such that the middle 3+4=7 is good.\rFollow up is usage is not constant, such as (1,2,1,2) the first second usage is 1,\rThe second second is 2, the linear increase, the highest is how much.", "k": ["consumption max", "total vm consumption", "usage", "max", "question"]}
{"i": "5672873451585536", "t": "List<Integer> list=Arrays.asList(1,2,3,4,5,6);\r    Iterator it=list.iterator();\r    while(it.hasNext()){\r        System.out.println(it.next());\r    }\rThe above code will iterate sequentially through 1 to 6. Can we iterate the same list alternatively so that it will print 1,3,5 without changing the while loop.", "k": ["integer", "iterator", "iterate sequentially", "arrays.aslist", "list.iterator"]}
{"i": "5150944462372864", "t": "Search for a sorted integer in an integer array that has been rotated multiple times.", "k": ["rotated multiple times", "multiple times", "rotated multiple", "sorted integer", "integer array"]}
{"i": "5681146095468544", "t": "Print the bottom view of a Binary Tree.\rex-1        \r\n\r\n        2       3\r\n\r\n    4       5       7\r\n\r\n        8       9       10result is 4, 8, 5, 9, 7, 10", "k": ["binary tree", "print the bottom", "bottom view", "tree", "binary"]}
{"i": "5661961281863680", "t": "Given an alphabet where we do not know the order of the letters also do not know the number of letters.\r We are give an input list of tuples where each entry in the list gives an ordering between the 2 letters\r Determine the alphabet order.\r Ex- \r<A, B>\r<C, D>\r<C, E>\r<D, E>\r<A, C>\r<B, C>\rOrder is A, B, C, D, E", "k": ["letters determine", "alphabet order", "order", "letters", "determine the alphabet"]}
{"i": "5168493161873408", "t": "I was asked this question in a recent interview for a startup. \r We  have coffee vending machine with 3 buttons which can dispense 4oz, 7oz and 13oz of coffee.\r Given a cup and the min and max amount(oz) of coffee it should fill. determine if the coffee  vending machine can satisfy the condition.\r The buttons can be pressed as many times as possible to fill the cup. Coffee shouldn't overflow..", "k": ["asked this question", "recent interview", "coffee", "coffee vending machine", "vending machine"]}
{"i": "5741240741003264", "t": "AWS phone interview\rFind the left view of binary tree\r       1\r      /  \\\r    2    3\r    /\\     \\\r  4  5     6\r      /      /\r     7     8\r           /\r         9\rreturn [1, 2, 4, 7, 9]", "k": ["aws phone interview", "phone interview find", "aws phone", "interview find", "find the left"]}
{"i": "5195481931055104", "t": "Given a number, rearrange the digits of that number to make a higher number, among all such permutations that are greater,one of them is the smallest, Find the smallest greater permutation (the next Permutation).\r Examples:\rnext_permutation (12)  = 21\rnext_permutation (315)  = 351\rnext_permutation (583)  = 835\rnext_permutation (12389)  = 12398\rnext_permutation (34722641)  = 34724126", "k": ["smallest greater permutation", "find the smallest", "rearrange the digits", "smallest greater", "make a higher"]}
{"i": "5107563413635072", "t": "Given as list of movies in a csv file, extract the movie name and genre and be able to return a query based on the years and the genre.\r Basically, Parsing a CSV input file and build an indexed data storage to allow search the data in time manner.", "k": ["csv input file", "return a query", "query based", "parsing a csv", "extract the movie"]}
{"i": "5652078830551040", "t": "Given a list of tasks each with memory requirements and time, only one machine has K memory.\rDo not consider the context switch, page swap, virtual memory, (for example, the machine has only 20mb memory, a task that requires 25MB of the task can only wait until there is enough memory to run it.) The running task cannot be suspended.\rAsk how long it takes to complete all these tasks. . .", "k": ["requirements and time", "memory", "memory requirements", "machine", "task"]}
{"i": "4724279458398208", "t": "First common Ancestor of Binary tree . Java Solution needed.\r Class Node {\r    Node Parent;\r   Node LeftChild;\r   Node rightChild;\rint val;\r} \r publlic Node firstAncestor(Node leftNode, Node rightNode){\r// We don't get the root node here. From left and right child we need to find it's parent and find the lowest common ancestor. \r}", "k": ["java solution needed", "java solution", "binary tree", "solution needed", "node"]}
{"i": "5249556710162432", "t": "If b == \u201c1\u201d:\rquit()", "k": ["quit"]}
{"i": "5699851013586944", "t": "1) You sell roses. Each rose cost 30 cents to buy and you can sell them for $10 a dozen.\ra) How many you need to sale to break even if you bought 600 roses?\rb) Tomorrow is holiday - there's 20% likelihood you will sale 600 roses, 50% likelihood of selling 900 roses and 30% likelihood of selling 1200 roses. How many would you buy to maximize profit?", "k": ["roses", "likelihood", "sell", "likelihood of selling", "tomorrow is holiday"]}
{"i": "5713295334965248", "t": "Write a method that can take in an unordered list of airport pairs visited during a trip, and return the list in order:\r Unordered: (\"ITO\", \"KOA\"), (\"ANC\", \"SEA\"), (\"LGA\", \"CDG\"), (\"KOA\", \"LGA\"), (\"PDX\", \"ITO\"), (\"SEA\", \"PDX\")\rOrdered: (\"ANC\", \"SEA\"), (\"SEA\", \"PDX\"), (\"PDX\", \"ITO\"), (\"ITO\", \"KOA\"), (\"KOA\", \"LGA\"), (\"LGA\", \"CDG\")", "k": ["airport pairs visited", "ito", "koa", "sea", "lga"]}
{"i": "4911888260399104", "t": "Given a binary tree, where each node represents an integer, find the max value of path sum.", "k": ["binary tree", "represents an integer", "find the max", "path sum", "node represents"]}
{"i": "5688462773583872", "t": "April Google Interview 1/4 \rA = a+b-c-a-b-c-a-b (Tree)\r B = b+a+c+a+b-c+b (Tree)\r is A equal to B", "k": ["april google interview", "google interview", "april google", "tree", "interview"]}
{"i": "5660168468561920", "t": "April Google Interview 3/4 \rMaze\r N,M array\r Level 1 0,0 to N-1,M-1 => Path exsits?\r Level 2 if path exists then print path\r Level 3 if path exists then print min cost path\r Level 4 O(nm log mn) using Priority Queue.", "k": ["april google interview", "google interview", "april google", "maze n,m array", "print path level"]}
