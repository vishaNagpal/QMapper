{"i": "324720", "t": "A calculator with only \":=\" and \"x\". Given a and n, find the smallest number of multiplications to compute b=a^n\rExp:compute a^6 b1:=a\rb2:=b1 x b1\rb3:=b2 x b2\rb4:=b3 x b2", "k": ["find the smallest", "calculator", "smallest number", "number of multiplications", "exp"]}
{"i": "323713", "t": "Create two evenly balanced teams for a game of soccer.\r Condition:The difference between the number of players in both teams should not differ by more than 1 . Each player has skillpoint associated with him. The total skill point of the players on each team should be as nearly equal as possible.", "k": ["evenly balanced teams", "create two evenly", "game of soccer", "evenly balanced", "balanced teams"]}
{"i": "324671", "t": "How will you implement multiplication and division without using \"*\" or \"/\" operator?", "k": ["operator", "implement multiplication", "multiplication and division", "implement", "multiplication"]}
{"i": "319783", "t": "What happens when the method is called? Explainpublic int normal(){\r\n\t\ttry{\r\n\t\t\treturn 10;\r\n\t\t}finally{\r\n\t\t\treturn 20;\r\n\t\t}\r\n\t}", "k": ["method is called", "return", "explainpublic int normal", "called", "finally"]}
{"i": "320778", "t": "Return count from an integer array of size 15 when the sum of sub array is 25", "k": ["return count", "integer array", "array of size", "return", "size"]}
{"i": "319772", "t": "#include<stdio.h>\r  int main()\r  {\r          int a=10;\r          switch(a)\r          {\r                  case '1':\r                      printf(\"ONE\\n\");\r                      break;\r                  case '2':\r                      printf(\"TWO\\n\");\r                      break;\r                  defa1ut:\r                      printf(\"NONE\\n\");\r          }\r          return 0;\r  }\r What will be the output and why ??", "k": ["int main", "printf", "case", "break", "int"]}
{"i": "320762", "t": "class a\r{\rpublic static void main(String args[])\r{\rc B=new c();\rgen(B);\rSystem.out.println(B.B1[0].x);\r}\rstatic void gen(c C1)\r{\rC1.B1[0].x=5;//bug in the line\rC1.B1[1].x=6;\rC1.B1[2].x=7;\r}\r}\r class b\r{\rint x;\r}\r class c\r{\rb B1[]=new b[3];\r}\rthere is a bug as shown in above program ?what is that bug? solve the bug?(program is in java language)", "k": ["static void gen", "public static void", "static void main", "string args", "static void"]}
{"i": "320745", "t": "You will be asked to select the figure disimilar to others, ALL are pentagons except one is Hexagon", "k": ["asked to select", "select the figure", "figure disimilar", "hexagon", "asked"]}
{"i": "320744", "t": "If a person sells 65% of his property, total property being 10,222 worth, how much he still owe (similar question)", "k": ["similar question", "person sells", "total property", "worth", "sells"]}
{"i": "319734", "t": "if a clock looses 2 secs per day, how much time will it loose in 2 days ?", "k": ["secs per day", "clock looses", "secs", "day", "days"]}
{"i": "320743", "t": "If one coin is not a dime in 15 cents out of the two, what are the two coins", "k": ["cents", "dime", "coin", "coins"]}
{"i": "319732", "t": "For Onsite Call: Epic will give you 10 questions to be done in 2 mins, 15 logical questions, and 20 questions related to MIIS programming language.\r PLEASE NOTE, they hardly change the paper, so prepare these questions and expect them........\r 2 mins questions:\r1) Vocation:Occupation\ra) they are quite similar\rb) they are quite opposite\rc) not related", "k": ["miis programming language", "onsite call", "epic will give", "miis programming", "programming language"]}
{"i": "320730", "t": "Explain the last job you had, as it was very close to this one.", "k": ["explain", "job", "close"]}
{"i": "320729", "t": "What is the best way to handle distributed databases and to merge their results ??", "k": ["handle distributed databases", "merge their results", "handle distributed", "distributed databases", "results"]}
{"i": "320718", "t": "implement the pre-order traversal of a tree.", "k": ["implement the pre-order", "pre-order traversal", "implement", "tree", "pre-order"]}
{"i": "319708", "t": "If an application is running, but it does not produce output; memory utilization is constant, cpu utilization goes down to 0; what will be the problem.", "k": ["application is running", "produce output", "memory utilization", "cpu utilization", "utilization is constant"]}
{"i": "320717", "t": "what is left outer join.", "k": ["left outer join", "outer join", "left outer", "join", "left"]}
{"i": "320716", "t": "In a clock, calculate the angle between hour and minute handle", "k": ["calculate the angle", "minute handle", "angle between hour", "hour and minute", "clock"]}
{"i": "320715", "t": "Implement a connection pool", "k": ["implement a connection", "connection pool", "implement", "pool", "connection"]}
{"i": "320714", "t": "Design a game: which transform a word to a target word. for example: from head to tail, each step, you just can replace one character, and the word must be valid.", "k": ["design a game", "target word", "design", "game", "word"]}
{"i": "319707", "t": "implement atoi()", "k": ["implement atoi", "implement", "atoi"]}
{"i": "319706", "t": "Design a Crossroad signal system", "k": ["crossroad signal system", "design a crossroad", "crossroad signal", "signal system", "crossroad"]}
{"i": "320713", "t": "Check whether a binary tree is BST(if the binary tree is very large, you can not simply in-order print all the nodes out.)", "k": ["simply in-order print", "tree is bst", "binary tree", "simply in-order", "in-order print"]}
{"i": "319705", "t": "An array of integer of size N, all the elements are from range[1,N-1], one is duplicate, find it.", "k": ["array of integer", "integer of size", "range", "duplicate", "find"]}
{"i": "319704", "t": "An array of integer of size N-1, all the elements are from range[1,N], one is missing, find it.", "k": ["integer of size", "array of integer", "size", "range", "missing"]}
{"i": "319703", "t": "Given a singly linked-list, and a pointer to node, how to delete the node.", "k": ["singly linked-list", "pointer to node", "delete the node", "node", "linked-list"]}
{"i": "320699", "t": "Fibonacci sequence and optimization", "k": ["fibonacci sequence", "sequence and optimization", "fibonacci", "optimization", "sequence"]}
{"i": "320698", "t": "Design a file system", "k": ["design a file", "file system", "design", "system", "file"]}
{"i": "320697", "t": "check a number whether is Power of 2", "k": ["check a number", "power", "check", "number"]}
{"i": "320696", "t": "How to check singly linked list is a circular linked list.", "k": ["check singly linked", "singly linked list", "circular linked list", "linked list", "check singly"]}
