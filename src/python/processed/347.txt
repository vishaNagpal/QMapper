{"i": "14558745", "t": "if you draw chords at random in a circle what fraction of hem will be shorter than chords formed by an inscribed equilateral triangle?", "k": ["inscribed equilateral triangle", "equilateral triangle", "circle what fraction", "fraction of hem", "inscribed equilateral"]}
{"i": "14560731", "t": "4)Input a number. Convert the number into words using return functions and regular expressions in Perl. Do not use parse functions.(15 => one five)", "k": ["input", "input a number", "expressions in perl", "perl", "number"]}
{"i": "14561728", "t": "3)Input email address. Check if it is valid using return functions and regular expressions in Perl. Do not use parse functions.", "k": ["input email address", "input email", "email address", "input", "expressions in perl"]}
{"i": "14571724", "t": "2)Input a name. Check if it is valid (has atleast 3 letters and one vowel) using return functions and regular expressions in Perl. Do not use parse functions.", "k": ["input", "expressions in perl", "perl", "functions", "check"]}
{"i": "14570728", "t": "1)Input ip address. Check if it is in the range 172.125.1.0 and 172.125.25.0 using return functions and regular expressions in Perl. Do not use parse functions.", "k": ["input ip address", "input", "expressions in perl", "address", "perl"]}
{"i": "14568727", "t": "Input: two unsorted char arrays A,B(may contain dups) where A.length <= B.length\r If each character in A appears in B, return true. Else false. Write the code.", "k": ["unsorted char arrays", "return true", "unsorted char", "char arrays", "input"]}
{"i": "14570723", "t": "what does 4 byte allignment in 32bit system mean.\reg :\rstruct\r{\rchar a;\rchar b;\r}\rwill it take 8 byte or 4 byte after padding.\rchar a - (1+ 3 for padding) char b (1+ 3 for padding)\rso entire structure takes 8 byte?\ror char a (1) char b (1 + 2 padding.)=4byte total?\rdoesn't 4 byte allignment mean all new var address should start with a multiple of 4.... ?\rplz do help", "k": ["byte", "char", "byte allignment", "padding", "system"]}
{"i": "14568725", "t": "Given two arrays A[6] and B[3], both the arrays have 3 elements each. Both of them are sorted, need to return the merged array A[] after merging with array B[]. Need to do this inplace.", "k": ["elements", "arrays", "array", "merged array", "return the merged"]}
{"i": "14558726", "t": "Given an N by M matrix with values of N and M, and co-ordinates of a particular dot. Need to return true if the dot lies inside the matrix, false otherwise. Just develop the condition for this.", "k": ["dot lies inside", "matrix", "dot", "co-ordinates", "dot lies"]}
{"i": "14568723", "t": "How to Achieve atomicity in Database given you are a database designer", "k": ["achieve atomicity", "database designer", "atomicity in database", "database", "achieve"]}
{"i": "14557725", "t": "There are 2 interfaces\rInterface A\r     -> max()\rInterface B\r     -> max()\r Note:\rmax() have everything same signature are same in all respect\r There is a class C which implements A and B\rthen what happens\r> Compile time error \r> Runtime\r>No error it works fine", "k": ["compile time error", "compile time", "max", "works fine", "interfaces interface"]}
{"i": "14560723", "t": "Given a binary tree and 3 nodes x,y,z, write a function which returns true if y lies in the path between x and z and false otherwise. Its been posted couple of times in past in careercup blogs, still couldn't find an apt solution which considers corner cases like \r    y\r  /    \\\rz       x", "k": ["write a function", "binary tree", "function which returns", "returns true", "nodes"]}
{"i": "14559704", "t": "3.\tWhat is size of the object created for this class in a 4-byte alignment, 32-bit system.?Class A\r\n{\r\n\tPublic:\r\n\tA();\r\n\tVirtual ~A();\r\n\tInt a;\r\n\tChar b;\r\n\tInt c;\r\n}", "k": ["int", "public", "virtual", "class", "object created"]}
{"i": "14569703", "t": "If an array is having integers/Char/special Char... Ex: \"PST456DA85M2A!!23++46\", find out the sum of integers. ****Note: If we find consecutive digits in array we need to treat it as number, let say 456, we need to treat it as [ four hundread and fifty six]. Write a program to get the output by summing 456+85+2+23+46..also this needs to be done in lessnumber of iterations..", "k": ["special char", "char", "integers", "special", "note"]}
{"i": "14560704", "t": "Write a C function to print all the elements less than the key element in binary search tree", "k": ["binary search tree", "search tree", "function to print", "binary search", "key element"]}
{"i": "14559688", "t": "There is a rectangular grid of size m * n . Bob is in location ( x, y ) inside grid. He can move in 4 directions up, down, right and left. He will die if he steps outside of rectangular grid. Find the probability that bob is alive given initial position of bob as ( x, y ) and number of steps he moves as N.\rEdit : Bob moves one step at a time in all 4 directions but he can move N step starting from start state.", "k": ["inside grid", "bob", "rectangular grid", "grid", "location"]}
{"i": "14562669", "t": "Given a BST, give an algo as well as code(C preferred) to change it into doubly linked list.", "k": ["doubly linked list", "give an algo", "linked list", "doubly linked", "bst"]}
{"i": "14557670", "t": "Given a doubly linked list, give an algo as well as code(C preferred) to change it into BST.", "k": ["doubly linked list", "linked list", "give an algo", "doubly linked", "bst"]}
{"i": "14569665", "t": "Given n circles in the plane, Determine whether any two intersect, in O(nlogn) time. Each circle is speci\ufb01ed by its center and its radius, so the input consists of three arrays X[1..n],Y[1..n], and R[1..n].", "k": ["determine", "nlogn", "time", "plane", "intersect"]}
{"i": "14569662", "t": "Given a array, find the largest contiguous sub-array having its sum equal to N. ( optimal solution only)", "k": ["largest contiguous sub-array", "find the largest", "largest contiguous", "contiguous sub-array", "sum equal"]}
{"i": "14567663", "t": "Given a log file, extract all the lines starting with the word ERROR.", "k": ["word error", "log file", "lines starting", "error", "file"]}
{"i": "14568662", "t": "Given 2 strings - abcdefgh & cde - get the position from where the second string starts in the first string.(Do this inplace)", "k": ["string starts", "abcdefgh", "cde", "string.", "inplace"]}
{"i": "14548838", "t": "Determine the 10 most frequent words given a terabyte of strings.", "k": ["terabyte of strings", "frequent words", "determine", "strings", "frequent"]}
{"i": "14542811", "t": "Write down the various test cases for railway portal system. write the situation when it can crash.", "k": ["railway portal system", "portal system", "test cases", "cases for railway", "railway portal"]}
{"i": "14545807", "t": "find the number of occurrence of given sum in array\rEX: input : 10 5 3 2  sum=15\routput: 2\rit means  15=10+5\r                15=10+3+2", "k": ["find the number", "number of occurrence", "input", "output", "sum in array"]}
{"i": "14541821", "t": "There are n frames of m data element each. The data element in each frame is arranged in increasing order. You are provided m*n space in which you have to arrange all data in increasing order.\rTime:O(n)\rSpace:O(1)", "k": ["increasing order", "data element", "data", "order", "element"]}
{"i": "14549826", "t": "There are n frames of m data element each. The data element in each frame is arranged in increasing order. You are provided m*n space in which you have to arrange all data in increasing order.\rSpace:O(1)\rTime:O(n)", "k": ["increasing order", "data element", "data", "order", "element"]}
{"i": "14539805", "t": "Three strings say A,B,C are given to you. Check weather 3rd string is interleaved from string A and B.\r       Ex: A=\"abcd\" B=\"xyz\" C=\"axybczd\". answer is yes. o(n)", "k": ["check weather", "string", "abcd", "xyz", "axybczd"]}
{"i": "14548791", "t": "output  and why ?#include<iostream>\r\nclass con\r\n{\r\n      struct node\r\n      {\r\n             int data;\r\n                int rest;\r\n\r\n      };\r\n    public:\r\n           con()\r\n           {}\r\n           };\r\n\r\n     int main()\r\n     { con c;\r\n        std::cout<<\"size of con class =\"<<sizeof(c);\r\nreturn 0;\r\n}", "k": ["struct node", "int data", "int rest", "int main", "int"]}
{"i": "14546770", "t": ": Design a data structure for the following operations:\r I.                Enqueue\r II.               Dequeue\r III.              Delete a given number(if it is present in the queue, else do nothing)\r IV.               isNumberPresent\r All these operations should take O(1) time", "k": ["design a data", "design", "data structure", "dequeue iii", "data"]}
