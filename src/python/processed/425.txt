{"i": "10465777", "t": "You are given a set of boxes b1 to bn. Each box bj has an associated width wj ,\rheight hj and depth dj . Give an algorithm for creating the highest possible stack of boxes with the\rconstraint that if box bj is stacked on box bi, the 2D base of bi must be larger in both dimensions\rthan the base of bj . You can of course, rotate the boxes to decide which face is the base, but you\rcan use each box only once.\rFor example, given two boxes with h1 = 5;w1 = 5; d1 = 1 and h2 = 4;w2 = 5; h2 = 2, you should\rorient box 1 so that it has a base of 5x5 and a height of 1 and stack box 2 on top of it oriented so\rthat it has a height of 5 for a total stack height of 6.", "k": ["box", "boxes", "base", "height", "give an algorithm"]}
{"i": "10498694", "t": "construct a BST given its preorder traversal..No extra space allowed", "k": ["extra space allowed", "construct a bst", "preorder traversal.", "space allowed", "extra space"]}
{"i": "10398686", "t": "Give two binary search trees, print the numbers of both together in ascending order.", "k": ["binary search trees", "give two binary", "search trees", "print the numbers", "ascending order"]}
{"i": "10352159", "t": "Given a 2D matrix which is both row wise and column wise sorted. Propose an algorithm for finding the kth smallest element in it in least time complexity.", "k": ["column wise sorted", "wise sorted", "row wise", "column wise", "matrix"]}
{"i": "10478160", "t": "write floyd warshall algorithm", "k": ["write floyd warshall", "floyd warshall algorithm", "write floyd", "warshall algorithm", "floyd warshall"]}
{"i": "10338940", "t": "pairwise reversal of linked list..\reg.i\\p=1->2->3->4->5\ro/p=2->1->4->3->5", "k": ["pairwise reversal", "linked list.", "reversal of linked", "pairwise", "list."]}
{"i": "10442525", "t": "Input is a matrix of size n x m of 0s and 1s.\r eg:\r1 0 0 1\r0 0 1 0\r0 0 0 0\r If a location has 1; make all the elements of that row and column = 1. eg\r 1 1 1 1\r1 1 1 1\r1 0 1 1\r Solution should be with Time complexity = O(n*m) and O(1) extra space", "k": ["matrix of size", "row and column", "time complexity", "input", "matrix"]}
{"i": "10442474", "t": "Given an array A of N integers we draw N discs in a 2D plane, such that i-th disc has center in (0,i) and a radius A[i]. We say that k-th disc and j-th disc intersect, if $k\\not =j$ and k-th and j-th discs have at least one common point.\rWrite a function\rclass Solution { public int number_of_disc_intersections(int[] A); }\rwhich given an array A describing N discs as explained above, returns the number of pairs of intersecting discs. For example, given N=6 and\r\\begin{displaymath}A[0]=1 A[1]=5 A[2]=2 A[3]=1 A[4]=4 A[5]=0\\end{displaymath}\rthere are 11 pairs of intersecting discs:\r0th and 1st\r0th and 2nd\r0th and 4th\r1st and 2nd\r1st and 3rd\r1st and 4th\r1st and 5th\r2nd and 3rd\r2nd and 4th\r3rd and 4th\r4th and 5th\rso the function should return 11.\rThe function should return -1 if the number of intersecting pairs exceeds 10,000,000. The function may assume that N does not exceed 10,000,000.", "k": ["integers we draw", "discs", "intersecting discs", "i-th disc", "disc"]}
{"i": "10405489", "t": "implement a func node *(char  *word){}\rwich returns a link list of words dat are anagrams with the input word..if no anagrams found return NULL and add that word to the link list", "k": ["found return null", "anagrams found return", "null and add", "link list", "implement a func"]}
{"i": "10441203", "t": "what does the yeild method do in case of a thread lifecycle ? Explain with a neat example demonstrating the use of yield method?", "k": ["thread lifecycle", "neat example demonstrating", "yeild method", "yield method", "explain"]}
{"i": "10405413", "t": "given a matrix with all 1,s or 0,s. find the square sunmatrix with all 1's at border. \rex:\r0 1 0 1 0 1 1 1\r0 1 1 1 1 1 1 0\r1 1 0 1 1 0 1 1\r0 1 0 0 1 0 1 0\r0 1 1 1 1 1 1 1 \rso the submatrix  from (1,1)to (4,6)  is the answer\rsee it is not square but i have just wriiten to make it clear the ques . \rgiven matrix will bee square matrix and we have find square submatrix as well", "k": ["find square submatrix", "bee square matrix", "square sunmatrix", "square matrix", "find square"]}
{"i": "10441121", "t": "There is an array and the distance between any two consequent elements is one(+1 or -1) and given a number. You have to check whether the number is in array or not with minimum complexity.", "k": ["consequent elements", "array", "number", "minimum complexity", "distance"]}
{"i": "10405174", "t": "Given preorder traversal , is it sufficient to reconstruct unique BST", "k": ["reconstruct unique bst", "unique bst", "preorder traversal", "bst", "sufficient to reconstruct"]}
{"i": "10439923", "t": "Design algo and DS to find the minimum length of Fence required to cover scattered points (all co-ordinates given) in a plane.", "k": ["cover scattered points", "length of fence", "fence required", "design algo", "scattered points"]}
{"i": "10442927", "t": "given an infinite array containing only 0's and 1's in sorted manner. Give algo to find the position where first 1 appeared with minimum complexity (Interviewer gave hint to use random number generator algo, don't know why).", "k": ["sorted manner", "infinite array", "interviewer gave hint", "interviewer gave", "manner"]}
{"i": "10439922", "t": "Find max diameter of circle placed inside the area surrounded by points (x, y) given that when points are joined they form a closed loop.", "k": ["find max diameter", "find max", "closed loop", "max diameter", "diameter of circle"]}
{"i": "10437685", "t": "Given inorder traversal , is it sufficient to reconstruct unique BST", "k": ["reconstruct unique bst", "unique bst", "inorder traversal", "bst", "sufficient to reconstruct"]}
{"i": "10421824", "t": "There are N points in the plane. The ith point has coordinates (xi, yi). Perform the following queries:\r 1) Reflect all points between point i and j both including along the X axis. This query is represented as \"X i j\"\r2) Reflect all points between point i and j both including along the Y axis. This query is represented as \"Y i j\"\r3) Count how many points between point i and j both including lie in each of the 4 quadrants. This query is represented as \"C i j\"\r No O(n) solutions please.", "k": ["query is represented", "points", "point", "reflect", "query"]}
{"i": "10418743", "t": "Give two binary search trees, print the numbers of both together in ascending order", "k": ["binary search trees", "give two binary", "search trees", "print the numbers", "ascending order"]}
{"i": "10405893", "t": "OO Design for parking lot system.", "k": ["parking lot system", "design for parking", "lot system", "parking lot", "design"]}
{"i": "10355870", "t": "Given two lists, each containing numbers, how would you find the intersection of these two lists?  What if these two lists are read from a huge file that cannot fit in memory?", "k": ["find the intersection", "lists", "numbers", "fit in memory", "find"]}
{"i": "10399667", "t": "You need to implement two functions of hashing \rint get(int key) // will return value at key\rvoid put (int key,int value) // put the vaue at index key\r both functions should be of order O(1)\rand there is an upper limit n on size, such that at the max only n elements will get stored and if there is a conflict then you need replace the least recently used element.", "k": ["key void put", "vaue at index", "upper limit", "void put", "hashing int"]}
{"i": "10381960", "t": "Code/Define Algorithm to find if a given string has balanced parentheses, where we have 3 types 1. ( ) 2. [ ] 3. { }. Example of Balanced - [{}](), Not balanced - ({)[}]", "k": ["define algorithm", "algorithm to find", "define", "algorithm", "code"]}
{"i": "10379958", "t": "Given an array A[] and a integer num. Find four no.s in the array whose sum is equal to given num. \rBrute force :- O(n^4)\rI solved it in O(n^3)\rBut the interviewer was insisting on a better solution.", "k": ["integer num", "num", "array", "integer", "brute force"]}
{"i": "10354770", "t": "what is difference between union and structure ? what is padding in the context of structures", "k": ["difference between union", "union and structure", "context of structures", "structure", "structures"]}
{"i": "10345768", "t": "What is the difference between static and global variables in C.", "k": ["difference between static", "static and global", "global variables", "difference", "static"]}
{"i": "10353662", "t": "Implement a function that performs binary addition. Input to the function is two const strings. The function returns a string that holds the result of addition. \rchar* binaryadd(const char* a, const char* b) { }\rEg. \"1001\"+\"101\"=\"1110\"", "k": ["performs binary addition", "performs binary", "binary addition", "char", "function"]}
{"i": "10332664", "t": "What is the difference between HashSet and TreeSet implementation of a Set ?", "k": ["set", "difference between hashset", "hashset and treeset", "treeset implementation", "difference"]}
{"i": "10282952", "t": "Closest pair. Given an array of N real numbers, write a static method to find in linear time the pair of integers that are closest in value . Similarly find the farthest pair", "k": ["similarly find", "pair", "closest", "closest pair", "similarly"]}
{"i": "10282728", "t": "Given a class Card{int value, int suit, Color color}, Write a methodCard[] GetUniqueElements(Card[] cards)which gives all the unique Card Objects .", "k": ["unique card objects", "write a methodcard", "card objects", "int suit", "color color"]}
