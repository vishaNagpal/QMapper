{"i": "5672822379118592", "t": "Given customer Geo Location(Lat-Long) and List of Restaurants. Each restaurant consist of :\r - Lat long of restaurant\r- Name\r- List of Items, where each item has\r                      - Item Name\r                      - Prep Time\r                      - Sensitivity ( Low, Medium, High). Lower sensitive items like Icecream cannot be delivered more than 2 KM.\r - Find out List of Restaurant Given Customer and Cart is Empty\r- Find out SLA(Time to deliver) given cart, restaurant and Cutomer\r- Parameters should be Configurable like Sensitivity, Max prep time etc", "k": ["customer geo location", "geo location", "customer geo", "max prep time", "list"]}
{"i": "5725798217023488", "t": "Use the location data getting generated from multiple delivery boys moving on the ground to estimate time which a delivery boy will take to move from point A to point B in an area. Additionally, try to do this in real time so that it can be used in assigning delivery boys and minimising delivery time in real time.", "k": ["multiple delivery boys", "delivery boys moving", "location data", "data getting generated", "generated from multiple"]}
{"i": "5668686761820160", "t": "In a binary tree if the neighbours are set on fire for every node , find the path to optimally set the entire tree on fire.", "k": ["find the path", "path to optimally", "binary tree", "optimally set", "entire tree"]}
{"i": "5750186920378368", "t": "Given an input stream of Swiggy order timestamps and costs, at any instant find the costliest order in the last X mins", "k": ["swiggy order timestamps", "stream of swiggy", "timestamps and costs", "swiggy order", "input stream"]}
{"i": "5677365414330368", "t": "You have a plot with a limited amount of points on it.\rFind the cluster of points, which contains the biggest amount of point grouped together.\r Conditions:\rThe cluster means, that points are placed not farther than 5 units (Can be measured px, cm, etc.) between each other. The distance is calculated by where|x1-x| < 5and|y1-y| < 5The cluster should contain at least 3 points.\rIf there are a few clusters with the same amount of points - return all of them.  \r Example:\rThe points are:\r(15,116), (1345, 123), (456, 11), (34, 17), (19, 112), (556, 111), (454, 15), (12, 120).\rIn this case, the best cluster is (15,116), (19, 112), (12, 120)", "k": ["points", "limited amount", "amount", "cluster", "amount of points"]}
{"i": "5712067743449088", "t": "\"Good Range\"\r There is a number space given from 1 to N. And there are M queries followed by that. In each query, we were given a number between 1 to N (both inclusive). We add these number one by one into a set.\r Good range: A range in which there is exactly one element present from the set.\r For each query, we need to find the good ranges. We need to return the sum of boundry of all good ranges.\r Input:\rFirst line will take two integer for input N and M.\rThen following M lines would be numbers between 1 and N (both inclusive).\r Output:\rFollowing M lines contains sum of boudaries of good ranges.\r Note:\rRange can consist of single element and represented as (x-x) where boundary sum will be x+x.\r Example:\r \tInput:\r\t10 4\r\t2\r\t5\r\t7\r\t9\r \tOutput:\r\t11\r\t18\r\t30\r\t46\r \tExplaination:\r\tstep-1) set: 2\r\t\t\tgood range: (1-10)\r\t\t\tsum: 1+10=11\r \tstep-2) set: 2 5\r\t\t\tgood range: (1-4), (3-10)\r\t\t\tsum: 1+4+3+10=18\r \tstep-3) set: 2 5 7\r\t\t\tgood range: (1-4), (3-6), (6-10)\r\t\t\tsum: 1+4+3+6+6+10=30\r \tstep-4) set: 2 5 7 9\r\t\t\tgood range: (1-4), (3-6), (6-8), (8-10)\r\t\t\tsum: 1+4+3+6+6+8+8+10=46", "k": ["good range", "good", "range", "set", "sum"]}
{"i": "5759582094229504", "t": "You are given an N-Dimensional list with 2 methods:\ri) getDim -> returns the dimensions .e.g [5,4,3].\rii) getElement([i,j,k]) -> return list[i][j][k] . You have to implement a method to sum all elements in the list.", "k": ["returns the dimensions", "getdim", "n-dimensional list", "return list", "dimensions"]}
{"i": "5654247081771008", "t": "Design a system to upload images with tags. The tags should be searchable and search should return  images linked to those tags.", "k": ["design a system", "system to upload", "upload images", "design", "return images linked"]}
{"i": "5702311087702016", "t": "given array and max element in array. Find no. of elements present between a given range in O(1). You can do one time processing of array.", "k": ["max element", "array", "max", "elements present", "array and max"]}
{"i": "5710401430355968", "t": "LCA of directed graph.", "k": ["lca of directed", "directed graph", "lca", "graph", "directed"]}
{"i": "5681133308608512", "t": "Design Movie Review system using OOP concepts. Code should pass all test cases.", "k": ["design movie review", "movie review system", "movie review", "design movie", "oop concepts"]}
{"i": "5659019704795136", "t": "Which is best coaching in Kota for IIT JEE Preparation?", "k": ["iit jee preparation", "jee preparation", "kota for iit", "iit jee", "coaching in kota"]}
{"i": "5637096304279552", "t": "Has anyone interviewed with Microsoft, Fargo North Dakota? Care to share the experience and some interview questions?", "k": ["fargo north dakota", "fargo north", "north dakota", "interviewed with microsoft", "microsoft"]}
{"i": "5707845899649024", "t": "String1 -- \"aaabb\"\rString2 -- \"aaabbbb\"\rString3 -- \"aaabbb\"\rThese are sample strings. The problem stated that a given string has to be cut in such a fashion that the remaining characters in the string, say a and b have same character count. If not, then the method returns false.\rIn case the string already has characters with same frequency of occurrence as in case 3, then just return true. Return type can be assumed to be Boolean.\r Tried to solve problem using substring() method in java by running a loop over the string, but could not arrive at a solution.", "k": ["sample strings", "string", "aaabb", "aaabbbb", "aaabbb"]}
{"i": "5723715157884928", "t": "Tree Game\r class TreeNode {\r     TreeNode parent; //parent node\r     TreeNode left;   //left child\r     TreeNode right;  //right child\r }\r Two people in a game, player scores by claiming nodes in binary tree, tree node class as shown above.\r The player who eventually owns more nodes wins the game.\r Player A and B each claims a node at first.\r After the first round, a player will only be able to claim a node adjacent to any node owned by himself.\r A tree node is adjacent to its parent, left right and right child.\r A node owned cannot be re-claimed.\r End game when all nodes are owned.\r If player A gets the first claim at node N, find whether it is possible for player B to win.\r If yes, find out which node player B should claim at his first move.\r  Follow up: if player B takes the first hand instead, which node should he pick?", "k": ["game class treenode", "treenode", "class treenode", "node", "player"]}
{"i": "5650460195684352", "t": "It will gain you more knowledge, intensify your soft skills,strong work ethics and grow your network\rWhat is the answer please?", "k": ["soft skills,strong work", "skills,strong work ethics", "intensify your soft", "soft skills,strong", "skills,strong work"]}
{"i": "5656190059544576", "t": "Give m balls and n bins. Find out how many ways to assign balls to bins. Notice the buckets has no order. Like (1,2,3) and (3,2,1) are considered the same. \reg, m = 3, n = 2, return 2. (1, 2) and (3, 0)", "k": ["bins", "give m balls", "give", "balls", "assign balls"]}
{"i": "5705875071696896", "t": "Given items as Shirt, Trouser, Shoes, Tie, Belt, Shocks, and dependencies as - \rTie can be worn after Shirt \rBelt can be worn after Shirt and Trouser \rShocks can be worn after Trouser \rShoes can be worn after Shocks \r Find various orders in which the activity of wearing clothes can be completed.", "k": ["worn after shirt", "shocks find", "shirt belt", "trouser shoes", "trouser shocks"]}
{"i": "5728188341157888", "t": "Write your own class for key value store which has four methods: \rput(key,value)\rget(key)\rgetRandom() this should return a random value with equal probability\r deleteWithKey(key)\r  I was allowed to use hashmap internally to store data. \r this was my second technical phone interview because they wanted to get some more idea about my technical skills.", "k": ["equal probability deletewithkey", "probability deletewithkey", "store data", "return a random", "equal probability"]}
{"i": "5673699122872320", "t": "At first Interviewer asked me to write a problem to solve sudoku and return error if sudoku is invalid.\r I told him I already had seen the problem before and he said he really appreciates my honesty.\r this was my second technical phone interview because they wanted to get some more idea about my technical skills.", "k": ["interviewer asked", "return error", "solve sudoku", "sudoku is invalid", "interviewer"]}
{"i": "5710193300602880", "t": "Given an array of integers find all combination of numbers (regardless of length) that add up to a particular sum. (Subset sum problem)", "k": ["combination of numbers", "subset sum problem", "array of integers", "integers find", "find all combination"]}
{"i": "5699224893652992", "t": "I dont remember the exact problem anymore. but the problem's solution included going through an array and at every step taking 2 minimum element and adding the result. this also includes the result itself. \r so lets say for following array:\r 2,54,4,10,1,7\r you first take 1 and 2 and add \rthen add the result 3 to the array\rso now your array looks like :\r3,54,4,10,7\r then you take 3 and 4 and add them and add result back\r I basically used a heap where i take two mins and add them and add the result back to heap.\r I have give amazon online test twice in last 8 months and both the times the first question was about heaps and second something about finding shorted path in a grid between two cells", "k": ["exact problem anymore", "dont remember", "remember the exact", "problem anymore", "exact problem"]}
{"i": "5754268682813440", "t": "The problem was very similar to the problem from geeksforgeeks: \r Shortest distance between two cells in a matrix or grid\rGiven a matrix of N*M order. Find the shortest distance from a source cell to a destination cell, traversing through limited cells only. Also you can move only up, down, left and right. If found output the distance else -1.\r instead of source and destination, they asked for robot to be able to get rid of obstacle at a certain cell.\r  I have give amazon online test twice in last 8 months and both the times the first question was about heaps and second something about finding shorted path in a grid between two cells", "k": ["shortest distance", "problem from geeksforgeeks", "problem", "matrix", "shortest"]}
{"i": "5754148264345600", "t": "Design amazon online book store.", "k": ["design amazon online", "online book store", "amazon online book", "design amazon", "book store"]}
{"i": "5691695572713472", "t": "I am given jobs with starttime and end time and we unlimited VMs. at any point a VM can only take one job. so bascially I had to find overlapping jobs and assign them to different machines and those that are not overlapping could be assigned to same machines. The tricky part was when there are two different overlaps and they could be assigned to 2 machines instead of all overlapping jobs being assigned to different machines.The method should return minimum number of VMs used to finish all jobs.\r I mentioned sorting the jobs based on start time. and then returning number_of_overlapping jobs +1. but again in some cases if there are two different overlaps which could be assigned to two machines then we need to take care of that.", "k": ["starttime and end", "end time", "jobs", "assigned", "overlapping jobs"]}
{"i": "5121231506898944", "t": "Expression tree evaluation and also write the class for the node and tree itself. (just basic structure like node and data)", "k": ["expression tree evaluation", "expression tree", "write the class", "tree evaluation", "node and data"]}
{"i": "5756209580212224", "t": "LRU cache. Basically started off with how would I store values and get them from memory for faster access. So I mentioned HashMap. and then interviewer added more info about deleting least recently used element.", "k": ["lru cache", "lru", "cache", "basically started", "faster access"]}
{"i": "5655707613921280", "t": "Given a list of files. Return all the unique lines from all files.", "k": ["files", "list of files", "list", "return", "unique lines"]}
{"i": "5755086941192192", "t": "Given a set of points, find the smallest rectangle by area.", "k": ["set of points", "find the smallest", "rectangle by area", "smallest rectangle", "points"]}
{"i": "5689872157769728", "t": "Given N shop coordinates on a 2-d plane, Find the nearest shop from a man whose coordinates are given.", "k": ["find the nearest", "plane", "nearest shop", "find", "shop coordinates"]}
