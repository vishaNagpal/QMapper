{"i": "7711692", "t": "<round 2>\r 7. Quick Sort avg and Worst case complexity . write code for Quick sort ?", "k": ["round", "quick sort", "worst case complexity", "quick sort avg", "avg and worst"]}
{"i": "7772670", "t": "<round 1 >\r 6) what is fork()\r sub questions \r 1) How many times \"SIVA\" will be printedi = 0 ;\r\nwhile (i < n )\r\n{\r\n    fork();\r\n    printf(\"\\n SIVA\");\r\n    i++;\r\n}2)How many times \"SIVA\" will be printedi = 0 ;\r\nwhile (i < n )\r\n{\r\n    printf(\"\\n SIVA\");\r\n    fork();\r\n    i++;\r\n}", "k": ["siva", "printf", "times", "printedi", "fork"]}
{"i": "7773669", "t": "<round 1>\r 5) Explain about Thread Pool ?", "k": ["explain about thread", "thread pool", "round", "explain", "pool"]}
{"i": "7782669", "t": "<round 1>\r4) Difference between Flip-FLOP  ? Where we use flip flop ?", "k": ["difference between flip-flop", "round", "flip flop", "difference", "flip-flop"]}
{"i": "7711691", "t": "<round 1>\r3) Unbalanced or Skewed binary tree root is given to you. You have balance tree by  doing LEFT and RIGHT rotations.", "k": ["unbalanced or skewed", "skewed binary tree", "skewed binary", "binary tree root", "round"]}
{"i": "7772669", "t": "<round 2 >\r2) Write your own \"cp\" command to copy files.", "k": ["command to copy", "copy files", "round", "write", "command"]}
{"i": "7774674", "t": "<Round 1>\r1) Iterative Single Linked List Reverse", "k": ["iterative single linked", "linked list reverse", "single linked list", "iterative single", "list reverse"]}
{"i": "7772668", "t": "Write code to find the longest palindrome in a string.", "k": ["write code", "code to find", "find the longest", "longest palindrome", "write"]}
{"i": "7774672", "t": "You are developing a system for a cell phone which will automatically predict what word a user is typing. Talk about the data structures and algorithms you would use to make this, keeping in mind that cell phones have limited memory/CPU power.", "k": ["user is typing", "developing a system", "automatically predict", "predict what word", "word a user"]}
{"i": "7774671", "t": "Design the ER diagram for a movie rental store.", "k": ["movie rental store", "rental store", "movie rental", "design", "store"]}
{"i": "7711690", "t": "Given a BST in a language where memory must be handled manually, how do you completely remove BST from memory? Recursion is not allowed. Was later told that desired solution had O(N) time and O(1) space.", "k": ["completely remove bst", "remove bst", "handled manually", "bst", "completely remove"]}
{"i": "7711689", "t": "Given two strings, write a function that returns true if the second string contains all the letters from the first string.", "k": ["write a function", "function that returns", "returns true", "write", "string"]}
{"i": "7772667", "t": "When is a finally block executed? Give an example of when to use one.", "k": ["finally block executed", "block executed", "finally block", "executed", "finally"]}
{"i": "7771673", "t": "There are 60 sailors in my galleon,plus half the crew again,how many sailors do we have?", "k": ["galleon,plus half", "half the crew", "crew again,how", "again,how many sailors", "sailors"]}
{"i": "7775670", "t": "You have 20 barrels of rum,divide by a third and add 10,how many do you have?", "k": ["barrels of rum,divide", "barrels", "add", "rum,divide"]}
{"i": "7779665", "t": "There are N web servers. Each web server has a huge file containing random 1 million numbers (numbers can repeat). Find the median of these N million numbers given that only 1 million numbers can be brought into memory at a time.", "k": ["million numbers", "numbers", "web servers", "million", "web"]}
{"i": "7744674", "t": "Code for a method that takes two arrays and returns true if one array is contained in the other..\r 1,2,3,4,5\r2,3\rtrue\r 1,2,3,4,5\r2,4\rfalse.", "k": ["returns true", "code", "other.", "arrays and returns", "array is contained"]}
{"i": "7768667", "t": "Experience working at CISCO INDIA. refer to the third reply for the actual post", "k": ["cisco india", "working at cisco", "experience working", "india", "cisco"]}
{"i": "7756669", "t": "A complete ternary tree is a tree in which each and every node has either 0 or 3 children . Given preorder of a complete ternary tree , construct the tree . Preorder will be a string containing characterd i and l where i represents an internal node and l represent a leaf node .", "k": ["complete ternary tree", "complete ternary", "ternary tree", "string containing characterd", "internal node"]}
{"i": "7761667", "t": "Find the number of strings of length n having u distinct uppercase letters , l distinct lowercase letters and d distinct digits", "k": ["distinct uppercase letters", "distinct lowercase letters", "find the number", "number of strings", "strings of length"]}
{"i": "7760665", "t": "Given an array and an integer k , find the maximum for each and every contiguous sub array of size k.\r Sample Input :\r1 2 3 1 4 5 2 3 6\r3 [ value of k ]\rSample Output : \r3\r3\r4\r5\r5\r5\r6", "k": ["find the maximum", "sample input", "sample output", "contiguous sub array", "array of size"]}
{"i": "7753665", "t": "Given an integer n , you have to print all the ways in which n can be represented as sum of positive integers", "k": ["represented as sum", "sum of positive", "positive integers", "print", "represented"]}
{"i": "7752665", "t": "Count the no of words in a string. there could be arbitrary no of punctuation marks. do not use functions like split.", "k": ["count", "string", "punctuation marks", "words", "functions like split"]}
{"i": "7764664", "t": "Check if two given strings are anagrams?", "k": ["strings are anagrams", "check", "anagrams", "strings"]}
{"i": "7757663", "t": "A 100-sided die, you get a second chance. Your strategy and expected payoff...", "k": ["die", "chance", "expected payoff", "strategy and expected", "payoff"]}
{"i": "7748667", "t": "What difference in behavior you find between Virtual destructors and other virtual functions and why?", "k": ["virtual destructors", "virtual functions", "difference in behavior", "behavior you find", "find between virtual"]}
{"i": "7712680", "t": "Hy there are 4 questions asked in microsoft written paper in bangalore-\r1) you are given a function prototype like\rchar * replace(char *str,char *find,char *replace)\ryou need to code it and specifications are-\rstr is input string .\rfind is a given pattern and you need to find this pattern and if it exist replace it with another string (replace).\rfor example- \rif you are given input string \"aabcdef\" and find pattern is \"bcd\" and replace string is \"xyz\" then output string should be \"aaxyzef\".\rAlso if Input string is \"aabcdef\" and find pattern is \"bcd\" and replace string is \"xxxx\" the output should be \"aaxxxxef\".\r 2) Write top 10 Scenarios for above code and three most critical test cases for above code.\r3) Write top test cases to test coffee vending machine.\r4)There are 8 cricket teams say t1,t2,t3,..t8 and each team plays two matches against each team one match in india and one match in abroad.these matches are known as league matches. Now after league matches top 4 teams(top scorer) will enter semi finals.Some data is-\rA) each win gives one point to winning team.\rB) There is no draw in any match.\rC) at any point if scores of any two teams are equal then winner is decided by an automatic machine and is out of your control.\rNow find-\rx) Minimum number of matches to win so that a team can qualify for Semi finals.\ry) Maximum Number of matches won by a team when it canNOT qualify for semifinals.", "k": ["microsoft written paper", "input string", "string", "replace string", "replace"]}
{"i": "7737673", "t": "Given a sudoku puzzle that is not completed yet, how to check whether the current input is valid. code it in java.", "k": ["input is valid", "sudoku puzzle", "current input", "valid", "sudoku"]}
{"i": "7751666", "t": "write header file for sorting general element. it can sort any type of object(int,float,complex number, objects)", "k": ["write header file", "sorting general element", "write header", "general element", "header file"]}
{"i": "7751665", "t": "many irregular shape objects are moving in random direction. provide data structure and algo to detect collision. Remember that objects are in million.", "k": ["irregular shape objects", "random direction", "irregular shape", "moving in random", "shape objects"]}
