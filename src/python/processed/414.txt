{"i": "11342181", "t": "Write a program to convert a BST to sorted list. You must use the same tree and make the right child pointer as the next pointer in the list.\r I think I flunked this one.", "k": ["convert a bst", "bst to sorted", "write a program", "program to convert", "sorted list"]}
{"i": "11352222", "t": "How to find the strength of a pair of similar eggs given a N story building.\r I explained the divide and conquer approach. He expected better.", "k": ["story building", "find the strength", "pair of similar", "similar eggs", "building"]}
{"i": "11394197", "t": "Develop a hashing algorithm for strings.\r I replied saying MD5 hashing and converting the hash to a BigInt implementation.", "k": ["algorithm for strings", "hashing algorithm", "develop a hashing", "develop", "strings"]}
{"i": "11268186", "t": "How to merge K sorted arrays into one array.\r I explained the second part of external sort and said its in O(N logK). I don't think he understood the time complexity I explained.", "k": ["merge k sorted", "sorted arrays", "merge", "sorted", "explained"]}
{"i": "11352221", "t": "How to find a number in a rotated sorted array.\rHe was looking for the binary search kinda solution", "k": ["rotated sorted array", "sorted array", "find a number", "rotated sorted", "search kinda solution"]}
{"i": "11366811", "t": "Test cases for chat application (lyk MSN ,YAHOO CHAT,GTALK etc).", "k": ["lyk msn", "yahoo chat,gtalk", "test cases", "chat application", "msn"]}
{"i": "11400663", "t": "Question 3) \rGiven an crypted array obtain the original text . Should be implemented without extra space .\rEg: Crypt array  : a3b4c3 \r   decrypt array : aaabbbbccc\rImagine the array contains sufficient memory to hold the decrypt ?", "k": ["crypted array obtain", "aaabbbbccc imagine", "original text", "extra space", "crypt array"]}
{"i": "11399664", "t": "Question 2)\r Given a binary tree which contains values at each node , find whether the path exist from root to the \"LEAF NODE\" such that sum of the values of d path nodes is equal to the GIVEN SUM. if so return true or else return false", "k": ["leaf node", "binary tree", "exist from root", "path nodes", "path exist"]}
{"i": "11395723", "t": "Question 1)\r Eg:\rInput linked list:\r1->2->3->4->a->b->c->d->5->6->e->f\rOutput should be in below format :\r1->a->2->b->3->c->4->d->5->e->6->f", "k": ["input linked list", "input linked", "linked list", "question", "input"]}
{"i": "11364039", "t": "What is your favorite software product and how would you improve it?", "k": ["favorite software product", "favorite software", "software product", "favorite", "software"]}
{"i": "11393849", "t": "Imagine a bit map representation of a television screen.write code to Go to a position (x,y) on the screen and flip the bit i.e. 0 to 1 or 1 to 0?  He told me that I should ask a question as to what is the length of the screen or height of the screen to implement it which i didn't.", "k": ["television screen.write code", "bit map representation", "map representation", "television screen.write", "screen.write code"]}
{"i": "11364037", "t": "I applied for a Technology analyst position in nomura securities. It was completely behavioral. They went through my resume and asked questions based on my college projects? Why nomura? why not some technical company? why did you want to work for a financial firm in comparison to some technical company? Waiting for my result. Fingers crossed.", "k": ["technology analyst position", "technology analyst", "analyst position", "technology", "nomura securities"]}
{"i": "11364036", "t": "This was onsite.  \rCode review, gave some c++ code and asked me to find memory leaks. Its easy if you just go to the methods and pass some inputs. write code for atoi(return the integer part of the input i.e.if 1234abcd is input then u return 1234. Design a Game....I choose poker.write all the classes and methods you may use in them.  They also asked me a question based on the implementation of Trie. I got reject because i didn't do well.", "k": ["find memory leaks", "onsite", "code", "memory leaks", "design a game"]}
{"i": "11394849", "t": "Differences between C and Java?How is memory managed in Java and C? what is your favorite algorithm?Write code to insert an element into a binary search tree?", "k": ["memory managed", "java", "managed in java", "write code", "differences"]}
{"i": "11396695", "t": "What is hash map? How do you insert an element into it? what happens when i insert another value for the same key and I do get for that key? What is queue? what is priority queue? should priority be integral? can they be string comparisons as priority?", "k": ["hash map", "map", "priority", "hash", "queue"]}
{"i": "11367823", "t": "Write a program for prime numbers? improve the number of divisions that you are performing from all the numbers from 1 to that number to some less numbers. improve by seeing if you can decrease the loop from n to some lesser number.", "k": ["write a program", "program for prime", "prime numbers", "numbers", "number"]}
{"i": "11396694", "t": "Design a deck of cards that you may use for poker?  what are the classes and methods that you use.", "k": ["design a deck", "deck of cards", "design", "poker", "deck"]}
{"i": "11367822", "t": "Imagine two linked lists and return the first similar element of the first linked list found in the second one. So when you join those two linked lists then it would form an alphabet Y and you are returning the common point. what would be the time complexity?", "k": ["linked list found", "linked lists", "similar element", "list found", "imagine two linked"]}
{"i": "11394814", "t": "Given a tree, parse the tree using breadth first search and then find the last element in the tree. After finding the last element, replace that element with the root node. Eg. Input:A \r\nB C \r\nD E F GOutput:G \r\nB C\r\nD E F A", "k": ["breadth first search", "parse the tree", "tree", "element", "tree using breadth"]}
{"i": "11393725", "t": "Given a binary search tree. Find the maximum depth of the binary search tree iteratively.", "k": ["binary search tree", "binary search", "search tree", "search tree iteratively", "search"]}
{"i": "11379913", "t": "You are given a tree where child nodes point to parent (there is no link from parent to child). Give any two nodes in the tree, write a function to find the lowest common ancestor. \r Node* LCA(Node *p, Node *q){\r}", "k": ["child nodes point", "nodes point", "child nodes", "point to parent", "link from parent"]}
{"i": "11251924", "t": "You are given a very large array of numbers (positive integers) in any order. Print the numbers that are duplicated:\r1. No memory constraint\r2. Limited Memory", "k": ["positive integers", "large array", "positive", "integers", "order"]}
{"i": "11353907", "t": "Design a data structure where the following 3 functions are optimised:\r 1. Insert(n)\r2. GetRandomElement()\r3. Remove(n)\r Write a class, and implement the functions. Give complexity of each of these ..", "k": ["design a data", "data structure", "design", "optimised", "functions are optimised"]}
{"i": "11378723", "t": "For example, give the letter (p,o) and length of 3, produce the following output(in any order you want, not just my example order)\r ppp ppo poo pop opp opo oop ooo\r another example would be given (a,b) and length 2\r answer: ab aa bb ba", "k": ["ppp ppo poo", "ppo poo pop", "poo pop opp", "pop opp opo", "opp opo oop"]}
{"i": "11275217", "t": "for each age value that appears in students table ,find the level value that appears most often\rstudents(snum:int,sname:string,level:string,age:int);", "k": ["find the level", "students table", "snum", "int,sname", "string,level"]}
{"i": "11367772", "t": "Given constant integers x and t, write a function that takes no argument and returns true if the function has been called x number of times in last t secs.", "k": ["constant integers", "argument and returns", "returns true", "called x number", "number of times"]}
{"i": "11364728", "t": "How do you determine if a point is \r1) inside a triangle\r2) outside\r3) on one of edge of triangle\r4) if the point is one of the points of triangle", "k": ["edge of triangle", "triangle", "inside a triangle", "points of triangle", "point"]}
{"i": "11346316", "t": "In a university, students can enroll in different courses. A student may enroll for more than one course. Both students and courses can be identified by IDs given to them. Design a data structure to store students, courses, and the student-course relationships. You can use arrays, lists, stacks, trees, graphs, etc. or come up with your own data structures. Give the running times, in Big O notation, for the following operations for your data structure and justify the answers: a) Return all students in a list. b) Return all courses in a list. c) Return all courses in a list for a given student. d) Return all students in a list for a given course.", "k": ["return", "students", "list", "return all students", "data"]}
{"i": "11346315", "t": "]A shop sells an item in packets of 6, 9, and 17. A customer can buy any number of packets, but a packet cannot be broken up. Provide an efficient algorithm to solve the question \"Can I buy N items?\". For example, is it possible to buy 29 items? What about 19? Your algorithm simply needs to return true or false.", "k": ["shop sells", "buy", "packets", "shop", "sells"]}
{"i": "11341384", "t": "Write a function which traverse the whole tree and return the linked list of nodes.Your code should also be generic enough to work on any tree exp Binary tree, General tree etc.", "k": ["tree exp binary", "exp binary tree", "exp binary", "write a function", "general tree"]}
