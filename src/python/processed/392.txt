{"i": "12809666", "t": "Given two nodes of a tree, find the first common ancestor of these node.", "k": ["common ancestor", "tree", "find", "common", "ancestor"]}
{"i": "12809665", "t": "What data structure you will use if you have to implement google map like utility, you will be able to search the city, you will be able to find shortest path between two nodes. And you have to implement one more feature of auto suggestion which means if user type \"Na\" then you should show all the cities starting with letter Na in a list. And algo should be very efficient because it should update things as soon as user changes the typed character.", "k": ["find shortest path", "implement google map", "map like utility", "search the city", "data structure"]}
{"i": "12765663", "t": "each of 100 students in a school has a unique ranking 1-100. I will select 50 students randomly . \rOf the 50 randomly selected student i will select a boy, say ranking 40, and wish to know his relative ranking among the 50 students selected. How do you do this efficiently?", "k": ["unique ranking 1-100", "ranking 1-100", "unique ranking", "ranking", "students"]}
{"i": "12791676", "t": "Write a recursive function to convert Binary Code of a number into its equivalent Gray's code and the other way round.", "k": ["convert binary code", "equivalent gray code", "binary code", "gray code", "convert binary"]}
{"i": "12743699", "t": "Given a set of intervals, find the interval which has the maximum number of intersections.", "k": ["number of intersections", "maximum number", "find the interval", "find", "intersections"]}
{"i": "12781696", "t": "Given a string \"This is  an   example\" --> Output: \"This is an example\" There should be equal number of spaces between words.", "k": ["spaces between words", "equal number", "number of spaces", "output", "string"]}
{"i": "12788676", "t": "Given a string \"This is  an   example\" --> Output: \"This is an example\" There should be equal number of spaces between words.", "k": ["spaces between words", "equal number", "number of spaces", "output", "string"]}
{"i": "12788668", "t": "There's a major problem in the implementation of the following class. Can you spot it? How can you fix\r        the problem? You can propose more than one solution, depending on the requirement specifications of\r        the class.#include<iostream>\r\nusing namespace std;\r\ntemplate <class T>                            \r\nclass Array                                  \r\n{                                              \r\nprivate:                                        \r\n    T *m_pData;                                   \r\n    unsigned int m_nSize;                         \r\n                                                \r\npublic:                                         \r\n  Array(unsigned int nSize) : m_nSize(nSize)      \r\n  {                                           \r\n    if(m_nSize > 0)\r\n     m_pData = new T[m_nSize];                \r\n  }                                           \r\n                                                \r\n  virtual ~Array()                                \r\n  {                    \r\n    if(m_pData != NULL)                           \r\n     delete [] m_pData;                          \r\n  }\r\n                                            \r\nbool Set(unsigned int nPos, const T& Value)\r\n{\r\n  if(nPos < m_nSize)\r\n  {\r\n  \tm_pData[nPos] = Value;\r\n  \treturn true;\r\n  }\r\n  else\r\n  {\r\n  \treturn false;\r\n  }\r\n}\r\n  \r\nT Get(unsigned int nPos)\r\n{\r\n        if(nPos < m_nSize)\r\n             return m_pData[nPos]; \r\n        else     \r\n            return T();\r\n}\r\n};", "k": ["unsigned int npos", "pdata", "unsigned int", "nsize", "npos"]}
{"i": "12793663", "t": "given a 4X4 matrix of characters and a dictionary of all the possible english words, write algorithm to find out all the possible words contained in the matrix by connecting the neighboring cells.", "k": ["write algorithm", "neighboring cells", "algorithm to find", "connecting the neighboring", "english words"]}
{"i": "12796661", "t": "How will you implement the auto complete functionality of any intelligent IDE. Discuss your data structure. Handle all the possible contexts. e.g. handle the cases at local, global and class levels", "k": ["auto complete functionality", "intelligent ide", "implement the auto", "auto complete", "complete functionality"]}
{"i": "12795661", "t": "implement find_replace(origString, stringToFind, stringToReplace) method. Handle all the possible scenarios.", "k": ["implement find", "replace", "origstring", "stringtofind", "stringtoreplace"]}
{"i": "12793662", "t": "given two sorted arrays, find the median of the combined array efficiently.", "k": ["combined array efficiently", "find the median", "array efficiently", "sorted arrays", "combined array"]}
{"i": "12791665", "t": "Difference between == and === in JScript, Write a method to detect mouse hovering over a text box using CSS style sheets", "k": ["css style sheets", "detect mouse hovering", "write a method", "box using css", "css style"]}
{"i": "12743683", "t": "Design a simple Address book Web application, Discuss all aspects of creating the App , starting from UI to Back-end databases", "k": ["address book web", "book web application", "simple address book", "web application", "back-end databases"]}
{"i": "12752668", "t": "Design a client-server application in the Application layer of TCP/IP", "k": ["layer of tcp", "design a client-server", "client-server application", "application layer", "tcp"]}
{"i": "12789664", "t": "Write all possible test cases to test a DVD player and a smart phone", "k": ["dvd player", "smart phone", "test cases", "test a dvd", "dvd"]}
{"i": "12789663", "t": "Count the bits in a Integer, Swap two numbers without using any temp variable, Find the middle element in the linked list", "k": ["swap two numbers", "find the middle", "count the bits", "temp variable", "linked list"]}
{"i": "12752667", "t": "Write a function to fill in values for a 10 X 10 array. The function should fill the array with random ,non-repeated values every time the function is called.", "k": ["function", "write", "write a function", "fill", "array"]}
{"i": "12743681", "t": "i got this as an interview question. i was given 2 linked lists of unequal lengths,containing a single digited number in each of their nodes. i was asked to build a 3rd linked list which contains the sum of the two linked lists, again in the form of 1 digit in a node. ex: linked list 1 is 4-7-9-6 linked list 2 is 5-7 then the 3rd linked list would be 4-8-5-3 can someone suggest me Java answer. \r______________\rNeed to write a function \rNode addLinkList(Node h1, Node h2){ }Class Node{ int val; Node next }", "k": ["interview question", "node", "linked list", "linked", "list"]}
{"i": "12778667", "t": "Convert a sorted doubly linked list to a BST while trying to keep BST as balanced as possible", "k": ["sorted doubly linked", "doubly linked list", "convert a sorted", "sorted doubly", "doubly linked"]}
{"i": "12778666", "t": "Convert a BST to sorted doubly linked list.", "k": ["doubly linked list", "convert a bst", "sorted doubly linked", "bst to sorted", "linked list"]}
{"i": "12779666", "t": "given an array A which has only 0's and 1's in sorted order , find the occurrence of first '1' in A.\rexample : A [] = 00001111 , returns 5 .", "k": ["sorted order", "find the occurrence", "returns", "order", "find"]}
{"i": "12782664", "t": "write a function which takes a string S and a pattern string P and an integer i , and returns the i'th occurrence of P in S. \rexample S = \"abcabcefgabc \" , P = \"abc\" , i =3 , ..returns 10", "k": ["write a function", "i'th occurrence", "pattern string", "abcabcefgabc", "abc"]}
{"i": "12766663", "t": "differencee between REST and SOAP", "k": ["rest and soap", "differencee between rest", "soap", "rest", "differencee"]}
{"i": "12768662", "t": "difference between exe and dll", "k": ["difference between exe", "exe and dll", "difference", "dll", "exe"]}
{"i": "12770662", "t": "difference between hashtable and hash map", "k": ["difference between hashtable", "hash map", "hashtable and hash", "difference", "map"]}
{"i": "12770661", "t": "|_|\r                         |_|    |_|\r                      |_|   |_|   |_|\r                    |_| |_|   |_|  |_|\r                  |_| |_| |_|  |_|  |_|\r Each cup has capacity C and once a cup gets full, it drops half extra amount to left child and half extra amount to right child\r for Eg : let' first cups get 2C amount of liquid then extra amount C(2C-C) will be divided equally to left and right child cup of next level\r i.e. C/2 to left child and C/2 to right child\r Write a function which takes input parameter as amount of liquid poured at top (L) and height of particular cup (h) index of that cup (i) and it should return amount of liquid absorbed in that cup.", "k": ["half extra amount", "drops half extra", "extra amount", "half extra", "left child"]}
{"i": "12742662", "t": "Describe the SOA principles / Web Service standards follow when developing web services", "k": ["developing web services", "web service standards", "service standards follow", "describe the soa", "soa principles"]}
{"i": "12746661", "t": "Write a method to create new tree with same structure but the values of each node will be sum of their descendents (sub tree). The leaf nodes will become 0. So if the tree is 50 30 10 40 60 55 75 (PreOrder) then new tree should be 270 50 0 0 130 0 0(PreOrder)", "k": ["write a method", "method to create", "tree", "leaf nodes", "preorder"]}
{"i": "12626693", "t": "What's the difference between a Linked List and an ArrayList and give me an example of when to use which", "k": ["linked list", "arraylist and give", "linked", "list", "difference"]}
