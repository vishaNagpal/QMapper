{"i": "None", "t": "Verify if the given password is valid/invalid;\r1. must be 5-12 characters long\r2. must contain atleast one number and one lowercase character\r3. a sequence must not be followed by the same sequence (like 123123qs is invalid, 123qs123 is valid)", "k": ["password is valid", "valid", "verify", "invalid", "password"]}
{"i": "None", "t": "You are a hacker and need to find possible passwords given the length of the password and that it is a well-ordered number (eg., 123 is well-ordered as 1<2<3 and 213 is not well-ordered as 2<1<3 is NOT true)", "k": ["well-ordered number", "find possible passwords", "well-ordered", "number", "true"]}
{"i": "12998666", "t": "Take a series of integers as input till a zero is entered. Among these given integers, find the maximum of the odd numbers and the minimum of the even integers (not including zero) and print them.", "k": ["input till", "integers", "entered", "find the maximum", "series of integers"]}
{"i": "12996672", "t": "find second largest element in an array in O(n) and in single pass.", "k": ["find second largest", "single pass", "largest element", "find", "pass"]}
{"i": "12992669", "t": "Build a dictionary of english words.... you can use any daya strcuture u want?", "k": ["build a dictionary", "english words", "dictionary of english", "build", "words"]}
{"i": "12996670", "t": "Design an operating system \rTargeted user-> novice users\rcost should be minimum.", "k": ["operating system targeted", "system targeted user", "novice users cost", "system targeted", "design an operating"]}
{"i": "12987675", "t": "Design an operating system \rTargeted user-> novice users\rcost should be minimum.", "k": ["operating system targeted", "system targeted user", "novice users cost", "system targeted", "design an operating"]}
{"i": "12996669", "t": "if a web and a standalone system is developed under the condition like constant no of user for both appliction, same hardware and network configuration. which one will be better and why?", "k": ["network configuration", "standalone system", "system is developed", "condition like constant", "hardware and network"]}
{"i": "12997668", "t": "Something that web browser can't do?", "k": ["web browser", "web", "browser"]}
{"i": "12989661", "t": "design a furniture module, a furniture could be a couch, chair, etc. each furniture could contain multiple materials, wood, steel, etc.", "k": ["furniture module", "design a furniture", "chair", "furniture", "design"]}
{"i": "12986664", "t": "Push all the zero's of a given array to the end of the array. In place only. Ex 1,2,0,4,0,0,8 becomes 1,2,4,8,0,0,0", "k": ["array", "push", "end", "place"]}
{"i": "12973682", "t": "Given a Relation Person(id,name,momid,dadid) \r Return all siblings  (ie those with common momid,dadid)\r eg 1,2", "k": ["relation person", "return all siblings", "common momid,dadid", "person", "return"]}
{"i": "12976681", "t": "Write a Program to fill empty cell of  a Partially filled MxM  Crossword Puzzle to form a valid English words. So the cells initially will be either empty , filled or blocked(cannot be filled).  You have access to English Dictionary.", "k": ["mxm crossword puzzle", "crossword puzzle", "partially filled mxm", "filled mxm crossword", "valid english words"]}
{"i": "None", "t": "Make a class design for library maintenance. Library can have books, magazine, CDs and DVDs. Any member can checkout from library.", "k": ["make a class", "class design", "library maintenance", "make", "maintenance"]}
{"i": "12977662", "t": "Given a 2D array, all rows and all columns sorted. Find an integer x from the 2D array.", "k": ["columns sorted", "array", "sorted", "rows", "columns"]}
{"i": "12975663", "t": "Given 2 Arrays A and B, find the intersection of two arrays. Initially without using any other data structure. Later with using additional data structure.", "k": ["find the intersection", "arrays", "data structure", "structure", "find"]}
{"i": "12962677", "t": "Find the no which is most repeated in an array and its frequency  in O(n)", "k": ["find", "repeated", "array", "frequency"]}
{"i": "12959674", "t": "can operator overloading be implemented in java if yes how?", "k": ["operator overloading", "overloading be implemented", "implemented in java", "operator", "overloading"]}
{"i": "12963672", "t": "Is is possible to write a program to print number 1 to 100 wihout using loop. if yes how many way and how?", "k": ["wihout using loop", "print number", "write a program", "program to print", "number"]}
{"i": "12962672", "t": "Spiral traversal of an array.", "k": ["spiral traversal", "spiral", "array", "traversal"]}
{"i": "12963670", "t": "How many ways two variables can be swapped without using third variable?", "k": ["swapped", "variables", "variable"]}
{"i": "12965672", "t": "3. Data structures. BST, Hash Maps their complexities,", "k": ["bst", "hash maps", "data structures", "hash", "maps their complexities"]}
{"i": "12960668", "t": "4. Write Code: Find first unique character in an array.", "k": ["write code", "find first unique", "code", "find", "write"]}
{"i": "12962671", "t": "2. Stack vs Heap memory allocation.", "k": ["stack vs heap", "heap memory allocation", "heap memory", "heap", "memory allocation"]}
{"i": "12965671", "t": "4. Write Code: Count number of set bits in an Integer", "k": ["write code", "count number", "code", "count", "integer"]}
{"i": "12965670", "t": "3. Given a spreadhseet, what data structure you will use to store it. What will you use for dynamic updation of of Spreadsheet formulas.", "k": ["spreadsheet formulas", "data structure", "spreadhseet", "spreadsheet", "formulas"]}
{"i": "12963669", "t": "2. What is difference between overloading and overriding", "k": ["overloading and overriding", "overriding", "difference", "overloading", "difference between overloading"]}
{"i": "12960667", "t": "Write Code: Find an integer array's maximum value. Trace code. Use Try/catch instead of return.", "k": ["find an integer", "integer array maximum", "write code", "integer array", "array maximum"]}
{"i": "12953662", "t": "Write a program about temperature measurement. Which should has following keys:\r1. Divide the program into different component, better use MVC pattern ( like BusinessLogic Layer, DataAccessLayer, ValidationLayer, GUI Layer)\r2. Use Spring.Net for DI.\r3. Use NHibernate for ORM & NUnit for test.", "k": ["temperature measurement", "gui layer", "layer", "write", "measurement"]}
{"i": "12913676", "t": "System Test: Write a program for searching books by Author name.\r1. Develop 3-Tire Architecture. ( GUI Layer, Business Layer, DataAccess layer / DTO)\r2. Good to use DI.\r3. Show result in Grid and add functionality sorting & Paging.", "k": ["system test", "write a program", "books by author", "program for searching", "searching books"]}
