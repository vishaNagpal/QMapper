{"i": "11295005", "t": "In a 3d space find points 10 points that are closest to the origin. Which data structure would you implement. What would be the time complexity of such a program.\r I said that I would maintain 10 arrays that stores (x,y,z) coordinates and 10 int var to store the distance value.\r int coordinates1[],value1,coordinates2[],value2,coordinates3[],value3.... \rWe would start calculating Euclidean distance of the given point in hand and store it in those 10 arrays. As soon as we got 11th point we would replace it with the array corresponding to the highest value in the array.  \rAs soon as we got the 12th point we would replace it with the 2nd highest corresponding value array ...after traversing through every point we would have the nearest 10 coordinates. I read this somewhere on career cup. I just modified the idea a little to accommodate 3d realm.\r He asked what is space complexity. I said 10 arrays and 10 int values. A constant number will have a constant value n, O(n). He said fine, what if there are k points to be found. I said still it would be O(n). He said I was wrong it would be O(n square) since k points are inputted. I did not understand that part.", "k": ["points", "point", "space find points", "find points", "int"]}
{"i": "11256585", "t": "If have allocated an array of integers using new operator. How can the memory be freed using free(not delete) ?\r If have allocated an array of integers using malloc(not new). How can the memory be freed using delete(not free) ?", "k": ["allocated an array", "array of integers", "memory be freed", "integers using malloc", "allocated"]}
{"i": "11256575", "t": "Algorithm to find the square root of a given number in C without using sqrt", "k": ["algorithm to find", "find the square", "square root", "algorithm", "sqrt"]}
{"i": "11256309", "t": "Given an Array A={-2,4,30,-50,90,-60,100,120}\rThe array index represents time of day.\rSay 0-9 A.M, 1- 10 A.M....etc\rAnd value represents stock price at that time.\r Get the max profit. i.e in this input, \rbest buying price=-60\rbest selling price=120", "k": ["array index represents", "array index", "index represents time", "array", "index represents"]}
{"i": "11295731", "t": "Explain STL maps- Hash tables and buckets.", "k": ["explain stl maps", "explain stl", "stl maps", "hash tables", "tables and buckets"]}
{"i": "11298700", "t": "Given a BST find the kth largest element in the BST with single traversal and without using any extra space.", "k": ["kth largest element", "extra space", "bst find", "find the kth", "kth largest"]}
{"i": "11274980", "t": "Simple questions were asked.\r1. Get the number of employees from every department given employee and dept tables.\r2. How would you optimize a query considering that it is performing very bad.\r3. What happens behind the scene when you hit any website URL in the web browser.", "k": ["simple questions", "questions were asked", "simple", "asked", "questions"]}
{"i": "11272961", "t": "Visualize holding an N-ary tree by its root in your left hand. Now hold any node in the tree with your right hand and release the left hand. How the tree would transform and give an algorithm to do it programatically.", "k": ["holding an n-ary", "visualize holding", "n-ary tree", "left hand", "n-ary"]}
{"i": "11271954", "t": "Given an array such that ever number differ from its adjacent number by at max 1. Find a number in this array efficiently.\r I told him i knew this question already and explained the answer real quick.", "k": ["number differ", "adjacent number", "number", "max", "array efficiently"]}
{"i": "11269963", "t": "Vertical summation of a binary tree.\rI told him I knew this question already and explained the answer real quick.", "k": ["vertical summation", "binary tree", "answer real quick", "vertical", "tree"]}
{"i": "11274979", "t": "given a number say 312. find the next number using the same digits. 321.", "k": ["number", "find", "digits"]}
{"i": "11254600", "t": "How would you do check valid parenthesis in less than O(n) time. He was looking for divide and conquer.\rWe had a debate about it being in O(n) and he asked me to think about it in threaded environment.", "k": ["check valid parenthesis", "check valid", "valid parenthesis", "time", "divide and conquer"]}
{"i": "11269960", "t": "Write a function to check valid parenthesis.\r(()) - valid\r)( - invalid.", "k": ["check valid parenthesis", "write a function", "function to check", "valid parenthesis", "check valid"]}
{"i": "11272960", "t": "Give a design for chessboard which allows two people to play. (Class/Object level)", "k": ["give a design", "people to play", "class", "object level", "design for chessboard"]}
{"i": "11269959", "t": "Explain about a project I had in my resume from previous company in detail. (really detailed) :)", "k": ["company in detail", "resume from previous", "previous company", "explain", "detail"]}
{"i": "11271952", "t": "Give a low level (class/object) design for the document write component in the amazon's websync.", "k": ["document write component", "give a low", "low level", "amazon websync", "document write"]}
{"i": "11270976", "t": "Give a high level design for amazon's websync architecture.", "k": ["amazon websync architecture", "high level design", "give a high", "websync architecture", "high level"]}
{"i": "11273966", "t": "Given a huge file with number and limited memory, how would you sort it efficiently.\rHe was looking for external sort as the answer.", "k": ["limited memory", "huge file", "file with number", "number and limited", "sort it efficiently"]}
{"i": "11272959", "t": "Given an array like below, construct a N-ary tree from it.\r322100100\reach number represents the number of children starting with root.3\r\n     / | \\\r\n    2  1  0\r\n   / \\  \\\r\n  2   0  0\r\n / \\\r\n1   0", "k": ["construct a n-ary", "n-ary tree", "n-ary", "construct", "array"]}
{"i": "11254599", "t": "Write a function to check if a binary tree is a binary search tree.", "k": ["binary search tree", "write a function", "function to check", "binary search", "search tree"]}
{"i": "11273930", "t": "How much memory will be allocated from the \"stack\" for the following declarations together?\rint *a;\rchar *b;\r This was an objective question. a and b have not been malloced yet.", "k": ["stack", "int", "char", "objective question", "memory"]}
{"i": "11270740", "t": "int a = 323235,b = 133423,c;\rint *p = &a,*q = &b;\rc = p - q;\r for the snippet above, the value of c is 1. Why is it not the difference of the address values in p and q ?(i.e 4)", "k": ["int", "snippet", "difference", "address"]}
{"i": "11256218", "t": "you have an array of integers, find the longest\rsubarray which consists of numbers that can be arranged in a sequence, e.g.:\r a = {4,5,1,5,7,4,3,6,3,1,9}\rmax subarray = {5,7,4,3,6}", "k": ["array of integers", "find the longest", "max subarray", "consists of numbers", "longest subarray"]}
{"i": "11254245", "t": "Implement barrier synchronization using semaphores. \rThat is, suppose you have n threads which should wait on a barrier until all of them arrive.", "k": ["implement barrier synchronization", "synchronization using semaphores", "implement barrier", "barrier synchronization", "implement"]}
{"i": "11259201", "t": "A new USB memory device is designed with the following functionalities.\r1. when connected to a camera, it opens the data transfer wizard.\r2. When connected to another storage device, it copies data.\r3. When connected to a smart phone, it sync's. the contacts\r<there were a couple of others too.>\rWrite the test cases.", "k": ["usb memory device", "usb memory", "usb", "memory device", "connected"]}
{"i": "11254235", "t": "write a function to reverse a linked list in the following fashion. \rgiven: a list : a b c d e f \r       a number N\routput should be: if N=2\r                  b a d c f e \r                   if N=3\r                  c b a f e d\rie, the list should be reversed in <N><N>...<N> intervals. We are not allowed to allocate any new nodes.", "k": ["write a function", "function to reverse", "reverse a linked", "linked list", "list"]}
{"i": "11249215", "t": "find the number of solutions (non-negative integral) for the equation x1+x2+x3+x4+x5=20.\rie, #((0,0,0,0,20),(0,0,0,20,0),....)", "k": ["non-negative integral", "find the number", "number of solutions", "find", "solutions"]}
{"i": "11253953", "t": "Given a Binary tree and a pointer to some node in the tree, find the left and right neighbors of the input node. The neighbor nodes are on the same level/depth as of input node.\r Don't use BFS/level order traversal.\rThere is no parent pointer.", "k": ["binary tree", "find the left", "input node", "binary", "tree"]}
{"i": "11247872", "t": "{There are lakhs of co-orddinate Points P(x,y) as input data. A library function int findDistance(x,y) has been provided to you which will give the distance of P(x,y) from origin. Find 100 points which are at least distance from origin.}", "k": ["input data", "lakhs of co-orddinate", "co-orddinate points", "origin", "data"]}
{"i": "11258865", "t": "{You are given  an unsorted array of integers. You have to find out the first sub array whose elements when added sum up to zero.\reg:- int Array[] = {1,2,-4,-3, 6 ,3.....}Here sub array is -3,6,3 bcos adding all these sum to zero. A sub array can be of size 2 to whole length of the array. You can use extra space also for the same", "k": ["array", "unsorted array", "integers", "unsorted", "sum"]}
