{"i": "12419665", "t": "GIven a binary tree, print the tree according to the level.\reg\r01\r0203\r04050607\r0809101112131415\rproceed further to find the mirror image of alternate level\r01\r0203\r07060504\r0809101112131415", "k": ["binary tree", "print the tree", "level", "alternate level", "tree"]}
{"i": "12417680", "t": "You have a circular track containing fuel pits at irregular intervals. The total amount of fuel available from all the pits together is just sufficient to travel round the track and finish where you started. Given the the circuit perimeter, list of each fuel pit location and the amount of fuel they contain, find the optimal start point on the track such that you never run out of fuel and complete circuit.", "k": ["irregular intervals", "circular track", "fuel pit location", "fuel", "fuel pits"]}
{"i": "12417662", "t": "Suppose an array is of the form [i1,i2,i3,i4,c1,c2,c3,c4] where i[1..n] are integer elements and c[1..n] are character elements. Write an in place algorithm so that the resulting array is of the form [i1,c1,i2,c2,i3,c3,i4,c4]. State optimised time and space complexities.\rExample: array: [1,7,9,4,a,x,r,d] should become [1,a,7,x,9,r,4,d].", "k": ["integer elements", "character elements", "form", "elements", "array"]}
{"i": "12402060", "t": "Cache language. If A+B is written as +AB in cache language, solve the foll sums...Very basic", "k": ["cache language", "language", "cache", "solve the foll", "foll sums"]}
{"i": "12345038", "t": "Maths  and logic sections  very common problems like if one person leaves at this time and other at this time, what time will they meet. BRING A CALCULATOR to solve these. Just simple calci.", "k": ["maths and logic", "logic sections", "sections very common", "common problems", "person leaves"]}
{"i": "12402058", "t": "There is a game they termed as Mingo. A random generator (like a speaker standing in a group housie game calls out a number)  generates out any number from 1 to 1000.\rThere is a 10X10 matrix. A random generator assigns values to each block of this matrix(within 1 to 1000 obviously).\rWhenever, a row or a column or a diagonal is fully filled in this 10x10 from the numbers called out by the speaker, its called a 'Mingo'.\rWrite a program that will find first Mingo, then second Mingo, then thirds Mingo...and so forth.", "k": ["mingo", "group housie game", "housie game calls", "random generator", "game they termed"]}
{"i": "12357061", "t": "write a program to implement the game of tic tac toe.", "k": ["tic tac toe", "write a program", "tac toe", "program to implement", "implement the game"]}
{"i": "12336561", "t": "Given a list, L, of size k. L  contains elements between 1 and n. Also given a function RND() such that this function returns a number between 1 and INT_MAX.\r\tNow generate number between 1 and n, using RND(), such that the element should not be there in the list L. All elements should have a uniform probability.", "k": ["rnd", "function rnd", "max", "size", "list"]}
{"i": "12399950", "t": "Given a string \"abcd\" print combinations of length n. Example if n= 3 print abc, abd, acd, bcd. Was asked to use recursion. Can someone please help me with a C# recursive function for this.", "k": ["combinations of length", "abcd", "print combinations", "print abc", "print"]}
{"i": "12402663", "t": "compare two strings arrays and return intersection elements in a string array without using 2 for loops?", "k": ["return intersection elements", "return intersection", "intersection elements", "strings arrays", "string array"]}
{"i": "12339412", "t": "Design pack of cards", "k": ["design pack", "pack of cards", "design", "cards", "pack"]}
{"i": "12385407", "t": "compare two strings and store intersection elements in a string array without using 2 for loops?", "k": ["store intersection elements", "store intersection", "intersection elements", "string array", "compare two strings"]}
{"i": "12351270", "t": "Given an array (length n), we need to find the subarray (length k)  such that the sum of the first j elements of the subarray equals the sum of the remaining (k-j) elements of the subarray. \rFor e.g.\rArray: 2,2,13,4,7,3,8,12,9,1,5\rOutput: 4,7,3,8,12,9,1 [4+7+3+8=12+9+1]\rCould this be done with a complexity better than O(n^3)", "k": ["equals the sum", "find the subarray", "subarray equals", "subarray", "length"]}
{"i": "12374673", "t": "What is the complexity of an algorithm to check whether a binary tree is symetric or not.   No need to check the data only the structure needs to be verified.", "k": ["binary tree", "tree is symetric", "algorithm to check", "check", "complexity"]}
{"i": "12381893", "t": "Design an online movie booking system", "k": ["movie booking system", "online movie booking", "design an online", "booking system", "online movie"]}
{"i": "12381892", "t": "Find the nth non-repeating number given a streams of characters in the range of A-Z", "k": ["nth non-repeating number", "find the nth", "nth non-repeating", "non-repeating number", "streams of characters"]}
{"i": "12382912", "t": "Given the number, find the immediate next (larger) palindrome", "k": ["larger", "palindrome", "number", "find"]}
{"i": "12381743", "t": "find square root of a number upto given precision value", "k": ["find square root", "find square", "square root", "number upto", "upto given precision"]}
{"i": "12364061", "t": "String represented as as singly Linked list with one letter on each Node.  Need to check whether it is a paliandrome or not.   Can use only one String variable other than the Linkedlist", "k": ["singly linked list", "singly linked", "linked list", "node", "linked"]}
{"i": "12362929", "t": "Puzzle:\rgiven a 10x10x10 sized room and a 15 feet large stack of penny. Can you fit all the pennis in this room. Diameter of a Penny is half inch.", "k": ["feet large stack", "feet large", "large stack", "sized room", "puzzle"]}
{"i": "12361959", "t": "Find the top 100 largest numbers from a very large file containing numbers. The file cannot be loaded into the memory.", "k": ["find the top", "largest numbers", "large file", "numbers", "find"]}
{"i": "12363934", "t": "write algorithm to add two Roman Numeral.\rCan you do it without converting Roman Numeral to integer numbers.", "k": ["roman numeral", "converting roman numeral", "write algorithm", "algorithm to add", "roman"]}
{"i": "12359938", "t": "print the 5th node from the end of a link list.", "k": ["link list", "print", "node", "list", "end"]}
{"i": "12363933", "t": "Sort Array of String based on char array sort order.\rexample:\rchar[] c = {'T', 'M', 'A'}\rString[] strArray = {\"Adam\",\"Martha\",\"Terry\"}\rOutput : \"Terry\", \"Martha\", \"Adam\"", "k": ["array sort order", "adam", "martha", "terry", "char array sort"]}
{"i": "12361925", "t": "Write jQuery code to alert a message box when you click on a paragraph with the content of paragraph.", "k": ["write jquery code", "write jquery", "jquery code", "code to alert", "alert a message"]}
{"i": "12361829", "t": "* Why Microsoft?\r* What is Cloud Computing? \r* How would you design a software application? Discussion about software and hardware requirements. How would you handle increase in load? How would you manage the increase in load without additional hardware?", "k": ["cloud computing", "microsoft", "computing", "cloud", "increase"]}
{"i": "12362800", "t": "Write efficient code for Singleton class. I wrote the double-checked locking version. Then he asked for other approaches specifically to reduce the number of lines of code :-/", "k": ["singleton class", "write efficient code", "write efficient", "singleton", "code for singleton"]}
{"i": "12362799", "t": "You have 2 character arrays. The arrays have characters ranging from a-z (all small letters). \r1. Merge the two arrays\r2. Sort the array\rPerform the above in O(N)", "k": ["arrays", "array perform", "characters ranging", "merge", "character arrays"]}
{"i": "12364850", "t": "Convert the matrix into a linked list (singly or doubly). Nodes have two pointers - right and down.a1-a2-a3-a4\r\n|  |  |  |\r\nb1-b2-b3-b4\r\n|  |  |  |\r\nc1-c2-c3-c4", "k": ["singly or doubly", "convert the matrix", "linked list", "convert", "list"]}
{"i": "12363816", "t": "Find first two numbers whose sum equals a given number in infinite length (stream of numbers) singly linked list.", "k": ["singly linked list", "infinite length", "singly linked", "linked list", "sum equals"]}
