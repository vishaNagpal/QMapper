{"i": "5671906620473344", "t": "Implement Java Set using TDD", "k": ["implement java set", "set using tdd", "java set", "implement java", "tdd"]}
{"i": "5720500417331200", "t": "Given an mXn Sorted matrix and a value X. Every row is sorted and first number of every row is greater than last number of previous row Find the value X in most efficient way.", "k": ["mxn sorted matrix", "mxn sorted", "sorted matrix", "previous row find", "sorted"]}
{"i": "5726490420314112", "t": "Given a Binary tree and value X. Find X in the tree and return its parent\r X: \r         10   \r     4     3\r   5   7 9   8\r    If X = 7, return 4", "k": ["binary tree", "binary", "tree", "return", "tree and return"]}
{"i": "5673460861763584", "t": "Remove 3 consecutive duplicates from string.\rINPUT:aabbbaccddddc\rOUTPUT:cdc", "k": ["remove", "consecutive duplicates", "duplicates from string", "input", "aabbbaccddddc output"]}
{"i": "5655981552828416", "t": "Given a list L of numbers from 0 to n, and another number k = [0-9], find how many times k appears in L. If the target number in L is more than one digit, treat each digit separately. For example, k=0 appears twice in L = [0,10].", "k": ["find", "number", "list", "times", "target number"]}
{"i": "5710004859437056", "t": "Given a list of system packages, some packages cannot be installed until the other packages are installed. Provide a valid sequence to install all of the packages.\r e.g.\ra relies on b\rb relies on c\r then a valid sequence is [c, b, a]", "k": ["list of system", "valid sequence", "system packages", "packages", "installed"]}
{"i": "5721184525090816", "t": "Phone screen Q: String encoding and decoding: Design a method that converts a list of strings into a single string which can be later converted back to the list.", "k": ["design a method", "phone screen", "encoding and decoding", "method that converts", "converted back"]}
{"i": "5655351266377728", "t": "Q: Find the absolute paths to all directories with image files, given a file system that looks like this. The subdirectory is one indent over./usr\r\n   /local\r\n       profile.jpg\r\n       /bin\r\n           config.txt\r\n           dest.png\r\n       /rbin\r\n    image.gif\r\n/sys\r\n   /re\r\n   /tmp\r\n       pic.jpg\r\n       .....\r\n\u2026\u2026", "k": ["find the absolute", "absolute paths", "directories with image", "find", "image files"]}
{"i": "6227199318294528", "t": "Print elements of a matrix in spiral form.", "k": ["print elements", "spiral form", "matrix in spiral", "print", "form"]}
{"i": "5727773407576064", "t": "Situation - You have millions of records(Strings) and user is typing \"abc\" in search box . Your task is to display strings from records in the sequence.\r e.g String in the record contain \"abc\" starting should appear first, then string which has \"abc\" in the second, should apprear later as below.\r String - fabcsdf,asdfabc,dfadsfsdfabc,abckdf,ddfabc...\r Displays suggestion like....\rabckdf\rfabcsdf\rddfabc\rasdfabc\rdfadsfsdfabc\r Question - Which data structure you would use to stor this ?\rAnd how will you implement to get this(shorted) result", "k": ["abc", "user is typing", "search box", "string", "situation"]}
{"i": "5680571180122112", "t": "Given two strings needle and haywards that contains ASCII characters,write an algorithm to output a list of 0-based indices of the occurances of all anagrams of needle in haystacks", "k": ["ascii characters,write", "characters,write an algorithm", "algorithm to output", "output a list", "strings needle"]}
{"i": "5742635739250688", "t": "It was an over email interview:\r Write a program that takes as input a sufficiently large text document (several are available online for testing; e.g. via Project Gutenberg), and produces as output (via stdout) an alphabetical listing of each unique word in the document (case insensitive and space separated, though be careful to consider hyphenated words), along with the lines from the input document that the word appears on. Each unique word (and the list of lines that it appears on) should be on a separate line in the output.\r For example, taking the following text as input:\r This is\rsome kind OF text it\rIs an example of text\r The following would be the output:\r an 3\rexample 3\ris 1 3\rit 2\rkind 2\rof 2 3\rsome 2\rtext 2 3\rthis 1", "k": ["project gutenberg", "large text document", "write a program", "sufficiently large text", "email interview"]}
{"i": "5711314321145856", "t": "na", "k": []}
{"i": "5652016224272384", "t": "na", "k": []}
{"i": "5716215113711616", "t": "na", "k": []}
{"i": "5695873477509120", "t": "Given a list of list of positive integers, find all pairs of list which are having more than 3 elements overlapping.\rWhat is the complexity.", "k": ["elements overlapping", "positive integers", "find all pairs", "list", "list of positive"]}
{"i": "5679415162830848", "t": "You are given an array of integers(with all valid input) You have to write a function which will produce another array, where the value in each index of the array will be the product of all values in the given array accept that index.\r Example\rArray 1: 1 2 3 4 5\rArray 2: 120 60 40 30 24.\rCome up with a solution of O(n^2) can you improve it?", "k": ["valid input", "write a function", "array", "array accept", "accept that index"]}
{"i": "5753954756460544", "t": "Given 2 sorted linked lists, return a linked list that has all the elements and is sorted.", "k": ["sorted linked lists", "linked lists", "return a linked", "sorted linked", "linked"]}
{"i": "5753114117275648", "t": "Given 3 strings \"s\" ssearch\" and \"sreplace\", search string   s for the substring ssearch and for every instance of ssearch you find, replace that part of the string with sreplace", "k": ["replace that part", "search string", "substring ssearch", "sreplace", "ssearch you find"]}
{"i": "5204686790459392", "t": "Given an NxN Boolean matrix, find how many true regions there are in the matrixj", "k": ["nxn boolean matrix", "boolean matrix", "nxn boolean", "true regions", "boolean"]}
{"i": "5633651648757760", "t": "Create a basic minesweeper game that allows for board creation with custom height, width and number of mines. Create a <click> function that will take in a board location and return whether the user has won, lost, or the number of surrounding mines.", "k": ["basic minesweeper game", "custom height", "create a basic", "basic minesweeper", "minesweeper game"]}
{"i": "5721038127104000", "t": "Given a string, print out all of the unique characters and the number of times it appeared in the string", "k": ["unique characters", "number of times", "times it appeared", "string", "print"]}
{"i": "5769623971561472", "t": "Print the longest path from root to leaf in a Binary tree (Basically the nodes that lie on the height path).", "k": ["binary tree", "basically the nodes", "print the longest", "root to leaf", "nodes that lie"]}
{"i": "5652128598065152", "t": "down vote\rfavorite\rConsider the following series:\r A := 1\rB := A*2 + 2\rC := B*2 + 3 and so on...\rWrite a program that:\r -outputs the number corresponding to a given letter;\r -given a string of letters like 'GREP', computes the sum of the numbers corresponding to all the letters in the string (i.e., G + R + E + P), as given by the above series; and\r -given a large number (that would fit into a standard 32-bit integer), finds the shortest string of letters corresponding to it. You may use a greedy approach for the last part. Compute the values of the numbers corresponding to letters as and when required and DO NOT pre-compute beforehand and store them in a data structure.", "k": ["vote favorite", "letters", "series", "string", "large number"]}
{"i": "5647590528909312", "t": "What is the smallest number *n*  by which the given number *x* must be divided to make it into a perfect square?n = find_number( x )", "k": ["perfect square", "smallest number", "divided to make", "number", "find"]}
{"i": "5695267249586176", "t": "2.{{ Query the sum of all the data values in a given rectangle (x1,y1) ~(x2, y2).\rint querySum(int x1, int y1, int x2, y2) {}}}", "k": ["query the sum", "query", "int", "rectangle", "int querysum"]}
{"i": "6313166477721600", "t": "{{Given a two dimensional grid that stores data as integers with the size of N*M, implement write and query functions which supports:\r1. Write the given value to designated coordination (x, y).\rvoid write(int value, int x, int y) {}\r }}", "k": ["functions which supports", "dimensional grid", "grid that stores", "stores data", "data as integers"]}
{"i": "5163286157852672", "t": "Print an NxM matrix with nw-se diagonals starting at bottom left corner. Ex:1  2  3  4\r\n5  6  7  8\r\n9 10 11 12The output should be:9\r\n5 10\r\n1 6 11\r\n2 7 12\r\n3 8\r\n4", "k": ["bottom left corner", "nw-se diagonals starting", "print an nxm", "left corner", "nxm matrix"]}
{"i": "5695158902325248", "t": "Write code to traverse a NxM matrix in a zig-zag fashion", "k": ["write code", "zig-zag fashion", "code to traverse", "traverse a nxm", "nxm matrix"]}
{"i": "5705098530390016", "t": "Given a random string (reasonable length L), knowing all possible font sizes (e.g. font Fn has min_width, max_width, min_height, max_height), knowing fixed screen size, find the max font size that can display said string", "k": ["knowing fixed screen", "fixed screen size", "reasonable length", "max font size", "random string"]}
