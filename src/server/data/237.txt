{"i": "5720778041458688", "t": "Design a meeting scheduler. One way is to use an array to represent each interval, like every 15 mins. Although it provides O(1) look up, if interval is small, it seems like we are wasting a lot of space. Any alternative approach that can save space? If we keep a sorted array of meetings sorted by start time, look up will be O(logn), but inserting the new meeting in the middle of the array will require shifting elements, which is O(n)."}
{"i": "6557932665700352", "t": "Given a binary tree, convert it into another binary tree whose in-order representation would have its elements listed in sorted order"}
{"i": "4900350167351296", "t": "Given a binary search tree of n nodes, find all the pair of  nodes whose sum is equal to a given number k in O(n) time and constant space.(algo+code)"}
{"i": "5001071982280704", "t": "Rotate a 2-D Matrix by 90 degrees"}
{"i": "5752609117831168", "t": "Print all the cycles in a directed graph"}
{"i": "6214111943720960", "t": "Given n, find the smallest number for which product of the digits is n, if no such number exists, print -1"}
{"i": "6305783725686784", "t": "Given an array of integers (+ve and -ve), give a contiguous set of numbers that add to 1\rEg.\t4 3 5 -3 -1 2 -3 10 2\rAns: 5 -3 -1 2 -3"}
{"i": "6271724635029504", "t": "Finding a pair of elements from two sorted lists(or array) for which the sum of the elements is a certain value. Anyway solution that can do better than O(a.length + b.length)?"}
{"i": "6204973461274624", "t": "I/P: N, k\r O/P: all subset of N with exactly K elements.\r eg: I/p: N = 5, K =3\rO/p:\r 1 2 3\r1 2 4\r1 2 5\r1 3 4\r1 3 5\r2 3 4\r2 3 5\r3 4 5"}
{"i": "5170705473732608", "t": "Given a Input Matrix of NXN . Print the matrix after mirroring on its primary diagonal\rif Input is 1,2,3,4,5.6,7,8,9\rOutput is 1,4,7,2,5,8,3,6,9"}
{"i": "5733655427153920", "t": "There is a string , where a character is missing.Print the missing character.The range is present in the string and the characters are case sensitive.\rFor example:-If input is \"baADfc\".\rHere the range is a to f.\rThe missing character to be printed is e.\r  ."}
{"i": "5719759060467712", "t": "One of the many ways of representing a tree is to have an array(of length same as number of nodes), where each element in the node denotes the parent of that node.\t\t\t\t\t\t\t\t\t\t\t \rEg -\r{-1, 0, 0, 1, 1} would represent a tree with -\r* 0 as root\r* 1 and 2 as children of 0\r* 3 and 4 as children of 1\r Given a similar representation, you have to print reverse level order traversal of the corresponding tree. \rLevel order traversal of a tree is where we traverse levels of tree one by one.\r Eg -\rFor the above given tree, level order traversal would be -\r0\r1 2\r3 4\rAnd hence, the reverse level order traversal is -\r3 4\r1 2\r0\rPlease note -\r* An element with parent = -1 is the root element.\r* An element with the least index becomes the left most child. (ie. a node with always be on left of all its siblings that have higher index than it)\r* When printing a level of tree you need to maintain left to right order.\r Input Format -\rFirst line of the input contains number of nodes in the tree (N)\rNext line contains N (space seperated) numbers that denote where i-th number will denote the parent node of i-th node.\r Output Format -\rPrint reverse level order traversal of the corresponding tree, with every new level starting in a different line.\rNotes/Limits -\r* 1 <= N <= 50\r* There will be only one root element in any given test case\r* Given numbers will always form a valid undivided tree\r* Output should be in the exact format as specified (including whitespaces)\rSample Test Cases -\t \t\t\rInput -\r5\r-1 0 0 2 1\rOutput -\r4 3\r1 2\r0\r Input -\r9\r8 7 0 5 5 8 7 0 -1\rOutput -\r1 6\r2 7 3 4\r0 5\r8\rInput -\r45\r24 42 4 30 29 43 22 15 26 36 26 16 3 22 21 41 18 16 34 41 12 29 32 30 43 15 4 38 36 -1 24 42 18 6 21 38 6 17 32 17 3\r34 12 14 14\rOutput -\r1 31\r20 42 9 28\r12 40 33 36\r3 23 37 39 6 13 27 35 \r0 30 11 17 22 38 7 25\r5 24 16 32 15 19\r8 10 43 44 18 41\r2 26 14 34\r4 21\r29\r Input -\r33\r17 25 0 14 7 2 5 25 18 8 16 27 10 9 19 7 31 31 19 0 8 14 9 17 18 2 30 16 30 10 5 -1 27\rOutput -\r13 22\r26 28 4 15 9 20\r6 30 1 7 3 21 8 24\r5 25 14 18\r12 29 11 32 2 19\r10 27 0 23\r16 17\r31"}
{"i": "5746692800380928", "t": "Basically I know that 378 small sheets were printed. These came from 21 full sized sheets of paper. The large sheets of paper were torn, leaving rough edges that can be put re-joined digitally. I have now recorded 60 different sheets, and have joined only five pairs. What I would like to know is what is the likely number of sheets that the five pairs came from of the 21 originally used."}
{"i": "6560903172456448", "t": "Design a dialpad for  a cellphone in a language which does not have conditional statements."}
{"i": "5959057995202560", "t": "Design a dialpad for  a cellphone in a language which does not have conditional statements."}
{"i": "5435003265613824", "t": "Design a dialpad for  a cellphone in a language which does not have conditional statements."}
{"i": "4833158088359936", "t": "How would you convert a program that runs on a little endian machine to work on big endian"}
{"i": "5975361691058176", "t": "How would you convert a program that runs on a little endian machine to work on big endian"}
{"i": "4905227639586816", "t": "How can you implement oops features in C?"}
{"i": "4699414551592960", "t": "we have a random list of people. each person knows his own height and the number of tall people in front of him. write a code to make the equivalent queue.\rfor example :\rinput: <\"Height\",\"NumberOfTall\",\"Name\">, \r<6,2,\"A\">,<1,4,\"B\">,<11,0,\"C\">,<5,1,\"D\">,<10,0,\"E\">,<4,0,\"F\">\routput: \"F\",\"E\",\"D\",\"C\",\"B\",\"A\" --> end of queue"}
{"i": "6577624151228416", "t": "Giving a number T, print out all possible ways to get to T.\rFor example\r T= 5\r1 + 1 + 1 +1 +1\r2 + 1 + 1 + 1\r3 + 1 +1\r2 + 2 + 1\r4 + 1\r3 + 3\r  Note that,  3 + 2 is equal than 2 + 3,  so you don\u00b4t have to print both cases.\r What is the time complexity?  ( VERY IMPORTANT TO ELABORATE )   Brute force is not allow."}
{"i": "5077379592486912", "t": "Given a set of integer dots (like (1,5)), how can you find a pair that has an integer mid-point?  For example, (1,1) and (3,3) have an integer mid-point of (2,2), while (1,1) and (3,2) do not. Tell the complexity of your code. What if the dots are N-dimensional?"}
{"i": "5667426494578688", "t": "Write a function which checks a Red-Black-Tree that the max depth isn't > than 2* min depth. It must return a boolean.\r boolean checkdepth(){} \rno class variables"}
{"i": "5125659319861248", "t": "Shopkeeper want sells in the packs of 20,9 and 6. Given an n, you need to find whether its possible to buy the items or not.For example n=21, you can buy 2 packs of 6 and one pack of 9(2*6 + 9)\r Output 1 if possible and 0 if not\r Test cases:\r1) n=47 ==> possible, output = 1\r2) n=7  ===> not possible, output = 0"}
{"i": "5979384062148608", "t": "#include <iostream>\rusing namespace std;\r class A\r{\rint x;\rpublic:\rA() { cout << \"A's constructor called \" << endl; }\r};\r class B\r{\rstatic A a;\rpublic:\rB() { cout << \"B's constructor called \" << endl; }\rstatic A getA() { return a; }\r};\r A B::a; // definition of a\r int main()\r{\rB b1, b2, b3;\rA a1 = b1.getA();\r return 0;\r}\rin the above prog the output is \rA's constructor called\rB's constructor called\rB's constructor called\rB's constructor called\rthe all 4 lines belongs to before the 2nd line in main\rmy question is that ,in the 2nd line in main, A's constructor is called or not?\rif not then why?"}
{"i": "4864707844374528", "t": "Given a string, rearrange the string to a palindrome and return the palindrome if present or -1\rExample:\ri/p \rabb\rab\ro/p\rbab\r-1"}
{"i": "6515637035728896", "t": "Find first unique number in an unsorted array of 32 bit numbers without using hash tables or array of counters."}
{"i": "5135976502394880", "t": "There is a large data file with 10 digit numbers. You are allowed to use only 20 megabytes of memory. How would you sort them ?"}
{"i": "5680360385937408", "t": "Find the longest repeating character in a sorted string"}
{"i": "6134268635906048", "t": "Suppose that you been offered the opportunity to invest in the Volatile Chemical\rCorporation. Like the chemicals the company produces, the stock price of the\rVolatile Chemical Corporation is rather volatile. You are allowed to buy one unit\rof stock only one time and then sell it at a later date, buying and selling after the\rclose of trading for the day. To compensate for this restriction, you are allowed to\rlearn what the price of the stock will be in the future. Your goal is to maximize\ryour pro\ufb01t.Day 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\r\nPrice 100 113 110 85 105 102 86 63 81 101 94 106 101 79 94 90 97\r\nChange 0 13  -3 - 25  20  -3  -16  -23 18 20  -7  12  -5  -22 15  -4 7find the  subset of days where the profit is the highest.\r What is the time complexity?"}
