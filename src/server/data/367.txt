{"i": "13878788", "t": "Consider a university having a very big campus spread in acres of land. The university is undergoing computerization. All the departments (at-most 50) are to be connected to form the intranet of the university. You have to write a program, implementing Prims algorithm, which will suggest the network topology and also minimise the total length of cable for connecting all the departments. Input to the program will be names of all the departments and straight line distances between the departments (Only those pairs of departments between which cable can be laid will be given). Output of the program should be the minimum length of the cable required. \r Input specifications\rThe first line will contain 2 natural numbers, N and M, separated by a blank space. N indicated the number of departments in the university and M indicates the number of pairs of departments where the cables can be laid. The following M lines will specify the distances between M pairs of departments as dept1 dept2 distance Where dept1 and dept2 are names of the departments (maximum 20 characters) and distance is a positive integer (>0). Assume that the given distances between each pairs of departments will be unique and these M lines will contain atleast one pair for each department.\r Output specifications\rThe first line of the output will be names of the departments as they are included in the solution separated by blank space. If two or more departments are included at a time then their names should be printed in the alphabetic order. The next line will be the minimum length of cable required to form the intranet, terminated with a new line character. \r Sample Input/Output\rinput\r7 10\rphysics chemistry 8\rbiology physics 9\rbiology office 15\rchemistry office 4\rchemistry sanskrit 5\rsanskrit office 7\renglish office 16\renglish sanskrit 19\renglish cs 12\rsanskrit cs 6\routput\rchemistry office sanskrit cs\rphysics biology english\r44"}
{"i": "13878774", "t": "Design a system of film ticket .There are many lots of factors that influence ticket price.Design a system that can adapt to the changes of  ticket price.Just give its class diagrams.\rThis is my design,and who can give me some goog suggestions?\rTicket(Basic Clsass)\r|\rFilmTicket(Father Class)-->CalPrice(Basic Interface) |                        |                            |                           |\r2DFilmTicket    3DFilmTicket   CalCommonPrice CalVIPPrice"}
{"i": "13872751", "t": "Write code to compute number of structural different binary trees for given 'n' number of nodes. (with and without Catalan number)"}
{"i": "13875746", "t": "What does this method do?\r Stuff is a object in java with two members someStuff and anotherStuffpublic static Stuff doSomeStuff (Stuff s0, Stuff s1) {\r\n        Stuff someStuff = s1.getSomeStuff();\r\n        if(someStuff != null){\r\n            s1.setSomeStuff(doSomeStuff(null, someStuff));\r\n        }\r\n\r\n        if(s1.getAnotherStuff()==null){\r\n                s1.setAnotherStuff(s0);\r\n                return s1;\r\n        } else {\r\n                Stuff myStuff = doSomeStuff(s1,s1.getAnotherStuff());\r\n                s1.setAnotherStuff(s0);\r\n                return myStuff;\r\n        }\r\n}What does this method do? Does it have any bugs or edge cases where it will not execute?\rDescribe the time complexity of the function and comment on its effectiveness."}
{"i": "13870766", "t": "how many sockets can you have?\r what will a server do after getting a request from a client?"}
{"i": "13874753", "t": "multicast VS broadcast"}
{"i": "13872745", "t": "implement a deque"}
{"i": "13874752", "t": "write atoi() function"}
{"i": "13871739", "t": "what is bus error? common causes of bus errors?"}
{"i": "13881759", "t": "difference between preemptive and cooperative multithreading"}
{"i": "13876754", "t": "pipe VS message queue"}
{"i": "13871738", "t": "shared mmy VS mmy mapped file"}
{"i": "13881758", "t": "implement a deque"}
{"i": "13870764", "t": "find the 2nd largest # in int array"}
{"i": "13872741", "t": "given a large array of int return the length of the longest increasing(non-necessarily-adjacent) sub-sequence"}
{"i": "13869750", "t": "Given an n-ary tree (i.e. it can have max n children). One need to roll up the tree from leaves back to root such that the data of root will be the sum of root's data and sum of all its children data."}
{"i": "13876739", "t": "how do you get the average value from a large data stream?\r I used long long for calculating the sum and int for counting the total number, then divide the sum by total number, if the total sum overflows, have a class present a very large integer."}
{"i": "13870751", "t": "given an string with space and an dictionary for all words in the string,  how do you find words in the string?\r I used prefix tree to store all the words in the dictionary, and query works in the prefix tree takes O(n) time."}
{"i": "13878739", "t": "find the  2nd largest number in an integer array, what do you return if the array has only 1 element?"}
{"i": "13870747", "t": "Find the nth most frequent number in array"}
{"i": "13876713", "t": "Here is a good one i recently came accorss.\rReally appreciate if someone could help me code this in Java\r Print elements of a n-ary tree(a tree which may have more than two elements per node) breadth first reverse starting with the last level\rnodes and up. The code need to fit the following method and interface.\r method name: void displayBFSReverse (Node head);\r Where Node implements the interface:\r interface Node {\r public String getNodeData ();\r public List<Node> getChildren ();\r }\r  The Tree Structure is34\r\n                     /         |        \\\r\n                    3          56        12\r\n             /         \\                  |\r\n          89            7               22\r\n                                          |\r\n                                         78reverse in BFS and return should return\r   78 22 7 89 12 56 3 34"}
{"i": "13868713", "t": "Current using a single git repository\r How would you handle problems such as this:\r- Product A is released in October 2003 with a certain set of frameworks code.\r- Product B is released in February 2004 with newer frameworks code. We fixed 12 or 22 bugs \rthat affected product B. 7 of these fixes apply to \rProduct A.\r- Product C is released in April 2004 with yet newer frameworks code. We fixed 32 more bugs. 12 \rfixes apply to Product A and 17 apply to \rProduct B.\r- This continues for years, with a new product every few months. It's currently 2012 so you can \rsee where this is going! We have a lot of fixes accumulated in the frameworks, but tracking which \rfixes apply to which products, and then deploying them, is becoming a lot of work."}
{"i": "13870718", "t": "Here is a good one i recently came accorss.\rReally appriciate if someone could help me code this in Java\r  The Tree Structure is34\r\n                       /       |      \\\r\n                    3        56      12\r\n                  /    \\                |\r\n               89       7             22\r\n                                        |\r\n                                       78Print elements of a n-ary tree(a tree which may have more than two elements) breadth first reverse starting with the last level\rnodes and up. The code need to fit the following method and interface.\r method name: void displayBFSReverse (Node head);\r Where Node implements the interface:\r interface Node {\r \tpublic String getNodeData ();\r \tpublic List<Node> getChildren ();\r }\r The function should return:\r78 22 7 89 12 56 3 34"}
{"i": "13869712", "t": "I was given a very interesting question.\rYou are given two very large files each containing  integers in each line followed by a line break. \r Produce a file with integers that are common in both files.\r Estimate the time complexity of your code block?\r Any edge cases and Bottlenecks?\r Assumptions?\rHow would you solve this.\r I did a little research on this and saw that some people suggested using Radix Sort for this and trying to split on large file into subsets and then using radix sort. \r Here is the link\r http://stackoverflow.com/questions/6520954/produce-a-file-that-has-integers-common-to-two-large-files-containing-integers\r Can someone help me write this function. I read a lot of theories a lot of places but I am really looking for a code, preferably java for this.\r This is a simple implementation of the same. I got a clarification that numbers are integers but the files are large but on one disk only.\r I am using an approach as In case the file is too big to fit into memory on one go, break it into parts or read n integers at a time.and then use hashmaps to look for integers.\r Cpmplexity:   If the partition size is p and the file size is m then  and no of rows per partition in n then  -----   O(m/p * n)  or   O(N).import java.io.*;\r\nimport java.util.*;\r\nimport java.io.FileWriter;\r\n\r\npublic class FileRead{\r\n\r\n    /**\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        // TODO Auto-generated method stub\r\n   \r\n    File file1 = new File(\"C:\\\\Documents and Settings\\\\chaos\\\\Desktop\\\\input1.txt\");   \r\n    File file2 = new File(\"C:\\\\Documents and Settings\\\\chaos\\\\Desktop\\\\input2.txt\");\r\n    try{\r\n       \r\n    Map mymap = new HashMap();\r\n    Scanner scan1 = new Scanner(file1);\r\n    Scanner scan2 = new Scanner(file2);\r\n    \r\n    \r\n    \r\n    while(scan1.hasNextLine(    ))\r\n    {\r\n        int line = scan1.nextInt();\r\n        mymap.put(line,1);\r\n    }\r\n   \r\n    while(scan2.hasNextLine())\r\n    {\r\n        int line = scan2.nextInt();\r\n        try{\r\n        int val = (Integer) mymap.get(line);\r\n             if(val==1)\r\n            \r\n             try{\r\n                    FileWriter f1 = new FileWriter(\"C:\\\\Documents and Settings\\\\chaos\\\\Desktop\\\\output.txt\");\r\n                    BufferedWriter out = new BufferedWriter(f1);\r\n                    out.write(line);\r\n                    System.out.println(line);\r\n                    }catch (IOException e){}\r\n             \r\n        }catch(NullPointerException e2){}\r\n    \r\n    }\r\n    } catch(FileNotFoundException e){e.printStackTrace();}\r\n    \r\n    }\r\n\r\n}"}
{"i": "13869704", "t": "When you receive a crash dump for a process from a particular customer, Is it possible to know the line number of which function has caused the problem?"}
{"i": "13875697", "t": "How do you identify which process has crashed in customer env, if there are multiple process crash at same time."}
{"i": "13876688", "t": "Implement cache library which can hold more data than main memory.\rwhich data structure you use? and why? and its complexity?"}
{"i": "13872675", "t": "Lunatic server solution got a project in which they have to make a intranet web campus.\rso entry for software developer , company make this problem.\rsolution must be in java.\r Consider a university having a very big campus spread in acres of land. The university is undergoing\rcomputerization. All the departments (at-most 50) are to be connected to form the intranet of the university.\rYou have to write a program, implementing Prims algorithm, which will suggest the network topology and\ralso minimise the total length of cable for connecting all the departments. Input to the program will be\rnames of all the departments and straight line distances between the departments (Only those pairs of\rdepartments between which cable can be laid will be given). Output of the program should be the minimum\rlength of the cable required.\rInput specifications\rThe first line will contain 2 natural numbers, N and M, separated by a blank space. N indicated the number\rof departments in the university and M indicates the number of pairs of departments where the cables can be\rlaid. The following M lines will specify the distances between M pairs of departments as\rdept1 dept2 distance\rWhere dept1 and dept2 are names of the departments (maximum 20 characters) and distance is a positive\rinteger (>0). Assume that the given distances between each pairs of departments will be unique and these M\rlines will contain atleast one pair for each department.\rOutput specifications\rThe first line of the output will be names of the departments as they are included in the solution separated by\rblank space. If two or more departments are included at a time then their names should be printed in the\ralphabetic order. The next line will be the minimum length of cable required to form the intranet, terminated\rwith a new line character.\rSample Input/Output\rinput\r7 10\rphysics chemistry 8\rbiology physics 9\rbiology office 15\rchemistry office 4\rchemistry sanskrit 5\rsanskrit office 7\renglish office 16\renglish sanskrit 19\renglish cs 12\rsanskrit cs 6\routput\rchemistry office sanskrit cs physics biology english\r44\r Hint : a simple prim's algorithm is implemented."}
{"i": "13880681", "t": "lunatic server solution is monitoring the wrong file entry in the server.\rso company made another a problem for it to monitor AVL tree violation.\rThe problem should be solved in java...\rproblem states that...\r  This problem requires you to monitor a tree for violation of the AVL balance criteria as the tree is being\rconstructed.\rThe input to the program consists of a sequence of numbers. As you read in each number, check where the\rnode is going to be inserted into the current tree. [At the start, the tree is empty.] If that insertion can cause\rthe balance of any of the nodes in the tree to go beyond what is allowed by the AVL criteria, DO NOT add\rthe number into the tree. Instead, print out the number into the standard output. Numbers which retain the\rAVL property of the tree should be added to the tree at the appropriate place as per the method discussed in\rclass. Continue with the remaining numbers. Please note that you do not have to do any balancing of the\rtree! The input is terminated by \u20131.\rThe output from the program consists of the numbers rejected by the program. At the end, you should also\rprint out the count of such numbers rejected.\rHint: It would help to keep the height of the left and right subtrees of each node along with the node. Also\rnote that the process of checking for violation and actually inserting are quite similar; in the former case you\rdo not update anything but do everything else. This observation can be used to write the code.\rSample Input/Output\rInput\r3 5 1 6 2 4 9 7 -1\rOutput\r7 1\r(This means rejected key(s) are: key 7, totally 1 rejected key)"}
{"i": "13870683", "t": "on last interview lunatic server solution asked 3 questions. one of them was very easy. the problem states that...\rGiven a stream of text, your task is to create a formatted paragraph out of it. The paragraph should be left justified and each line of text in the formatted paragraph should not exceed a given length. Each line should contain maximum possible characters. \rIn addition to the input text, a set of words with their possible hyphen positions will also be given. The hyphenation makes it possible sometimes to add incomplete words at the end of line, if the completed words overflow the line length limit. To indicate that this particular word is incomplete, a hyphen (-) is added at the end of such broken words. Remaining part of this word is placed at the beginning of the next line. The specified line length limit must be observed including the trailing hyphen character if any. \rThe input text will contain alphabets, digits, punctuation marks and spaces. The only white space character used is a blank space, which is used to separate words. Each line in a formatted paragraph begins with a non-blank character. Even if the input text has words separated by many spaces, your output should separate them by only single space or a line break. \rNotes: \rThe list of hyphenated words will not include any punctuation marks that may occur in the text to be formatted. You may assume that the punctuation marks will occur only at the end of each word (alpha-numeric characters). That is there will not be words like They'll or Sita's anywhere in the input. \rThe word length will never exceed the line length limit. \rThe input text can always be formatted using the given constraints. \rNo word, hyphenated or otherwise will exceed a length of 20 characters. \rInput specification:\rFirst line has an integer n denoting the number of hyphenated words. \rNext n lines give each of the hyphenated word with possible hyphen break positions in the word by a hyphen itself. For example, \"hyphenate\" is given as \"hy-phen-ate\" and \"formatting\" is given as \"for-mat-ting\". \rNext line will be an integer denoting the maximum number of characters per line in the formatted paragraph, i.e., the line length limit. \rLast line contains the text to be formatted into a paragraph. The entire text will be terminated by a new line. The length of text will not exceed 256 characters. \rOutput specification:\rThe output should be a sequence of characters, which begin each line of the formatted paragraph followed by a single new line character. Thus, there will be those many non-white space characters as there are lines in the formatted paragraph. \rSample Input and Output:\r Input:\r4\rcon-cept\rpro-gram-ming\rob-vi-ous\rim-pos-si-ble\r25\rMost people find the concept of programming obvious, but the doing impossible.\r Output:\rMcos\r  Note :  Candidate can not get characters of indices, which are multiple of 24.\ryou have to make program in java with proper coding and follow the problem statement."}
