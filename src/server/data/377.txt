{"i": "13336674", "t": "pow(a,b) = a*a*a ...*a (b times)\r consider pow(2,i)*pow(3,j) * pow(5,k)\rwhere i,j,k are whole numbers.\rso the possible numbers that can be written in this format are \r1,2,3,4,5,6,8,9,10 ....\r quesiton was to print nth number in this series (say 100th)\rexpected complexity : O(n)."}
{"i": "13336673", "t": "print all palindromes of size k possible from given alphabet set.\reg alphabet set : {a,e,i,o,u}\rprint all palindromes of size say 10."}
{"i": "13336667", "t": "find the bug in the given source code\r main()\r{\r   char x=300,y;\r   y=300*300/x;\r   printf(\"%d\",y);\r}"}
{"i": "13328687", "t": "If given a variable that is changing after every 1 second...\rDesign a clock using that avriable..\rI am not sure if this question was more related to OS or not..."}
{"i": "13324669", "t": "There is a tree with additional field in each node, named \"next\". We have to put the inorder successor in this pointer."}
{"i": "13231679", "t": "How to find if a number is a power of 2?"}
{"i": "13326673", "t": "How to find if a point lay inside a triangle?"}
{"i": "13326671", "t": "print all compositions of a number in odd parts, i.e. for n = 8:\r    7 + 1\r    5 + 3\r    5 + 1 + 1 + 1\r    3 + 3 + 1 + 1\r    3 + 1 + 1 + 1 + 1 + 1\r    1 + 1 + 1 + 1 + 1 + 1 + 1 + 1"}
{"i": "13281672", "t": "what is difference between \" return \" and \" exit \"."}
{"i": "13325674", "t": "wap to input any number and double it without using any operator"}
{"i": "13231671", "t": "Given two strings, find that the if the letters in both the strings are same? i.e. can we be able to make string2 out of string1 by shuffling the words and vice versa."}
{"i": "13329668", "t": "Given two classes like animal and dog class where dog class inherit the animal class. Write a function which will return deep clone instance"}
{"i": "13328667", "t": "Write a code to find out whether the given sum exists over any path in binary tree. Should return true or false."}
{"i": "13281665", "t": "Write a thread-safe array-based queue implementation in java. If one thread reaches to limit, should wait for dequeue thread to create a space and vice-versa."}
{"i": "13329665", "t": "To find a maximum profit index from a give array with O(n) complexity."}
{"i": "13329664", "t": "given a file with x,y,z coordinate which refer to the coordinates of stars relative to earth, how would you find the first 100 stars nearest to earth? the coordinates are unsorted in the file."}
{"i": "13327663", "t": "given an unsorted array how will you find the duplicate entries in that array?"}
{"i": "13326662", "t": "interviewer, do you know what is an expression tree?.I said No.Than he explained. \r He asked me to computer the value of the expression tree.  \r%\r1   +\r   5    8\rHow to solve this. It took me 30 minutes to get the answer?."}
{"i": "13231666", "t": "Write a program for binary tree (not BST) where left is connected to right and the whole structure is connected."}
{"i": "13327662", "t": "Design File System. Interviewer said just code and no OOP"}
{"i": "13322673", "t": "WAP to find the word \"amazon\" in a given m*n matrix.\rThe characters need not be allocated in a line eg: \rlets consider a 3*3 matrix\r h  j  z\re a  o\ra m n \r this is a valid case as the string is in contiguous form in the lower half of the matrix, while\r a  j  z\re a  o\rh m n \r is invalid.\r Function should return true or false."}
{"i": "13248664", "t": "have 1 million product id, get the top 10 in the past 1 hour"}
{"i": "13218749", "t": "large file(can't fit into memory) with multiple lines, how to get any line in equal probability"}
{"i": "13255678", "t": "design a library for borrowing books and renewing"}
{"i": "13321670", "t": "design a zoo with different types of animals and cages(type, size), some of them cannot be in same cage. \rhow to represent relationship? what if lion eat 1 million different animals?"}
{"i": "13320670", "t": "customers want to buy some products but products are out of stock, design a system to notify them when those products are again available?"}
{"i": "13319670", "t": "Design DVD renting system, database table, class and interface"}
{"i": "13319669", "t": "next permutation of a given number"}
{"i": "13319668", "t": "power set of a set"}
{"i": "13218748", "t": "rebuild binary tree with pre-order and in-order sequence"}
