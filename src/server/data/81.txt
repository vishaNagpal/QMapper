{"i": "5666936301027328", "t": "Design a system which helps to calculate average Skype call duration per day. In which events are tracked from mobile app. Need to take care of all edge cases like events can be logged to server in any sequence & there can be some events missing on server side also."}
{"i": "4791790543568896", "t": "Given two list of unsorted intervals V1 and V2 write 2 functions  'OR ' and 'And' to return a new list \r OR Function (union of list ): Input V1 = (2,4) (6,8) (1,3) V2 = (7,9) (2,5)\routput = (1,5) (6,9)\r And function : This will be intersection function and will return intersection of the lists"}
{"i": "5691203671556096", "t": "MS FTE Question:\r Find the gap from 1,2,5,6,10\rAnswer : 3,4,7,8,9"}
{"i": "5728502509731840", "t": "Folders and Cows Hackerrank Dropbox Question. \r   I haven't opened the link, so I don't know the prompt and I have only have 75mins to complete it starting when I begin the challenge."}
{"i": "5678803027230720", "t": "* Given a string on length N. You can swap only the adjacent elements \r and each element can be swapped atmost once.\rFind the no of permutations of the string that can be generated after\r performing the swaps as mentioned.\rEx \u2013\rstring \u2013 \u201c12345\u201d\rAns = 8\rExplanations- (All the permutations)\r12345\r21345\r13245\r12435\r12354\r21435\r13254\r21354"}
{"i": "5768044260360192", "t": "Given an array of n positive integers, find the number of subarrays \rsuch that product of the elements of those subarrays are less than k.\rFor eg. Arr= {2, 3, 6} k=10\rNo of such subarrays= 4"}
{"i": "5712224583680000", "t": "Print the levels of a binary tree in reverse order using stack and recursionGiven a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).\r\n\r\nFor example:\r\nGiven binary tree\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\nreturn its bottom-up level order traversal as:\r\n[\r\n  [15,7],\r\n  [9,20],\r\n  [3]\r\n]public List<List<Integer>> levelOrderBottom(TreeNode root) {\r}"}
{"i": "5708120205557760", "t": "given an array, find whether there exists 3 elements a,b,c in it such that a+b=c using efficient method."}
{"i": "5695490988441600", "t": "You are provided a BST, which is corrupted. One of the nodes in it has 2 parents. \rLet\u2019s say those are parent 1 and parent 2. It is ensured that none \rof these parents will be the ancestor of the other. Identify the node, \rand remove the link of the wrong parent."}
{"i": "5750637831651328", "t": "given an array of strings and characters, make the largest string possible.\rThe resultant string should be a combination of the strings given in the array. \rThe given array\rof characters may contain repeated elements.\rExample \u2013 Given char array \u2013 {a,a,b,c,d,d,e,c} and given strings \r\u2013 {abba, aabc, de, cde} the\rans is aabccde"}
{"i": "5729386870341632", "t": "Given an adjacency matrix of a directed graph, find the number of cycles in the graph"}
{"i": "5635714841575424", "t": "How to Design Netflix.(System Design)"}
{"i": "5768782592081920", "t": "How to Design App-Store like google play.(System Design)"}
{"i": "5675470401044480", "t": "Given an array of strings, find out in how many cases is any of the anagrams of the string at location i, a substring of the string at location i+1.\r Test Case I: [\"ab\", \"ab\", \"abc\", \"bca\"]\rAnswer: 3\r Test Case II: [\"ab\",\"aqb\"]\rAnswer: 0"}
{"i": "5677296835887104", "t": "Given K sorted (ascending) arrays. Write an iterator class that iterate over the arrays and returns the next element. Duplicate are allowed. What is the complexity to iterate the entire arrays? what is the complexity for each iteration?\r Example:arr1 = {1,2,3,4,7,9}\r\narr2 = {3,5,6,8,10}The iterator should return:1,2,3,3,4,5,6,7,8,9,10Extension:\rDon't return duplicates, so the above iterator should return:1,2,3,4,5,6,7,8,9,10"}
{"i": "5733247509069824", "t": "Check if two DOM Trees have the same text.\re.g. <html><p>hello</p></html>, <html><p><b>h</b>ello</p></html> should be the same text\r DOMNode class definition (string tag, string text, bool isText, vector<DOMNode*> children)"}
{"i": "5724941042319360", "t": "Given a target sum, populate all subsets, whose sum is equal to the target sum, from an int array.\r For example:\r Target sum is 15.\r An int array is { 1, 3, 4, 5, 6, 15 }.\r Then all satisfied subsets whose sum is 15 are as follows:\r 15 = 1+3+5+6\r15 = 4+5+6\r15 = 15"}
{"i": "5195632896638976", "t": "Genarate and validate a magic matrix.A magic matrix is one in which the sum of every row,column,and every diagonal is same.One such matrix will be when every element in the matrix is same.generate and validate a magic matrix where every element is not the same"}
{"i": "5692261441470464", "t": "Coin change problem with finite number of coins available\rdenominations of coins = {1,2,3}\rcount of coins = ={1,1,3}\rfind the number of ways for getting change for S=6"}
{"i": "5964441572081664", "t": "A message containing letters from A-Z is being encoded to numbers using the following mapping:\r 'A' -> 1\r'B' -> 2\r...\r'Z' -> 26\rGiven an encoded message containing digits, determine the total number of ways to decode it.\r For example,\rGiven encoded message \"12\", it could be decoded as \"AB\" (1 2) or \"L\" (12)."}
{"i": "5707031095803904", "t": "Given two sorted integer arrays, find the median element. Note that for an even sized collection, median element is to be defined as the average of the central two elements."}
{"i": "5670677955739648", "t": "Given two strings s1, s2, write a function that returns true if s2 is a special substring s1. A special substring s2 is such that the s1 contains s2 where each character in s2 appears in sequence in s1, but there can be any characters in s1 in between the sequence. \r Example:\r isSpecialSubstring('abcdefg', 'abc') => true\risSpecialSubstring('abcdefg', 'acg') => true\risSpecialSubstring('abcdefg', 'acb') => false; \r  The first two are abc and acg appears in 'abcdefg' in that order, although there might be multiple chars between the next character in s2.\r The last one is false, because in 'acb' the character 'b' appears before the character 'c' in 'abcdefg'\r Hope thats clear."}
{"i": "5769342145789952", "t": "The input consists of N cases(equal to about 10000). The first line of the input contains only positive integer N. Then follow the cases. Each case consists of exactly one line with two positive integers separated by space. These are the numbers whose reverse you have to add"}
{"i": "4884115563216896", "t": "The input consists of N cases(equal to about 10000). The first line of the input contains only positive integer N. Then follow the cases. Each case consists of exactly one line with two positive integers separated by space. These are the numbers whose reverse you have to add"}
{"i": "5751028405239808", "t": "create a class of integer collection,\r 3 APIs:\r append(int x),\r get(int idx),\r add_to_all(int x)\uff0c\r in O(1) time\u3002\r Follow-up:\rimplement\rmultiply_to_all(int x)\r e.g.\rinsert(1)\rinsert(2)\radd_to_all(5)\rinsert(3)\rget(0) -> returns 6\rget(2) -> return 3\rmultiply_to_all(10)\rinsert(4)\rget(1) -> returns 70\rget(2) -> returns 30\rget(3) -> returns 4"}
{"i": "5757729091092480", "t": "Lonely Pixel\rGiven an N x M image with black pixels and white pixels, if a pixel is the only one in its color throughout its entire row and column, then it is a lonely pixel. Find the number of lonely pixels in black from the image. (O(NM))"}
{"i": "5651269535399936", "t": "We define the following:\r There are friends_nodes friends numbered from 1 to friends_nodes.\rThere are friends_edges pairs of friends, where each (xi, yi) pair of friends is connected by a shared integer token described by friends_weighti.\rAny two friends, xi and yi, can be connected by zero or more tokens because if friends xi and yi share token ti and friends yi and zi also share token ti, then xi and zi are also said to share token ti.\r Find the maximal product of xi and yi for any directly or indirectly connected (xi, yi) pair of friends such that xi and yi share the maximal number of tokens with each other.\r Complete the maxTokens function in the editor. It has four parameters:\r Name\tType\tDescription\rfriends_nodes\tinteger\tThe number of friends.\rfriends_from\tinteger array\tEach friends_from[i] (where 0 \u2264 i < friends_edges) denotes the first friend in pair (friends_from[i], friends_to[i]).\rfriends_to\tinteger array\tEach friends_to[i] (where 0 \u2264 i < friends_edges) denotes the second friend in pair (friends_from[i], friends_to[i]).\rfriends_weight\tinteger array\tEach friends_weight[i] (where 0 \u2264 i < friends_edges) denotes the ID number of a token shared by both friends_from[i] and friends_to[i].\rNote: friends_edges is the number of pairs of friends that directly share a token.\r The function must return an integer denoting the maximal product of xi and yi such that xi and yi are a pair of friends that share the maximal number of tokens with each other.\r Input Format\rThe first line contains two space-separated integers describing the respective values of friends_nodes and friends_edges.\rEach line i of the friends_edges subsequent lines (where 0 \u2264 i < friends_edges) contains three space-separated integers describing the respective values of friends_fromi, friends_toi, and friends_weighti.\r Constraints\r 2 \u2264 friends_nodes \u2264 100\r1 \u2264 friends_edges \u2264 min(200, (friends_nodes \u00d7 (friends_nodes \u2212 1)) / 2)\r1 \u2264 friends_weighti \u2264 100\r1 \u2264 friends_fromi, friends_toi \u2264 friends_nodes\r1\u2264 friends_weighti \u2264 friends_edges\rfriends_fromi \u2260 friends_toi\rEach pair of friends can be connected by zero or more types of tokens.\r Output Format\rReturn an integer denoting the maximal product of xi and yi such that xi and yi are a pair of friends that share the maximal number of tokens with each other.\r Sample Input 0\r4 5\r1 2 1\r1 2 2\r2 3 1\r2 3 3\r2 4 3\r Sample Output 0\r6\r Explanation 0\rEach pair of n = 4 friends is connected by the following tokens:\r Pair (1, 2) shares 2 tokens (i.e., tokens 1 and 2)\rPair (1, 3) shares 1 token (i.e., token 1)\rPair (1, 4) shares 0 tokens\rPair (2, 3) shares 2 tokens (i.e., tokens 1 and 3)\rPair (2, 4) shares 1 token (i.e., token 3)\rPair (3, 4) shares 1 token (i.e., token 3)\r The pairs connected by the maximal number of tokens are (1, 2) and (2, 3). Their respective products are 1 \u00d7 2 = 2 and 2 \u00d7 3 = 6. We then return the largest of these values as our answer, which is 6."}
{"i": "5673067299733504", "t": "SuperCity consists of a single line of n buildings, where each building i is heighti units tall; however, SuperCity is under attack by two supervillains looking to show off their superpowers! The supervillains are standing on opposite ends of the city, unleashing their powers in an attempt to destroy all n buildings. In a single move, a supervillain unleashes their power and destroys the nearest contiguous block of buildings in which the respective heights of each building are nondecreasing. In other words:\rIf a supervillain is standing on the left end of the city and the nearest intact building is building i, then performing a move will destroy each consecutive building i, i + 1, i + 2, \u2026 satisfying heighti \u2264 heighti+1 \u2264 heighti+2 \u2264 \u2026 until there are either no more buildings in their path or there is some building j satisfying heightj > heightj+1.\rIf a supervillain is standing on the right end of the city and the nearest intact building is building i, then performing a move will destroy each consecutive building i, i \u2212 1, i \u2212 2, \u2026 satisfying heighti \u2264 heighti-1 \u2264 heighti-2 \u2264 \u2026 until there are either no more buildings in their path or there is some building j satisfying heightj > heightj-1.\rOnce a supervillain destroys a building, the building's height becomes 0.\rComplete the function in the editor below. It has one parameter: an array of integers, height, where each heighti denotes the height of building i. The function must return an integer denoting the minimum number of total moves needed for two supervillains standing on opposite ends of the city (as described by the array of building heights) to destroy all n buildings.\rInput Format\rThe first line contains an integer, n, denoting the number of elements in height.\rEach line i of the n subsequent lines contains an integer describing heighti.\rConstraints\r1\u2264 n \u2264 105\r1 \u2264 heighti \u2264 105, where 0 \u2264 i < n.\rOutput Format\rReturn an integer denoting the minimum number of total moves needed for two supervillains on opposite ends of the array to destroy all n buildings.\rSample Input 0\r8\r1\r2\r3\r4\r8\r7\r6\r5\rSample Output 0\r2\rExplanation 0\rThe respective heights of each building are given as height = [1, 2, 3, 4, 8, 7, 6, 5]. The supervillains can perform the following minimal sequence of moves:\rSample Case 0\rThe diagram above depicts the changes to SuperCity's skyline after each move by a supervillain.\rIn the first move, the supervillain on the left destroys buildings 0 through 4, because height0 \u2264 height1 \u2264 height2 \u2264 height3 \u2264 height4; note that the destruction stops at this point, as height4 > height5.\rIn the second move, the supervillain on the right destroys buildings 7 through 5, because height7 \u2264 height6 \u2264 height5.\rAs it took a minimal two moves for the supervillains to level all the buildings, the function returns 2.\rSample Input 1\r6\r1\r2\r1\r2\r10\r9  \rSample Output 1\r3\rExplanation 1\rThe respective heights of each building are given as height = [1, 2, 1, 2, 10, 9]. The supervillains can perform the following minimal sequence of moves:\rSample Case 1\rThe diagram above depicts the changes to SuperCity's skyline after each move by a supervillain.\rIn the first move, the supervillain on the left destroys buildings 0 through 1, because height0 \u2264 height1.\rIn the second move, the supervillain on the right destroys buildings 5 through 4, because height5 \u2264 height4.\rIn the third move, the supervillain on the left destroys buildings 2 through 3, because height2 \u2264 height3.\rAs it took a minimal three moves for the supervillains to level all the buildings, the function returns 3."}
{"i": "5733437360046080", "t": "Reverse this string 1+2*3-20. Note: 20 must be retained as is. \rExpected output: 20-3*2+1"}
{"i": "6198368643579904", "t": "cox customer service is a nice service for emailing. If you new or old user then if Spam filter is not working in the appropriate manner. Or you are getting some difficulties to login and signup activities. or you forget password you will need to change your password. If you any problem then call Cox tech support expert team. We have smart and experienced technicians for email issue. We follow the customer friendly approach to listen to all problems and give instant solutions. number+1-800-982-1502.Click on our website link for more information.  \rhttp://www.email-customer-care.com/cox-support"}
