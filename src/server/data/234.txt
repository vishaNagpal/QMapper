{"i": "6050804427390976", "t": "You are given points of 2D plane and an integer n, return n number of points close to origin (0,0)"}
{"i": "4905292357697536", "t": "Given a string, return the string with the words reversed\r\"I am good\" -> \"good am I\"\r List test cases and if you were crunched on time and only had time to test one test case, which would you pick"}
{"i": "5705431074734080", "t": "Design a musical jukebox using object-oriented principles"}
{"i": "4632503952343040", "t": "Construct an iterator of iterator\r Here is the below question format:\r // E next();\r// Boolean hasNext();\r // input: Iterator<Iterator<E>>\r// output: Iterator<E>\r // [[1], [2, 3]] => [1, 2, 3]"}
{"i": "4796716389761024", "t": "Word Search: Given an NxN grid of characters and a word to find, find all instances of that word and print out a list of the coordinates of each character in the word."}
{"i": "6506968877367296", "t": "What are the different ways of sorting the arrays in Java which is other than Arrays.sort(a1)"}
{"i": "5205362126880768", "t": "Write down the top ten testcases for sanity check of Templerun app in android based mobile. Testcases should appear in priority order?"}
{"i": "5076114749784064", "t": "5ruppes,1rupees,50paisa,25paisa,10paisa,3paisa,2paisa and 1paisa?How many different sums can be formed with the given coins??"}
{"i": "5704394377003008", "t": "If the stored Proc suddenly start running slow ,what will you do??"}
{"i": "5698312703311872", "t": "1>Draw structure of cluster and non cluster index.\r2>Fregrementation ,types,how to unfregement\r3>When will you go for rebuild and reorginise index.\r4>coloumn in (1,2,3,'null',null) what will be the result."}
{"i": "6253551042953216", "t": "Modify the following code to add a row number for each line is printedpublic class Test {\r\n\tpublic static void main(String [] args){\r\n\t\tprintParenthesis(3);\r\n\t}\r\n\tpublic static void printParenthesis(int n){\r\n\t\tchar buffer[] = new char[n*2];\r\n\t\tprintP(buffer,0,n,0,0);\r\n\t}\r\n\tpublic static void printP(char buffer[], int index, int n, int open, int close){\r\n\t\tif(close == n){\r\n\t\t\tSystem.out.println(new String(buffer));\r\n\t\t}else{\r\n\t\t\tif(open > close){\r\n\t\t\t\tbuffer[index] = ']';\r\n\t\t\t\tprintP(buffer, index+1, n, open, close+1);\r\n\t\t\t}\r\n\t\t\tif(open < n ){\r\n\t\t\t\tbuffer[index] = '[';\r\n\t\t\t\tprintP(buffer,index+1,n,open+1,close);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}Expected Output:1.[][][]\r\n2.[][[]]\r\n3.[[]][]\r\n4.[[][]]\r\n5.[[[]]]What changes needs to be done to accomplish the output expected?"}
{"i": "5713571648372736", "t": "How many 3-digit numbers can be made using the numbers 1, 2, 3, 4 or 5 such that the even numbers are not repeated?"}
{"i": "5103437989543936", "t": "There are many sorted arrays. Find a minimum range, so that in each array there's at least one integer within this range."}
{"i": "5729456584916992", "t": "Given a normal binary tree, write a function to serialize the tree into a string representation (returning the string), and also a function to deserialize a serialized string into the original binary tree."}
{"i": "5119108714594304", "t": "Given a normal binary tree, write a function to serialize it into a string representation (returning a string), and also a function to deserialize the string into the original binary tree"}
{"i": "6196366774632448", "t": "A professor wants to see if two students have cheated when writing a paper. Design a function : hasCheated(String s1,String s2, int N) that evaluates to true if two strings have a common substring of length N. Additional question after implementation. Assume you don't have the possibility of using String.contains() and String.substring(). How would you implement this?"}
{"i": "5683255621713920", "t": "Given a list of 4 billion integers, find an integer not in the list using 4MB of memory. (interview was in Java)"}
{"i": "4901629824335872", "t": "Write atof in Java, which converts a string representation of a float (like \"342.18E-10\") to an actual float without using any built-in parsing functions."}
{"i": "5669721374457856", "t": "N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner."}
{"i": "5125946302529536", "t": "Find the kth largest node in an unsorted linked list. ( Is quick select (selection algorithm) applicable on linked list (not array?)"}
{"i": "4840369632051200", "t": "Suppose you have a collection of collection\r\tEg : CEO-> Vps-> GMs ->..\r\tCEO will contain collection of VP's, VP's will have collection of GM's and so on.\r\t\tSuppose you need to find a particular GM is the alias is given.\tWrite a linq query to get the employee details if the employee alias is given.\rHint : Use Recursion + Linq"}
{"i": "5666082463416320", "t": "Make a JAVA program for an array of classes.\rclass should have 4 or 5 attribute and Array should contain 10 data which all have that 4 or 5 attribute of class. And Retrieve each attribute from all data.   (Like Array of structure in C)."}
{"i": "5640239645196288", "t": "Check if two binary search tree have the same in-order traversal in O(1) space"}
{"i": "5752271719628800", "t": "Given an array of integers and a length L, find a sub-array of length L such that the products of all integers are the biggest.\rExample:\rInput: {4, 1, -7, -8, 9}, 3\rOutput: {-7,-8,9}"}
{"i": "5766595435560960", "t": "Find the presence of a given word in a given grid, word can be matched in any direction up-down, down-up, left-right, right-left, both diagonals up and down etc."}
{"i": "5867650110455808", "t": "While playing NFS most wanted on a desktop, the application crashes.\rDebug the scenario?"}
{"i": "5117473942667264", "t": "A Desktop Java application which was working till yesterday crashes today --- no help from Java debugger. How do u go about debugging this?"}
{"i": "6206746368409600", "t": "VLC player installable is crashing. Debug"}
{"i": "4846025567109120", "t": "Given a number in an array form, Come up with an algorithm to push all the zeros to the end.\rExpectation : O(n) solution"}
{"i": "5428979330711552", "t": "Test Google advertisements.\rBasically the expectation is to get the requirement, assume certain things and come up with test strategies.\rE.g : UI, Backend, Compatibility, Accessibility etc.\r On the fly question were asked"}
