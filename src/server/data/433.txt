{"i": "9984678", "t": "1. Given an array of strings, we have to write a function called reverseStringSort which have to reverse the given strings, sort it and again reverse it finally before displaying it."}
{"i": "9981711", "t": "write a function equivalent to the c function strstr(char* small, char* big) which is basically a method that returns the index of the first occurrence of the substring.  \r for example:\r Small = \"cat\"\rBig = \"Application\"\r the function will return 5 because that is the index value where the substring first occurs"}
{"i": "9976709", "t": "merge 2 sorted linked list into another sorted linked list, then do it in O(N) time and O(1) space"}
{"i": "9981709", "t": "you have a Log file that stores the \"users id\", \"time\"(irrelevant), and \"webpage visited.\"  Find the most common three-sequence webpage visited by the users.  For example, you have a log file\r joe, 12:30pm,home\rjoe, 12:31pm,about\rjoe, 12:32pm,career\rjames, 12:35pm, home\rjames, 12:36pm, cart\rjames, 12:37pm, maps\rmary, 12:41pm, home\rmary, 12:42pm, about\rmary, 12:43pm, career\r thus the most common sequence is home->about->career because the sequence occurs twice as oppose to home->car->maps which only occurs once.\r In addition, this file is a huge file with many more entries."}
{"i": "9977718", "t": "write code to remove duplicates in O(N) time."}
{"i": "9977717", "t": "what data structures will you use if you have a program that accepts a stream of inputs and just stores those inputs.  write the code also."}
{"i": "9980717", "t": "when would you prefer to use a linked list over an array and vice versa"}
{"i": "9981708", "t": "given a binary tree, find the path from the root to all nodes whose id are multiples of five."}
{"i": "9979712", "t": "The best data structure to store the phone book.\r Refer : http://en.wikipedia.org/wiki/Trie"}
{"i": "9975707", "t": "Write a program to check the binary representation of an integer is palindrome or not ?\reg: \r4 --To Binary--> 0100  : Not palindrome\r6 --To Binary--> 0110  : Palindrome"}
{"i": "9952251", "t": "How will you find n most frequently occurring patterns in a text file. What data structures would you use?\rHere, a pattern is not a single word but rather a sequence of words. For instance, \"this is a\" could be a frequently occurring pattern in the file. \r Followup questions: \r- What if the file is very large (in GBs)?\r- What if the file contains text in multiple languages (english, japanese etc)?"}
{"i": "9950235", "t": "Give two binary search trees, print the numbers of both together in ascending order."}
{"i": "9967081", "t": "Add two big numbers represented as link lists without reversing the link lists."}
{"i": "9951144", "t": "How to find a first non repeating character in a String ?"}
{"i": "9966930", "t": "What is the time to get min element from the binary max heap !! \ro(n)\ro(logn)\ro(log log n))\ro(1)"}
{"i": "9958958", "t": "Round2: Q2\rGiven a array find the sub array with maximum sum."}
{"i": "9962969", "t": "Round2: Q1\rThere is a matrix where the cost of moving horizontally is 1, vertically is 1 and diagonally is 1.1. Now given two points, what is the number of shortest paths between these two points.\rHint: This will boil down to permutation with duplicates. Then he asked to code for this."}
{"i": "9953931", "t": "Round1: Q2\rDiscussion on various data structure where the following operations could have minimal cost:\r1.insert\r2.delete\r3.search\r4.return any element"}
{"i": "9966830", "t": "Round1: Q1\rFind the vertical sum in a binary tree.\rInput:\r(Plz construct the tree using the pre-order and in-order traversals)\rPre-order: 1 2 4 5 3 6 7\rIn-order: 4 2 5 1 6 3 7\rOutput:\rArr-Index   Sum\r0             4\r1             2\r3            12\r4             3\r5             7"}
{"i": "9957956", "t": "Round 5: Q2:\rDesign an algorithm to find the immediate greater number to a given number, such that the result has the same digits as the given input number.\rExample:\rInput  Output\r1234    1243\r1243    1324\rHint: Next Permutation of the given number"}
{"i": "9949952", "t": "Round 5: Q1:\rWrite a function that takes an integer and returns a char array that contains the -2 base representation of the given integer.\rExample:\rInput       Output\r  7          11011\r  3           111\r  2           110"}
{"i": "9953925", "t": "Round 4:\rQuestion on object-oriented design. (was asked to design MS-Paint application)\rOther basic concepts of OOPS, Networks, Operating Systems, C programming."}
{"i": "9951973", "t": "Round 3:\rGeneral Discussion about the current work & work-culture."}
{"i": "9966826", "t": "Round 2: Q2:\rGiven a tree, in addition to the left and right pointer, it has a third pointer, that is set to NULL.\rSet the third pointer to a node, which will be the successor of the current node, when the tree is traversed in the zig-zag order. In other words, if we traverse the tree using this third pointer alone, then we will be traversing the tree in the zig-zag order.\rInput:\r(Plz construct the tree using the pre-order and in-order traversals)\rPre-order: 1 2 4 5 3 6 7\rIn-order: 4 2 5 1 6 3 7\rSo, after the pointer is fixed, the traversal of the tree using the third pointer should give,\r1 3 2 4 5 6 7"}
{"i": "9953923", "t": "Round 2: Q1:\rGiven 2 unsorted arrays, find the intersection of the two arrays (optimal soln).\rHe was asking for various approaches and complexity in all those approaches.\rFinally, he was interested in the solution using array-sorting."}
{"i": "9962964", "t": "Round 2: Discussion\rDiscussion on various data structures and search complexity in them.\rFew questions on hashing."}
{"i": "9950958", "t": "Round 1: Q2:\rPuzzle\rGiven 25 horses, find the best 3 horses with minimum number of races. Each race can have only 5 horses. You don't have a timer."}
{"i": "9962963", "t": "Round 1: Q1:\rGiven a matrix, print it spirally.\rInput:\r1 2 3\r4 5 6\r7 8 9\rOutput: 1 2 3 6 9 8 7 4 5"}
{"i": "9957955", "t": "Written: Q3:\rGiven a string, compress using run-length encoding.\rExample:\rInput: aaabbac\rOutput: a3b2ac"}
{"i": "9951972", "t": "Written: Q2:\rGiven a rotated-sorted array find the point of rotation. Complexity less than O(n).\rExample:\rIndex: 0 1 2 3 4\rValue: 4 5 1 2 3\rAns: 2 (index)"}
