{"i": "15424909", "t": "Given a BST and a node, write the BST data structure  and a method in Java\r Node findNode(Node n)  \r that will find the next node of n in the BST. For example, if the tree looks like:\r                             7\r                    /                 \\\r                5                      11\r           /      \\                  /\r         4        6             9 \r       /                              \\\r     2                                  15\r Then, \rfindNode(2) = 4, \rfindNode(4) = 5, \rfindNode(5) = 6\rfindNode(6)=7\rfindNode(7)=9\rfindNode(9)=11\rfindNode(11)=15\r Note that you are not given the root of the tree.\r Hint: you may assume that you have parent pointer."}
{"i": "15435914", "t": "Write a java program thats takes a string and a character as input and return the string without that character. Do not use repalce function. For eg google, g should return oole"}
{"i": "15423911", "t": "what's encapsulation"}
{"i": "15430930", "t": "Difference between bit-wise operator and logical operator"}
{"i": "15423910", "t": "Design a GPS system"}
{"i": "15419875", "t": "We consider a Permutation of first 'N' natural numbers 'good' if it doesn't have 'x' and 'x+1' appearing consecutively, where (1 <= x <= N).\r\u2022 For Example, For N=3, all 'good' permutations are:\r1. {1,3,2}\r2. {2,1,3}\r3. {3,2,1}"}
{"i": "15422849", "t": "Pots of gold game: Two players A & B. There are pots of gold arranged in a line, each containing some gold coins (the players can see how many coins are there in each gold pot - perfect information). They get alternating turns in which the player can pick a pot from one of the ends of the line. The winner is the player which has a higher number of coins at the end. The objective is to \"maximize\" the number of coins collected by A, assuming B also plays optimally. A starts the game.\r The idea is to find an optimal strategy that makes A win knowing that B is playing optimally as well. How would you do that? \r At the end I was asked to code this strategy!"}
{"i": "15420859", "t": "Write a program to sum two binary numbers represented as strings.\r Input: \"110\", \"01101\"\rOutput: \"10011\"\r Method signature:\rpublic String addBinaryNumbers(String num1, String num2);"}
{"i": "15428854", "t": "Given the root node of a binary tree (not a BST), each node containing an integer value. Print\rthe values along the path from the root to the node containing the max value."}
{"i": "15430872", "t": "Given a monotonically sorted 2D array, explain an algorithm to search for a given input element. \rA monotonically sorted array is one in which each row and column has elements in ascending order.\rE.g. [ 1 2 10; 4 6 11; 5 7 12;] and [1  2  5; 4 6 7; 10 12 13] are both monotonically sorted."}
{"i": "15434835", "t": "Given a list of words output the largest anagram derivative  contained in that set.\rThe definition of an anagram derivative is:\rConsider the word 'cat' as a basis, then the word 'tack' is said to an anagram derivative of 'cat' since it can be re-arranged and appended with an alphabet to form the word 'tack'. This process can be performed repeatedly, so that the word 'tacky' is an anagram derivative of 'tack'. \rNow given a list of words output the largest anagram derivative in that list."}
{"i": "15424845", "t": "Pinterest has access to a large volume of 'pins' say of the order of 10 million. It is now required to display the 'Top 50' pins to the users on the website. \rEach pin has an associated 'score id' which is constantly updated as users 'like' the pin.\rExplain the run time complexity and memory requirements of the architecture."}
{"i": "15430865", "t": "How to get common elements from two sorted arrays and you should not use any additional buffers.\r ex:- a[] = {1,1,3,4,6,9}\rb[] = {1,1,3,4,5,9}\routput[] = {1,1,3,4,9}"}
{"i": "15444784", "t": "Implement in OOP the old cell-phones game \"snake\". Implement the function \"MoveUp\". Follow up: how would you reduce space complexity?"}
{"i": "15422833", "t": "give examples of hash functions that maps english word to byte"}
{"i": "15424830", "t": "how would you store and find the top 10 queries in google from some day (when you begin to count) till a certain date?"}
{"i": "15423862", "t": "Suppose you are appointed as a Database Administrator in a well reputed organization. Database in that organization is completely indexed. However, it has been noted that query performance of retrieval operations are good, but \u201cwrite\u201d operations are creating overhead.\r Your task is to improve the performance in the given perspective. There might exist different ways to solve this problem. Discuss the solution with strong arguments"}
{"i": "15421839", "t": "Your company has got a project for developing a software system. A similar software system was developed in your previous company. You discover that your company's interpretation of requirements is different from the interpretation taken by your previous company. Cost of project will tremendously increase if ambiguities in requirements are not resolved. You have also an ethical responsibility of confidentiality to your previous company. Discuss what you should do in such a situation?  not please  give me answer in a few hours that i submit my topic at time"}
{"i": "15443800", "t": "As input, you are given two sets:\r1) set R of n1 non-overlapping rectangles, whose sides are parallel to the x- and y-axes (ie: not rotated rectangles). Each rectangle denoted by bottom left & top right corner coordinates.\r2) set P of n2 points\r- let n = n1 + n2\r For each point 'p' in set P, find the rectangle 'r_p' in set R that contains 'p'. If 'p' is not enclosed by any rectangle, then 'r_p' is undefined. Otherwise, 'r_p' is unique because of the non-overlapping set.\r Goal: come up with a divide-and-conquer pseudocode to solve the general problem in O(n(logn)^2) time. \r Asked about points that are on the edge of the rectangle, and they said it was up to me whether to include those or not, just a matter of \"<\" vs \"<=\", etc. comparisons. Because it's just pseudocode they were looking for, they were not too concerned with the actual structure of the return value, just that the D&C algorithm showed the logic.\r Struggled with it for awhile and they simplified the problem to a ~special case with the constraint where all rectangles of R intersected a horizontal line 'L', and instead give a O(nlogn) algorithm to solve the same problem. I suspect this would've been a subproblem/subroutine of the more general case, but again got a bit lost."}
{"i": "15430836", "t": "Given an infinite sequence of integers which are repeated many times. WAP to print \"beep\" if an integer appears ODDth time else print \"no beep\".\rexample: input: a[] = { 1,4,2,4,3,2,4}\routput: beep, beep, beep, no beep, beep, no beep, beep\rSpace complexity - O(1)"}
{"i": "15418813", "t": "You have a number L and N distinct integers between 1 and 100.\rYou can use each number as many times as you want. Print the minimum subset size of these numbers which add up to L and how many ways are there to choose them (the order does not matter).\r 0<L,N<=100\r examples:\rinput1:\rL=7 N=6\r2 1 5 4 3 6\routput1:\r2 3 (minimum 2 numbers, 3 ways to choose: 1 and 6, 2 and 5, or 2 and 4\r input2:\rL=7 N=3\r4 2 6\routput2:\r0 0 (can't get 7 from 4,2 or 6)\r input3:\rL=14  N=3\r8 7 1\routput3:\r2 1 (we choose 7 twice)\r input4:\rL=100 N=3\r2 97 1\routput4:\r3 1"}
{"i": "15419803", "t": "void populate(char **s);\r\n\r\nint main() {\r\n\tchar *s;\r\n\tpopulate(&s);\r\n\tprintf(\"%s\", s);\t// should print \"Prasad\"\r\n\tfree(s);\r\n\treturn 0;\r\n}\r\n\r\nvoid populate(char **str) {\r\n\t// 1. The next two lines is one implementation\r\n\t*str = (char *)malloc(sizeof(char) * 7);\r\n\tstrcpy(*str, \"Prasad\");\r\n\r\n\t// 2. This line seperately is another implementation\r\n\t*str = \"Prasad\";\r\n}What is wrong, if anything, with the two implementations of populate."}
{"i": "15422792", "t": "How to detect cycles in a graph?\rDon't need to write code, just your idea and complexity."}
{"i": "15424777", "t": "give bi matrix 5 dimensional array\r{1 ,2, 3, 4,6},\r       {5, 4, 3, 5,7},\r       {6, 5, 9, 8,9},\r       {9, 8, 7, 6,1},\r       {1, 8, 3, 6,2}\r the output that needs to print is\r 1\r25\r346\r4359\r65981\r7878\r963\r16\r2\r   write an algorithm in java\rclue size of the bi dimensional array\rand factorial of the size\rand verify the indexes of the numbers in the output\rfor each number\rthey form a pattern\rwrite in a paper all the indexes\rull understand the pattern"}
{"i": "15434773", "t": "What are uses of Btree, AVL and RBtree(individual applications as i explained that we use them whenever we need balanced BST and he wasnt convinced)\rWhen would you specifically use Btree over AVL tree.\rWhich one out of balanced BST is most efficient(for which i answered Btree for large values of n) and he asked why dont we always use Btree then?"}
{"i": "15427772", "t": "what is volatile in java"}
{"i": "15443735", "t": "What is IOC container and how did that works, and explaining the pros and cons."}
{"i": "15423772", "t": "Design a phonebook dictionary which on input any characters gives names and phone number of all the matching names(prefix)\r For instance\rRihana 233222232\rRicky   134242444\rPeter    224323423\rRon      988232323\r If you give R as input it should list \rRihana Ricky and Ron which their contact numbers\r  If you give ri as input it should list \rRihana, Ricky which their contact numbers"}
{"i": "15422755", "t": "WAP :\rpublic boolean hasUniqueChars(String a);\r - String can contain any type of chars\r- You cannot use any type of Collections"}
{"i": "15421748", "t": "for this code:class Interview {\r\n        // input is max 3 chars\r\n       public static int convertToString(int input) throws IllegalArgumentException;\r\n}write a method which checks whether the proper exception is being thrown."}
