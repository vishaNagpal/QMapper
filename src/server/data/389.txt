{"i": "12955662", "t": "What is loose coupling & Abstraction ( explain in terms of interface)?"}
{"i": "12956661", "t": "Advantage of Interface?"}
{"i": "12920664", "t": "In .NET framework, execution/build plan when module written in different language?"}
{"i": "12920663", "t": "Difference between Interface & Abstract?"}
{"i": "12950675", "t": "You will find an incomplete class that represents a bounded queue BoundedQueue<T>. A main function is provided that tests the creation and usage of an instance of the BoundedQueue<T>. Implement the required functions such that the class compiles cleanly, the program runs, and all of the tests pass.  Do not use any other classes or packages."}
{"i": "12887688", "t": "create a database schema for...\r      an application that tracks a bunch of users.  the application has a list of races and users can sign up to run for races.\r     the application also keeps track of if the user has completed their race\r    give me queries for the following use cases:  \r       1.  all the users in the app\r       2.  all the races that a user has signed up for\r       3.  all the races that a user has finished racing\r       4.  all the races that a has signed up for but not raced (meaning they signed up for a race but the race is over and they didn't run in it)\r       5.  find the races that any two users share"}
{"i": "12951682", "t": "you have a book with all the pages ripped out and scattered.  The pages are numbered from 1 - n.  One of the pages is missing.  Write a function that will find the missing page"}
{"i": "12947677", "t": "For String Reversal... how I address the space between the words in a sentence..where in it should be \r?\rNot necessary inplace..any method is fine.\rolleh dlrow"}
{"i": "12948669", "t": "Given N pair of parenthesis. Write an algorithm which would print out all possible permutations possible with those parenthesis given that parenthesis are in correct order (i.e. every open parenthesis is matched with closed parenthesis)\r For .e.g. .. N =3 should give:\r  ()()()\r(()())\r()(())\r(())()\r((()))"}
{"i": "12887677", "t": "Predict the out put of the following code#include<stdio.h>\r\n\r\nint g = 0;\r\n\r\nint Add(int i)\r\n{ \r\n      static int s=0;\r\n      s =s+i;\r\n      g=g+i;\r\n      return s;\r\n}\r\n\r\nint main()\r\n{\r\n     int s=0;int g=0,j;\r\n     for(int i=1;i<=11;i++)\r\n     {       g=0;s=0;  \r\n             j = add(i);\r\n      }\r\n      printf(\"%d,%d\",j,g);\r\n\r\nreturn 0;\r\n}Predict the output"}
{"i": "12887676", "t": "Given an Array With random 0s and non 0 numbers, shift all the 0s to the beginning and non 0s to the rear.\rEg: 1,9,8,4,0,0,2,7,0,6,0\rOut put 0,0,0,0,1,9,8,4,2,7,6\ri.e order of numbers not to change. Do it in place"}
{"i": "12887675", "t": "You are given 2 dice. Both are fair. One of the dice has no numbers printed on it. You have to label the unmarked dice such that when both the dice are thrown, the sum on the faces is evenly distributed between 1 and 12."}
{"i": "12887674", "t": "Given an array. Find pairs of numbers that add up to a given value 'x'. with time complexity less than O(n2) and use no additional space."}
{"i": "12949663", "t": "1. Time complexities of Hash table, Array, Linked list\r2. I need a fully functional hash table with time complexity for search O(n). How can I achieve this?"}
{"i": "12944665", "t": "Immutable Object in Java?"}
{"i": "12943664", "t": "Difference between Linked List and Array List"}
{"i": "12945665", "t": "Given a tree, write algo to verify whether it is a BST or not?"}
{"i": "12944663", "t": "Find the maximum number in the array and also the frequency of that number in O(n)."}
{"i": "12945663", "t": "Write a function f(n) which computes the number of scoring sequences that add up to score n."}
{"i": "12934670", "t": "Design a modified stack that in addition to Push and Pop can also provide minimum element present in the stack via Min function."}
{"i": "12939672", "t": "Design a hash table that is thread safe. That is it can support concurrent reads but protects on write."}
{"i": "12939671", "t": "Design a collaborative text editor where each participant has infinite undo/redo. Consider the scenario where a user goes offline and then comes online and tries to undo/redo."}
{"i": "12908676", "t": "Given a sorted array that is sorted by rotated, find a given number. For example take an array: 1 3 8 10 12 56 and rotate it so you have 10 12 56 1 3 8 and then find a candidate e.g. 3 in it."}
{"i": "12931676", "t": "Given a string representing sorted numbers with spaces print the count of each number. For example if the input string is: \"1 1 2 3 4 4\" then you should print 1:2, 2:1, 3:1, 4:2\r Then the question was modified so there could be invalid number in the string which must be skipped.\r Then an added requirement to handle hex numbers in the string."}
{"i": "12908675", "t": "Given a string representing roman numeral, find and return its numeric value. e.g. XXIV = 24 and so on."}
{"i": "12940668", "t": "Write a function convert a integer from 0 to 1000 to Roman numerals.\r1: I   5: V  10: X  50: L  100: C  500: D  1000: M  \rTest Cases:\rXI 11, IX 9, XXX 30, DC 600, CM 900, XCVIII 98"}
{"i": "12903687", "t": "Write a function convert a string to an integer. example convert String \"1750\" to int 1750. Using Java, not allow use the default function"}
{"i": "12923672", "t": "A special tree node has one more pointer all initialized to NULL. write a program so that this new pointer will point to next node of same level."}
{"i": "12926670", "t": "Suppose you have given a 10 digit mobile number (9903457235). Each digit in the number have 3 letters in mobile keypad. find/print all words which can be created by corresponding letter against digit given..  Total 3^10 words, I need complete recursive function."}
{"i": "12923661", "t": "program to find equivalence of two unsorted arrays"}
