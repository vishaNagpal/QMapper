{"i": "12731667", "t": "What are hashmaps and how do they work?"}
{"i": "12732667", "t": "Tell me about memory allocation (stack vs. heap)"}
{"i": "12732666", "t": "What is the difference between Java and C++?"}
{"i": "12642713", "t": "Given a binary tree return the new binary of given depth.\rExample:\r0 - 3 -- Should return full binary tree from root to height 3\r 3 - 4 -- Should return full binary tree from height 3 to 4"}
{"i": "12732662", "t": "A king is about to give a party in 24 hours. For the party they have arranged drinks which will be served through 1000 barrels. Out of jealousy , some one near to king has poisoned one of the barrels. The poison is so strong that even a drop can kill a person. But results are not immediate. A person may die from 13 to 20 hrs. Now king has a duty of finding that barrel. He has 24 hours with him. And he has unlimited prisoners on which the drinks can be tested. Find out the maximum prisoners he would need to find out that barrel."}
{"i": "12626681", "t": "What data structure to use for finding free parking spot in Parking Lot program? Assume there are million of parkings."}
{"i": "12688696", "t": "Given a stack of glasses like :\rv\rvv\rvvv\rvvvv \r.\rand a person filling water from the top using a jug. Given that the volume of jug is V , and volume of each glass is 'v' . Write code to find :\r1. Number of glasses fully filled\r2. Number of glasses partially filled (and what different categories they'd fall in based on half-filled/75% filled etc.)\r3. Level to which water would reach.\r  Hint : glasses in center will fill up faster than those away from center."}
{"i": "12688694", "t": "Print a binary tree in level by level in Zig-Zag manner"}
{"i": "12691685", "t": "Given n points in 2D space find k points nearest to origin"}
{"i": "12691681", "t": "write a function which takes 7 digits (last 7 nos of a 1800 number), and return 2 words formed out of the last 7 digits. i.e. 1800 GotCard (Got and Card are the two words to be returned). There could be multiple possible pairs of words  - return any 2"}
{"i": "12691679", "t": "The root node in the tree is equal to sum of its all descendants and the leafs are assigned value 0, so if your tree is something like \t\t\t10\r \t\t                                         20\t\t30\r \t\t\t                                           40        50\r output will be\r \t\t\t                        140\r                            \t\t0\t\t90\r                           \t\t\t    0          0"}
{"i": "12691671", "t": "Given a queue with functions as enqueue(), dequeue(), and findmax(). You can use these functions any time. The findmax() should return the largest value in the queue at that point. You can use auxiliary space.\r Implement the queue with given operations. Find the max value in the queue."}
{"i": "12725669", "t": "Do a merge of two binary trees and tell what the complexity of the merging is. The trees consist of m and n nodes respect."}
{"i": "12689669", "t": "Reverse a stack without using extra stack (i.e. doing in place reversal). (hinted about using double recursion)."}
{"i": "12608706", "t": "Delete a given node of a linked list, when you do not have info about the head or any other node. \rThe prototype of the function is -\r void delete (Struct node* x)\rwhere x is any arbit node of a linked list."}
{"i": "12686673", "t": "Given a graph (consider it to be a mxn grid). The nodes are node of a binary tree with left and right pointers. The start point (A) is at the left upper corner and the end point (B) is at right bottom corner.  Each node points to its adjacent nodes in the grid (the right pointer points to the node on the right and the left points to the node just below it). The nodes at the lower and right edges will have child as null (right null for the right side edge and left null for the bottom edge). The end node at B is having both as null.\r How many paths are possible which can lead you to B, if you start from A?"}
{"i": "12688668", "t": "Which Data structure is used in window search...??"}
{"i": "12636688", "t": "1. Who is the (which process) the responsible for windows \r2. updates ? How these windows 'Run'  (winKey+R) commands work ?\r3. Why the run commands won't work for user installed applications ? Any way to do so ?"}
{"i": "12720678", "t": "What does a packet contains, when it is send from source to destination ? How does a packet routes to one NW to an other ?"}
{"i": "12715691", "t": "Some questions on LINUX command level, \rA. command to find RAM memory space occupied by each process.\rB.What does 'top' command do ?"}
{"i": "12716690", "t": "Given some file sharing scenario & asked to give negative test cases as many as possible ?\r Ans: Here he himself was not clear about scenario, was mixing up with Wins functionality & his scenario."}
{"i": "12715690", "t": "You have a 2 liter & 5 liter jugs and a tank of milk. So using these 2 jugs get 4 liter milk in 5 liter jug ?\rAns: 5-3 =2 (take 3 liters frm 5 and put 2 in 3 liter jug);  5 -1 = 4 (again take 5 liter & fill remaining  liter in 3 liter )"}
{"i": "12714695", "t": "Logic to print number and number of duplicates of that number in a given array list ?\rAns: It's very easy if you two for loops, anyone can try out & get it in seconds."}
{"i": "12716689", "t": "(1) Working flow of  DNS & DHCP protocol ?\rAns: Yeah it's routine question, explained in my way.\r (2) How does DHCP generates a lease with client name, by association with DNS.\rAns: With DHCP option DDNS updates, explained it. He was bit happy here."}
{"i": "12631685", "t": ""}
{"i": "12631684", "t": "Search sub string in a big string."}
{"i": "12716682", "t": "You have 1000 pairs of nuts and bolts all of different sizes. 2 nuts can not be compared and 2 bolts can not be compared with each other. pairs of Nuts and bolts are removed and mixed with each other. How will you arrange them now with lowest complexity .. (hint -> USe quick Sort)."}
{"i": "12714690", "t": "Given an expression tree how do you evaluate it and also how do you evaluate for n-ary operators"}
{"i": "12719693", "t": "Find if two rectangles overlap in cartesian space"}
{"i": "12715683", "t": "Construct a Cartesian tree from in order traversal"}
