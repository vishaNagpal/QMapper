{"i": "5099517305159680", "t": "How to delete two rows from the table in database ?\rNote: Delete only first two rows from the Database.\r<table style=\"width:300px\" border=\"2px\">\r<tr>\r  <th>USERNAME</th>\r  <th>LOCATION</th>\t\t\r</tr>\r<tr>\r  <td>zac</td>\r  <td>california</td>\r</tr>\r<tr>\r  <td>zac</td>\r  <td>california</td>\r</tr>\r<tr>\r  <td>zac</td>\r  <td>california</td>\r</tr>\r<tr>\r  <td>zac</td>\r  <td>california</td>\r</tr>\r </table>"}
{"i": "6312966362234880", "t": "Implement LRU cache of size 10 which can store Key, Value pair. (get(key) & put(key,value) methods)\r- If we try to add 11th element, the least recently used element should get removed.\r- If key already present, overwrite it and mark it as most recently used."}
{"i": "5710615788126208", "t": "You are given an array of N elements. Each element in the range Min of int to Max of Int. You need to find the length of longest  sequence in this array such that difference of largest and smallest element of that sequence is 1. The sequence need not be sequential. \r For e.g. array[]={6,10,6,7,8,9,0}\rseq {6,10} = diff is 4 len 2\rseq { 10,7,8}  diff is 3 len 3\rseq { 7,8,9} diff 2  len 3\rseq {6,6,7}  diff is 1 len 3\r In this example the program should return 3 .\r Complexity N*longN"}
{"i": "5742644097449984", "t": "You have a set of pairs of characters that gives a partial ordering between the characters. Each pair (a, b) means that a should be before b. Write a program that displays a sequence of characters that keeps the partial ordering (topological sorting)."}
{"i": "5643933132521472", "t": "public class LogEntry {\r \u00a0public final long startTime; // start time of a job in millisec granularity\r \u00a0public final long endTime; // end time of a job in millisec granularity.\r \u00a0public final long ram; // the amount of ram the job occupies.\r \u00a0public final long jobId;\r \u00a0... constructor ...\r}\r running total of RAM\r|\r| \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03GB\r| \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-----\r| \u00a0\u00a0\u00a0\u00a0\u00a02GB\r| \u00a0\u00a0\u00a0\u00a0------\r| 1GB \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-----------\r|----- \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-----------\r|\r|____________________________________________________time\r Find the peakRAM when the input is a collection of LogEntry objects"}
{"i": "4734553532923904", "t": "Given a string array ex: [1, 2, 3], find the permutation in best time."}
{"i": "5640618223075328", "t": "Given 4 bottles out of which one is of less weight. Find out the defective one by weighing only once."}
{"i": "5192351949520896", "t": "Given MxN matrix which contains 1s and 0s, find the largest sub matrix which contains most number of 1s. condition is that each row in the sub matrix must contain at-least one 1."}
{"i": "5799577647054848", "t": "Flood fill algorithm. He also asked me what else I would do before checking the code to repository?"}
{"i": "4903434666901504", "t": "A non-empty zero-indexed array A consisting of N integers is given. The leader of this array is the value that occurs in more than half of the elements of A.\rWrite a function:\rint arrLeader(int A[], int N);\rint arrLeader(NSMutableArray *A);\rint arrLeader(const vector<int> &A);\rclass Solution { int arrLeader(int[] A); }\rclass Solution { public int arrLeader(int[] A); }\rfunction arrLeader(A);\rfunction arrLeader(A)\rfunction arrLeader($A);\rfunction arrLeader(A : array of longint; N : longint) : longint;\rdef arrLeader(A)\rsub arrLeader { my (@A)=@_; ... }\rdef arrLeader(a)\rPrivate Function arrLeader ( A As Integer() ) as Integer\rthat, given a non-empty zero-indexed array A consisting of N integers, returns the leader of array A. The function should return -1 if array A does not contain a leader.\rAssume that:\rl         N is an integer within the range [1..1,000,000];\rl         each element of array A is an integer within the range [0..2,147,483,647].\rFor example, given array A consisting of ten elements such that:\rA[0] = 4  A[1] = 2  A[2] = 2  A[3] = 3  A[4] = 2  A[5] = 4  A[6] = 2  A[7] = 2  A[8] = 6  A[9] = 4\rthe function should return -1, because the value that occurs most frequently in the array, 2, occurs 5 times, and 5 is not more than half of 10.\rGiven array A consisting of five elements such that:\rA[0] = 100  A[1] = 1  A[2] = 1  A[3] =  50  A[4] = 1\rthe function should return 1.\rComplexity:\rl         expected worst-case time complexity is O(N);\rl         expected worst-case space complexity is O(1), beyond input storage (not counting the storage required for input arguments).\rElements of input arrays can be modified.\r// you can also use includes for example:\r// #include <algorithm>\rint arrLeader ( const vector<int> &A ) {\r    // write your code here\r }"}
{"i": "4817781946056704", "t": "Implement multiple producer and multiple consumer problem in java."}
{"i": "5681201704599552", "t": "Write a binary search function in C that will work for any datatype. You cannot accept the datatype in the function arguments."}
{"i": "5978736570662912", "t": "give an algorithm for finding duplicate parenthesis in a expression.\r example :(( a + b ) + (( c + d )))"}
{"i": "6196149157363712", "t": "give an algorithm for finding duplicate parenthesis in a expression.\r    {{ (( a + b ) * (( c + d ))) }}"}
{"i": "5679059790987264", "t": "For a given binary search tree, replace each node with sum of all node which are greater then of equal to current node."}
{"i": "4814266313998336", "t": "write a program to generate random numbers without using the in-built functions?"}
{"i": "6535983075950592", "t": "He asked me to print root to leaf path WITHOUT using recursion . I got stuck at it and used too much space according to him .\rI constructed a visited array , path array and a stack .\rIs there any other optimal algorithm ?"}
{"i": "5673062741573632", "t": "a[] is an array containing elements of a BST .\r2D array is given where arr[i][j] gives the root of the tree formed by taking elements from index i to j from a[] . construct the BST ."}
{"i": "6017278600544256", "t": "Given pattern P (say aba) search for the pattern if the input is a stream of characters.\r 1. You cant store the stream of chars. not even till Length(P)\r2. You have access to only one char of stream at a time.\r I gave KMP algo which was okay for him, but he mentioned you could have used some better DS..\r I am wondering which DS can be used to store pattern..\rTrie ??? \r You need to consider cases for stream like aababa\rthere are 2 occurences"}
{"i": "5725709041401856", "t": "/* This class will be given a list of words (such as might be tokenized\r\n * from a paragraph of text), and will provide a method that takes two\r\n * words and returns the shortest distance (in words) between those two\r\n * words in the provided text. \r\n * Example:\r\n *   WordDistanceFinder finder = new WordDistanceFinder(Arrays.asList(\"the\", \"quick\", \"brown\", \"fox\", \"quick\"));\r\n *   assert(finder.distance(\"fox\",\"the\") == 3);\r\n *   assert(finder.distance(\"quick\", \"fox\") == 1);\r\n * /"}
{"i": "5711645439426560", "t": "root, directory, 128, admin, NONE\rusers, directory, 512, admin, root\rsantana, directory, 1024, santana, users\rsantana.jpg, photo, 128000, santana, santana\rProject.doc, document, 256000, santana, santana\rIncredibles.mpg, movie, 4123456123, santana, santana\rmarcus, directory, 128, marcus, users\rResume.doc, document, 256000, marcus, marcus\r This contains information about files stored in a file system. Each line corresponds to one file, and the fields are separated by commas. The first field contains the filename, the second contains the file type, the third field is the size of the file in bytes, the fourth field is the username of the owner of the file, and the last field is the name of the parent directory of this file (i.e. the name of the directory in which this file is located.) Note: the special parent directory name NONE indicates that this file is the root directory of the filesystem. Also, for the purposes of this program, assume that all file/directory names are unique in the system.\rwrite a Java program which reads data in this format from a file, parses it, and figures out the total size of storage consumed by each directory in this system. The size of storage consumed by any directory is defined as the sum of the size of this directory, sizes of all the files in this directory and the total storage sizes consumed by all the directories in this directory. Your program should write the name of each directory, and the total storage consumed by it. The output should have one directory per line, and the format should be dirname: size.\rOutput should be: \r santana: 4123841147\rmarcus: 256128\rroot: 4124097915\rusers: 4124097787\r Provide the best algorithm and java program."}
{"i": "6251247950626816", "t": "Given a balanced BST, how would you return the nth smallest element in logn time ."}
{"i": "5163063829331968", "t": "public interface FirstCommonAncestor {\r     /**\r     * Given two nodes of a tree,\r     * method should return the deepest common ancestor of those nodes.\r     *\r     *          A\r     *         /   \\\r     *        B   C\r     *       /   \\    \\\r     *      D   E   M\r     *            / \\\r     *          G   F\r     *\r     *  commonAncestor(D, F) = B\r     *  commonAncestor(C, G) = A\r     */\r     public Node commonAncestor(Node nodeOne, Node nodeTwo)\r    {\r     }\r}\r class Node {\r     final Node parent;\r    final Node left;\r    final Node right;\r      public Node(Node parent, Node left, Node right, data) {\r        this.parent = parent;\r        this.left = left;\r        this.right = right;\r        this.data = data\r    }\r     boolean isRoot() {\r        return parent == null;\r    }\r}"}
{"i": "5099108008198144", "t": "If in a relation there are multiple duplicate  rows . Your task is to delete one duplicate row.\r a1  a2\r1    3\r1    3\r2    4\r3    5\r3    5\r3    5\rafter deletion\ra1  a2\r1   3\r2   4\r3   5\r3   5\r 3"}
{"i": "5653738475749376", "t": "Id \tKey \t\tValue\r--\t---\t\t-----\r1\tname\thulk\r2\tage\t\t22\r3\tname\tironman\r4\tage\t\t35\r Write an efficient SQL Query to fetch the id of all users whose name starts with h and having age between 22 and 35."}
{"i": "5135908093296640", "t": "Given two tables\r    1. Candidate having: Id , Name\r    2. Vote: Id, CandidateId\r Give query to give the name of the winning candidate"}
{"i": "5745646346698752", "t": "Write a test plan for vending machine"}
{"i": "5726414556889088", "t": "What happens when you type in shelllist=$(ls)Interviewer expected the list of system-calls made, file-descriptors involved etc."}
{"i": "4904931328786432", "t": "Coding Round Assignment\r------------------------------------\r MERCHANT'S GUIDE TO THE GALAXY\r You decided to give up on earth after the latest financial collapse left 99.99% of the earth's population with 0.01% of the wealth. Luckily, with the scant sum of money that is left in your account, you are able to afford to rent a spaceship, leave earth, and fly all over the galaxy to sell common metals and dirt (which apparently is worth a lot).Buying and selling over the galaxy requires you to convert numbers and units, and you decided to write a program to help you.The numbers used for intergalactic transactions follows similar convention to the roman numerals and you have painstakingly collected the appropriate translation between them.Roman numerals are based on seven symbols:\r Symbol\tValue\rI\t1\rV\t5\rX\t10\rL\t50\rC\t100\rD\t500\rM\t1,000\rNumbers are formed by combining symbols together and adding the values. For example, MMVI is 1000 + 1000 + 5 + 1 = 2006. Generally, symbols are placed in order of value, starting with the largest values. When smaller values precede larger values, the smaller values are subtracted from the larger values, and the result is added to the total. For example MCMXLIV = 1000 + (1000 \u2212 100) + (50 \u2212 10) + (5 \u2212 1) = 1944.\rThe symbols \"I\", \"X\", \"C\", and \"M\" can be repeated three times in succession, but no more. (They may appear four times if the third and fourth are separated by a smaller value, such as XXXIX.) \"D\", \"L\", and \"V\" can never be repeated.\r\"I\" can be subtracted from \"V\" and \"X\" only. \"X\" can be subtracted from \"L\" and \"C\" only. \"C\" can be subtracted from \"D\" and \"M\" only. \"V\", \"L\", and \"D\" can never be subtracted.\rOnly one small-value symbol may be subtracted from any large-value symbol.\rA number written in Arabic numerals can be broken into digits. For example, 1903 is composed of 1, 9, 0, and 3. To write the Roman numeral, each of the non-zero digits should be treated separately. In the above example, 1,000 = M, 900 = CM, and 3 = III. Therefore, 1903 = MCMIII.\r-- Source: Wikipedia (http://en.wikipedia.org/wiki/Roman_numerals)Input to your program consists of lines of text detailing your notes on the conversion between intergalactic units and roman numerals. You are expected to handle invalid queries appropriately.\r Test input:\r-------------\rglob is I\rprok is V\rpish is X\rtegj is L\rglob glob Silver is 34 Credits\rglob prok Gold is 57800 Credits\rpish pish Iron is 3910 Credits\rhow much is pish tegj glob glob ?\rhow many Credits is glob prok Silver ?\rhow many Credits is glob prok Gold ?\rhow many Credits is glob prok Iron ?\rhow much wood could a woodchuck chuck if a woodchuck could chuck wood ?\r Test Output:\r---------------\rpish tegj glob glob is 42\rglob prok Silver is 68 Credits\rglob prok Gold is 57800 Credits\rglob prok Iron is 782 Credits\rI have no idea what you are talking about"}
{"i": "5709065573367808", "t": "Design a mobile app which based on the current location suggests Interesting places to the user. We already have a set of interesting places stored. The focus is on getting the nearby places say in radius of 100 Miles from current location quickly. \r The interviewer is mainly interested on how to store the interesting locations in a DB."}
