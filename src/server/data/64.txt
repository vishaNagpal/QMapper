{"i": "5656962283864064", "t": "Print a binary tree in vertical order using singly linked list..."}
{"i": "5743713107050496", "t": "There are three threads and we want them to run \rone after the other. How can we do that?"}
{"i": "5646066220269568", "t": "In a grid, you are given a position, and every location has some value. \rfind the shortest length so that you can touch to any boundary of the grid."}
{"i": "5145706019946496", "t": "You are given a graph and an algorithm that can find the shortest \rpath between any two nodes\rNow you have to find the second shortest path between same two nodes."}
{"i": "5665510342524928", "t": "Find product of distinct prime \rfactor of all numbers .\rEx \r10\r12\r7\rprime factor of 10 = 2*5\rprime factor of 12 = 2*2*3\rprime factor of 7 = 7\r SO distinct prime factor is 2*5*3*7 = 210"}
{"i": "5728422419496960", "t": "encode binary in bytes is to give a matrix of size M * N,\rThis matrix is encoded in bytes as a 4 * 4 bool matrix\r[0 0 0 0\r  1 0 0 1\r  0 0 0 0\r  0 0 0 1]\rWill be encoded as a byte array [9, 1].  \rThen write a function set_one (vector <byte> arr, int M, int N, int start_row, int start_col, int end_row, int end_col);\rSet all of 0 from (start_row, start_col) to (end_row, end_col) to 1\rfor example\rstart_row = 1\rstart_col = 2\rend_row = 2\rend_col = 0,\rJust that 4 * 4matrix will become\r[0 0 0 0\r  1 0 1 1\r  1 0 0 0\r  0 0 0 1]\r The byte array after encode should be rewritten as [11, 129]."}
{"i": "5748634065829888", "t": "find out all of the state machine will guaranteed to come to safe state\rex\rA -> [B, C, D, E]\rB -> [A]\rC -> [D, E]\rD -> [E].  \rE -> [safe state]\rOutput [C, D, E] because once these states will eventually go to safe state"}
{"i": "5699174564626432", "t": "Aisles contain products. Product is only going to be in one Aisle.\r Product{\r AisleID: string\r ProductID: string\r Price: float\r }\r Given Array<Product>, find the N highest price combinations. Combination is 1 product from each aisle. You can choose only one instance of each product.\r So if you had two aisles\r 1: {$5,$4,$2}\r and\r 2: {$6,$1)\r And they asked for the 2 highest combos you would give $6,$5 and $6,$4"}
{"i": "5740174859304960", "t": "Write a simple RegEx parser function that handles only the \roperators * (0 or more) and + (1 or more), and returns true if \rthe provided string is a match. Signature: \rboolean isMatch(String regex, String input).\rExample: regex = a*b+ce, input = bce, return true\rExample: regex = a*b+ce, input = ace, return false\rExample: regex = a*b+ce, input = abcee, return false"}
{"i": "5763844692508672", "t": "Given a tree and a number N, \rconstruct another tree such that each node of the tree has either 0 or \rN elements,except for one node which has between 0 to N elements.\rOnly other constraint is \rthat ancestry is preserved in the new tree."}
{"i": "5726731074797568", "t": "given start and end of a given set of meetings, asking how to schedule\r as many meetings as possible\u3002"}
{"i": "5118262185558016", "t": "find a points that has same distance to given three points"}
{"i": "5661764527063040", "t": "input is an int [] number is the car number parked in the parking lot, 0 for empty spaces\rOutput is also an int [] requires a method to convert the input into target array.\rEach car can only be exchanged with a 0."}
{"i": "5640297810755584", "t": "Given a string s1, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.\r\n\r\nBelow is one possible representation of s1 = \"great\":\r\n\r\n    great\r\n   /    \\\r\n  gr    eat\r\n / \\    /  \\\r\ng   r  e   at\r\n           / \\\r\n          a   t\r\nTo scramble the string, we may choose any non-leaf node and swap its two children.\r\n\r\nFor example, if we choose the node \"gr\" and swap its two children, it produces a scrambled string \"rgeat\".\r\n\r\n    rgeat\r\n   /    \\\r\n  rg    eat\r\n / \\    /  \\\r\nr   g  e   at\r\n           / \\\r\n          a   t\r\nWe say that \"rgeat\" is a scrambled string of \"great\".\r\n\r\nSimilarly, if we continue to swap the children of nodes \"eat\" and \"at\", it produces a scrambled string \"rgtae\".\r\n\r\n    rgtae\r\n   /    \\\r\n  rg    tae\r\n / \\    /  \\\r\nr   g  ta  e\r\n       / \\\r\n      t   a\r\nWe say that \"rgtae\" is a scrambled string of \"great\".\r\n\r\ngive a string s, print all the scrambled string of it\r\n\r\nclass Solution {\r\n    public List<String> ScrambleString(String s) {\r\n        \r\n    }\r\n}"}
{"i": "5662105507201024", "t": "The problem is to count all the possible paths from any points  to bottom right of a mXn matrix with the constraints that from each cell you can either move only to right or down"}
{"i": "4809055678758912", "t": "We have two sequences A and B consisting of integers, both of length N, and you would like them to be (strictly) increasing, i.e. for each K (0 \u2264 K < N \u2212 1), A[K] < A[K + 1] and B[K] < B[K + 1]. Thus, you need to modify the sequences, but the only manipulation you can perform is to swap an arbitrary element in sequence A with the corresponding element in sequence B. That is, both elements to be exchanged must occupy the same index position within each sequence.\r For example, given A = [5, 3, 7, 7, 10] and B = [1, 6, 6, 9, 9], you can swap elements at positions 1 and 3, obtaining A = [5, 6, 7, 9, 10], B = [1, 3, 6, 7, 9].\r Your goal is make both sequences increasing, using the smallest number of swaps.\r Write a function:\r  public int minswaps(int[] A, int[] B); \r that, given two zero-indexed arrays A, B of length N, containing integers, returns the minimum number of swapping operations required to make the given arrays increasing. If it is impossible to achieve the goal, return \u22121.\r For example, given:\r A[0] = 5        B[0] = 1\rA[1] = 3        B[1] = 6\rA[2] = 7        B[2] = 6\rA[3] = 7        B[3] = 9\rA[4] = 10       B[4] = 9\ryour function should return 2, as explained above.\r Given:\r A[0] = 5        B[0] = 2\rA[1] = -3       B[1] = 6\rA[2] = 6        B[2] = -5\rA[3] = 4        B[3] = 1\rA[4] = 8        B[4] = 0\ryour function should return \u22121, since you cannot perform operations that would make the sequences become increasing.\r Given:\r A[0] = 1        B[0] = -2\rA[1] = 5        B[1] = 0\rA[2] = 6        B[2] = 2\ryour function should return 0, since the sequences are already increasing.\r Assume that:\r N is an integer within the range [2..100,000];\reach element of arrays A, B is an integer within the range [\u22121,000,000,000..1,000,000,000];\rA and B have equal lengths.\rComplexity  O(N)"}
{"i": "5696840786771968", "t": "Find the final states of a n-nary tree\r  each node has three states, 0,1,2.\r  Require that if all child nodes are 2,\rThe parent node is also 2.\r All child nodes are 0, the parent node is 0, and the rest are all 1s."}
{"i": "5735430732382208", "t": "Given two functions, start (id, start_time), stop (id, time),\rRespectively, to the id assignment start and end time, gave a bunch of such operations (to ensure that the operation start small id first appeared,\rAnd each id last have start_time and stop_time), press the start order to print the corresponding id, start_time, stop_time,\rRequirements of space complexity as small as possible,  \re.g., start (1, 1), start (2, 2), stop (2, 3), start (3, 4), stop\rThe print order is (1,1,6), (2,3,2), (3,4,5) # (id, start_time, end_time)."}
{"i": "6208666402291712", "t": "To several bus lines, each line is a two-way line, such as:\r0: A <-> B <-> D\r1: C <-> D\r After writing the map, give you a start and end, let me find the path through the least station."}
{"i": "4816380275720192", "t": "Output the second index corresponding to the first one, requiring output only if there is only one match, and false if there is more than one pair\r  a b c d e f g a b -> [0,1]\r a b b c, a b c -> False"}
{"i": "4888676386471936", "t": "Check if characters of a given string can be swaped to form target string\r ab : ba  true\rac : ab false"}
{"i": "5513739083186176", "t": "1\r\n   \\\r\n2 - 3\r\n \\ /\r\n  4\r\n  |\r\n  5 - 8\r\n  |  /\r\n   7\r\nFor the undirected graph, the LCS is 2,3,4,5, so how can we find it?\r\n For a undirected graph, find the Longest Consecutive Sequence/**\r * Definition for undirected graph.\r * class UndirectedGraphNode {\r *     int label;\r *     List<UndirectedGraphNode> neighbors;\r *     UndirectedGraphNode(int x) { label = x; neighbors = new ArrayList<UndirectedGraphNode>(); }\r * };\r */\rpublic class Solution {\r    public List<Integer> longestGraph(List<UndirectedGraphNode> nodes) {\r     }\r}"}
{"i": "5694101671378944", "t": "check if there are two subarrays in an array are identical"}
{"i": "5699926989209600", "t": "comparison of two strings if they are the same, use o(1) space\rabc \\ b is equal to ab\rabc \\ ca equals abcA\r \\ b = backspace\r\\ c = CapsLock"}
{"i": "5090747618426880", "t": "convert Prefix to Postfix using recursion\r  + * A B / C D  ->  A B * C D / +"}
{"i": "5731690956718080", "t": "Design a dictionary with historical records\rt0: hdict = HistoricalDict ()\rt2: hdict.set ('foo', 1)\rt4: hdict.set ('foo', 2)\rt5: hdict.get ('foo', t5) -> 2\rt6: hdict.get ('foo', t3) -> 1\rt7: hdict.get ('foo', t0) -> None"}
{"i": "5633403314503680", "t": "CSS colors can be defined in the hexadecimal notation \"#rgb\", a shorthand for \"#rrggbb\". For example, \"#03f\" is equivalent to \"#0033ff\". Suppose the similarity between two colors \"#abcdef\" and \"#ghijkl\" is defined as (-(ab-gh)^2 - (cd-ij)^2 - (ef-kl)^2), write a function that accepts a color in the \"#abcdef\" format and returns a \"#rgb\" color that is most similar to the input. For example, given \"#09f166\", \"#1e6\" should be returned."}
{"i": "5074469692375040", "t": "Given a binary tree, output the maximum EVEN sum along any path\r\n      10\r\n     /    \\\r\n    2      5\r\n   /  \\      \\\r\n  1   101    13\r\nMaximum even sum = 101 +2 +10 + 5 = 118"}
{"i": "5759325447389184", "t": "Given two input arrays, return true if the words array is sorted according to the ordering array\rInput:\r  words = ['cc', 'cb', 'bb', 'ac']\r  ordering = ['c', 'b', 'a']\rOutput: True\r Input:\r  words = ['cc', 'cb', 'bb', 'ac']\r  ordering = ['b', 'c', 'a']\rOutput: False"}
{"i": "5179225018466304", "t": "Give the following input, output if the array is sorted according to the ordering array given. Return true or false.\rInput:\r  words = ['cc', 'cb', 'bb', 'ac']\r  ordering = ['c', 'b', 'a']\rOutput: True\r Input:\r  words = ['cc', 'cb', 'bb', 'ac']\r  [bb cb cc ac]\r  ordering = ['b', 'c', 'a']\rOutput: False"}
