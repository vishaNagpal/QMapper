{"i": "6243379942785024", "t": "how to implement the standard JSON.stringify and JSON.parse method"}
{"i": "5435425459011584", "t": "Given a list of input tasks to run, and the cooldown interval, output the minimum number of time slots required to run them. \r// Tasks: 1, 1, 2, 1, 2 \r// Recovery interval (cooldown): 2 \r// Output: 8 (order is 1 _ _ 1 2 _ 1 2 ) \rWhats the time and space complexity ? What's the ideal case of space complexity ?"}
{"i": "6031868238495744", "t": "Y can't user mode helper function execute ls command .\rIt is executing my application and even power off command.\rPlease let me know how user mode helper function works briefly..."}
{"i": "5194996444561408", "t": "design a zigzag iterator, implement the prev() and hasPrev function"}
{"i": "5095002022608896", "t": "Write a program to return nearest elements from a binary search tree for input element."}
{"i": "6500819644973056", "t": "There is a dictionary already implemented. Write a method , which takes input String without space, to replace the characters from the strings which are not present in dictionary with \u2013\r Example: Dictionary \u2013 a*\r\u2026\u2026\u2026\u2026.Input- aaabaa\r\u2026\u2026\u2026\u2026.Output- aaa_aa"}
{"i": "5327485649551360", "t": "There is a dictionary already implemented. Write a method, which takes input String without space, to prints all subsets of the input string which is present in dictionary.\rExample: Dictionary \u2013 a*\r\u2026\u2026\u2026\u2026.Input- aaabaa\r\u2026\u2026\u2026\u2026.Output- a,a,a,aa,aa,aaa,a,a,aa"}
{"i": "5190590143660032", "t": "Write a software test case for even numbers ??\r-80 = even number\r2 = even number\retc"}
{"i": "5133138379407360", "t": "Fibonacci asked if you want to query 1-2 ^ 32 any one but the memory can only remember 2 ^ 20 number of how to do O (1) query"}
{"i": "6204431937830912", "t": "on a bench, sitting a number of people, and now come up a person, how to find a seat that is farthest from other people,"}
{"i": "5448623591522304", "t": "0 change to 01,1 change to 10.\rLine 0 is 0, the first line is 01, the second line is 0110, the third line 01101001. . . Keep asking what is the vale at kth row and jth col"}
{"i": "5519438609645568", "t": "Assuming your budget is N, you need to buy a rectangular land. Give a matrix of land prices and ask what is the largest area available for buying land. Land prices must be non-negative.  For example, the budget is 11.1 2 3 1\r\n0 1 4 2\r\n1 9 10 4\r\nThe output should be. \r\n1 2 3\r\n0 1 4Such a matrix, because 1 +2 +3 +0 +1 +4 = 11. And the largest area."}
{"i": "5703070339039232", "t": "The grid is n by m. Each cell contains a unique number on it. Maga is at the left-top and wants to go to right-bottom. But there is a condition. Maga can go through only two way - right and down. And the path of your move is called the nodes you have passed through over them. The path is called the most beautiful if the following condition is satisfied: The sorted of the path has to be lexicographic smallest as possible as. Output the most beautiful path for given grid.\rInput:\rIn the first line you are given two numbers: the dimensions of grid - n and m. The next n lines contains m numbers. Each number is unique.\rOutput:\rOutput the most beautiful path.4 2\r\n3 1Return 1 2 4\rThere are 2 ways to reach at (2,2) cell. The pathes are 4, 3, 1 or 4, 2, 1 respectively. So The most beautiful of them is 4, 2, 1 because if looking the sorted of them it looks like these : 1, 3, 4 and 1, 2, 4 respectively. So 1, 2, 4 is lexicographic smaller than the other. So the ans is 1 2 4."}
{"i": "5479358780145664", "t": "There is a door to enter a restroom. Once you enter the restroom there are N toilets starting from 1, 2,... to N. The toilet which is near to entry door starts from 1 and then it serially goes till N. You can use toilet based on below conditions:\r1. If none of the toilets are occupied then choose one which is nearest to the entry door(which is toilet#1).\r2. If at least one toilet is occupied then choose that unoccupied toilet which is farthest from the occupied ones.\r3. If there are more than one unoccupied toilets whose farthest distance from the occupied ones are same then choose one which is near to the door.\r For example:\rLet's say there are 5 toilets.\r-> First person comes and occupies toilet#1(Based on rule#1).\r-> 2nd person comes and occupies toilet#5(Based on rule#2).\r-> 3rd person comes and occupies toilet#3(Based on rule#2). Note that the farthest distance would have been formed when the new person would have occupied toilet#2(or toilet#4) but with that, the distance between toilet#2(unoccupied) and toilet#1(occupied) would be just 1.\r-> 4th person comes in. Now from toilet#1 to toilet#5, only toilet#2 & toilet#4 are unoccupied. Now there are 2 toilets(#2 & #4) whose farthest distance from unoccupied ones are equal(=1). So rule#3 will apply and toilet#2 will be occupied.\r You have to find the sum of those toilet numbers which are occupied.\r So in above example after 4th person, toilet numbers which are occupied are #1, #5, #3 & #2.\rSo answer would be 1+5+3+2 = 11."}
{"i": "5712654558560256", "t": "Two binary tree, to determine whether the two trees \"similar\", similar refers to the corresponding node in each tree in the left child and right child can be the same or in the opposite order, such as the following two trees, D, E where DE And DE can also be DE and ED, BC is the same, but the parent child relationship must be the same. \rFollowup is if left and right can be the same how to do,A\r\n   / \\\r\n  B C\r\n/ \\\r\nD E\r\n\r\n    A\r\n  / \\\r\nC  B\r\n     / \\\r\n     D E"}
{"i": "5636090139508736", "t": "Find valid bracket from provided string. Only { [ ( are involved as brackets. A valid bracket contains with a enclose companion.\rExample: {} is valid, [[] Invalid\rInput: {[()]}[]() \tResult: Valid\rInput: {}[]()( \tResult: Invalid"}
{"i": "6306297237471232", "t": "windows customer toll free number \u2015 1800-653-1176 \u2015 microsoft windows customer service number"}
{"i": "6342999343628288", "t": "windows technical support number \u2015 1800-653-1176  \u2015 microsoft windows technical support number \u2015 G/Irux"}
{"i": "5762520605261824", "t": "Contact: 1-800-653-1176 Norton\u2122 Activation Customer Care Number"}
{"i": "5772828526772224", "t": "given n player competition, a bool canbeat (int a, int b) can return a whether beat b. Asked to return a sequence, the sequence only requires two adjacent to the front beat behind. Example, 1 beat 2, 2 beat 3, 3 beat 4, 3 beat 1, 4 beat 1 You can return \"1234\", that is, although 3,4 can beat 1, but not adjacent does not matter"}
{"i": "5169296501112832", "t": "Give a two-dimensional array, which represents the value of the jump to the four directions, asked whether from the upper left corner to the lower right corner, follow up the shortest distance"}
{"i": "5686582899113984", "t": "To A and B two list, B is A shuffle obtained, find the mapping used shuffle,\rTo be able to handle duplicate elements.\rFollow-up: Requirements space O (1),"}
{"i": "5025383421313024", "t": "list, push is pushed to the head, pop return each element with the same probability. If you push a sorted list into it, how to pop a sorted list out. Follow-up, asked if pop is from head, and push each element with the same probability in any position, how pop a sorted list out?"}
{"i": "5545371303411712", "t": "Determines whether two strings containing backspace keys are the same."}
{"i": "4600847328608256", "t": "A car can receive two instructions A and R. A moves forward for a second and then doubles in speed. R stopped and then reversed. Given a String composed of AR, find where will the car stop. \rFollow-up, given the location if the final stop, find the instruction string."}
{"i": "5999749583863808", "t": "class EncodingChecker {\r   EncodingChecker (String pattern) {...} // constructor\r   boolean isEncoded (String s) {...} // for any string s, check whether s is encoded from pattern, see below\r}  \r pattern = 'abcabc'\rs = '123123' -> True\r           = 'cbzabc' -> False\r           = 'xyzxyz' -> True\r Second question: If the pattern is not one but one million, how to write isEncoded?"}
{"i": "5926007948181504", "t": "Print words in order which are occurring once in huge document. The RAM size 100MB and file size 10 GB. \rExample: I am good. You are good.\rAnswer : I am You are\rNote : It's not datastructure problem where we can simply make use of LinkedHashMap. The file size is going to be huge."}
{"i": "6350726526664704", "t": "Find the maximum sum of subset of size K in an array"}
{"i": "5041550751956992", "t": "Define a flight class, the flight has four attributes start, end, start time and arrival time,\rThere is also a list of strings, represents there is a crew member on that site. \rgiven a list of flights, along with the list of strings mentioned above, asking if the flight crew availability is available for all flights.\r example: flight 1 {A, B, 3, 10}, flight 2 {A, C, 1, 7}, flight 3 {C, D, 9, 11} crew member list {\"A\", \"A\"} Then return true because flight 3 can take off as flight 1 and flight 2 take off first, then flight 2 descends to bring flight crew A to C.\r If flight 3 is {C, D, 6, 12} then return false because no flight crew member is in C at time 6."}
{"i": "5454247129776128", "t": "Given an array (may have negative num) and an inte\u00adger(may be negative), find the small\u00adest sub\u00adar\u00adray whose sum is >= the given integer.\r int[] nums2 = {5,4,-8,16};\r        int x=10;\rreturn 1, because 16 >= x\r try to solve it in o(n) time\r public static int miniSubArrayLen(int[] nums, int s) {"}
