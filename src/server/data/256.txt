{"i": "5931075461185536", "t": "Given a list of ranges as input ((1,2),(3,4),(3,6),(8,10)),the output would be those ranges that don't overlap.For example, the output could be merging the ranges 1) (1,2),(3,4) \r2) (1,2) (3,6) etc\r The output cannot contain (3,4),(3,6) as 3 is common to both"}
{"i": "5690745465864192", "t": "You need to find if a number can be expressed as sum of two perfect powers. That is, given x find if there exists non negative integers a, b, m, n such that a^m + b^n = x where 1 <= x <= 1000000 and m > 1, n > 1"}
{"i": "6234634354425856", "t": "Given \"n\", generate all valid parenthesis strings of length \"2n\".\r Example: \rGiven n=2\r Output:\r(())\r()()"}
{"i": "5664078013923328", "t": "Write the code in C for the series eg: If a3b2c4 ..is taken then output should be aaabbcccc"}
{"i": "5634028275236864", "t": "explain with example when to use mutex and when to use semaphore"}
{"i": "4881711603122176", "t": "Given a list of unsorted numbers, can you find the numbers that have the smallest absolute difference between them? If there are multiple pairs, find them all.\r  Sample Input \r 12\r-20 -3916237 -357920 -3620601 7374819 -7330761 30 6246457 -6461594 266854 -520 -470 \rSample Output #2\r -520 -470 -20 30\rExplanation\r(-470)-(-520) = 30- (-20) = 50, which is the smallest difference."}
{"i": "6145443452944384", "t": "Given a list of unsorted numbers, can you find the numbers that have the smallest absolute difference between them? If there are multiple pairs, find them all.\r Input Format\rThere will be two lines of input:\r n - the size of the list\rar - the n numbers of the list\rOutput Format\rOutput the pairs of numbers with the smallest difference. If there are multiple pairs, output all of them in ascending order, all on the same line (consecutively) with just a single space between each pair of numbers.\r Constraints\r10 <= n <= 200000\r-(107) <= x <= (107), x \u2208 ar\r Sample Input #1\r 10\r-20 -3916237 -357920 -3620601 7374819 -7330761 30 6246457 -6461594 266854 \rSample Output #1\r -20 30\rExplanation\r30- -20 = 50, which is the smallest difference.\r Sample Input #2\r 12\r-20 -3916237 -357920 -3620601 7374819 -7330761 30 6246457 -6461594 266854 -520 -470 \rSample Output #2\r -520 -470 -20 30\rExplanation\r(-470)-(-520) = 30- (-20) = 50, which is the smallest difference."}
{"i": "5126210803728384", "t": "Find the maximum-sum subarray of an array."}
{"i": "4849778118623232", "t": "Write a function to validate the integrity of a binary search tree."}
{"i": "5678435150069760", "t": "Given the array of digits (0 is also allowed), what is the minimal sum of two integers that are made of the digits contained in the array. \rFor example, array: 1 2 7 8 9. The min sum (129 + 78) should be 207"}
{"i": "5804978308382720", "t": "Having the following interfaceinterface CharStream {\r\n  boolean hasNext();\r\n  char next();\r\n}implement bracket string validation, e.g. \"()(([]))\" is valid and \"(]\" is not.\rRecursive implementation is required and you have the following signature:public boolean isValid(CharStream in) {\r\n    // your code here\r\n}"}
{"i": "5969520652976128", "t": "A subscriber is allowed to make a certain number of telephone calls for a lumpsum charge of Rs.300. Beyond that, he is charged at a certain rate per call. Two subscribers together  make 1400 calls, and were charged Rs.425 and Rs.925 respectively. If a single person had made all of the 1400 calls he would have been charged Rs.1550. How many telephone calls are allowed for the first Rs.300?\roption\ra)300 \rb) 350 \rc) 400\r d) 450"}
{"i": "6317247647711232", "t": "Everyone knows that finding a loop in the single linked list is using runner and follower method. Could you provide mathematical proof of correctness for it and why it works.  I said something like induction hypothesis. Someone help me with the correct answer."}
{"i": "5698637065617408", "t": "Given N,O where N=No. of digits that can be displayed on calculator and O=No. of multiplication to be performed.\rThe numbers used for the multiplication can be from {2,3,...8,9}\r2<=N<=8\r2<=O<=30\rwrite function that will return the largest num that can be obtained after O multiplication.\rEg: N=2, O=3\rthe function should return 98, since the maximum no. generated after 3 multiplications 2*7*7.\rfunction should return -1 for error or invalid."}
{"i": "5745204174782464", "t": "Could you replace the CPU cache with an SRAM? If you can what would be an advantage and disadvantage"}
{"i": "5769711258173440", "t": "Application name : Field Survey\rIt is a web based application where user can create, publish and view online surveys.\r  Specifications:\r Survey Creation: Here user have the facility to create his own survey. He can write multiple questions and each question have multiple check boxes. He can create a Rating on that too.\r  Brand your Survey: In this section , user can design their survey by providing company name,logo, change the color etc.\r Collect response: In this section, user can link the survey to their Facebook,twitter and mails to get response.\r Analyze reports: Here they can view survey reports and can able to export it in multiple formats.\r   Question asked in Neev technologies"}
{"i": "5691869270900736", "t": "Application name : Field Survey\rIt is a web based application where user can create, publish and view online surveys.\r  Specifications:\r Survey Creation: Here user have the facility to create his own survey. He can write multiple questions and each question have multiple check boxes. He can create a Rating on that too.\r  Brand your Survey: In this section , user can design their survey by providing company name,logo, change the color etc.\r Collect response: In this section, user can link the survey to their Facebook,twitter and mails to get response.\r Analyze reports: Here they can view survey reports and can able to export it in multiple formats.\r   Question asked in Neev technologies"}
{"i": "5656914679562240", "t": "List of parent and child of a binary tree are given in the format (parent, child) \u2013> (p1,c1) (p2,c2) etc [ie, binary tree represented by adjacency list]\r How to check \"loop\" exists in this binary tree or not  efficiently."}
{"i": "5715360594526208", "t": "List of parent and child of a binary tree are given in the format (parent, child) \u2013> (p1,c1) (p2,c2) etc [ie, binary tree represented by adjacency list]\r How to check \"loop\" exists in this binary tree or not in efficiently."}
{"i": "6347067874082816", "t": "How will you find if a string is a substring of another string in O(n) complexity. For example, \"tl\" is substring of bottle."}
{"i": "5068766153015296", "t": "You are given pairs of numbers. In a pair the first number is smaller with respect to the second number. Suppose you have two sets (a, b) and (c, d), the second set can follow the first set if b<c.So you can form a long chain in the similar fashion. Find the longest chain which can be formed"}
{"i": "5189810411012096", "t": "If you  have a file that  has 1000 unique elements that are unsorted and you have a memory that can accomodate only 200 elements, how will you sort. Hint was to use bitwise operator >"}
{"i": "5650250232496128", "t": "Following code is used by ONE producer and ONE consumer\r public void Produce(queue<int> queue, ManualResetEvent mre){\r\twhile(true){\r\t\tlock(queue){\r\t\t\tqueue.enque(3);\r\t\t}\r\t\tmre.set();\r\t}\r}\r public void Consume(queue<int> queue, ManualResetEvent mre){\r\twhile (true){\r\t\tmre.Reset();\r\t\tif (queue.Count == 0)\r\t\t\tmre.WaitOne();\r\t\tlock(Queue){\r\t\t\tvar x = queue.Dequeue();\r\t\t}\r\t}\r}\r the last code line causes error, queue is empty- \r\t\"var x = queue.Dequeue();\"\r they asked me to suggest a fix for that."}
{"i": "5102411047763968", "t": "I have an unordered array of nodes. Each node has an id and parent_id. I want to pretty print out the nodes in an expanded format.\r Assumptions:\rThere is only one root node in the array.\rDon't worry about the white space.\rNode has a toString() method.\rAll the ids are arbitrary and unique.\rThis is a tree and not a graph.\r For example:\r Sample input:\r[{parentId: F, id:G}, {parentId: E, id: F}, {parentId: A, id: B}...]A (parent_id = null)\r\n    B (parent_id = A)\r\n        C (parent_id = B)\r\n            D (parent_id = C)\r\n        H (parent_id = B)\r\n    E (parent_id = A)\r\n        F (parent_id = E)\r\n            G (parent_id = F)Sample output:\rABCDHEFG\r Please write a more optimized solution and tell me the complexity."}
{"i": "None", "t": "I have an unordered array of nodes. Each node has an id and parent_id. I want to pretty print out the nodes in an expanded format.\r Assumptions:\rThere is only one root node in the array.\rDon't worry about the white space.\rNode has a toString() method.\rAll the ids are arbitrary and unique.\rThis is a tree and not a graph.\r For example:\r Sample input:\r[{parentId: F, id:G}, {parentId: E, id: F}, {parentId: A, id: B}...]\r A (parent_id = null)\r    B (parent_id = A)\r        C (parent_id = B)\r            D (parent_id = C)\r        H (parent_id = B)\r    E (parent_id = A)\r        F (parent_id = E)\r            G (parent_id = F)\r Sample output:\rABCDHEFG\r Please tell me the naive solution and its complexity.\r Please write a more optimized solution and tell me the complexity."}
{"i": "5324731775451136", "t": "Suppose we have two functions void g() and void h(). The function h() has been called somewhere in the body of g(). Now using a debugger, we find that that the program crashes as soon as the return statement in h() ( at the end of function h() ) is executed. There is nothing syntactically wrong with the program. How will you debug the code ?"}
{"i": "6227714491023360", "t": "suppose a string is consists of a, b, and c\rNow given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c.\re.g. given N=5, string bacca is invalid since the first 3 letters have consecutive a,b,c. and bbbbb is valid."}
{"i": "5724458140565504", "t": "Is there a way to find nth element in a linked list in O(1) ??"}
{"i": "6257709468876800", "t": "Starting and ending co-ordinates of one-dimensional line segments are given. Find the co-ordinates of longest line segment that can be formed from these segments. Write two functions addSegment() and findMaxSegment(). He asked  to write a perfect C code."}
{"i": "6411159859101696", "t": "Suppose there were n numbers in an array S1, S2, S3, S4.......SN rearrange them in a such a way that they satisfy bellow property.\r                                           S1<S2>S3<S4>......"}
