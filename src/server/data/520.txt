{"i": "2234669", "t": "Q)OK. Do you know any design patterns? If tell me about any one pattern?\rAns: 3 patterns in general: Creational, Structural, Behavioral\rQ)what is behavioral pattern? give me an example.\rA) I answered different objects working together towards a solution is behavioral design pattern. (Is it right? I think so)\rQ) Can you give me an example\rA) Model View Controller.\rThen he gruelled me on MVC. I don't want to print all that here. So be aware before you answer which is actually difficult in an actual interview !"}
{"i": "2279665", "t": "Q)OK. So which end do you want to work? Front end or back end?\rAns: I prefer server side (back end)."}
{"i": "2267664", "t": "Why do you want to work for Amazon?\rI answered I am interested in Web application development and Amazon is a great place to work with space for innovative thinking. What do you want to say? you think yourself."}
{"i": "2256663", "t": "After first phone interview, I observed that Amazon do not want people who just knows a book by its cover they are looking for people who knows each and every letter in the book !\rSo prepare well , don't hurry if you get an interview call, even if you are good, you may not do well unless you are prepared very well. Unfortunately, I am just one of those :(. All right see below the questions asked."}
{"i": "2231666", "t": "I would say Adobe hiring people are DUMB. They have pre determined soln in mind and they only expect same soln .. . They dont appreciate different thought level with same complexity soln.\r    So they want Soln learners and not Soln explorers and pattern finders."}
{"i": "2251670", "t": "Given a array 123456789\r    He would you rotate it like 7891234567\r    Do reverse string complete and then twice revert at pivot. O(N).\r    I gave another O(N) soln which is tricky .. . but interviewer (hiring manager) was like ek or O(N) soln hai wahe do .. ."}
{"i": "2250671", "t": "There are N nuts and N bolts, all unique pairs od Nut and Bolt\r    You cant compare Nut with Nut.\r    You cant compare Bolt with Bolt\r    You CAN compare Nut with Bolt\r    Now how would you figure out matching pairs of nut and bolt from the given N nut and Bolt.\r    The basic soln is O(N^2). Give O(NlogN soln)"}
{"i": "2244669", "t": "You are given four no 1,2,3,4. The score to start is zero.\r    There are two people. Each one has to choose one of 1,2,3,4 alternatively and add to score. The person who reaches the score value N (variable given as input) 1st will won.\r    What will be your strategy."}
{"i": "2247671", "t": "Puzzle, A square Island surrounded by bigger square, and in between there is infinite depth water. The distance between them is L. The wooden blocks of L are given. \rThe L length block can't be placed in between to cross it, as it will fall in water (just fitting).\r How would you cross using these L length blocks."}
{"i": "2230672", "t": "Initialization list in C++ constructor"}
{"i": "2225673", "t": "What is tiny URL. How would you implement it. I told hashing and defended it with reasons. But interviewer was not happy .. . I could not understand what he really expects .. ."}
{"i": "2227668", "t": "Implement Mutex."}
{"i": "2263668", "t": "Implement fibannoci func for nth number. I told never use recursion in production code. Stack overflow can corrupt your system."}
{"i": "2240665", "t": "I am in a 100-story building. I have with me two glass balls. I know that if I throw the ball out of the window, it will not break if the floor number is less than X, and it will always breaks if the floor number is equal to or greater than X. Assuming that I can reuse the balls which don't break, find X in the minimum number of throws."}
{"i": "2228670", "t": "Effect of calling virtual function in C++ constructor"}
{"i": "2268666", "t": "1) Find all permutations of a string.\r2) Improve it so that the permutations are not repeated, Eg=> string is \"aaaa\"\rAnswer should be just aaaa once not 4! times."}
{"i": "2216670", "t": "Give a practical scenario and code scenario (please not Producer-Consumer) where Deadlock occurs. Full detailed discussion on deadlocks only."}
{"i": "2229676", "t": "What data structure to use to store all names in Sunnyvale - Hash table or Tree? When to use Hash table and when to use tree."}
{"i": "2241669", "t": "Given an array , delete all duplicates in it."}
{"i": "2271670", "t": "Two unsorted linked lists are given.\rFind the union.\rEg: a) 1->9->9->5->7->8->9->7\r    b) 44->33->1->9->55\r Result:\r1->9->5->7->8->44->33->55\rThe elements in the result can be in any order"}
{"i": "2237666", "t": "Given a very very long linked list with 'n' nodes.\rAlso given a positive integer 't'>1. \rDelete every 't'th node. In the resultant linked list, again delete 't'th node. Repeat this till only t-1 nodes remains.\rFind the node.\r Eg:\rLinked list : 10->20->30->40->50->60->70\rn = 7\rt = 3\rPhase 1:\r10->20->40->50->70\rPhase-2:\r10->20->50->70\rPhase-3:\r10->20->70\rPhase-4:\r10->20\rSimple solution with many traversals is obvious.\rIs there a solution with one traversal or O(n)?\r  b) Similar for circular linked list.\rKeep deleting 't'th node till 1 node remains.\rNote here not till 't-1' nodes but till 1 node remains."}
{"i": "2245664", "t": "sort an array of 0,1 and 2."}
{"i": "2238665", "t": "Given two arrays : arrivals and departrues array\rarrivals[i] -- arrival time of flight i\rdepartures[i] -- departure time of flight i\rwhen a flight arrives at the airport, you have to provide a stair case to the flight\rand when it leaves you can take it back.\r find the min number of stair cases required."}
{"i": "2241667", "t": "Given a Hash -my %hash = (\r\n                ABC => [123,456,789],\r\n                PQR => 345,\r\n                XYZ => 567,\r\n                LMN => {\r\n                                abc => 0,\r\n                                pqr => 1,\r\n                                lmn => 2,\r\n                                xyz => {\r\n                                                A => 0,\r\n                                                B => 1,\r\n                                                c => [ {1 => 'ONE', 2 => 'TWO',},\r\n                                                       {ONE => 1, TWO => 2,},\r\n                                                       {Number => 'Decimals'},\r\n                                                       {Words => 'Alphas'},\r\n                                                       'Sample'\r\n                                                ]\r\n                                        }\r\n                        },\r\n                OPQ => 'WORD'\r\n\r\n\r\n\r\n);Write a generic function to find value of key input by user.\r e.g. In above example if key input by user is 'Words' then value found by search function should be 'Alphas'\r Write Search($hashRef,$key) function where, hash could be of any type/level such as -\rHash of Hash of Hash of Hash\rHash of Array of Hash.\retc. etc."}
{"i": "2266663", "t": "Integer has been represented in linked list. Eg. 7541 has been represented as 7->5->4->1 with 4 nodes each having a digit. Given 2 such linked lists, you need to compute the sum of them."}
{"i": "2264664", "t": "There are n petrol bunks arranged in circle. Each bunk is separated from the rest by a certain distance. You choose some mode of travel which needs 1litre of petrol to cover 1km distance. You can't infinitely draw any amount of petrol from each bunk as each bunk has some limited petrol only. But you know that the sum of litres of petrol in all the bunks is equal to the distance to be covered.\rie let P1, P2, ... Pn be n bunks arranged circularly. d1 is distance between p1 and p2, d2 is distance between p2 and p3. dn is distance between pn and p1.Now find out the bunk from where the travel can be started such that your mode of travel never runs out of fuel."}
{"i": "2209669", "t": "Difference between AVL trees and Red black trees."}
{"i": "2219668", "t": "Find the intersection of two linked lists.\rOptimum space and time"}
{"i": "2225670", "t": "Given a directory path find the most optimum traversal.\reg: \\a\\c\\..\\d => \\a\\d\r    \\a\\b\\c\\..\\..\\d\\.. => \\a\retc"}
{"i": "2253666", "t": "Merging 2 binary trees."}
