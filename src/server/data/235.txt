{"i": "5198021759336448", "t": "Give 2 arrays of size 7 and 3 which are sorted such that the last 3 blocks in first array are empty, merge the arrays in a sorted manner in the most efficient way.\rE.g:- \ra[7] = [4, 10, 11, 20__, __, __]\rb[3] = [1,3,7]"}
{"i": "6460589673021440", "t": "Was asked to explain Current QA and roles in detail. How was automation implemented and basis of the same?"}
{"i": "5093364143751168", "t": "Question 2) Implement insert and delete in a tri-nary tree. A tri-nary tree is much like a binary\r tree but with three child nodes for each parent instead of two -- with the left node being values \r less than the parent, the right node values greater than the parent, and the middle nodes values \r equal to the parent. \r   For example, suppose I added the following nodes to the tree in this order: 5, 4, 9, 5, 7, 2, 2. \r The resulting tree would look like this: \r    5 \r  / | \\ \r  4 5 9 \r  / / \r  2 7 \r  | \r  2"}
{"i": "5164438336307200", "t": "Design a download manager. The download manager would be shipped with a browser. Detailed design of components and interaction between them. \r Follow up question - What features would you add to the  download manager so that it is more marketable than others."}
{"i": "5755683534274560", "t": "Write a function in C to create a new BST which is the mirror image of a given tree."}
{"i": "5089834754375680", "t": "Consider the statement \rresult = a ? b : c;\rImplement the above statement without using any conditional statements."}
{"i": "5652784707796992", "t": "Write a multi threaded C code with one thread printing all even numbers and the other all odd numbers. The output should always be in sequence \rie. 0,1,2,3,4....etc"}
{"i": "5672747715788800", "t": "Write a piece of code to find out if the system is x86 architecure of Sparc"}
{"i": "5634470967246848", "t": "Find a shortest path in a N*N matrix maze from (0,0) to (N,N), assume 1 is passable, 0 is not, 3 is destination, use memorization to cache the result. Here is my code. I am not sure if I am caching it right.public static class MazeResult {\r\n\t\tpublic boolean solved;\r\n\t\tpublic List<String> res = new ArrayList<String>();\r\n\t\tpublic int steps = Integer.MAX_VALUE;\r\n\t\tpublic MazeResult(boolean isSolved) {\r\n\t\t\tsolved = isSolved;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic Map<String, MazeResult> cache = new HashMap<String, MazeResult>();\r\n\tstatic MazeResult solveMaze(int[][] m, int r, int c, List<String> path, HashSet<String> visited) {\r\n\t\tif (r < 0 || r >= m.length || c < 0 || c >= m[0].length)\r\n\t\t\treturn new MazeResult(false);\r\n\r\n\t\tString cell = r + \"\" + c + \"\";\r\n\t\tif (m[r][c]==0 || visited.contains(cell))\r\n\t\t\treturn new MazeResult(false);\r\n\t\tif (m[r][c] == 3) {\r\n\t\t\tMazeResult ret = new MazeResult(true);\r\n\t\t\tret.res = new ArrayList<String>(path);\r\n\t\t\tret.res.add(cell);\r\n\t\t\tret.steps = path.size() + 1;\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t\tif (cache.containsKey(cell))\r\n\t\t\treturn cache.get(cell);\r\n\r\n\t\tpath.add(cell);\r\n\t\tvisited.add(cell);\r\n\t\tMazeResult ret = new MazeResult(false), temp = new MazeResult(false);\r\n\r\n\t\ttemp = solveMaze(m, r, c+1, path, visited);\r\n\t\tcompareResult(temp, ret);\r\n\r\n\t\ttemp = solveMaze(m, r, c-1, path, visited);\r\n\t\tcompareResult(temp, ret);\r\n\r\n\t\ttemp = solveMaze(m, r+1, c, path, visited);\r\n\t\tcompareResult(temp, ret);\r\n\r\n\t\ttemp = solveMaze(m, r-1, c, path, visited);\r\n\t\tcompareResult(temp, ret);\r\n\r\n\t\tpath.remove(path.size()-1);\r\n\t\tvisited.remove(cell);\r\n\t\t\r\n\t\tcache.put(cell, ret);\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tprivate static void compareResult(MazeResult temp, MazeResult ret) {\r\n\t\tif (temp.solved) {\r\n\t\t\tif (temp.steps < ret.steps) {\r\n\t\t\t\tret.res = temp.res;\r\n\t\t\t\tret.steps = temp.steps;\r\n\t\t\t}\r\n\t\t\tret.solved = true;\r\n\t\t}\r\n\t}"}
{"i": "5153954321137664", "t": "Flatten an iterator of iterators in Java. If the input is [ [1,2], [3,[4,5]], 6], it should return [1,2,3,4,5,6]. Implement hasNext() and next()."}
{"i": "5943729928011776", "t": "Suppose you get number of unique users every second from bing\r\tFor eg, 2,4,5,1,2,etc\r\tYou need to write a web service method , such that it takes the input n, which return lowest n unique number from the list of unique numbers. For eg, if n is 3 then you need to return 2,1,2"}
{"i": "5649647234187264", "t": "A draw method is given, write a function to draw a chess board. The Draw method, draws a square and  has parameters row position, column position and color."}
{"i": "4845432031150080", "t": "Given a linked list like a1-a2-a3-a4-b1-b2-b3-b4. Convert it into a1-b1-a2-b2-a3-b3-a4-b4."}
{"i": "6007303497056256", "t": "Given a m*n matrix representing a maze wherein some of the positions are not reachable, find all paths from (0,0) to (m,n) using dynamic programming"}
{"i": "5126907007860736", "t": "Given array of N integers ranging from 0 to N-1. Output maximum repeating integer. Use only O(1) memory."}
{"i": "6241652616200192", "t": "Given a Binary Tree (balanced or not) write a method that transforms the tree in a degenerate tree (basically a data structure like a sorted linked list where each node has the left child null) and returns the new root. This must be made in place, no external memory usage is allowed."}
{"i": "6332750214725632", "t": "Given a set of intervals, find the interval which has the maximum number of intersections (not the length of a particular intersection). So if input (1,6) (2,3) (4,11), (1,6) should be returned. Some suggest to use Interval Tree to get this done in O(logn), but I did not understand how to construct and use the Interval Tree after reading its wiki page. Is there any other way to do it? If Interval tree is the only option, please educate me how to construct/use one. Thanks."}
{"i": "6210476388122624", "t": "(17)  A museum is selling tickets to a fundraiser. As people place orders, their customer IDs are appended to a linked list. Due to an error, too many tickets have been sold and the unfortunate customers must now be notified that they cannot purchase a ticket after all. Given the list and the number of customers to notify (k), return the node in the list for the first customer that needs to be notified. An optimal solution will not use any additional data structures. You may assume k is less than the number of nodes in the list. You may use the JDK or the standard template library. Your solution will be evaluated on correctness, runtime complexity (big-O), and adherence to coding best practices. A complete answer will include the following:\rDocument your assumptions\rExplain your approach and how you intend to solve the problem\rProvide code comments where applicable\rExplain the big-O run time complexity of your solution. Justify your answer.\rIdentify any additional data structures you used and justify why you used them.\rOnly provide your best answer to each part of the question.\rExample:\rInput: myList: 1 -> 8 -> 4 -> 2 -> 7 -> 13 -> 3 k: 2\rOutput: 13 -> 3\r Use one of the following skeletons for your solutions:\rJava:\rpublic classCustomerTracking\r { publicstatic class ListNode\r { publicint customerId;\r publicListNode next; } \rpublic staticListNode customersToNotify (ListNode myList, int k) { } }"}
{"i": "5641828221059072", "t": "/**\r * Returns a^b, as the standard mathematical exponentiation function\r */\rpublic double pow(double a, int b) {}\r Interviewer looking for log(n) solution, right on first attempt."}
{"i": "5139875124740096", "t": "/** \r * Given a nested list of integers, returns the sum of all integers in the list weighted by their depth\r * For example, given the list {{1,1},2,{1,1}} the function should return 10 (four 1's at depth 2, one 2 at depth 1)\r * Given the list {1,{4,{6}}} the function should return 27 (one 1 at depth 1, one 4 at depth 2, one 6 at depth2)\r */\r/**\r * This is the interface that represents nested lists.\r * You should not implement it, or speculate about its implementation.\r */\rpublic interface NestedInteger \r{\r    // Returns true if this NestedInteger holds a single integer, rather than a nested list\r    public boolean isInteger();\r     // Returns the single integer that this NestedInteger holds, if it holds a single integer\r    // Returns null if this NestedInteger holds a nested list\r    public Integer getInteger();\r     // Returns the nested list that this NestedInteger holds, if it holds a nested list\r    // Returns null if this NestedInteger holds a single integer\r    public List<NestedInteger> getList();\r}"}
{"i": "6249258466410496", "t": "In Amazon's interview, Round 2 they asked question:\r Write a program to print inorder traversal of two trees. \r Both values must be printed alternatively.\r e.g. if inorder traversal of tree 1 is 10, 15, 20 and tree 2 is 100, 150, 200 then it should print\r10, 100, 15, 150, 20, 200.\r I tried printing it recursively by calling 2 functions recursively (f1 calls f2, then f2 calls f1 and so on).\r I don't know where my approach is going wrong? I know there are other ways to do it as well but in this approach what is the mistake?public class HelloWorld{\r\n\r\n //this is the Node used in the tree\r\n    static class Node{\r\n        private int data;\r\n        private Node left;\r\n        private Node right;\r\n        public Node(int data){\r\n            this.data = data;\r\n            left = null;\r\n            right = null;\r\n        }\r\n        public void setLeft(Node left){\r\n            this.left = left;\r\n        }\r\n        public void setRight(Node right){\r\n            this.right = right;\r\n        }\r\n        public Node getLeft(){\r\n            return this.left;\r\n        }        \r\n        public Node getRight(){\r\n            return this.right;\r\n        }\r\n        public int getData(){\r\n            return this.data;\r\n        }\r\n        public boolean equals(Node n){\r\n            if(this.data ==(int) n.getData()) return true;\r\n            else\r\n                return false;\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args){\r\n        HelloWorld bts = new HelloWorld();\r\n        bts.run();\r\n    }\r\n    //execute the test case\r\n    public void run(){\r\n        Node root = new Node(10);\r\n        insert(root,new Node(20));\r\n        insert(root,new Node(50));\r\n        insert(root,new Node(40));\r\n        insert(root,new Node(15));\r\n        \r\n        \r\n        Node node2 = new Node(100);\r\n        insert(node2,new Node(200));\r\n        insert(node2,new Node(500));\r\n        insert(node2,new Node(400));\r\n        insert(node2,new Node(150));\r\n        \r\n        \r\n        //inOrderTraverse(node2);\r\n        \r\n        inOrderTraverse1(root, node2);\r\n    }\r\n     \r\n    // insert a node to the binary search tree\r\n    public void insert(Node root, Node n){\r\n        if(root == null|| n == null) return;\r\n         \r\n        if(root.getData() > n.getData()){\r\n            if(root.getLeft() == null){\r\n                root.setLeft(n);\r\n            }else{\r\n                insert(root.getLeft(),n);\r\n            }\r\n \r\n        }else if(root.getData() < n.getData()){\r\n            if(root.getRight() == null){\r\n                root.setRight(n);\r\n            }else{\r\n                insert(root.getRight(),n);\r\n            }             \r\n        }\r\n    }\r\n    \r\n    public void inOrderTraverse(Node node){\r\n        if(node != null){\r\n            if(node.getLeft() != null)\r\n            inOrderTraverse(node.getLeft());\r\n            System.out.print(\"  \"+node.getData());\r\n            if(node.getRight() != null)\r\n            inOrderTraverse(node.getRight());\r\n        }\r\n         \r\n    }\r\n    \r\n    //in-order Traversal\r\n    public void inOrderTraverse1(Node node1, Node node2){\r\n        if(node2 != null){\r\n            inOrderTraverse2(node1, node2.getLeft());\r\n            System.out.println(\"  \"+node2.getData());\r\n            inOrderTraverse2(node1, node2.getRight());\r\n        }\r\n    }\r\n    \r\n    public void inOrderTraverse2(Node node1, Node node2){\r\n        if(node1 != null ){\r\n            inOrderTraverse1(node1.getLeft(), node2);\r\n            System.out.println(\"  \"+node1.getData());\r\n            inOrderTraverse1(node1.getRight(), node2);\r\n        }\r\n    }"}
{"i": "6083321062752256", "t": "They have given some flowchat questions in thought works ... how to solve these questions can anybody explain for all the questions....?\r  http://placement.freshersworld.com/placement-papers/ThoughtWorks/Placement-Paper-Whole-Testpaper-29732"}
{"i": "5009820293791744", "t": "Make a Java/C program that takes n as input and gives you  all sequence of n by using recurssion. For example if n=3, output will be:\r111\r112\r113\r121\r.........\r........\r331\r332\r333."}
{"i": "5729940548878336", "t": "Idea student"}
{"i": "5138995193315328", "t": "I idea student for facebook."}
{"i": "5349248069533696", "t": "5ruppes,1rupees,50paisa,25paisa,10paisa,3paisa,2paisa and 1paisa?How many different sums can be formed with the given coins??"}
{"i": "6291670597369856", "t": "Given an array, print all the pairs that sum to a particular value. You are not given the value, find all possible values and print pairs for them"}
{"i": "5122011550449664", "t": "For an N-ary Tree find the nearest common ancestor.\rGiven: rootid and a function which finds and returns the immediate parent of a node."}
{"i": "4825980929572864", "t": "What happens when you type a link in any browser and click GO button? List all steps. \rWhat should be the issue if the browser app build that i have today is 1 second 250 milliseconds slower than yesterday's build? ASSUME: WiFi is perfect, loading 10 webpages from a controlled server - hence there are no infrastructure or server side delays causing this. \rWhat would you think might be the issue? How would you debug?"}
{"i": "5157655484039168", "t": "You are given a string FOOFIGHTERS. You have to come up with an algorithm that will compress this string.\r You also have to make sure that you are not using extra memory. For example: FOOFIGHTERS will be compressed as FO2FIGHTERS. You should not use another array or bitfield to keep a frequency count for the individual letters."}
