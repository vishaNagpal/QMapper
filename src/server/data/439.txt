{"i": "9670124", "t": "expression tree design."}
{"i": "9670123", "t": "given two sorted arrays. A and B. there are empty spaces in A which is same size of B. Merge them.\rWrite code."}
{"i": "9674822", "t": "1. Write a function to print a multiplication table.\r Ex.\r      1    2    3\r1    1    2    3\r2    2    4    6\r3    3    6    9\r you should maintain the alignment for any larger value"}
{"i": "9626628", "t": "Liar, Liar\rAs a newbie on a particular internet discussion board, you notice a distinct trend among its veteran members; everyone seems to be either unfailingly honest or compulsively deceptive. You decide to try to identify the members of the two groups, starting with the assumption that every senior member either never lies or never tells the truth. You compile as much data as possible, asking each person for a list of which people are liars. Since the people you are asking have been around on the board for a long time, you may assume that they have perfect knowledge of who is trustworthy and who is not. Each person will respond with a list of people that they accuse of being liars. Everyone on the board can see that you are a tremendous n00b, so they will grudgingly give you only partial lists of who the liars are. Of course these lists are not to be taken at face value because of all the lying going on.\r You must write a program to determine, given all the information you've collected from the discussion board members, which members have the same attitude toward telling the truth. It's a pretty popular discussion board, so your program will need to be able to process a large amount of data quickly and efficiently.\r  Input Specifications\rYour program must take a single command line argument; the name of a file. It must then open the file and read out the input data. The data begins with the number of veteran members n followed by a newline. It continues with n chunks of information, each defining the accusations made by a single member. Each chunk is formatted as follows:\r <accuser name> <m>\r followed by m lines each containing the name of one member that the accuser says is a liar. accuser name and m are separated by some number of tabs and spaces. m will always be in [0, n]. All member names contain only alphabetic characters and are unique and case-sensitive.\r Example input file:\r 5\rStephen   1\rTommaso\rTommaso   1\rGalileo\rIsaac     1\rTommaso\rGalileo   1\rTommaso\rGeorge    2\rIsaac\rStephen\r    Output Specifications\rYour output must consist of two numbers separated by a single space and followed by a newline, printed to standard out. The first number is the size of the larger group between the liars and the non-liars. The second number is the size of the smaller group. You are guaranteed that exactly one correct solution exists for all test data.\r Example output:\r3 2"}
{"i": "9669758", "t": "To safeguard against the dreaded phenomenon of wall posting while drunk, flipkart is implementing a feature that detects when post content is too garbled to have been done while sober and informs the user that they need to take an online breathalyzer test before being allowed to post.\r Unfortunately, there is far too much content for a given set of persons to evaluate by hand. Fortunately, you are a programmer of some repute and can write a program that processes and evaluates wall posts. You realize that such a program would be of great use to society and intend to resolve the problem once and for all. The program you write must compute a score for a body of text, returning this score upon completion.\r Your program will be given a list of accepted words and run on one wall post at a time. For each word W in the post, you must find word W' from the list of accepted words such that the number of changes from W to W' is minimized. It is possible that W is already W' and thus the number of changes necessary is zero. A change is defined as replacing a single letter with another letter, adding a letter in any position, or removing a letter from any position. The total score for the wall post is the minimum number of changes necessary to make all words in the post acceptable.\r Input Specification\rYour program must take a single string argument, representing the file name containing the wall post to analyze. In addition, your program must open up and read the accepted word list from the following static path location:\r /var/tmp/twl06.txt\r For testing purposes, you may download and examine the accepted word list here. When submitting your code, you do not need to include this file, as it is already present on the machine.\r The input file consists entirely of lower case letters and space characters. You are guaranteed that the input file will start with a lower case letter, and that all words are separated by at least one space character. The file may or may not end with a new line character.\r Example input file:\r tihs sententcnes iss nout varrry goud\r You are guaranteed that your program will run against well formed input files and that the accepted word list is identical to the one provided for testing.\r Output Specification\rYour program must print out the minimum number of changes necessary to turn all words in the input wall post into accepted words as defined by the word list file. Words may not be joined together, or separated into multiple words. A change in a word is defined as one of the following:\r 1. Replacing any single letter with another letter.\r2. Adding a single letter in any position.\r3. Removing any single letter.\r This score must be printed out as an integer and followed by a single new line.\r Example Output (newline after number):"}
{"i": "9671736", "t": "The secretary problem is an optimal stopping problem that has been studied extensively in the fields of applied probability, statistics, and decision theory. It is also known as the marriage problem, the sultan's dowry problem, the fussy suitor problem, the googol game, and the best choice problem. The solution is sometimes called the 37% rule. The problem can be stated as follows:\r    1. There is a single secretarial position to fill.\r   2. There are n applicants for the position, and the value of n is known.\r   3. The applicants can be ranked from best to worst with no ties.\r   4. The applicants are interviewed sequentially in a random order, with each order being equally likely.\r   5. After each interview, the applicant is accepted or rejected.\r   6. The decision to accept or reject an applicant can be based only on the relative ranks of the applicants interviewed so far.\r   7. Rejected applicants cannot be recalled.\r   8. The objective is to select the best applicant. The payoff is 1 for the best applicant and zero otherwise.\r Terminology: A candidate is an applicant who, when interviewed, is better than all the applicants interviewed previously. Skip is used to mean \"interview and reject\".\r Clearly, since the objective in the problem is to select the single best applicant, only candidates will be considered for acceptance. One reason why the secretary problem has received so much attention is that the optimal policy for the problem (the stopping rule) has a surprising feature. Specifically, for large n the optimal policy is to interview and reject the first n/e applicants (where e is the base of the natural logarithm) and then to accept the next who is better than these interviewed candidates. As n gets larger, the probability of selecting the best applicant from the pool goes to 1/e, which is around 37%. Whether one is searching through 100 or 100,000,000 applicants, the optimal policy will select the single best one about 37% of the time."}
{"i": "9613747", "t": "Insert a node into a circular linked list.\rThis CLL is sorted. So, if the CLL is like 1->2->4->6->1\ryou will be asked to input a node 3 and it must come between 2 and 4.\rWrite a program for this in C++ or JAVA"}
{"i": "9660858", "t": "An application uses its own server and some external third party server. Suppose if external or third party server is unavailable, how will you test application?"}
{"i": "9553350", "t": "How to know the stack size in C??  I am using Windows 32 bit and VC++ compiler..."}
{"i": "9660828", "t": "how do you test the numbers present in a linked list is palindrome or not ? (list is a singly linked list)"}
{"i": "9604855", "t": "how do you test given BST is a valid BST?"}
{"i": "9553305", "t": "given a bst and a value x.find pair of nodes in the tree that sum upto x"}
{"i": "9584379", "t": "Given 3 arrays A,B,C find three indices i,j,k such that the value of I = max((a-b),(b-c),(c-a)) is minimized"}
{"i": "9626448", "t": "Sorted Array Merge Problem: Design an algorithm to merge two sorted positive integer arrays A and B. Size of array A is n and size of array B is m. Array A has m empty blocks(-1) at random places. Merge array B into A such that array A is sorted and does not have empty blocks."}
{"i": "9532308", "t": "3)Given a file contiaining number of words , with one word per line .Print a string together that are anagrams"}
{"i": "9652092", "t": "1)Given a large file containing 10 bit integers,and a limited memory , sort the entire file and store back\rto file.\rConstraints : You cannot read entire file in main memory at a time as meory is limited (small)\rFollow up questions: Quick sort working,complexity best,avg,worst\rHint :Use property of 10 bit integer"}
{"i": "9655128", "t": "You have a 1000 story building and three eggs.  These are especially strong eggs.  There is some floor below which the egg will not break if dropped.  What is the worst case \rupper bound on the number of drops you must make to determine this floor?"}
{"i": "9655122", "t": "There is a straight roads with 'n' number of milestones. You are given an array with the distance between all the pairs of milestones in some random order. Find the position of milestones.\rExample:\rConsider a road with 4 milestones(a,b,c,d) :\ra <--- 3Km --->b<--- 5Km --->c<--- 2Km --->d\rDistance between a and b = 3\rDistance between a and c = 8\rDistance between a and d = 10\rDistance between b and c = 5\rDistance between b and d = 7\rDistance between c and d = 2\rAll the above values are given in a random order say 7, 10, 5, 2, 8, 3.\rThe output must be 3,5,2 or 2,5,3"}
{"i": "9652051", "t": "What is the most efficient way, memory-wise, to store 1 million phone numbers? Apparently this is an interview question at Google, although this seems like its a bit too easy."}
{"i": "9655082", "t": "Given k sorted streams where each stream could possibly be infinite in length, describe an efficient algorithm to merge the k streams into a new stream (also in sorted order)."}
{"i": "9655081", "t": "Question #2) Given a set of KEY->VALUE pairs such that each KEY is unique, describe a method of storing these pairs on disk, and a method for accessing the corresponding VALUE given a KEY. Assume that RAM is fixed at 1gb and the set of pairs requires 40gb."}
{"i": "9651955", "t": "Write a C++ program that would find and print the first longest ascending or descending contiguous subsequence for a vector of integers. For example, given a vector with\r4, 2, 1, 2, 3, 4, 3, 5, 1, 2, 4, 6, 5\rthe program would find the underlined subsequence and print it."}
{"i": "9647964", "t": "how to generate permutation of a string with duplicate characters without caching previous generated string in memory.\r eg. \rabc -> {abc, acb, bac, bca, cab, cba}\rall -> {all, lal, lla}"}
{"i": "9653918", "t": "Q1. I have four operations \rSet(i)         sets the ith bit \rUnset(j)   unsets the jth bit \rSet(i,j)       sets the bits b/w i and j \rUnset(i,j) unsets the bits b/w i and j \rDesign a data structure for this problem with minimum time and space complexity."}
{"i": "9634956", "t": "Given an integer array.  \re.g. 1,2,3,4,5 \rCompute array containing elements \r120,60,40,30,24  (2*3*4*5,1*3*4*5, 1*2*4*5, 1*2*3*5, 1*2*3*4) \rSo I gave simple solution using division operator. He said that what if there is a 0 as an element and\rwhat if there are two zeroes. \rThen he asked me to do it without using division operator. So after little fumbling I did it in O(n) \rextra space and O(n) time. \rThen he asked me to do it in O(1) space and O(n) time."}
{"i": "9634946", "t": "write a function that takes two numbers a and b and returns a.b eg: a=10 and b=12 output will be 10.12"}
{"i": "9634795", "t": "To safeguard against the dreaded phenomenon of wall posting while drunk, flipkart is implementing a feature that detects when post content is too garbled to have been done while sober and informs the user that they need to take an online breathalyzer test before being allowed to post.\r Unfortunately, there is far too much content for a given set of persons to evaluate by hand. Fortunately, you are a programmer of some repute and can write a program that processes and evaluates wall posts. You realize that such a program would be of great use to society and intend to resolve the problem once and for all. The program you write must compute a score for a body of text, returning this score upon completion.\r Your program will be given a list of accepted words and run on one wall post at a time. For each word W in the post, you must find word W' from the list of accepted words such that the number of changes from W to W' is minimized. It is possible that W is already W' and thus the number of changes necessary is zero. A change is defined as replacing a single letter with another letter, adding a letter in any position, or removing a letter from any position. The total score for the wall post is the minimum number of changes necessary to make all words in the post acceptable.\r  Input Specification\rYour program must take a single string argument, representing the file name containing the wall post to analyze. In addition, your program must open up and read the accepted word list from the following static path location:\r /var/tmp/twl06.txt\r For testing purposes, you may download and examine the accepted word list here. When submitting your code, you do not need to include this file, as it is already present on the machine.\r The input file consists entirely of lower case letters and space characters. You are guaranteed that the input file will start with a lower case letter, and that all words are separated by at least one space character. The file may or may not end with a new line character.\r Example input file:\r tihs sententcnes iss nout varrry goud\r You are guaranteed that your program will run against well formed input files and that the accepted word list is identical to the one provided for testing.\r  Output Specification\rYour program must print out the minimum number of changes necessary to turn all words in the input wall post into accepted words as defined by the word list file. Words may not be joined together, or separated into multiple words. A change in a word is defined as one of the following:\r    1. Replacing any single letter with another letter.\r   2. Adding a single letter in any position.\r   3. Removing any single letter.\r This score must be printed out as an integer and followed by a single new line.\r Example Output (newline after number):\r 8"}
{"i": "9653684", "t": "given number 1,2,3,4,5,6,7,8,9 find all sets that sums up to 10\reg. [1,9] [1,2,7],[1,2,3,4] find all possible set can be made."}
{"i": "9583829", "t": "Check whether point lies inside polygon\rYou are given a convex polygon and an additional point. You know the x and y co-ordinates of all vertices of the polygon and the point. Find if the point is one of the vertices of the polygon in O(log N) time.."}
{"i": "9566995", "t": "Given a rectangle with known width and height, design an algorithms to fill the rectangle using n squares(n is integer, also given) and make sure in the result the wasting area is minimized. Length of square doesn't have to be integer.\r I.e, given width=3,height=2,n=5, one solution is that rectangle can be filled with five 1x1 squares and the wasting area is 1. Another solution could be filled with five 0.9x0.9 squares, but the wasting area is more than first solution."}
