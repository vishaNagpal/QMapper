{"i": "13225668", "t": "which macro is to initilize the *variable in function with variable of arguments ?"}
{"i": "13224671", "t": "in c,if you pass an array as an argument to a function,what actuallay gets passed ?"}
{"i": "13216669", "t": "what  is the result of 16>>2 ?"}
{"i": "13215669", "t": "#define square(X) X*X\rsq=square(2+3)\rwhat will be the value of 'sq' after the above code is executed ?"}
{"i": "13216666", "t": "#include<stdio.h>\rint main()\r{\rprintf(\"BCA II\");\rmain();\rretrun 0;\r}\rhow many times the above program will print \"BCA II\" ?"}
{"i": "13218668", "t": "void func()\r{\r    int x=0;\rstatic int y=0;\rx++;\ry++;\rprintf(\"x=%d,\\t y=%d\\n\",x,y);\r}\rvoid main()\r{\rfunc();\rfunc();\r}\rwhat will be the output of the above code?"}
{"i": "13196682", "t": "Find the intersection of two linked list given their head pointer.\rConstraint: You can only traverse a linked list only once."}
{"i": "13204674", "t": "write code for following function:string convert(int n)\r\n{ ... }E.g. input: n = 5\rE.g. output: \"1,2,3,4,5\"\r minimize the creation of string objects while coding, and consider that n = 1000000000"}
{"i": "13202665", "t": "Binu is an aspiring pattern-artist. He spends his free time creating patterns using the computer keyboard. One day, he was creating a random pattern using \u201c/\u201dand \u201c\\\u201d characters and during the process, realized that his pattern contained open paths and enclosures (see figure alongside). In this figure, Binu has drawn 6 characters (using either \u201c/\u201d or \u201c\\\u201d) each in 4 rows on a standard graph paper. He counted two enclosures (marked with dots), the larger one of 16 squares size and the smaller one of 4 squares size. He also noticed several open paths (non-closed spaces) which are not relevant in the context of this problem. Your task is to help Binu by writing a program that counts all the enclosures in a given pattern and find the size of the largest enclosure. For simplicity, we will not dwell into cases where there are enclosures within enclosures (your code doesn\u2019t need to consider such cases).  You may note in the figure that each \u201c/\u201d or \u201c\\\u201d is equivalent to 2 units in the graph.\rInput:-\rThe input file would contain multiple independent test cases, each test case being a pattern, drawn by Binu. Each test case begins with two integers a and b (1 <= a <= 50, 1 <= b <= 50) where a and b represents the length and breadth of the pattern. The next b lines contain a characters each which are either \u201c/\u201d or \u201c\\\u201d (no whitespaces in between).  The input ends with a test case having a and b as 0. In the above figure, a = 6, b = 4.\rOutput:-\rFor each test case, your code needs to output (on a separate line) two integers x and y (separated by a single whitespace) where x is the total number of enclosures in that pattern and y is the size of the biggest enclosure. In the above figure, the output would be 2 16; meaning, there are 2 enclosures & the size of the largest enclosure is 16 squares. If there are no enclosures in a pattern, you need to output 0 0.  If two or more enclosures have the same size (and that happens to be the maximum size), you need to output that size. \rEX I/P:\r 6 4\r\\//\\\\/\r\\///\\/\r//\\\\/\\\r\\/\\///\r3 3\r///\r\\//\r\\\\\\\r0 0\r EX O/P\r 2 16\r0 0\r Note: \r/\\\r\\/\rwill have 4 diamond shape squares in it. They have given a image. not able to add it here."}
{"i": "13194665", "t": "public void myFunction(int n)\r        {\r            if (n == 0)\r                return;\r            else\r            {\r                print(n);\r                myFunction(n--);\r                print(n);\r            }\r        }\r what does it show?"}
{"i": "13204666", "t": "Give an array of integers, which are in repeated format except one integer, write a function to return that integer\rex[2,2,3,3,4,4,4,5,5] = 4\r[2,2,2,3,3,3,3,4,4,4] = 3"}
{"i": "13204663", "t": "Return all factorials of given integer. Enhance your approach by avoiding linear traversing."}
{"i": "13204662", "t": "Calculate number of zeros in a given integer."}
{"i": "13189676", "t": "What is a hash table , give all collision avoidance techniques"}
{"i": "13191669", "t": "calculate average of the values in a binary tree?"}
{"i": "13189674", "t": "implement two functions that \r1. inserts a very large string at any given character index in a given string \reg: if given a string \"house\" insert a very large string at index 2 after \"o\", the large string could be 1 GB in size\r 2. appends a very large string to another string,\r which would be your data structure of choice to store such strings, \r algorithm should be efficient with time and space constraint to perform any action"}
{"i": "13190665", "t": "given a three character a,b,c.find the total no of N length string formed by there three character.\rcondition\r1. no more than 2 consecutive 'a' appear in string.\r2 .only one \"b\" present in string.\r3 no condition on \"c\"."}
{"i": "13186662", "t": "How to count duplicate words in given paragraph in c.\rExample : Ram is  a boy.Ram is a Great boy\rin this example 2 ram ,boy ,is ,s"}
{"i": "13174703", "t": "You have a point say Point<x,y> get the 10 nearest point to the centre with complexity of 0(1) as you add element."}
{"i": "13181678", "t": "give an algorithm to generate random numbers between 1 and 2."}
{"i": "13176681", "t": "IF YOU HAVE GIVEN AN ARRAY CONTAINING CHARACTERS , YOU HAVE TO SEGREGATE ALL NUMRALS , ALL SMALL CHATACTERS(a-z) , all capital characters (A-Z) and all rest all special characters. so basically we need to group these characters in 4 parts."}
{"i": "13151666", "t": "Write a program to count the permutations of the first n natural numbers: 1,2,3...n where in each permutation a1a2a3...an the ai dijit is less than or greater than all previous digits. For eg: valid permutations for n=4\r1234\r2341\retc"}
{"i": "13173676", "t": "Queue. Implement a queue"}
{"i": "13170685", "t": "Binary Tree. How will you implement Binary tree"}
{"i": "13170684", "t": "What is Inner Join, Left outer join. What is a view"}
{"i": "13171675", "t": "Write a sql query to select duplicates in a Table."}
{"i": "13167666", "t": "Celebrity problem:\rYou have a room with n people. A celebrity walks in. Everyone knows the celebrity, the celebrity knows no one. Non-celebrities may/may not know anyone in the room. Give an algorithm to find the celebrity. Discuss the complexity."}
{"i": "13167665", "t": "This is a very simple question. But im not sure why the answer is the way it is.\r int main()\r{\r    char *c = \"abc\";\r    *c = 'd';\r    printf(\"%s\",c);\r    return 0;\r}\r  What gets printed?\r I said dbc for which he dint say anything and went ahead.\rI coded this and found that I my compiler doesn't even give a response. I don't understand, *c sets the value being pointed to 'd' so technically this is legal right?\rCan someone pitch in?"}
{"i": "13126692", "t": "amazon-interview-questions 8 Answers\r 3-way-mergesort : Suppose instead of dividing in half at each step of the mergesort, you divide into thirds, sort each third, and finally combine all of them using a three way merge. What is the overall running time of this algorithm ? (Hint - Note that the merge step can still be implemented in O(n) time.)\rn\rnlog(n)\rn^2(log(n))\rn((log(n))^2"}
{"i": "13134671", "t": "You are given functions f and g such that f(n)=O(g(n)). Is f(n)\u2217log2(f(n)c)=O(g(n)\u2217log2(g(n))) ? (Here c is some constant >0. You can assume that f and g are always bigger than 1.\rDepends on the choice of f and g\rTrue\rFalse\rDepends on choice of c"}
