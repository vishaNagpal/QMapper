{"i": "5706901770207232", "t": "Given three integers x,y and z you need to find the sum of all the numbers formed by \r\nhaving 4 atmost x times , having 5 atmost y times and having 6 atmost z times as a digit.\r\n\r\ninput \r\nx=1,y=1,z=1\r\noutput\r\n4+5+6+45+54+56+65+46+64+456+465+546+564+645+654=3675"}
{"i": "5197345071824896", "t": "Given three integers x,y and z you need to find the all the possible combination of numbers having 4 at most x times, having 5 at most y times and having 6 at most z times as a digit.\r\n\r\ninput x=1,y=1,z=1\r\noutput\r\n\r\n4\r\n5\r\n6\r\n45\r\n54\r\n56\r\n65\r\n46\r\n64\r\n456\r\n465\r\n546\r\n564\r\n645\r\n654"}
{"i": "5762787884662784", "t": "A Doctor travels from a division to other division where divisions are connected like a graph(directed graph) and the edge weights are the probabilities of the doctor going from that division to other connected division but the doctor stays 10mins at each division now there will be given time and had to find the division in which he will be staying by that time and is determined by finding division which has high probability. Input is number of test cases followed by the number of nodes, edges, time after which we need to find the division in which he will be there, the edges starting point, end point, probability. Note: If he reaches a point where there are no further nodes then he leaves the lab after 10 mins and the traveling time is not considered and during that 10min at 10th min he will be in next division, so be careful\r find the division with highest probability that doctor is in it after 10 min is div 3 and probability is 0.7.\r After 9 minutes dr has yet to move to another division he is in div 1 and probability is 1.0. Forty minutes later the division with highest probabilty is 6 and probabilty is 0.77400\r input 1 6 10 40 1 2 0.3 1 3 0.7 3 3 0.2 3 4 0.8 2 4 1 4 5 0.9 4 4 0.1 5 6 1.0 6 3 0.5 6 6 0.5\r output 1 6 0.774000\r input 2 6 10 10 1 2 0.3 1 3 0.7 3 3 0.2 3 4 0.8 2 4 1 4 5 0.9 4 4 0.1 5 6 1.0 6 3 0.5 6 6 0.5\r output 2 3 0.700000"}
{"i": "5084055746379776", "t": "Implement following method of ScheduledExecutorService interface in Java\r schedule(Runnable command, long delay, TimeUnit unit)\rCreates and executes a one-shot action that becomes enabled after the given delay.\r scheduleAtFixedRate(Runnable command, long initialDelay, long period, TimeUnit unit)\rCreates and executes a periodic action that becomes enabled first after the given initial delay, and subsequently with the given period; that is executions will commence after initialDelay then initialDelay+period, then initialDelay + 2 * period, and so on.\r scheduleWithFixedDelay(Runnable command, long initialDelay, long delay, TimeUnit unit)\rCreates and executes a periodic action that becomes enabled first after the given initial delay, and subsequently with the given delay between the termination of one execution and the commencement of the next."}
{"i": "5767582880104448", "t": "Implement BST Iterator and use them in 2 sum and 3 sums problem on a BST"}
{"i": "5672152129339392", "t": "Implement a rate limiter that multiple threads can use, while the global rate is limited to a value"}
{"i": "5709935862611968", "t": "Implement a thread-safe data structure which can keep track of number of incoming\rrequests grouped by IP Address over a time window. Add support for grouping by other\rattributes such as BrowserAgent."}
{"i": "5701540308844544", "t": "Given an array sort even element \r\nand odd number and such \r\nthat even element at even index and\r\n odd at odd and you have \r\nto return minimum no of swap \r\nand it has should be sorted \r\ninput 2134\r\noutput 1"}
{"i": "5746178809921536", "t": "Given a string select two non-overlapping strings that are same and remove them. Perform this operation recursively till there are no desired strings.\rPrint the number of possible substring after completing above operation.\rEx - abcc\rDuplicate non-overlapping substring - abc\rAfter removing abc from we are left with 1 substring abc."}
{"i": "6266374108741632", "t": "In a 2-D matrix of m*n select m-1 elements from each row such that that the resulting sum is minimum and each column is selected atleast once.\r Ex -\r2 3 5\r3 2 5\r4 4 7\rSelecting (2,3) from 1st row, (2,5) from 2nd  row and (4,4) from 3rd row would result in minimum sum of 20"}
{"i": "5158730799251456", "t": "Question: Can you break the given string into words, provided by a given hashmap of frequency of word as <word: n>\r   Example:\r  HashMap -> {\"abc\":3, \"ab\":2, \"abca\":1}\r  String: abcabcabcabca\r  output: Yes; [ abc, abc, abc , abca ]\r   Example:\r  HashMap -> {\"abc\":3, \"ab\":2}\r  String: abcabab\r  output: No\r   Example:\r  HashMap -> {\"abc\":3, \"ab\":2, \"abca\":1}\r  String: abcx\r   output: No"}
{"i": "5633102890663936", "t": "Find LCA for list of nodes of a tree\r Function defined as below - \rTreeNode findLCA(TreeNode root, List<TreeNode> nodes)"}
{"i": "5743917610303488", "t": "Given a number n, make a set of m integers such that the integers lie between [1, n] \r\nand the sum of  two integers should produce an integer which is in the set.\r\n\r\nEg. **Input**\r\nn=20, m=5\r\n**Output**\r\n[3, 6, 11, 14, 17]"}
{"i": "5660271310274560", "t": "Which test types we can use for drinks vending machine testing? Especially for check dimension, length, appearance of machine and cups?"}
{"i": "5652820078886912", "t": "I was asked to integrate linkedIn and dropbox. So linkedIn is not into file storage system, hence they want to use the services of dropbox. The goal is to create, update, delete the documents of a profile in linkedIn. But these documents will not be stored in linkedIn. They will be stored in dropbox. \rMoreover, to get this integration, linkedIn does not want to scale up they system. This means, if they have 400 servers, they do not want to add any more servers to achieve the integration. \rHow can I design this?"}
{"i": "5655347365150720", "t": "Design DB schema for maintaining e-commerce various category ,sub category ,sub-sub category and so on."}
{"i": "5663106995322880", "t": "Write a program to find number of words in a file not using any standard tokenizing API's."}
{"i": "5200068651515904", "t": "Given n, you will be getting stream of sets each set may contain like (1,3,4,5) which signifies that 1,3,4,5 are related. Similarly you may get like (6,7) , (1,8).\rAnd you will be asked to find whether 1 & 4 are related => Yes (as they are from same set).\r3 & 8 are related => yes as 8 & 3 are related through 1.\r5 & 7 are related =>No"}
{"i": "5634557877944320", "t": "Card Game\r Card game rule: the hand is drawn from a pack of cards (no jokers). \rPlay cards ONLY when they are \r1. 3 of a kind ('AAA' ) or 4 of a kind('AAAA\u2019). \r2. a straight flush of 3 or more cards('JQK' or 'A23456...' in the same suit). \rFind out whether the player is able to play the whole hand given. \re.g. [Spade A, Spade K, Spade Q, Diamond Q, Heart Q] return false. \r[Spade A, Spade K, Spade Q, Diamond Q, Heart Q, Club Q] return true."}
{"i": "5756801975320576", "t": "Shopping Cart Programming test.\rThere are multiple types of customer(Regular, Premium) they have been given a discount based on their purchase amount. for e.x\rPremium Customer\r1) 0-$5000 0%\r2) $5000-$10000 10%\r3) 10000 - above 20%\r Regular Customer\r1) 0-$4000 10%\r2) $4000 - $8000 15%\r3) $8000 - $12000\t20%\r4) $12000 - above 25%\r Read input from console:\rInput:\rRegular\r$5000\rOutput:\r$5000\rInput:\rPremium\r$7000\rOutput\r$8000"}
{"i": "5154165987213312", "t": "Implement a function which accepts a number and returns top 10 big numbers the function is called with so far;\r If we call the function with 1.. to 100 , for the call function(100) the function will return 91 to 100 in reverse order since they are top 10 biggest number so far"}
{"i": "6224469622784000", "t": "Implement a fair mutex"}
{"i": "6288315351826432", "t": "An array is called a Good Array if the elements continually increasing or continually decreasing or continually decrease and then increase.\rQuestion 1: He asked how will you tell whether a given array is a good array or not.\rQuestion 2: Given an array, you are allowed to add any number of values to each of the element. Find the minimum sum of elements that can make the array a good array."}
{"i": "5096777305292800", "t": "A software-based LRU Cache replacement algorithm has to be implemented for a Single Touch/Multi-Touch Cache. Single Touch can occupy at least 30% of the total cache space. A key accessed for the first time will appear in the Single Touch cache. When accessed multiple times, this will be part of the multi-touch cache. Also, multiple threads will access the cache. Following are the functions allowed for cache access.\r1. get(key): returns the value against the key if present else return NULL\r2. set(key, value): set the value against the key"}
{"i": "5695984231776256", "t": "Given a tree, and there will be treasure in one of the nodes. We can query any node, it will return the node itself if it contains the treasure or it returns the branch which leads to the treasure. we need to find out the treasure in minimum number of queries."}
{"i": "5114785230749696", "t": "Design a jenkins kind of system"}
{"i": "5098569715941376", "t": "Imagine someone maliciously duplicated every file on your computer, and completely randomized their names and locations on your hard drive. Discuss an efficient way to clean up your drive of all these duplicates."}
{"i": "5659727258714112", "t": "Two very very large files F1, F2 containing key, value pairs. Write these key, values to a third file without any duplicates."}
{"i": "5758591265406976", "t": "Design real time tail log search"}
{"i": "5677735184171008", "t": "Build a key-value data structure that allows the user to take a snapshot of the data. The user can read the key-value store from any snapshot.\r Structure has the normal key/value like methods plus something like\rsnapshot = dataStructure.takeSnapshot()\rvalue = dataStructure.get(key, snapshot)\rvoid dataStructure.deleteSnapshot()"}
