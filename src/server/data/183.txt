{"i": "5706547701219328", "t": "* input : \r            point (x,y) - assume that the point exist into the shape\r             isBounded(x,y) : return 1 if the point (x,y) is out of shape , and return 0 if the point (x,y) is into shape\rtask : to write a code\\pseudo code to print a shape with input"}
{"i": "5676765995335680", "t": "Suppose you have an array with infinite numbers, which is sorted and there may be duplicates. Find the occurrence of a number."}
{"i": "5755858891833344", "t": "How will implement an auto complete feature? Eg: if you type clo it shows clothes etc"}
{"i": "5715661219168256", "t": "Suppose there are 2 streams, which has infinite value and write a method that returns a stream that would be a combination of both the streams in a sorted form"}
{"i": "5652676597514240", "t": "In C, \rGiven a number 18937838393287483, convert it to return into human readable format.\rAlso, write a test function that will validate the format, show proper error if its invalid."}
{"i": "5765874755567616", "t": "Given a string and a dictionary, return an array of all the possible ways the string can be broken into different valid words.i.e. Given `hotelfeat` return\r\n[\r\n\t[\"hot\", \"elf\", \"eat\"],\r\n\t[\"hotel\",\"feat\"]\r\n]For the dictionary you can assume that you either have a large set of valid words or you can call something likepublic Boolean isValidWord(String str)The method signature would look something like the following in Java:public ArrayList<ArrayList<String>> possibleWordCombinations(String str, Dictionary dict);A correct answer would use recursion and/or dynamic programming."}
{"i": "5702178779955200", "t": "Given an array of n integers, return the maximum PMEAN of all possible array rotations, \r\nwhere PMEAN = the sum of each integer multiplied by its current location (index + 1).\r\n\r\nFor example:\r\n\r\nThe PMEANs for every rotation of the array {20, 30, 10} are:\r\n\r\nPMEAN1 = (1 * 20) + (2 * 30) + (3 * 10) = 110\r\nPMEAN2 = (1 * 30) + (2 * 10) + (3 * 20) = 110\r\nPMEAN3 = (1 * 10) + (2 * 20) + (3 * 30) = 140\r\n\r\nThe max PMEAN of array {20, 30, 10} is 140.The question is simple enough.  I was able to get a working algorithm quick enough, but I failed to optimize my answer.\rHint from the interviewer:\rIf you have PMEANn, how can you use the result to get PMEANn+1?"}
{"i": "5647694703886336", "t": "Write a function that would print all positive numbers smaller than n that can be expressed as the sum of two cubes in two different ways. Bonus: calculate the complexity of that function.\r For example, 1729 is one such number because 1729 = 1^3 + 12^3 = 9^3 + 10^3."}
{"i": "5644879688368128", "t": "Write printf method."}
{"i": "5651383275487232", "t": "Which is best Merge Sort or QuickSort?\r Why and How?"}
{"i": "5758712897601536", "t": "Amazon wants to implement a new backup system, in which files are stored into data tapes. This new system must follow the following 2 rules: \r 1. Never place more than two files on the same tape. \r 2. Files cannot be split across multiple tapes. \r It's guaranteed that all tapes have the same size and that they will always be able to store the largest file. \r Every time this process is executed, we already know the size of each file, and the capacity of the tapes. Having that in mind, we want to design a system that is able to count how many tapes will be required to store the backup in the most efficient way. \r The parameter of your function will be a structure that will contain the file sizes and the capacity of the tapes. You must return the minimum amount of tapes required to store the files.\rExample:\rInput: Tape Size = 100; Files: 70, 10, 20\rOutput: 2"}
{"i": "5695840750403584", "t": "Find the first word in a stream in which it is not repeated in the rest of the stream. Please note that you are being provided a stream as a source for the characters. The stream is guaranteed to eventually terminate (i.e. return false from a call to the hasNext() method), though it could be very long. You will access this stream through the provided interface methods. A call to hasNext() will return whether the stream contains any more characters to process. A call to getNext() will return the next character to be processed in the stream. It is not possible to restart the stream.\rExample:\rInput:  The angry dog was red. And the cat was also angry.\rOutput: dog\rIn this example, the word \u2018dog\u2019 is the first word in the stream in which it is not repeated in the stream."}
{"i": "5688432804233216", "t": "150 men are standing in a line heightwise. A blind man has to find where he should stand in the line and for that he has to find the first taller boy than him in the line. As he can't see he is allowed to ask any number of man the question : \"Are you taller than me?\". Answer can be Yes or No. But he is just allowed only two YESes (BUT there is not limit on number of NOs) as reply after that he is not allowed to ask any man. Calculate fewest number of men he'll require to ask question in the worst case possible.\r  Options\r1.\t14\r2.\t17\r3. \t25\r4. \t33"}
{"i": "5702921003991040", "t": "c program to implement hash table in c with detailed explanation"}
{"i": "5633550638383104", "t": "How would you design a system to store the search history of your users?"}
{"i": "5699991299424256", "t": "How does Google know that you are who you say you are?"}
{"i": "5684279570857984", "t": "How would you design the search future in Google from frontend to backend?"}
{"i": "5675324027174912", "t": "For a given matrix, find the maximum product of k elements. The elements can be formed from continuous 4 elements horizontally, vertically or diagonally. Eg: For k= 4, the maximum product is (6*4*7*9) from the last column,\r 1 2 0 -1 4\r 3 1 2 4  6\r 0 2 3 1  4\r 1 3 2 0  7\r 2 1 3 2  9"}
{"i": "5768196520935424", "t": "Given a certain range, produce all numbers in that range that fit the criteria. The criteria is as follows:\ra number that starts with 2 of the same number, and then the sum of the previous 2 is that of the next number, and etc. For example:\r112358, 121224, 448"}
{"i": "4862565354045440", "t": "Reverse left node of BT.\r      1 (ROOT)\r      / \\\r    2   3\r    /      \\\r   4      5\r   / \\       \r  6  7\r to \r       1\r      / \r    2  - 3\r    /      \r   4 - 5     \r   /        \r  6 - 7 \r(6 is root)"}
{"i": "5717301963784192", "t": "Write code that would parse an expression that is similar to BASH brace expansion. Best illustrated with an example: the expression \"(a,b,cy)n,m\" would be parsed into an array of the following strings:\ran\rbn\rcyn\rm\r You can assume that the input will always be valid.\r Hint: the expression can nest. Therefore, \"((a,b)o(m,n)p,b)\" parses into:\raomp\raonp\rbomp\rbonp\rb"}
{"i": "5700588635422720", "t": "A 2-D array of 1's and 0's is given. Find the row with max 1's. The array is sorted row wise (all 0's in a row are followed by all 1's)."}
{"i": "5633930742988800", "t": "Given an array with 10000 numbers from the range 1-10. WAP to sort them."}
{"i": "5725158532710400", "t": "If given a number find a number if it is colorful. A number is said to be colorful if all its possible unique permutations multiplication result different.\rEg: if n = 1234 then permutations are (1,2),(1,3),(1,4), (2,3),(2,4),(3,4),(1,2,3), (1,2,4), (2,3,4). That's it, no other combination. Find the multiplication of digits in each combination and if any of them repeats then number is not colorful."}
{"i": "5160746142924800", "t": "Mutiplicative iteration.Assume letters are A=1,B=2....The  number N=4 then A=1*4=4.If result is greater than 26 mod 26.Input a string and give a encrypted result as output."}
{"i": "5261409212432384", "t": "Write a function which takes an input for a double dimensional matrix.Each page is 1000 pixels wide and 1000 pixels high.A black pixel is represented by 1 and a white pixel by 0.Return an answer set of array of row numbers for appropriate page breaks.A page break would ideally be a row with all white pixels.If the page break is encountered more than 1000 rows from the last break then the page break should be forcefully taken 1000 rows from the last break."}
{"i": "4906033149378560", "t": "Phone Interview with Collabedit.\r /** Compute the value of an expression in Reverse Polish Notation. Supported operators are \"+\", \"-\", \"*\" and \"/\".\r * Reverse Polish is a postfix mathematical notation in which each operator immediately follows its operands.\r * Each operand may be a number or another expression.\r * For example, 3 + 4 in Reverse Polish is 3 4 + and 2 * (4 + 1) would be written as 4 1 + 2 * or 2 4 1 + *\r *\r * @param ops a sequence of numbers and operators, in Reverse Polish Notation\r * @return the result of the computation\r * @throws IllegalArgumentException ops don't represent a well-formed RPN expression\r * @throws ArithmeticException the computation generates an arithmetic error, such as dividing by zero\r *\r * <p>Some sample ops and their results:\r * [\"4\", \"1\", \"+\", \"2.5\", \"*\"] -> ((4 + 1) * 2.5) -> 12.5\r * [\"5\", \"80\", \"40\", \"/\", \"+\"] -> (5 + (80 / 40)) ->  7\r */"}
{"i": "4972362879467520", "t": "We have a folder containing around 10000 files and each file having size greater than 2 GB.These files contain three fields namely date,users and their names.\rHow can we get the count of all unique users from 10000 files?"}
{"i": "5124077188546560", "t": "find the ascending order number in same digits using java program"}
{"i": "5151448344035328", "t": "What is bottom halves and Top half.? Whats their functionality?"}
