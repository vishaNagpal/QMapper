{"i": "5643496070316032", "t": "Given an integer array A of size N. Find the number of increasing sub-sequences of this array with length >= 1 and GCD = 1. \rA sub-sequence of an array is obtained by deleting some (or none) elements and maintaining the relative order of the rest of the elements.\r Example:- \r[1] = 1\r[1,2] = 2 \r[1,2,3] = 5"}
{"i": "5767203879124992", "t": "You are given a matrix with N rows and N columns. Elements in matrix can be either 1 or 0.  Each row and column of matrix is sorted in ascending order. \rFind number of 0-s in the given matrix.\rExample:0 0 1\r\n0 1 1\r\n1 1 1\r\nAnswer: 3\r\n\r\n0 0\r\n0 0\r\nAnswer: 4Update: Expected complexity is O(log(N)). The best I've seen in comments is still O(N).\r Update2: Alright, guys, sorry for a bit of trolling. Obviously this is not possible to do faster than O(N). Here is why: take a diagonal (N, 1), (N-1, 2), ... (1, N). Suppose input matrix has all 0's above this diagonal and all 1's under this diagonal. So only diagonal elements vary. Clearly, diagonal elements do not depend on each other. So we have to analyze each diagonal element which is O(N). \rNice job, @gen-y-s :)"}
{"i": "5633060910399488", "t": "Write a program to detect cycle in loop."}
{"i": "5757390013071360", "t": "Write a program to sort an array in nlog(n) complexity"}
{"i": "5724800203882496", "t": "Write an algorithm to randomize nodes of a Binary Tree without using any data structures"}
{"i": "5654727946665984", "t": "Alternate sorting: Given an array of integers, rearrange the array in such a way that the first element is first maximum and second element is first minimum.\r     Eg.) Input  : {1, 2, 3, 4, 5, 6, 7}\r         Output : {7, 1, 6, 2, 5, 3, 4}"}
{"i": "5632560009838592", "t": "How to insert excel file that contain paragraph into mysql using php"}
{"i": "5658185395339264", "t": "Given a two dimensional array of string like\r   <\u201dluke\u201d, \u201cshaw\u201d>\r  <\u201dwayne\u201d, \u201crooney\u201d>\r  <\u201drooney\u201d, \u201cronaldo\u201d>\r  <\u201dshaw\u201d, \u201crooney\u201d> \rWhere the first string is \u201cchild\u201d, second string is \u201cFather\u201d. And given \u201cronaldo\u201d we have to find his no of grandchildren Here \u201cronaldo\u201d has 2 grandchildren. So our output should be 2."}
{"i": "5169254237208576", "t": "Rotate the matrix elements\rFor 3*3 matrix\rInput\r1\t2\t3\r4\t5\t6\r7\t8\t9\r Output:\r4\t1\t2\r7\t5\t3\r8\t9\t6\r For 4*4 matrix\rInput:\r1\t2\t3\t4\t\r5\t6\t7\t8\r9\t10\t11\t12\r13\t14\t15\t16\r Output:\r5\t1\t2\t3\r9\t10\t6\t4\r13\t11\t7\t8\r14\t15\t16\t12"}
{"i": "5751300286316544", "t": "Given a set of numbers like <10, 36, 54,89,12> we want to find sum of weights based on the following conditions\r    1. 5 if a perfect square\r    2. 4 if multiple of 4 and divisible by 6\r    3. 3 if even number\r And sort the numbers based on the weight and print it as follows\r <10,its_weight>,<36,its weight><89,its weight>\r Should display the numbers based on increasing order."}
{"i": "5703687889485824", "t": "There is a famous algorithm on geeksforgeeks to specify the minimum number of insertions to convert a string to palindrome.\r http://www.geeksforgeeks.org/dynamic-programming-set-28-minimum-insertions-to-form-a-palindrome/\r But the question that was asked to me was one step ahead, interviewer asked to tell the characters that need to be appended to the string to make it a palindrome."}
{"i": "5725092932747264", "t": "Write a algorithm to find the unsold item in the Amazon"}
{"i": "5668286084677632", "t": "You have rand2() function which returns 0 or 1 with equal probability. You should implement rand3() using rand2()."}
{"i": "5766880011747328", "t": "Given set of characters and a dictionary find the minimum length word that contains all the word from the given word"}
{"i": "5706187292016640", "t": "Given an array of n integers. MaxPrefix is defined as count of elements those are greater than the element and in the right side of array wrt to the element. Write a program to give the max of MaxPrefix Ex. Input 10 -4 6 2 8 9 4 Output is 5"}
{"i": "5746078948261888", "t": "how to restrict creation of object inside the function fun\ralthough destructor and constructor is private??\r#include <iostream>\r class ABC\r{\rprivate :\r~ABC()\r{\r }\r \tABC()\r\t{\r\tstd::cout <<\"ABC\";\r\t}\r  \tpublic:\r\tstatic\tvoid fun()\r\t\t{\r  \t\t\tABC t;\r \t\t}\r   };\rint main()\r{\r\tABC::fun();\r }"}
{"i": "5157220678369280", "t": "Given M nodes and at most one outgoing edge from any node. Given Q operations where an operation is either\ri) 1 Z where Z represent the source node, print the terminal node if a coin travels through edges. In case, if node Z lies in a cycle, print LOOP. 1 is the operation type\rii) 2 Z where Z represents node for which the outgoing edge is removed and 2 is operation type.\rOperations are performed in order in which they are given.\rM <= 3*10^5, Q <= 3*10^5\r Input\rFirst line contains integer M.\rSecond line contains M integers, where ith integer represents outgoing edge from ith node. If outgoing edge is 0, that means there is no outgoing edge from this node.\rThird line contains integer Q followed by Q lines where each line is either 1 Z, or 2 Z where Z is node number. Nodes are 1-indexed.\r This question was asked in coding test. Can somebody please help me with this problem with the given constraints?"}
{"i": "5674253572636672", "t": "LINUX CHARACTER DRIVER -\rA character driver is suitable for most simple hardware devices.\rThe first step of driver writing is defining the capabilities \r(the mechanism) the driver will offer to user programs.\rBefore the kernel invokes your device\u2019s operations, you must allocate\rand register one or more of structures defined below.\rMajor and Minor Numbers :\rmajor number identifies the driver associated with the device.\rminor number is only used by the driver to differentiate several devices controlled / managed /driven by it.\r -The file_operations structure : Functionlity provide by the driver.\rloff_t  (*llseek) ( struct file*, loff_t, int );\rssize_t  (*read) ( struct  file*, char*, size_t, loff_t*);\rssize_t (*write) ( struct file*, const char *, size_t, loff_t*);\rint       (*ioctl) ( struct inode*, struct file*,unsigned int,unsigned long);\r                       - to handle device specific commands .\r int        (*open) (struct inode *, struct file *);\rint        (*release) (struct inode *, struct file *);\r -The inode structure :\rinode structure is used by the kernel to represent files. Two fields of\rthis structure are:\rdev_t i_rdev;\r\tFor inodes that represent device files, this field contains the \r\tactual device number.\rstruct cdev *i_cdev;\r\tstruct cdev is the kernel\u2019s internal structure that represents char\tdevices; this field contains a pointer to that structure when the inode refers to a char device file.\r  Please find source code.\r https://github.com/ArvindYadav10/Arvind-Linux-earth/tree/master/char"}
{"i": "5687411305611264", "t": "Write a class to take in a large arbitrary number, also provide a function to increment the number. The number will be passed on as an array of integers."}
{"i": "5717262569832448", "t": "Given a rectangle with top-left(a,b) and bottom-right(c,d) coordinates. Also given some coordinates (m,n) of sensors inside the rectangle. All sensors can sense in a circular region of radius r about their centre (m,n). Total N sensors are given. A player has to reach from left side of rectangle to its right side (i.e. he can start his journey from any point whose y coordinate is b and x coordinate is a<=x<=c. He has to end his journey to any point whose y coordinate is d and x coordinate is a<=x<=c).\r Write an algorithm to find path (possibly shortest but not necessary) from start to end as described above.\r Note: all coordinates are real numbers\r (a,b)\r|----------------------------------------------|\r|.......................................................|end\r|.......................................................|\r|start................................................|\r|.......................................................|\r|----------------------------------------------|(c,d)\r Edit: You have to avoid sensors.\rAlso u can move in any direction any time."}
{"i": "5763799077355520", "t": "Given a matrix which is spirally sorted. Remove an element and insert another element maintaining the sorted order."}
{"i": "5698738912755712", "t": "Given two sets of strings A and B. Find the\r (A-B) U (B-A) ( U = union ). The answer should be in lexicographical order and A\u2019s elements should appear before B\u2019s."}
{"i": "5638245372133376", "t": "Given a few points in first quadrant \u2013 (x1,y1) \u2026..(xn,yn) and given another set of points (a1,b1\u2026..an,bn), determine whether all the points (a1,b1\u2026an,bn) have already occured in (x1,y1)\u2026..xn,yn)"}
{"i": "5727738531938304", "t": "Given a graph where every two nodes are either friends or enemies with each other. Find a way to go from one node to the other.\r Restrictions:\r1) You can also travel from one node to next if they are friends with each other\r2) You have some \u201cmagic potions\u201d. You can convert an enemy path to a friend path with a magic potion.\r Find the path with min number of magic potions required."}
{"i": "5691753416884224", "t": "How many cars travel across a bridge each day?"}
{"i": "5722625641807872", "t": "Consider a string, s = \"abc\". An alphabetically-ordered sequence of substrings of s would be {\"a\", \"ab\", \"abc\", \"b\", \"bc\", \"c\"}. If we reduce this sequence to only those substrings that start with a vowel and end with a consonant, we're left with {\"ab\", \"abc\"}. The alphabetically first element in this reduced list is \"ab\", and the alphabetically last element is \"abc\". As a reminder:\rVowels: a, e, i, o, and u.\rConsonants: b, c, d, f, g, h, j, k, l, m, n, p, q, r, s, t, v, w, x, y, and z.\r Complete the findSubstrings function in your editor. It has 1 parameter: a string, s, consisting of lowercase English letters (a \u2212 z). The function must find the substrings of s that start with a vowel and end with a consonant, then print the alphabetically first and alphabetically last of these substrings.\r Input Format\rThe locked stub code in your editor reads a single string, s, from stdin and passes it to your function.\r Constraints\r3 \u2264 length of s \u2264 5 \u00d7 105\r Output Format\rYour function must print two lines of output denoting the alphabetically first and last substrings of s that start with a vowel and end with a consonant. Print the alphabetically first qualifying substring on the first line, and the alphabetically last qualifying substring on the second line.\r Sample Input 1\raba\r Sample Output 1\rab\rab\r Explanation 1\r\"ab\" is the only possible substring which starts with a vowel (a) and ends with a consonant (b). Because we only have 1 qualifying substring, \"ab\" is both the alphabetically first and last qualifying substring and we print it as our first and second lines of output.\r Sample Input 2\raab\r Sample Output 2\raab\rab\r Explanation 2\rThere are 2 possible substrings which start with a vowel and end with a consonant: \"aab\" and \"ab\". When ordered alphabetically, \"aab\" comes before \"ab\". This means that we print \"aab\" (the alphabetically first qualifying substring) as our first line of output, and we print \"ab\" (the alphabetically last qualifying substring) as our second line of output.\r Sample Input 3\rrejhiuecumovsutyrulqaeuouiecodjlmjeaummaoqkexylwaaopnfvlbiiiidyckzfhe\r Sample Output 3\raaop\rutyrulqaeuouiecodjlmjeaummaoqkexylwaaopnfvlbiiiidyckzfh\r Explanation 3\rThere are 4830 substrings of s, but only 676 of them start with a vowel and end with a consonant. When ordered alphabetically, the first substring is \"aaop\" and the last substring is \"utyrulqaeuouiecodjlmjeaummaoqkexylwaaopnfvlbiiiidyckzfh\"."}
{"i": "5716481422655488", "t": "A planner wants to deign a city. A city having n points of interest and marked them from 0 - (n-1). Need to write two API:\rpublic void buildRoad(int a, int b); // build road directly between a and b.\rpublic boolean isRoadExist(int a, int b); // Check if there is any road connectivity exist between a & b (either directly or indirectly) then return TRUE else FALSE.\r The solution should be in O(log n). You can first try in O(n)."}
{"i": "5729332770111488", "t": "Write all jumbled number which is >0 && <N, where N is provided by the user.\rA jumbled number is a number whose neighbour digit (either left or right) max differ by 1 value.\r e.g.: \r8987 is a jumbled number.\r13 is not a jumbled number.\r123456 is a jumbled number.\r287 is not jumbled number."}
{"i": "5654397133520896", "t": "given an arraylist of say 50 lac entries and an empty queue, Design a multi-threading bases system which can copy the items in arraylist in a queue parallely \rHow many threads can be spawned based on what criterion ? Basically the interviewer wanted to know how to implement an algorithm where we  can design number of threads to be spawned ?"}
{"i": "5751843230580736", "t": "Let \"t\" be a good number if \"t\" can be written as sum of 2 cubes in at least 2 distinct ways. Given n, write a method which prints all good numbers up to and including n."}
