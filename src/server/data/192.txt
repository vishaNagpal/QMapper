{"i": "5638615906385920", "t": "Given a array of positive integers, you have to find the smallest positive integer that can not be formed from the sum of numbers from array."}
{"i": "5733355234525184", "t": "Suppose that there is a database table, and four processes read the table at the same time. But, only one process is allowed to read the same row of the table at the same time. How do you enforce the exclusive-read on a row?"}
{"i": "6138891180441600", "t": "What is Encapsulation? What is inheritance? When and Why should you use the inheritance?"}
{"i": "4869856220413952", "t": "What is the Abstract class? What is the difference between an abstract class and an interface? When should you use an abstract class instead of interface?"}
{"i": "5656152526290944", "t": "Suppose that Amazon web site has two data tables: One is the customer table. The other is the order table. How do you find the customers who never order anything?"}
{"i": "5216964236541952", "t": "an bacteria grows at the speed that it will double its volume per minute. If you put it in a jar, it will fill the jar in one hour. how long will it take to fill a half of the jar?"}
{"i": "6311899375337472", "t": "A binary tree represent an organization hierarchy. The root node is the CEO and etc. design a algorithm to print the tree level by level."}
{"i": "5207197178920960", "t": "Given an integer array, adjust each integers so that the difference of every adjcent integers are not greater than a given number target.\r If the array before adjustment is A, the array after adjustment is B, you should minimize the sum of |A[i]-B[i]| \r  You can assume each number in the array is a positive integer and not greater than 100\r  Given [1,4,2,3] and target=1, one of the solutions is [2,3,2,3], the adjustment cost is 2 and it's minimal. Return 2."}
{"i": "4700417881538560", "t": "Given an array A and an array B. Sort all the elements of A in the order of B. Sort the remaining elements.\re.g.\rA = {4,2,7,6,8,9,1,3,2,5,6}\rB = {6,3,4,1}\rOutput= {6,6,3,4,1,2,3,5,7,8,9}"}
{"i": "5235085206880256", "t": "Check if 2 link lists merge or not. If yes, return the 1st common node."}
{"i": "5942258819923968", "t": "Check if an integer is a power of 2 or not."}
{"i": "5288170230906880", "t": "Given n number of legacy services with user data<userid, info, date> \rDesign an API to return user data in a given date range, it should collect data from each service and merge and return the data sorted by date."}
{"i": "6109587692322816", "t": "Describe Class diagram of a Card Game like Poker. What classes to be used. How to deal and shuffle the cards in cards class"}
{"i": "5692698000359424", "t": "Array of size (n-m) with numbers from 1..n with m of them missing. Find one all of the missing numbers in O(log). Array is sorted.\r Example: \rn = 8\rarr = [1,2,4,5,6,8]\rm=2\rResult has to be a set {3, 7}."}
{"i": "6208231917486080", "t": "Give you a list of Modules of Dependencies, \rA --> B,C\rB --> D,E,F\rD --> F\rAnd please return back a correct build order of Module (input)"}
{"i": "5690032570499072", "t": "Shorten a List of Strings."}
{"i": "5154742206464000", "t": "Design a Black-Jack poker game"}
{"i": "5082332010643456", "t": "Give an 2d-characters Grid, char[][] A, and a dictionary, List<String> dict. Search all possible words in the 2d-Grid."}
{"i": "5200228225384448", "t": "Take a list of integers (left to right order) and return an integer of the number of identical binary trees that can be created from the same list.\r Input:    [10, 8, 15, 6, 9, 4, 5]\rOutput: 24\r Input:    [12, 6, 19, 15, 5]\rOutput: 6\r Input:    [44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64]\rOutput: 1\r I wrote a brute-force 'solution', creating a binary tree for each permutation of the list (with the same root as Input list) and compared each to the binary tree from the Input list. For large input lists (length > 10), my 'solution' is useless."}
{"i": "5155720821473280", "t": "You have a class that many libraries depend on. You need to modify the class for one application. Which of the following changes require recompiling all libraries before it is safe to build the application? \r a. add a constructor \rb. add a data member \rc. change destructor into virtual \rd. add an argument with default value to an existing member function"}
{"i": "6023284887912448", "t": "Do thread join without join function?"}
{"i": "5091831404560384", "t": "Given a BST, how would you return the kth smallest element. Cover all the corner cases with time complexity logn"}
{"i": "5749204334936064", "t": "Write a program that reverses alternate elements in a given linked list input: a->b->c->d, output should be b->a->d->c"}
{"i": "5720895299518464", "t": "You have just earned $500 voucher to spend at any restaurant. However,\rsince you are a programmer and a foodie you want to maximize how you\rallocate your money.\r  Attached is CSV that has a list of:\r -Beverages\r-Appetizers\r-Entrees\r-Desserts\r-Restaurants\r The CSV file looks something like \rBeverage Name,Beverage Cost,Beverage Value,Appetizer Name,Appetizer Cost,Appetizer Value,Entr\u00e9e Name,Entr\u00e9e Cost,Entr\u00e9e Value,Desert Name,Desert Cost,Desert Value,Restaurant Name,Restaurant Drink Cost,Restaurant Value\r7up, $92.00 ,32,Fresh Rolls, $82.00 ,30,Fried Rice, $78.00 ,29,Vanilla Ice Cream, $76.00 ,13,Applebee's, $43.00 ,19\rSprite, $89.00 ,24,Spring Rolls, $54.00 ,18,PB & J, $49.00 ,29,chocolate cake, $50.00 ,25,Arby's, $26.00 ,5\r  Next to each item there is a cost and a perceived value. \r  Your job is to construct a meal under your budget of $500 that includes:\r  1 Beverage\r3 Appetizers\r2 Entrees \r1 Dessert\r1 Flex Option (This can be an Appetizer, Entree, or Desert)\r1 Restaurant\r  1. Please list the 25 Combinations with the highest perceived value\rgiven your budget\r2. Please list the 25 Combinations with the lowest perceived value\rgiven your budget.\r  Make sure your program assumes that the number of items in each\rcategory is N\r  The problem I am having is using the knapsack algorithm in this case, especially with item constraints. The problem seems to be poorly written.public static void main(String[] args) throws IOException {\r\n        File file = new File(\"Menu.csv\");\r\n\r\n        List<String> lines = Files.readAllLines(file.toPath(),\r\n                StandardCharsets.UTF_8);\r\n        List<Beverage> beverages = new ArrayList<>();\r\n        List<Appetizer> appetizers = new ArrayList<>();\r\n        List<Entree> entrees = new ArrayList<>();\r\n        List<Dessert> desserts = new ArrayList<>();\r\n        List<RestaurantDrink> restaurantDrinks = new ArrayList<>();\r\n        boolean firstLine = true;\r\n        for (String line : lines) {\r\n            if (firstLine)\r\n            {\r\n                firstLine = false;\r\n                continue; //don't care about first line\r\n            }\r\n            String[] array = line.split(\",\");\r\n            int j = 0;\r\n            Beverage b = new Beverage();\r\n            Appetizer app = new Appetizer();\r\n            Entree e = new Entree();\r\n            Dessert d = new Dessert();\r\n            RestaurantDrink rd = new RestaurantDrink();\r\n\r\n            for (String a : array) {\r\n               switch (j)\r\n               {\r\n                   case 0:\r\n                       if (!a.equals(\"\")) //nothing\r\n                       {\r\n                           b.name = a;\r\n                           \r\n                       }\r\n                       break;\r\n                   case 1:\r\n                       if (!a.equals(\"\")) //nothing\r\n                       {\r\n                           b.cost = Double.parseDouble(a.replace(\"$\", \"\"));\r\n                           \r\n                       }\r\n\r\n                       break;\r\n                   case 2:\r\n                       if (!a.equals(\"\")) //nothing\r\n                       {\r\n                           b.perceivedValue = Integer.parseInt(a);\r\n                         \r\n                           beverages.add(b);\r\n                       }\r\n                       break;\r\n                   case 3:\r\n                       app.name = a;\r\n                      \r\n                       break;\r\n                   case 4:\r\n                       app.cost = Double.parseDouble(a.replace(\"$\", \"\"));\r\n                      \r\n                       break;\r\n                   case 5:\r\n                       app.perceivedValue = Integer.parseInt(a);\r\n                      \r\n                       appetizers.add(app);\r\n                       break;\r\n                   case 6:\r\n                       e.name = a;\r\n                       \r\n                       break;\r\n                   case 7:\r\n                       e.cost = Double.parseDouble(a.replace(\"$\", \"\"));\r\n                      \r\n                       break;\r\n                   case 8:\r\n                       e.perceivedValue = Integer.parseInt(a);\r\n                      \r\n                       entrees.add(e);\r\n                       break;\r\n                   case 9:\r\n                       d.name = a;\r\n                      \r\n                       break;\r\n                   case 10:\r\n                       if (a.equals(\"\")) //free dessert\r\n                       {\r\n                           d.cost = 0.00;\r\n                       } else {\r\n                           d.cost = Double.parseDouble(a.replace(\"$\", \"\"));\r\n                       }\r\n                      \r\n                       break;\r\n                   case 11:\r\n                       if (a.equals(\"\")) //free dessert\r\n                       {\r\n                           d.perceivedValue = 0;\r\n                       } else {\r\n                           d.perceivedValue = Integer.parseInt(a);\r\n                       }\r\n\r\n                       desserts.add(d);\r\n                       break;\r\n                   case 12:\r\n                       rd.name = a;\r\n                       break;\r\n                   case 13:\r\n                       if (a.equals(\"\")) //free restaurant drink\r\n                       {\r\n                           rd.cost = 0.00;\r\n                       } else {\r\n                           rd.cost = Double.parseDouble(a.replace(\"$\", \"\"));\r\n                       }\r\n\r\n                       break;\r\n                   case 14:\r\n                       if (a.equals(\"\")) //free dessert\r\n                       {\r\n                           rd.perceivedValue = 0;\r\n                       } else {\r\n                           rd.perceivedValue = Integer.parseInt(a);\r\n                       }\r\n\r\n                       restaurantDrinks.add(rd);\r\n                       break;\r\n               }\r\n                j++;\r\n            }\r\n            j = 0;\r\n\r\n        }\r\n}is all I got. I'm just having trouble with the knapsack portion."}
{"i": "5740519105757184", "t": "how to sent buffer limit in BufferedReader/ BufferedWriter class"}
{"i": "5597713087332352", "t": "How to implement thread safety in java without using synchronized method?"}
{"i": "5739192933941248", "t": "Given a set of busy time intervals of two people as in a calendar, find the free time intervals of both the people so as to arrange a new meeting\rinput: increasing sequence of pair of numbers\rper1: (1,5) (10, 14) (19,20) (27,30)\rper2: (3,5) (12,15) (18, 21) (23, 24)\rouput: (6,9) (16,17) (22,22) (25,26)"}
{"i": "4855847010172928", "t": "How to classify 3 classes using each MICD and MED classifiers using Matlab ?"}
{"i": "6261433408946176", "t": "Given two strings. Figure out if 2nd one is substring of 1st one. 2nd may contain wildcard characters like '*','?' etc"}
{"i": "5749595344732160", "t": "Write a recursive function to print directory structure. Two function were given isfolder() and openfolder()."}
