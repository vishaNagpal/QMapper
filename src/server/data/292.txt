{"i": "18235668", "t": "Sort an array which only has 0's and 1's. Do not use count sort."}
{"i": "18218678", "t": "I have table with columns (Employee, Manager, Salary).  Need to calculate aggregate salary for all employees corresponding to top-level managers in one SQL. For example \rInput table is :\rEmp   Manager  Salary\r  A\t\tT\t   10\r  B\t\tA\t    11\r  C\t\tF\t     13\r  D\t\tB\t      5   \t\t\t \t\t\r Result should be :\rTop-Lvl Manager    Salary(agg)\r\tT\t\t\t\t26\r\tF\t\t\t\t13\r Manager-Employee layering can go multiple levels."}
{"i": "18099676", "t": "Step 1: Write a Job Handler class that can handle multiple Requests that are trying to access a single Resource.  Each Resource can only be allocated by one Requestor at a time.  The requests should be handled in the order in which they are received by the Job Handler.\rStep 2: Extend this class to handle multiple Resources. \rStep 3: Do not allow the same Requestor to submit a Request for two Resources simultaneously."}
{"i": "18099674", "t": "Given a sorted array find whether odd number of numbers exist s.t. sum is K. 0 is a permitted value in array. Negatives may not be permitted. But he was not conclusive there. He was expecting Javascript code and O(n) complexity.\re.g. [12, 2, 1, 4] , searching 1 => yes, 5 => no because 4+1 make the number of numbers even!"}
{"i": "18312662", "t": "Given an array find the subsequence that needs to be removed so that the array becomes sorted. There can be many resultant sorted arrays. Need to find longest. Expected time complexity O(n). \re.g. 9 9 6 1 3 4 4 5 1 7 =>  1 3 4 4 5 7  so need to remove 9 9 6 1"}
{"i": "17968667", "t": "Given a string, find the longest possible even palindrome (length of palindrome is even) from it. \rEg: \rInput: abcicbbcdefggfed\rOutput: defggfed (length is 8)\r Available palindromes are \r1) bcicb - has odd length\r2) cbbc - even length\r3) defggfed - longest palindrome with even length\r This question was asked in a telephonic interview for my friend. I will be posting his solution in a day."}
{"i": "18273664", "t": "Create a method which accept a integer as a argument and print on console. This method is accessed by multiple threads. If two or more threads call the method with same value then only one  thread should allow to print the value other threads should wait. If values are different then all threads should allow to print the value."}
{"i": "17976674", "t": "Pairwise swap elements of a given doubly linkedlist.\rNode has prev and next pointers."}
{"i": "17932664", "t": "We have a very large excel file that is produced every day by a batch process. We need to report what records were added and which records were removed compared to the file generated on the previous day. The challenge is that there is no sortable field in the list that we could use (such as a creation date), imagine for the sake of this test that there\u2019s only First Name, Last Name and Email in the excel file, and that the ordering is not consistent from one day to the next. How would you approach the problem?"}
{"i": "17998666", "t": "There is a sorted array of integers (suppose sorted in \"ascending order\"). How will you find a specific element in an array? You can not use traditional iterative method to find a specific element in an array."}
{"i": "17962663", "t": "Write inorder traversal without using recursion."}
{"i": "18120664", "t": "Add two integers which cannot be stored even in long long int."}
{"i": "17996668", "t": "write a program to serialize and deserialize a Binary tree"}
{"i": "17894680", "t": "you have a set of integers between 1 .. n in a random order with one of the numbers being repeated. find the best possible way (time and space) to obtain the repeating number."}
{"i": "18157668", "t": "write a program to return the highest value from a binary tree (note: not BST)"}
{"i": "18064680", "t": "write a program to validate a BST and state the complexity (assume payload is integer values)"}
{"i": "17885681", "t": "For 2 given array  a[] and B[], find the highest index of A such that logical array A[0...i] and A[N-1...N-1-i] are same."}
{"i": "18090674", "t": "Data-structure and algorithm used in Load Balancer??\r Explaining algorithm write code for it"}
{"i": "18036674", "t": "Function to reverse a c style sub-string\rstart - points to the first character to be reversed\rend - points to character after the last character to be reversed\rNote: STL not allowed\rvoid reverse(char* start, char* end)"}
{"i": "17871697", "t": "1. N-Petrol bunk problem: There are n petrol bunks located in a circle. We have a truck which runs 1 km per 1 liter (mileage 1kmpl). Two arrays are given. The distances between petrol bunks are given in one array. Other array contains the no of liters available at each petrol bunk. We have to find the starting point such that if we start at that point , you we would able to visit entire circle without running out of fuel. Initially truck has no fuel"}
{"i": "18090664", "t": "How can you make thread safe to 3rd party library  javaclass."}
{"i": "18006667", "t": "Implement circular queue in Java such that:\r1. It should work in multithreaaded environment.\r2. If one thread performing EnQueue operation and if queue are full then it should wait untill other not emptied the queue.\r3. If some thread tring to do Dequeue operation and if queue is empty, then that thread should wait untill other thread can fill atleast one element in queue."}
{"i": "18037669", "t": "Write a Program such that \r1. Thread T1 and T2 are doing job J1 and J2 respectively.\r2. Job J2 can't be start by J2 untill job J1 is done by J1.\r3. Write code without using Join() method."}
{"i": "18078662", "t": "write a code to print the second largest element in a list\rShortest possible complexity."}
{"i": "18062669", "t": "Q1. What is inheritance\r2. Polymorphism\r3. Diff between Pure Virtual class and Virtual Class\r4. Adv and dis-adv of C# and C++ over each other\r5. Sequence in which constructors are called when a child class object is created and why is the order so."}
{"i": "18043680", "t": "Given a rotated sorted array, find the MIN of the array.\r He pointed out a mistake in my \rint middle = (begin+end)/2 which could overflow if the array size was INT_MAX. \rAnswer was:\rmiddle = (end-begin)/2 + begin"}
{"i": "18065671", "t": "Given a binary tree, print its perimeter:\r node, left->most nodes from top to bottom, leaf nodes from left-> right, right->most nodes from bottom to top\r ----------------------------1\r-----------------------2--------3\r------------------4-----5-----6--------7\r-------------8------9-----10------11-----12\r should print:\r1-2-4-8-9-5-10-11-12-7-3\r 5 because it doesn't have any children. 10 and 11 are children of 6 and 8 & 9 are children of 4. \rApologies for the messy diagram."}
{"i": "18063672", "t": "Given a Binary tree and a node, return it's post-order predecessor"}
{"i": "18061681", "t": "Single Initialization :\r Global variable x, initialized to 0.\r Implement a function that can be called by multiple threads simultaneously or sequentially.\rThe value of x should be set to the current time only once. If it is already set, the value shouldn't be updated.\r Make sure that the function doesn't become a bottleneck"}
{"i": "18063671", "t": "Given a BT and 2 nodes, find LowestCommonAncestor"}
