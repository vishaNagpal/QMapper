{"i": "5661198265614336", "t": "Implement a program to reverse the linear linked list in pairs. it should handle both even number of nodes and odd number of nodes. if odd number of nodes, the last node will be the last node after reversion.\rDo not move the data in the nodes. Do manipulate node pointers/references. the nodes themselves need to be manipulated, not just the data in the nodes.\rFor example, if the initial linear linked is,\r1->2->3->4->5\rafter reverse it should be,\r2->1->4->3->5"}
{"i": "5723997129932800", "t": "Implement a function that checks if the given binary tree is binary search tree(BST). Use tree operations to solve this. do not try solving by pre-order traversal of the tree and then checking if the array is sorted.\rinstead, traverse the tree for checking if it is BST."}
{"i": "5753178211483648", "t": "Write a function that takes two arguments one array of integers that ranges between 0 and 9 and second the target sum(again integer). It produces all permutations strings of the input digits that equals the target sum.\rFor example, if input is array 2, 3, 5 and  target sum is 10, then the output should be:\r22222 because 2+2+2+2+2 = ,10\r2323 as 2+3+2+3 = 10\r3232\r55\r2233\r3322\r532\r235\r352\retc.,"}
{"i": "5134919145619456", "t": "Design a ride sharing application"}
{"i": "5692266448420864", "t": "Array\r(\r    [0] => Array\r        (\r            [increment_id] => 3859\r            [payment_refrence_id] => \r            [dealskart_order_id] => 0\r            [payment_method] => cash\r            [prepaid_amount] => 0\r            [subtotal] => 3915.00\r            [discount] => 783.00\r            [grand_total] => 3288.60\r            [created_at] => 2015-04-15 11:53:55\r            [franchise_id] => 35\r            [store_credit] => 0.00\r            [item_id] => 9912\r            [product_id] => 38753\r            [custom_options] => {\"74104\":{\"label\":\"Right Boxes\",\"value\":\"1 Box\"},\"74105\":{\"label\":\"Right Power (SPH)\",\"value\":\"0.00\"},\"74106\":{\"label\":\"Right CYL\",\"value\":\"-1.50\"},\"74107\":{\"label\":\"Right Axis\",\"value\":\"20\"},\"342391\":{\"label\":\"Right Color\",\"value\":\"Calypso Green\"},\"74088\":{\"label\":\"Left Boxes\",\"value\":\"2 Boxes\"},\"74089\":{\"label\":\"Left Power (SPH)\",\"value\":\"Call Me\\/Email Me for Power\"},\"74090\":{\"label\":\"Left CYL\",\"value\":\"-1.00\"},\"74091\":{\"label\":\"Left Axis\",\"value\":\"10\"},\"342395\":{\"label\":\"Left Color\",\"value\":\"Peppy Brown\"}}\r            [item_subtotal] => 1096.00\r            [item_discount] => 261.00\r            [item_grandtotal] => 1096.00\r            [qty] => 1\r            [product_name] => Celebration Toric Yearly Colors Lenses\r            [sku] => contact:celebration-calypso-green-new\r            [franchise_name] => testing\r            [street] => d12/2 valyoo technologies \r            [country_id] => INDIA\r            [city] => Mangalore\r            [region] => Karnataka\r            [postcode] => 575003\r            [fax] => 10\r            [telephone] => 9818708981\r            [is_franchise] => 1\r            [gift_voucher_amount] => 0.00\r        )\r     [1] => Array\r        (\r            [increment_id] => 3859\r            [payment_refrence_id] => \r            [dealskart_order_id] => 0\r            [payment_method] => cash\r            [prepaid_amount] => 0\r            [subtotal] => 3915.00\r            [discount] => 783.00\r            [grand_total] => 3288.60\r            [created_at] => 2015-04-15 11:53:55\r            [franchise_id] => 35\r            [store_credit] => 0.00\r            [item_id] => 9913\r            [product_id] => 38753\r            [custom_options] => {\"74104\":{\"label\":\"Right Boxes\",\"value\":\"1 Box\"},\"74105\":{\"label\":\"Right Power (SPH)\",\"value\":\"0.00\"},\"74106\":{\"label\":\"Right CYL\",\"value\":\"-1.50\"},\"74107\":{\"label\":\"Right Axis\",\"value\":\"20\"},\"342391\":{\"label\":\"Right Color\",\"value\":\"Calypso Green\"},\"74088\":{\"label\":\"Left Boxes\",\"value\":\"2 Boxes\"},\"74089\":{\"label\":\"Left Power (SPH)\",\"value\":\"Call Me\\/Email Me for Power\"},\"74090\":{\"label\":\"Left CYL\",\"value\":\"-1.00\"},\"74091\":{\"label\":\"Left Axis\",\"value\":\"10\"},\"342395\":{\"label\":\"Left Color\",\"value\":\"Peppy Brown\"}}\r            [item_subtotal] => 1096.00\r            [item_discount] => 261.00\r            [item_grandtotal] => 1096.00\r            [qty] => 1\r            [product_name] => Celebration Toric Yearly Colors Lenses\r            [sku] => contact:celebration-calypso-green-new\r            [franchise_name] => testing\r            [street] => d12/2 valyoo technologies \r            [country_id] => INDIA\r            [city] => Mangalore\r            [region] => Karnataka\r            [postcode] => 575003\r            [fax] => 10\r            [telephone] => 9818708981\r            [is_franchise] => 1\r            [gift_voucher_amount] => 0.00\r        )\r     [2] => Array\r        (\r            [increment_id] => 3859\r            [payment_refrence_id] => \r            [dealskart_order_id] => 0\r            [payment_method] => cash\r            [prepaid_amount] => 0\r            [subtotal] => 3915.00\r            [discount] => 783.00\r            [grand_total] => 3288.60\r            [created_at] => 2015-04-15 11:53:55\r            [franchise_id] => 35\r            [store_credit] => 0.00\r            [item_id] => 9914\r            [product_id] => 38753\r            [custom_options] => {\"74104\":{\"label\":\"Right Boxes\",\"value\":\"1 Box\"},\"74105\":{\"label\":\"Right Power (SPH)\",\"value\":\"0.00\"},\"74106\":{\"label\":\"Right CYL\",\"value\":\"-1.50\"},\"74107\":{\"label\":\"Right Axis\",\"value\":\"20\"},\"342391\":{\"label\":\"Right Color\",\"value\":\"Calypso Green\"},\"74088\":{\"label\":\"Left Boxes\",\"value\":\"2 Boxes\"},\"74089\":{\"label\":\"Left Power (SPH)\",\"value\":\"Call Me\\/Email Me for Power\"},\"74090\":{\"label\":\"Left CYL\",\"value\":\"-1.00\"},\"74091\":{\"label\":\"Left Axis\",\"value\":\"10\"},\"342395\":{\"label\":\"Left Color\",\"value\":\"Peppy Brown\"}}\r            [item_subtotal] => 1096.00\r            [item_discount] => 261.00\r            [item_grandtotal] => 1096.00\r            [qty] => 1\r            [product_name] => Celebration Toric Yearly Colors Lenses\r            [sku] => contact:celebration-calypso-green-new\r            [franchise_name] => testing\r            [street] => d12/2 valyoo technologies \r            [country_id] => INDIA\r            [city] => Mangalore\r            [region] => Karnataka\r            [postcode] => 575003\r            [fax] => 10\r            [telephone] => 9818708981\r            [is_franchise] => 1\r            [gift_voucher_amount] => 0.00\r        )\r )\r3\r     how to count [custom_options]"}
{"i": "5755489440759808", "t": "Given array of marks and array of time taken to finish the question, and a passing mark P maximize on marks which will get you P but minimizing the time t. \r I tried to solve this by dividing the marks by time which will give factor of utilization of a particular question, and then partition the marks on P, and choose only marks less than P, try to sort the selected marks, time pair in small subset, and minimize on t. Is this a right approach."}
{"i": "5767864852152320", "t": "There are discounts on particular time period\rsuppost\rDay1 - Day5 => 10%\rDay2 - Day 8 => 5%\rDay4 - Day6 => 20 %\r find the period where maximum discounts is available.\r For above example the period is Day4 - Day5 => 10+5+20 \r that means 35%\r Provide the generalize solution. Period can be time also."}
{"i": "5768335419506688", "t": "This was a question asked to my cousin in a recent phone interview with Cisco. \r You're given an array of integers (unsorted) and the length is really large (perhaps a million integers). Now you are required to write an efficient code to retrieve topN integers. If N is 10, return the top 10 integers from the array. You result may or may not be sorted, that's your call. For e.g. if given array is arr = { 2, 1, 20, 3, 6, 5, 4, 8, 11, 12 }; and given N value is 3, then your result should be either {20, 11, 12} (unsorted) or {11,12, 20} (sorted)."}
{"i": "5086938656669696", "t": "Given two binary trees ( not BST) ,   return true if both of them have same inorder  else return false.\rEg.B                                   \r\n       /      \\                                    \r\n     A       CA\r\n   \\ \r\n     B\r\n       \\\r\n         CBoth of the trees have  same inorder ( A-B-C) hence function will return true\r P.S.\r  Please note, we can write inorder method call it once for first tree and then second tree,  and finally compare both inorder. \r We want to parallely do inorder on both tree, if there is mismatch between inorder nodes of both trees, we can stop the traversal and return false"}
{"i": "6257095651360768", "t": "I am graduating in december2015 and I am targeting google. I have almost 6-8 month to go for it.I am a python developer although I have 3 year of experience in java but its 1.2 years pass I didn't touch that so I want to continue with python. I am using Python from last one year. any suggestion about python ? Or i have to go back and start with java again?"}
{"i": "5087178839293952", "t": "GLaDOS is feeling bored, so she decided to come up with a board game. The game is as follows. There is\rboard of dimension n x n (2 <= n <= 10). Each position in this board is either a 0 or a power of 2, between 2\rand 2048. Once the board is set up, there are only two moves allowed - move all left or move all right.\rThe way move all left works is as follows:\rFor every row on the board, starting from the rightmost position each element is moved to its left. An\relement with a zero value does not move. An element with non-zero value can move to its left if the value of\rthe element to its left is a 0 or has the same value as the current element.\rIn case, the element to the left is 0 then the element and 0 swap positions i.e., 4 0 0 4 would become 4 0 4 0\rIn case, the element to the left has the same value as the current element then the left element combines\rwith its right element and creates an element with double the value in place of the right element and leaves\ra 0 in its current place. For e.g., 2 2 would become 4 0 or 2 2 2 2 would become 4 0 4 0.\rThe combining operation can cause a cascading operation i.e., if the new element created has the same\rvalue as the element to its left, it can combine again.\rFor e.g., if a row had 8 4 2 2, move left would combine 2 and 2 to form 4 leading to 8 4 4 0. Now, it is\rpossible to combine further as the element to the left of 4 has the same value, thus after the second\rcombine, the row would be 8 8 0 0. And again 8 and 8 would form a 16. Thus the final values in the row\rwould be 16 0 0 0.\rBut if the row was 8 4 2 0 2, then moving left would result in 8 4 2 2 0. The cascading operation is allowed\ronly after a combination operation, There would no cascading operation if the element is swapped with 0.\rSimilar rules apply for move all right, wherein for every row elements starting from the leftmost position\rmove to their right.\rYou can either choose move all left or move all right operation but not both. Now given a state of the board,\ryou have determine what will be the maximum value on the board after either move all left or move all right.\rExample\r3\r2 2 0\r2 2 4\r2 0 2\rMove all left would result in:\r4 0 0\r4 0 4\r2 2 0\rThe maximum value on the board after this move is 4.\rMove all right would result in:\r0 4 0\r0 0 8\r0 2 2\rIn the first row, 2 and 2 combines to form 4. In the second row, left most 2 combines with 2 to form 4. As the\relement to its right has a value 4, combination operation cascades to form 8.\rThe maximum value on the board after this move is 8.\rNow of the two operations, the higher of the two maximum values is 8. Thus the expected output is 8.\rInput\r3\r2 2 0\r2 2 4\r2 0 2\rOutput\r8\rInput\r3\r0 0 4\r0 2 2\r0 4 8\rOutput\r8\rTime limit per test case:\r1 second(s)"}
{"i": "5648398726201344", "t": "Given a Binary search tree of integer values. return the count of nodes where all the nodes under that sub-tree lies between a given range [x, y]. assume there are more than 100,000 nodes"}
{"i": "5701113007308800", "t": "Bring up as many approaches: Your goal is to make faster web browser for phones. You can change the phones, the data center etc. There's a limited network bandwidth and the browsers from the companies can't be altered."}
{"i": "5175572890124288", "t": "We've got Quad-trees making up a screen. Every box of the Quad-tree has either color white or black. How would you design the data structure of this Quad-tree? \r And how would you count the number of pixels in a screen of a given color, given a Quad-tree?int numberOfPixelsGivenColor(QuadTree* t, bool col)i used bool to specify white/black."}
{"i": "5201242701692928", "t": "write a function:int median(int a, int b, int c)and then write another function:int median(int a, int b, int c, int min, int max)"}
{"i": "5678572482068480", "t": "Then the more difficult question was how I'd reverse this. \rImplement function:GetStringsfromNumeronym(numeronym){...}h3e -> {house, halle, hocke....}"}
{"i": "5174531360555008", "t": "Started out with simple question - to get warmed up: \rImplement a function:makeNumeronym(string s){...}Ex: house -> h3e, marcus -> m3s"}
{"i": "5169618186403840", "t": "Given a binary tree populate the inorder successor of each node. Do it iteratively."}
{"i": "5201195591270400", "t": "design a BST with CERNER as an input."}
{"i": "5688386482339840", "t": "Design and implement checkers game using oops concept"}
{"i": "5648704205750272", "t": "Design implement chess game using Java"}
{"i": "5685808562438144", "t": "Different types of testing..If you had to determine whether a padlock was functioning properly with only 3 tests, what tests would you use?"}
{"i": "5679920564928512", "t": "design a class that will be used to store the information of the patients visiting to the hospital., i.e. a class which stores demographic information of a person like name, address, phone number, male/female.  What if the person has any prefix to the name, multiple phone numbers/addresses, how will you handle job in case of multiple locations\r(If a person is both at 12 PM in USA on a date, then that date is different from date in India), how will you handle the validations of  these fields when the user enters the values using java"}
{"i": "5734016751763456", "t": "Design a class Make an object that holds temperatures of a person and can say whether or not they have a fever using java"}
{"i": "5720993874051072", "t": "create a class with object that tells a nurse the frequency of medicine that a patient must take, i.e.  a system to tell patients when to take medication using java"}
{"i": "5677923539353600", "t": "design a class (give different methods and variables that will be used) that will provide information about the allergy of a patient.\r e.g. who reported the allergy(patient/doctor/relative), different symptoms of the allergy that are detected, severity, method that returns when was that \rallergy detected in that patient. Along with info about disease if it is not allergy, and can be updated easily, how would you record the time of the disease report using java"}
{"i": "5735906000502784", "t": "You are given 4 integer numbers. Using each number once and only once with any operators from +, -, *, /, (, ), build an expression that evaluates to 24."}
{"i": "5646591618711552", "t": "Write a method that combines an array of iterators into a new one, such that, e.g. for input [A B C] where:\rA.next() returns a1, a2, respectively;\rB.next() returns b1;\rC.next() returns c1, c2, c3, respectively;\r The new iterator will return elements in this order: a1 b1 c1 a2 c2 c3."}
{"i": "5098159661383680", "t": "{1, 1, 0, 0, 0},\r{1, 1, 0, 0, 0},\r{1, 0, 0, 1, 1},\r{0, 0, 0, 0, 0}, \r{1, 0, 1, 0, 1}\rwrite a function to return the size of max cluster and coordinate of it, max cluster size to the above example is 5."}
{"i": "5630442004807680", "t": "given an array with elements check if just by exchanging two elements of the array we get a sorted array.\r time restriction:\rO(NlogN)\rspace restriction: 2N"}
