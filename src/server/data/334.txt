{"i": "14876820", "t": "You are a startup trying to design a new mobile online music player. \r(startup => you need to differentiate yourself from the existing music players)"}
{"i": "14873837", "t": "An airline carrier is losing a lot of bags. You have been assigned to help them out. What would you do?"}
{"i": "14868810", "t": "Write a program to read improperly indented C code from a file and add tabs and new lines as per convention in a new file. (Eg. After a control statement is encountered, print the opening brace on a new line. Then, on the line after that, increase indentation and begin writing code. Reduce indentation when a closing brace is encountered by the file pointer)."}
{"i": "14869815", "t": "How do you sort a billion rows of data of integers (a few gigabytes) in a file with only 1024KB of main memory."}
{"i": "14876793", "t": "Qn below!"}
{"i": "14874809", "t": "You are given an array of integers. Find all the combinations of the numbers of the array, that sum to another number(might be different for different combination) from the array.\rOne property of the array: The maximum number of the array will not be much greater than the others."}
{"i": "14869791", "t": "Sequence of steps that happen in CPU, cache, TLB, VM, HDD leading to execution of \u201cx = 7\u201d which isn\u2019t present in cache or sysmem nor translation in TLB. Also specify if any intrs, exceptions or faults are generated."}
{"i": "14868786", "t": "Assuming you have three N bit unsigned integers a, b and c, what is the min number of bits you would need to store the result of a * b + c?"}
{"i": "14873804", "t": "Regular Expression:\r1. it should contain 8 characters\r2. atleast one alphabet\r3. atleast one number\rNumber and Alphabets may not be consecutive"}
{"i": "14875762", "t": "Given:- \r1) an array of strings.\r2) a directed graph whose each node has a character\r(graph may be cyclic)\r count the number of occurrences of each string(given in array) in the graph."}
{"i": "14872766", "t": "int isBST2(struct node* node) {\r  return(isBSTUtil(node, INT_MIN, INT_MAX));\r} \r/*\r Returns true if the given tree is a BST and its\r values are >= min and <= max.\r*/\rint isBSTUtil(struct node* node, int min, int max) {  if (node==NULL) return(true); \r  // false if this node violates the min/max constraint  if (node->data<min || node->data>max) return(false);\r  // otherwise check the subtrees recursively,\r  // tightening the min or max constraint\r  return\r    isBSTUtil(node->left, min, node->data) &&\r    isBSTUtil(node->right, node->data+1, max)\r  );\r  Change the BSTutil function such that if root==null return false. \rAfter changes the code should tell correctly if binary tree is BSt or not."}
{"i": "14868757", "t": "#include<stdio.h>\r void main()\r{int indx=0, a[5];\ra[indx]=indx++;\rprintf(\"%d\",a[indx]);\r}\rwhat will be the output?"}
{"i": "14879745", "t": "Give a Data structure to store Name-value pair like name-age \r\"abc\",12\r\"xyz\",34...\rsuch than insert(name,value), value = search(name), name = nthentry(n), delete(name); all can be perfomed in O(1).\rNote:- after deletion order should be maintained.Ex.\r\"ds\",12\r\"df\",78\r\"teu\",54\r\"etr\",12\rIf delete(\"df\") is called then nthentry(2) should return \"teu\""}
{"i": "14866760", "t": "There is one linked list having two pointer one as usual next and other is random pointer pointing to any random node in list.\rwrite algo to make a duplicate of it.\rNote:- Original list is const, Can't be modified."}
{"i": "14874762", "t": "give a string as a input(string should be one word)if the input string is multiple by 3 then print only the multiple of 3rd letter in the string, otherwise print the input. For eg: if input is Elephant, then print Elephant .\r      if input is Elephants then print eas."}
{"i": "14877769", "t": "Given an O(v+e) time algorithm to compute the path in a connected in unidirectional graph that traverse each edge in each direction exactly once.Describe how u can find ur way out of the maze if u r given a large supply of pennies.using JAVA"}
{"i": "14869744", "t": "Find the nth node from the last of linked list using both recursion and iterative approach"}
{"i": "14879737", "t": "Find the LCA of two nodes in a binary tree (not BST); ensure that both nodes are present in the tree; if not then error should be returned."}
{"i": "14866748", "t": "compare \"write through cache\" and \"look aside cache\""}
{"i": "14880725", "t": "You are at the center of n*n*n cube if n is odd and somewhere near center if n is even, print all possible paths to reach the surface of the cube"}
{"i": "14872723", "t": "suppose a matrix A. find a element x in this matrix,x is the smallest in his line but the biggest in his column. Give codes in C"}
{"i": "14871723", "t": "Sort an array of characters in linear time complexity (and linear space complexity if that's possible)."}
{"i": "14876712", "t": "given m x n matrix print all the possible paths top to down.\r Example\r1 2 3\r4 5 6\r7 8 9\r path for root(0,0) 1\r1-4-7\r1-4-8\r1-5-7\r1-5-8\r1-5-9\r similarly path for 2(0,1)\r2-4-7\r2-4-8\r2-5-7\r2-5-8\r2-5-9\r2-6-8\r2-6-9\r note- root 1 can go to middle down or right down since there is no left index available. if root element has left middle and right it can go to all those paths like 2 or 5.\r follow up : provide the path which has maximum path sum.\r code in java."}
{"i": "14874716", "t": "assume that dictionary has only 5 words...\rAPPLE,APE,BABY,BALL,CAT\rwrite a program which will accept a string and list all possible words in the dictionary which start with that string.use binary trees for fast retreival in java"}
{"i": "14866702", "t": "Write a C program to display * for each letter of password you type in command line. \r Like:Password\r        ********"}
{"i": "14869694", "t": "implement adding two unsigned numbers without using \"+\" or \"++\""}
{"i": "14869690", "t": ">Compute the number of connected component in a matrix, saying M. Given two items with coordinates [x1, y1] and [x2, y2] in M, M(x1, y1) == -1 && M(x2, y2) == -1 && |x1-x2|+|y1-y2|=1 <=> they are connected\r Example:\r     -1  0 -1  0  0\r    -1 -1  0 -1 -1\r     0  0  0  0 -1\r     0  0  0 -1 -1\r     0  0  0 -1  0\r     0 -1  0  0  0\r     0 -1  0  0  0\r Output: 4. And they are:\r     -1\r    -1 -1\r     -1\r     -1 -1\r       -1\r    -1 -1\r    -1\r     -1\r    -1\r My idea is to scan the matrix. \r     Initialization:\r    count = 0.\r For every item in the matrix, do the following three tests.\r (1) If it's 0, skip\r > (2) If it's -1, check its four neighbors. If there is a neighbor whose\rvalue is not 0 and -1, assign the value of this neighbor to the current item. Otherwise, `count++`, ant then assign `count` to the current item.\r> \r> (3) If it's not 0 and -1, assign the value of current item to its four\rneighbors whose value is -1.\r Can anyone help me verify this solution?"}
{"i": "14874701", "t": "There is a stream of integers coming in. And you have to store top n elements. What data structures you would use? \r1, The solution should be efficient such that n can be millions of integers. \r2, Should be able to display integers in descending order. Sorting should not be done whenever requested.\r3, Insert, Delete should be as optimal as possible."}
{"i": "14875685", "t": "Given a matrix with 1's and 0's, find the number of groups of 1's. A group is defined by horiz/vertically adjacent 1's."}
{"i": "14874686", "t": "Count number of instances of pattern in a string. \rint CountInstance(string word, string pattern)"}
