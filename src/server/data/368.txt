{"i": "13872673", "t": "You have a library provided by the vendor. All you have is header files and library files.\rLibrary contains the class Shape and there is whole hierarchy tree (i mean classes which derive from this base class).\rNow you want to add some function \"getArea\" (not originally present in the class or any of its derived class) in the class \"Shape\" , you dont have the source code.\r Using this library, you have written a lot of code. Now you have to make some changes so that, any object of Shape class (or its derived class) will be able to call this function.\rWith your strategy, you should be able to override the definition of this function in the derived class."}
{"i": "13875675", "t": "What would be the output for the following code fragment?\r main()\r{\rint i=300;\r     char *ptr = &i;\r     *++ptr=2;\r     printf(\"%d\",i);\r}"}
{"i": "13874674", "t": "What would be the output for the following code fragment?\r void foo(int b[][3] );\rmain()\r{\r     int a [3][3]= { { 1,2,3} , { 4,5,6},{7,8,9}};\r     foo(a);\r     printf(\"%d\" , a[2][1]);\r}\r void foo( int b[][3])\r{\r++ b;\rb[1][1] =9;\r}\r (a)  8\r(b)  9\r(c)  7\r(d)  None of the above"}
{"i": "13873681", "t": "Differentiate the above declarations.\r1. const char *a;\r2. char* const a;\r3. char const *a;\r For each of the above, which operation below is legal and which is not?\r       *a='F'\r      a =\"Hi\""}
{"i": "13873680", "t": "What does the following represent?\r void (*abc(int, void (*def)()))();"}
{"i": "13875673", "t": "What does the following do:\r void afunction(int *x)\r{\rx=new int;\r*x=12;\r}\r int main()\r{\rint v=10;\rafunction(&v);\rcout<<v;\r}\r a) Outputs 12\rb) Outputs 10\rc) Outputs the address of v"}
{"i": "13868667", "t": "Write a method to sort an array of strings so that all the anagrams are next to each other."}
{"i": "13854665", "t": "implement dir *"}
{"i": "13810678", "t": "Construct a BST and do its zigzag traversal."}
{"i": "13817668", "t": "You are given a huge log file which holds the entry and exit time of each person entering and exiting the office on a given day\r format of file:\rentry time                      exit time\r09:12:23                        11:14:35\r10:34:01                         13:23:40\r10:34:31                          11:20:10\r.\r.upto N entries for a given day\r Design a function which returns the total number of persons in the office at any given time.  e.g input to function is 11:05:20.\r The interviewer said he could call the function every second with input 11:05:20, 11:05:21,11:05:22, 11:05:23..........14:30:30\r I really did not understand how to optimize the function."}
{"i": "13804664", "t": "Write a program to find the first unique element in the following array:\r{'a', 'a', 'u', 'b'}"}
{"i": "13804663", "t": "Write o/p of following program\r Class A\r{\r public static void main(String[] s)\r{\rSystem.out.println(\"Hello\");\r}\rpublic static void main()\r{\rSystem.out.println(\"Hello\");\r}\rpublic static void main (int args[])\r{\rSystem.out.println(\"Hello\");\r}\r}"}
{"i": "13798663", "t": "Write a method to change the password of a valid user in the following database table. The method accepts 3 parameters userId, oldPassword, NewPassword:\r ......................................................\rUserId  Username  Password\r......................................................\r .......................................................\r The password should be changed only when the old password is valid."}
{"i": "13789663", "t": "Design a class for a digital watch - outline the methods, properties, and class hierarchy. UML diagram welcome but not required. Write some test cases to test the above methods outlined."}
{"i": "13803663", "t": "Write a function that counts the number of primes in the range [1-N]. Write test cases for this function."}
{"i": "13800663", "t": "Write a java program to explain life cycle of a thread."}
{"i": "13778685", "t": "Write a java function to access properties from ini file.\r(contents of ini file will be like: \"username=xyz\")"}
{"i": "13800662", "t": "Write a program to find the missing element in second array(Array2):\rArray1:\r5  15  2 20  30  40  8  1\rArray2:\r2  20  15  30  1  40  0  8"}
{"i": "13778684", "t": "Write a java program to count number of words in a file."}
{"i": "13793664", "t": "Without using loops, write a function to print 1 to 500 in serial order."}
{"i": "13798662", "t": "Write a String Reverser (using Recursion) and write JUnit test for the reverse method."}
{"i": "13797664", "t": "Write a java program to count number of words in a file."}
{"i": "13786675", "t": "Without using loops, write a function to print 1 to 500 in serial order."}
{"i": "13764681", "t": "Write a String Reverser (using Recursion) and write JUnit test for the reverse method."}
{"i": "13760662", "t": "Your function takes input stream of numbers continuously in chunks. The stream could be very large, and you don't have the memory in disk to store it. While the input stream keep coming to your function, at some point there will be a sentinel number that will indicate the end of the stream. So when you encounter that sentinel number, you have to return a random number from the input stream you got. The random number selection should be that the probability for each number in stream should be equal for selection."}
{"i": "13721775", "t": "How do you get the current code pointer (eip) into the eax register?"}
{"i": "13717802", "t": "What is the output of the following procedure\r{\rvoid foo() {\r  int* a = 0;\r  char* b = NULL;\r  printf(\"%x %x\", a, b);\r  printf(\"%x %x\", *a, b);\r  printf(\"%x %x\");\r}\r}"}
{"i": "13719789", "t": "Expand the  following fragment of C code to make it more understandable\r{char* c = *a ? *++*a : *++*b;}"}
{"i": "13730794", "t": "Find the(two) nodes which are at maximum distance in a binary tree?\rThis is not finding the distance but the nodes which are farthest."}
{"i": "13719769", "t": "Lunatic server solutions asked this problem for fresher recruitment in india.\rOn monday we asked this problem for freshers.\rthere was a very easy problem.\rproblem states that...\r  You are required to write a program to do simple pattern matching, in a string. The string in which the pattern is to be found, henceforth referred to as Master String, can be composed of the following character sets: \ra-z {any character in the range a to z} \rA-Z {any character in the range A to Z} \r0-9 {any digit in the range 0 to 9} \rThe pattern to be matched is also a string, henceforth referred to as Scan String. The Scan String can be composed of the above character sets, as well as two special characters, which are: '.' and '*'. The dot ('.') is to be interpreted as matching any one character from the above character sets and the star ('*') is interpreted as matching zero or more of the previously matched character. The Scan String may or may not contain the special characters. \rA pattern is considered matched when the longest substring that satisfies the pattern is returned. \rInput Specification \rThe first line of input contains the Master String. \rThe second line of input contains the Scan String. \rBoth Master String and Scan String will not be greater than 80 characters in length. \rOutput Specification\rYour program must output the length of the longest substring matched. If there is no match, then the length of the matched substring is zero. \r Input: \rabcd23Abdaaaa4g9\r.*Abd.\t\t{ dot-star-A-b-d-dot }\rOutput: \r10\r Input: \raaadaaabbbb129cd\ra.*d\t\t{ a-dot-star-d }\rOutput: \r16\r Input: \r0AbC1dEf2GhI3jKl4MnO5pQr6StU7vWx8Yz9\r3JkL4\t\t{ 3-J-k-L-4 }\rOutput: \r0\r Input: \r090m90mm90mmm90mm90m909\r0m*9\rOutput: \r5"}
