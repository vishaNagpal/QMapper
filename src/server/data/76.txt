{"i": "6023427235250176", "t": "There are n bus lines, known bus stops by bus, the bus is bi-direction, ask from station A to station B at least a few transfers."}
{"i": "5713071958917120", "t": "Implement a trie tree which can add and search word, an extra \"*\" sign will also be considered, similar to Leetcode 211 but with \"*\"\r '*' means any sequence of characters (including the empty sequence)."}
{"i": "5648312173592576", "t": "Given a Map (representing an old phone key number and possible letters present there) and a sequence of keys return all possible combinations of strings that are possible to produce.Map<String, String[]> map = new HashMap<String, String[]>();\r\n    map.put(\"1\", new String[] { \"a\", \"b\", \"c\" });\r\n    map.put(\"2\", new String[] { \"c\", \"d\", \"e\" });\r\n    map.put(\"3\", new String[] { \"f\", \"g\", \"h\" });\r\n\r\nString in = \"12\";\r\n\r\nList<String> mix(String in, Map<String, String[]> map)The result for \"1,2\" should be [ac, bc, cc, ad, bd, cd, ae, be, ce]"}
{"i": "5984718171406336", "t": "given a binary array, you can flip 0 -> 1 or 1 -> 0 to make all the 1  \r\nare in the left part and all the 0 to the right part, return the minimun flip required\r\nexample 1\r\n 1011000  -> 1111000 only need one flip 0 -> 1\r\n example 2\r\n 00001 -> 10000 require 2 flips\r\n public int findMiniFlip(int[] nums) {\r\n        \r\n    }\r\n}"}
{"i": "5668796483239936", "t": "Count number of ways to paint a fence with N posts using K colors, where no FOUR consecutive fences can have the same color."}
{"i": "5095457003929600", "t": "Robot hand movement\rGiven a (1) string message (consisting of only upper case alphabets), and (2) width of keyboard, output the movements required by an automated robot hand to print out the string message.\rThe robot hand can move right, left, up or down. It cannot move diagonally.\r Ex 1:\rString message: \u201cHI\u201d\rWidth: 26\rOutput: R8, T, R1, T\r Ex2:\rString message: \u201cHELLO\u201d\rWidth: 13\rOutput: R8, T, L3, T, R7, T, T, D1, L10, T"}
{"i": "5693916136341504", "t": "Write all the possible numbers returned from a calculator pad where a start number move in a L direction in any directions(1-2moves)\r ie. From calculator pad. Start from 8 --> go in L shape (2up, 1right), and it returns 3 \rie. Start from 2, (move 2  down, 1 left), it will be 7\rie. Start from 2(move 2 down, 1 right), it will be 9\rie. Start from 7(move 1 left, 2 up), it will be 2\rie. Start from 7(move 1 up, 2 left), it will be 6"}
{"i": "5171917085474816", "t": "Implement the code to parse a string into a value type? you are implementing the library functionality for Enum.Parse\r1. How do you discover valid values?\r2.What do you do when the user asks for you to parse an invalid value?\r3.How do you handle casing issues?"}
{"i": "5655056211771392", "t": "Let's assume that we have a binary classification system that classifies sets of samples, the rules for the classification are:\r The set is 'GOOD' if ALL the samples are 'GOOD'\rThe set is 'BAD' if ANY sample in the set is 'BAD'\rBased on this we receive an input that contains multiple lines, where each line represents the classification of a set of samples. The format of each line is\r class,sample_id_1,sample_id_2,...,sample_id_n\rwhere class will either be GOOD or BAD. The sample IDs represent the samples contained in the classified set.\r Now, for generating the output response we have to consider three cases:\r If a unique mapping of samples-to-class exists, we output the corresponding mapping (sorted by the samples IDs)\rIf no consistent sample-to-class is possible, we output the answer NO CONSISTENT\rIf more than one mapping would be consistent, we output the answer MULTIPLE MAPPING.\rTo better illustrate the problem, following there are 4 examples\r Sample Input\rGOOD,10,11\rGOOD,11,12\rGOOD,10,12\rSample Output\r10,GOOD\r11,GOOD\r12,GOOD\r Sample Input\rGOOD,10,11\rBAD,11,12\rSample Output\r10,GOOD\r11,GOOD\r12,BAD\r Sample Input\rGOOD,10,11\rBAD,11,12\rGOOD,11,13\rGOOD,12,13\rSample Output\rNO CONSISTENT\r Sample Input\rBAD,10,11\rBAD,11,12\rSample Output\rMULTIPLE MAPPING\r If someone knows how to solve the problem, even if it's just pseudocode I'd really appreciate it"}
{"i": "4896674508963840", "t": "Dear Friends, \r\tplease help to get the logic for the below , basically it is atoi implimentation question.\r input : string as 0x1234\routput : in int formate 0x1234\r if input: 0x12Ab43\routput should be 0x12Ab43\r if input : 0xdY6\routpust : should give an error , since Y is out of scope."}
{"i": "5629567728353280", "t": "the longest unique value path in a graph\r/**\r * Definition for undirected graph.\r * class UndirectedGraphNode {\r *     int label;\r *     List<UndirectedGraphNode> neighbors;\r *     UndirectedGraphNode(int x) { label = x; neighbors = new ArrayList<UndirectedGraphNode>(); }\r * };\r */\rpublic class Solution {\r    public int findLongestUniqueValuePath(List<UndirectedGraphNode> node) {\r     }\r}"}
{"i": "5143049670754304", "t": "Basic sales tax is applicable at a rate of 10% on all goods, except books, food, and medical products that are exempt. Import duty is an additional sales tax applicable on all imported goods at a rate of 5%, with no exemptions.\r  When I purchase items I receive a receipt which lists the name of all the items and their price (including tax), finishing with the total cost of the items, and the total amounts of sales taxes paid. The rounding rules for sales tax are that for a tax rate of n%, a shelf price of p contains (np/100 rounded up to the nearest 0.05) amount of sales tax.\r Write an application that prints out the receipt details for these shopping baskets.\r Input:\r 1) 1 book at 12.49\r2) 1 music CD at 14.99\r3) 1 chocolate bar at 0.85"}
{"i": "5682428306784256", "t": "Given a string s, break s such that every substring of the partition can be found in the dictionary.\rReturn the minimum break needed.\rExample\rGiven a String CatMat\rGiven a dictionary [\"Cat\", \"Mat\", \"Ca\", \"tM\", \"at\", \"C\", \"Dog\", \"og\", \"Do\"]\rreturn 1\rwe can break the sentences  in three ways, as follows:\rCatMat = Cat Mat    break 1\rCatMat = Ca tM at   break 2\rCatMat = C at Mat   break 2\rbut the first way has the minimum break, thus return 1\rpublic int wordBreak(String s, Set<String> dict) {\r        // Write your code here\r    }"}
{"i": "5638979343876096", "t": "Given a 2d grid map of '1's (land) and '0's (water), find the perimeter of  each island. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water."}
{"i": "5699170626174976", "t": "To determine if two  graphs have isomorphism or not"}
{"i": "5179444686749696", "t": "Give an array A, find the (i, j) pairs that satisfy the condition. \rCondition 1: A [j] = A [i] + 1, Condition 2: j - i is as large as possible\rFollowup condition 1 is changed to A [j]> A [i]"}
{"i": "5676701773201408", "t": "Given an array of length n + 1, containing elements 1 through n and a space,\rRequires the use of a given swap (index i, index j) function to sort the array,\rYou can only swap the gap and a number, in the end,  put the gap at the end"}
{"i": "5715596997033984", "t": "find a shortest string to cover all of a list of string,\rFor example,  [aab, aabb, bc], should return aabbc,\rbecause aab, aabb, bc  are all the substring of aabbc"}
{"i": "5668923855863808", "t": "Given two strings containing only numbers, return product of the two strings. Strings are large so conversion to interger is not possible."}
{"i": "5721612904038400", "t": "Your code is inside a service that receives a large stream of integers, large enough that it can't be stored on any disk. You don't know the how many integers will be there on the stream. You have to write a sampler which selects K integers such that likelihood of selecting any integer from the stream is equal."}
{"i": "5756053173043200", "t": "How to find three largest numbers in array?"}
{"i": "5737945590923264", "t": "Given a grid of M*N size and robot is sitting on the top leftmost corner (0,0) and has to reach the bottom right most corner (M-1,N-1). Robot can only move up, down, left or right and cannot move diagonally.  Find the shortest path on the grid. \rFollow find total number of paths possible."}
{"i": "5100072617377792", "t": "Write a function to convert a String of ip address to hex\reg: ip is 197.27.11.11  = 0xC51BBB. The conversion to hex has to be done without pre-existing library function. like String.format() etc."}
{"i": "5637771115888640", "t": "An web service maintains logs (suppose there are multiple log files per day) of all ip address which has requested service. If there is a DOS attack on the server find all ip addresses that has sent more number of requests and block them. Can this be done without writing any function in higher programming language? \r What would the function look like if written in some language like C, Java etc?\r Can this be done in Time optimized and space optimized manner?"}
{"i": "6535294164664320", "t": "Given a linked list with next and random pointer, deepcopy the linked list and return new head.\r Node {\rchar val, \rNode next, \rNode random }\r A {\rval: \u2019a\u2019\rnext: D\rrandom: G}\r D {\rval: \u2019d\u2019\rnext: G\rrandom: A}\r G {\rval: \u2019g\u2019\rnext: null\rrandom: D}\r  -----------\r|         |\r|         V\rA -> D -> G -> null\r -------------\r|           |\r|           V\rA' -> D' -> G' -> null"}
{"i": "5186191275065344", "t": "Explain in detail about your favourite android api."}
{"i": "5240736285982720", "t": "given 2 list of interval representing users online offline timestamp e.g (already sorted), find all intervals that both of users are online.\r e.g A= [(3, 5), (7, 11)] B=[(2, 4), (9, 10)] --> [(3, 4), (9, 10)]."}
{"i": "4848261100732416", "t": "Design a SparseVector class that implements \rVector interface, which contains 4 methods: get(int index), \rincrement(int index, int delta), numNonZeros(), and dotProduct(Vector other)"}
{"i": "5655428238147584", "t": "Give a vote list = [(a, 100), (b, 150), (a, 200)] # (name, timestamp) and time T\rFind the highest number of votes (or anyone with the highest number of votes) at T\rex: T = 100 -> a, T = 150 -> a or b, T = 200 -> a\r followup1, give one more input K, find Top K votes at T\r followup2, the same vote list, K, but given the Top K votes list, find the time T."}
{"i": "5635558645694464", "t": "what is technology?"}
