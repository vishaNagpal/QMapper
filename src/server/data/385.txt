{"i": "13085662", "t": "There are 1000 files located in a Unix directory tree under /repository.  You are asked to provide a list of every filename that contains an IP address.  How would you solve this problem?  Provide a working example."}
{"i": "13072668", "t": "there is n node graph, each node having only one root. All nodes are labeled in a random order from int 0 to n-1\rthe graph is represented in a array format such that the value in the array at index equal to child node label is root node label. \rFor root assume the value is -1. \rEx.3\r\n4   1     2\r\n   0 5the array is  \rvalue : 1, 3, 3, -1, 3, 1\rIndex : 0, 1, 2,  3, 4, 5\r Find the hight of graph. I have given an answer in O(n^2) \rfollow up question, if you dont have any restiction on space reduced the time complexity."}
{"i": "13075666", "t": "Given a 3D space with a billion points. Give a million points which are closest (in distance) to a given point."}
{"i": "13014695", "t": "Given two lists of strings return a list of strings that is an intersection of both of the lists.\rAnalyze running time and space complexity.\rGive Test Case scenarios."}
{"i": "13083663", "t": "What is a queue, advantages, disadvantages"}
{"i": "13014694", "t": "What is a Stack, what are its advantages, disadvantages."}
{"i": "13074667", "t": "What is finally in java, and why is it used."}
{"i": "13082664", "t": "Exceptions in Java, checked/unchecked and how are they handled"}
{"i": "13083662", "t": "What is an abstract class and how is it different from a normal class, give a scenario where you would use one over the another"}
{"i": "13075663", "t": "Write a Program\rYou have an array that stores million integers. you replace one integer of the array. How will you find that integer. Array is not sorted. Time complexity should be as small as possible."}
{"i": "13083661", "t": "Write a Program\rReverse a String. Length of String is very long. Do not use in-built reverse method. Reversal method should be time efficient. Calculate the complexity."}
{"i": "13082663", "t": "Write a Program\rYou will create an employee class with the following properties:ID (int), FName(string), LName(string). (Functionality) to track an employee's manager and subordinates. method that displays the names of all subordinates for a given employee."}
{"i": "13014693", "t": "What is an abstract class and how is it different from a normal class, give a scenario where you would use one over the another"}
{"i": "12995679", "t": "Given an integer n, compute 2 integers x, y satisfying: n<=x*y<=n+2; |x-y| is minimal."}
{"i": "13061674", "t": "Given two binary trees T1 and T2 which store character data, duplicates are allowed. Devise an algorithm to decide whether T2 is a subtree of T1. T1 has millions of nodes and T2 has hundreds of nodes."}
{"i": "13000687", "t": "There is a monkey which can walk around on a planar grid. The monkey can move one space at a time left, right, up or down. That is, from (x, y) the monkey can go to (x+1, y), (x-1, y), (x, y+1), and (x, y-1). Points where the sum of the digits of the absolute value of the x coordinate plus the sum of the digits of the absolute value of the y coordinate are lesser than or equal to 19 are accessible to the monkey. For example, the point (59, 79) is inaccessible because 5 + 9 + 7 + 9 = 30, which is greater than 19. Another example: the point (-5, -7) is accessible because abs(-5) + abs(-7) = 5 + 7 = 12, which is less than 19. How many points can the monkey access if it starts at (0, 0), including (0, 0) itself? There is no input for this program.\rPrint out the how many points can the monkey access. (The number should be printed as an integer whole number eg. if the answer is 10 (its not !!), print out 10, not 10.0 or 10.00 etc)"}
{"i": "13057673", "t": "F2F Round4 Q2\rWrite code to find Nth last node in a linked list."}
{"i": "13053670", "t": "F2F Round4 Q1\rGiven two strings str1 and str2, write code to find out if all non-unique elements in str2 are in str1?"}
{"i": "13000682", "t": "F2F Round3 Q3\rGiven a binary tree build a vertical sum array."}
{"i": "13031699", "t": "F2F Round3 Q2\rDesign a chess game."}
{"i": "13031698", "t": "F2F Round3 Computer Fundamentals\rWhat is the difference between a 32bit and 64processor?\rWhat is the difference between a 1.8Ghz processor and a 2.3GHz processor?\rInvent your own tables and write a query to get top 10 mobile numbers with the highest 3G data usage."}
{"i": "13000681", "t": "F2F Round2 Q3\rGiven a node in a binary tree, how will you find out if left and right subtrees are mirror images of each other?"}
{"i": "13055672", "t": "F2F Round2 Q2\rGiven an array A, build another array B in which each element is the product of all elements in A other than the element at the same position. Write code that does this with and without division."}
{"i": "13056670", "t": "F2F Round2 Q2\rGiven an unsorted array and a number N, build pairs using the numbers in the array that add up to N."}
{"i": "13000680", "t": "F2F Round1 Q4\rFind the biggest BST in a given  binary tree."}
{"i": "13054672", "t": "F2F Round1 Q3\rHow will you find out if a given binary tree is a BST?"}
{"i": "13055671", "t": "F2F Round1 Q2\rDesign a hash table. How do you address collisions?"}
{"i": "13031697", "t": "F2F Round1 Q1\rWrite code that defines a data structure to perform these operations in an optimal way:\rInsertAtTail\rDeleteNodeAtPosition\rGetTail"}
{"i": "13058667", "t": "Written test Q2\rGiven a binary tree and a number N, print all paths that start from root and add up to N."}
{"i": "13057672", "t": "Written test Q1\rFind the position of first '1' in a sorted array that contains only 0-s and 1-s."}
