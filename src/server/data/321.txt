{"i": "15038764", "t": "Given a tree as below.\r                                  1\r                              /      \\\r                           2           3\r                         /   \\             /  \\\r                       4      5       6       7\r                     /   \\    /  \\        / \\        /   \\\r                 8     9 10 11 12 13   14   15\r Create a linked list as follows:\r1->5->6\r2->9->10->12\r3->11->13->14\r4->NULL\r8->NULL\r7->NULL\r15->NULL"}
{"i": "15027783", "t": "how many ordered trees are possible with N nodes?"}
{"i": "15035780", "t": "Given an initial word and a final word(both same length) suggest an algorithm to find if there were some intermediate steps to convert the initial word to the final word. \rThe word at every step should be just one character different from the previous word and should be a valid dictionary word.( E.g TAP -> TOP is allowed, since the only difference from previous word is 2nd character and TOP is a valid dictionary word , but TAP -> TOO isn't allowed since 2 characters are different)."}
{"i": "15026777", "t": "Write a function that will return true if a circular singly linked list has duplicate values. For example, given a pointer to a node in the circular singly linked list, *slist, where the only values each node of this list contains int value, and *nxt_pointer.  How would you traverse it and what way will allow you to have the best case for time-complexity? How would we know when the circular singly linked list stops?"}
{"i": "15049693", "t": "What will be the minimum and maximum output of Ii=0;\r\nthreadA\r\n{ i++;\r\ni++;\r\ni++;\r\n}\r\nthreadB\r\n{ i++;\r\ni++;\r\ni++;\r\ni++;\r\ni++;\r\n}"}
{"i": "15039731", "t": "Array on integer is given\rfind out next bigger number \rEx {2,5,3,4,61}\rOut: 2->5\r        5->6\r        3->4\r        4->6\r         6->-1 //not possible\r          1-> -1 //not possible"}
{"i": "15028727", "t": "Given a Binary Search Tree, find the k-th largest value of the the tree."}
{"i": "15028721", "t": "Suppose you have some guests arriving at a party. For each guest, you are given the arrival and departure time. When a guest arrives he is given a wine glass and when he leaves he returns that wine glass (it becomes available to be given to another guest). Find the minimum number of wine glasses needed to serve all the guests. The arrival and departure team can only be between 1800 to 2359 hours."}
{"i": "15028720", "t": "Given a binary tree, such that each node contains a number. Find the maximum possible sum in going from one leaf node to another."}
{"i": "15036715", "t": "For each subject topic(like  Maths,Physics,Java,Sql), I have some urls.\rIn each url,I have a list of questions.\r Now on each click(lets say Physics),I shall hit all urls(which could be in thousands) and then parse through them to get all the questions and persist them to DB.\r Please tell me what can be the high levl and low level design for this in Java(Explain patterns that cn be used,Threads etc...)"}
{"i": "15038704", "t": "Write an algorithm to scan all anagrams in a word doc.\rThis should be done in minimum time possible."}
{"i": "15032712", "t": "I am given a third-party library with its header to use. Now this library has a class 'Base'. Problem with this class is that it does not have virtual destructor. Now since i don't have the thirds-party code with me i can not do changes over there. \r I am told to write few derived classes with this and make sure that the object gets cleaned properly when objects are delete. How can we achieve this?"}
{"i": "15028712", "t": "Why here output is not Derived Class????\r #include <iostream>\rusing namespace std;\r class Base {\rpublic:\r  char* name;\r  void display() {\r    cout << name << endl;\r  }\r};\r class Derived: public Base {\rpublic:\r  char* name;\r  void display() {\r    cout << name << \", \" << Base::name << endl;\r   }\r};\r int main() {\r  Derived d;\r  d.name = \"Derived Class\";\r  d.Base::name = \"Base Class\";\r   Derived* dptr = &d;\r   // standard conversion from Derived* to Base*\r  Base* bptr = dptr;\r   // call Base::display()\r  bptr->display();\r}\r // OUTPUT\rBase Class"}
{"i": "15038694", "t": "We have table:\rcreate table employee (id int, name varchar, salary decimal, mgr_id int);\r We want to print name and salary of employees that make more than their manager or don't have a manager.\r This can be done by the following SQL:\rselect name, salary\rfrom employee e, employee m\rwhere e.salary > m.salary and e.mgr_id = m.id;\r Question: how to do this with Hadoop? Write down the function for the mapper and reducer respectively.\r map: k,v -> (k\u2019,v\u2019):\rreduce: k, <list v>, ->k\u2019, v\u2019:"}
{"i": "15025703", "t": "suppose you have a string like-I am a king , \rin this string you have to write code to count the total number of words which have only single alphabet .for this string answer sholud be 2."}
{"i": "15025702", "t": "Given pointer to the bytes array on size N that represents big integer \"a\" and 2-bytes integer \"b\" implement mod (%) operation for them: a % b"}
{"i": "15035694", "t": "public class Finder {\r\npublic static void main(String[] args){\r\nSystem.out.println(X.Y.Z);\r\n}}\r\nclass X{\r\nstatic class Y{ static String Z =\"Apple\"; }\r\nstatic W Y = new W();\r\n}\r\nclass W{ String Z = \"Orange\";}Please give the output with proper reason."}
{"i": "15033674", "t": "In a BST, write a function to find two nodes whose sum is equal to a given integer 'k'."}
{"i": "15029683", "t": "represent a n-ary tree with a data structure.\rand also check whether tree has a cycle or not?"}
{"i": "15031674", "t": "How to find length of a singly linked list with loops??"}
{"i": "15024669", "t": "How can you efficiently implement three stacks in a single array, such that no stack overflows until there is no space left in the entire array space."}
{"i": "14990402", "t": "write code in java /c for expression 5+4*(7-15) or have parenthesis in any order ."}
{"i": "15015729", "t": "Let's say you have to make changes to 1000 API's. For example, currently developers need to put a .then() just to write something to the screen; we want to remove this in simple cases, but also enable it in cases where you really do want to write something only AFTER some other action has taken place.\rThese 1000 API's are split among 200 teams, and you're a product manager for one of those teams. \rHow do you go about pushing for this change, so that eventually all of them will be changed?\rHow long would it take? What is the deadline?\rWhat if one team simply says they're far too busy?\rAnd once the dev teams are done with the changes, what more is there to do? What should the testing team do?"}
{"i": "15022713", "t": "Given a list of words, return a list of lists, where each list contains a group of anagrams.\rSample Input: cat bat act tab\rSample Output: [ [ cat, act ] , [ bat, tab ] ]"}
{"i": "15015722", "t": "Phonebook contains number and name.\r1.use the java collection to add these entry (name and string).\r2.Search the name by number\r3.Remove the entry (name and string ) by using name.\r I need to do this in Java...But if you can suggest me some Collection that can be used here, I shall do that....\r I thought of :\r1.using Hashmap,but here both name and number will be key....which wont be good...\r2.Another option is to wrap both phone and number in an object and then add them to the list.And then Iterating and adding to the list.\r Any other suggestions..?"}
{"i": "15019722", "t": "Print below series in java\r*** 1***\r**2 *2**\r*3*3*3*\r4*4*4*4"}
{"i": "14975556", "t": "Write an efficient code in c to implement the words in dictionary order."}
{"i": "14990384", "t": "Design algo for insertElement, deleteElement and getRandomElement, expected complexity for all the operations will be less than O(n)."}
{"i": "15013746", "t": "I have one bag of bolts and another bag of nuts, need to find biggest Bolt. Condition is must not compare both bolts or both nuts. only comparison between bolt and nut allowed."}
{"i": "14996831", "t": "Given a node with pointers to its Parent, Child and the right Sibling, implement code to find the node to the right of a given node, at the same level. Assume it's a binary tree."}
