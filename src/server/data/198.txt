{"i": "5180426507255808", "t": "Say you're the development lead for a mobile application. A user submits a bug report saying that something isn't working right even though internal tests show that it should. What do you do?"}
{"i": "5679255081975808", "t": "Write a function that takes a array of strings and prints out the number of anagrams in the array\r[count,dog,cat,act]\r count:1\rdog:1\rcat:2\ract:2"}
{"i": "5731237876465664", "t": "Having a home-defined linked list with the following structure, where the next will point to the next node in the list and the random will point to a random node in the list (not null).\rCreate a copy of the structure (the data field in each node is not unique for different nodes):\r /*\r    Example:\rHaving the list:\r    1 -> 2 -> 3 -> X\rWith random pointers to:\r    1: 3\r    2: 2\r    3: 1\r Create the list:\r    1' -> 2' -> 3' -> X\r    1': 3'\r    2': 2'\r    3': 1'\r*/\r class Node {\r    int data;\r    Node next;\r    Node random;\r}"}
{"i": "5690555409367040", "t": "You are driving a bus along a highway, full of rowdy, hyper, thirsty students and a soda fountain\rmachine. Each minute that a student is on your bus, that student drinks one ounce of soda. Your\rgoal is to drop the students off quickly, so that the total amount of soda consumed by all students\ris as small as possible.\r You know how many students will get off of the bus at each exit. Your bus begins somewhere\ralong the highway (probably not at either end) and move s at a constant speed of 37.4 miles per\rhour. You must drive the bus along the highway; however, you may drive forward to one exit then\rbackward to an exit in the opposite direction, switching as often as you like. (You can stop the\rbus, drop off students, and turn around instantaneously.)\r Describe an efficient algorithm to drop the students off so that they drink as little soda as\rpossible. Your input consists of the bus route (a list of the exits, together with the travel time\rbetween successive exits), the number of students you will drop off at each exit, and the current\rlocation of your bus (which you may assume is an exit).\r I gave a recursive solution but he insisted on dynamic programming which i couldn't give"}
{"i": "5571940509024256", "t": "Given an array of paper products in which each product has an attribute name, width, and height, and given a sheet of paper that has width xx and height yy, write a program that returns the number of sheets of paper needed to print out the array of paper products"}
{"i": "5756808635351040", "t": "Print combinations of strings from List of List of String\r Example input: [[quick, slow], [brown, red], [fox, dog]] \r Output: \rquick brown fox \rquick brown dog \rquick red fox \rquick red dog \rslow brown fox \rslow brown dog \rslow red fox \rslow red dog"}
{"i": "5441130887905280", "t": "Write a function that takes a list of positive integers as an input, and returns all of the pairs of integers it contains that sum to 100. You can assume that all inputs are between 1 and 99."}
{"i": "5066483440812032", "t": "what is the heartbleed attack  in Network security"}
{"i": "5106425965576192", "t": "You are given with an array of 1s and 0s. And you are given with an integer m, which signifies number of flips allowed.\r find the position of zeros which when flipped will produce maximum continuous series of 1s.\r e.g. \rinput:\rarr={1 1 0 1 1 0 0 1 1 1 } m=1\routput={1 1 1 1 1 0 0 1 1 1} position=2\r arr={1 1 0 1 1 0 0 1 1 1 } m=2\routput={1 1 0 1 1 1 1 1 1 1} position=5,6"}
{"i": "5931067269709824", "t": "Given a string (1-d array) , find if there is any sub-sequence that repeats itself.\rHere, sub-sequence can be a non-contiguous pattern, with the same relative order.\r Eg: \r 1. abab <------yes, ab is repeated\r2. abba <---- No, a and b follow different order \r3. acbdaghfb <-------- yes there is a followed by b at two places\r4. abcdacb <----- yes a followed by b twice\r The above should be applicable to ANY TWO (or every two) characters in the string and optimum over time.\r In the sense, it should be checked for every pair of characters in the string."}
{"i": "5651177001713664", "t": "This test was on https://www.hackerrank.com\r Input is a string of Bytes E.g.341B\rConvert it to human readable form: 3 characters long (excluding decimal)\rNo trailing or leading zeros\rE.g:\rInput 341B\rOutput 341B\rInput 12345B\rOutput 12.3K\rInput 1234567B\rOutput 1.23M\rInput 1000000000B\rOutput 1G\r Do not round off\rAssume input will not be more than 1G\rFor this problem 1000B = 1K, so on and so forth"}
{"i": "5667657999187968", "t": "Write 4 testcases for the usecase \"Customer buys a book with the credit card payment option.\""}
{"i": "5197804481806336", "t": "Write 4 testcases for the usecase \"Customers buy a book with the credit card payment option.\""}
{"i": "5747515668299776", "t": "Write a test plan for the first time launch of a website that will sell digital books."}
{"i": "5689190012420096", "t": "We are given a specific time(like 02:23), we need to get the angle between hour and minute(less than 180)"}
{"i": "5673265078992896", "t": "Given an array of numbers print the values in diagonal format. \r Example (1) for 8 dataset\rInput Array : [1, 2, 3,4,5,6,7,8]\rOutput\r01  02  04  07\r03  05  08 \r06\r Example (2) for 45 dataset\rInput Array: [1, 2, 3,4,5,6,7,8,9,10\u2026\u2026\u2026.44, 45]\rOutput\r01  02  04  07  11  15  19  23  27  31  35  39\r03  05  08  12  16  20  24  28  32  36  40  43\r06  09  13  17  21  25  29  33  37  41  44 \r10  14  18  22  26  30  34  38  42  45     \r Code in Java."}
{"i": "5964523655659520", "t": "Write a program to implement Double Linked List from Stack with min. complexity."}
{"i": "5202266885718016", "t": "Given a string and a regular expression pattern, give the number of times the pattern occurs in the string. RegEx example means as follows:\r. \u2013 2 occurrences of the previous character\r+ \u2013 4 occurrences of the previous character\r* \u2013 more than 5 occurrences of the previous character\r Sample Input:\r5\raaaaaannndnnnnnnfffhfhhgjjjwkkkllclc\ra.\rn+\ra*\ran.\ra.d.\r Sample Output:\r5\r3\r2\r1\r0"}
{"i": "6211382068379648", "t": "Write a method to create a deep-clone of an instance of the class Drawing.\r public class Drawing {\r public List < Shape > shapes = new LinkList < Shape >();\r }\r where shape is an abstract class which can have many concrete implementation\r public abstract class Shape implements Serailizable {\r ---\r }"}
{"i": "5713089894809600", "t": "Write a method  to create a deep-clone of an instance of the class Drawing.\r public class Drawing {\r public List<Shape> shapes = new LinkedList<Shape>();\r}\r where shape is an abstract class that can have many concrete implementations:\rpublic abstract class Shape implements Serializable {\r}"}
{"i": "5763321416384512", "t": "Write test cases for adobe reader , Adobe flash player ,"}
{"i": "5145371185512448", "t": "What functionality and technicality you want to add in new media player when you are going to launch it in current market."}
{"i": "5708321138933760", "t": "What functionality and technicality you want to add in new Operating system  when you are going to launch it in current market."}
{"i": "5689331477905408", "t": "What functionality and technicality  you want to add in new web  browser, when you are going to launch it in current market."}
{"i": "5363317354790912", "t": "What functionality and technicality you want to add in mobile phone when you are going to launch it in current market."}
{"i": "5649555852886016", "t": "Given number of digits of a phone number and number of disallowed digits as input, find all permutations of numbers which do not have two adjacent numbers the same, i.e. 1232 is allowed but not 1223. Disallowed digits can be upto 3, and can be included along with the phone number. Also the phone number should start with 4 if it contains the number 4."}
{"i": "5754914286338048", "t": "The decimal and octal values of some numbers are both palindromes sometimes. Find such numbers within a given range."}
{"i": "5731775485575168", "t": "If one and a half teenagers, eat one and a half pizzas in one and a half days, how many pizzas can 9 teenagers eat in 3 days"}
{"i": "5740986781138944", "t": "How to  implement split () method"}
{"i": "5629687871045632", "t": "How to implement split () method"}
