{"i": "4212812", "t": "You are given a file containing integers in the range (1 to 1 million). There are some duplicates and hence some numbers are missing\r Find the fastest way of finding missing numbers?"}
{"i": "4175845", "t": "write a function to transform a MxN matrix (which can store 1,0) based on the condition \r if( A[i][j] == 1) /* in input matrix */\rthe transformed matrix must have a[i][0...N-1]=1, and a[0 to M-1] [j] = 1. need lease space and time complx."}
{"i": "4239809", "t": "print Binary search tree by it's vertical order.find the space and time compl"}
{"i": "4161808", "t": "Swap two numbers without using temporary variable. I dont know why he asked this simple question."}
{"i": "4211802", "t": "A character array contains \"I am from Chicago\". There is one byte of memory which can be used as temporary variable. Now reverse the words to get \"Chicago from am I\". How would you do that? Is there any better data structure that can be used instead of array to do this?"}
{"i": "4188746", "t": "you are given n ropes,maybe of different length.\rthe cost of tying two ropes is the sum of their lengths.Find a way to tie these ropes together so that the cost is minimum."}
{"i": "4240706", "t": "Implement three stacks in single array"}
{"i": "4180708", "t": "Implement two stacks in a single array. Please note that you should not report stack full until all the elements are full."}
{"i": "4199697", "t": "You are given a doubly link list and out of some nodes of this doubly linked list, some other doubly link list emerge and from some of these emerging doubly linked list, more doubly link list emerge. You have to write a quick algo that merges all these doubly linked list into a singly linked list"}
{"i": "4246682", "t": "double i;\r main()\r{\r        (int)(float)(char) i1;\r        i1 i;\r         printf(\"\\n%d\",sizeof(i));\r}\r This returns 8. How?"}
{"i": "4193693", "t": "make a LL from bst in spiral"}
{"i": "4219698", "t": "nth largest element in bst"}
{"i": "4161694", "t": "write acode for spiral m*n matrix"}
{"i": "4220688", "t": "Given an array (can have negative numbers), find the sub-array with maximum sum. Follow-up question. Find the sub-array with minimum sum."}
{"i": "4209696", "t": "Given an integer array. Find the five most frequent numbers."}
{"i": "4245694", "t": "Given two strings s1 and s2. Write the program to delete all the characters of s2 from s1."}
{"i": "4231693", "t": "Design an algorithm to find all the anagrams in a dictionary and code it. Write the test cases also."}
{"i": "4244679", "t": "List the ways you can find the phone number of a candidate whose number is not working at the time of interview and as a interviewer i want to look for his number."}
{"i": "4159663", "t": "Reverse words in a string"}
{"i": "4040457", "t": "I was asked to implement the something like 4*5+9\rthere can only be integers and only + - * and / operand"}
{"i": "4129291", "t": "Given an array and a sum value return any two integers that sum upto the sum value. I gave a O(nlogn) solution I dont know if it is the best solution available."}
{"i": "4051465", "t": "Write a code to find if two linked list intersect.\rI told two ways one by counting the length of the two linked list and then advancing the the bigger linked list by the difference in length and then advancing both the pointers simulataneously to check if they intersect.\r Also i told a method to join the last node of a linked list to the first node and checking if a cycle exist."}
{"i": "4067503", "t": "Given 2 equal-length arrays of integers, find pairs, one from each array, that sum to 0. \r -- note that one wrinkle of this problem over the more usual form, which is to do this in a single array, is that you can't use the indexes / iterators crossing each other to know to stop, rather their /values/ have to cross (if you're doing it right, at or near 0)."}
{"i": "4060506", "t": "What's an efficient way to process a large file, with lines of varying length? \r -- I said, break it up and process the pieces in parallel, using fseek to divide up the file, and scan backward and forward for the line terminators to decide which chunk a line belongs to. I think the answer he wanted though was to memory map it."}
{"i": "4149764", "t": "You have a fair coin. Make it unfair with win and loose probability p and (1-p) respectively, where p is greater than 0 less than 1"}
{"i": "4139904", "t": "If a number is power of 2"}
{"i": "4026416", "t": "use vs require keyword. How to create module"}
{"i": "4050436", "t": "Lots of questions from previous experience. 80% of interview revolved around my past experience. One lady asked me three most challenging technical issues. I answered one in depth, she interrupted in between to move on to next one, but i didn't complete that answer yet. After I completed the answer, she moved on to next question!"}
{"i": "4116379", "t": "Overall I prepared hell lot of questions and answers from embedded system, C and Linux. only a couple of simple questions asked. No linked list, data structure related questions from C, opposed to many feedback in careercup and in other sites. Most questions were around my past experience, some basic embedded questions and bit manipulations. I was disappointed as all preparation went in vain - especially a simple matrix question i was asked, wasn't able to answer correctly, which was a disaster after I knew the answer. Some interviewers probably were taking interview for first time. One kept checking emails while I was answering questions and somebody kept knocking the door (for fun) all throughout the interview. He told me just ignore that :) . The interview was for general positions, 'anything that's matches my credential'. I am supposed to get an answer in 1 week, it's been two weeks I haven't heard back. I think the matrix question from the director ruined my chance. But there were 7 interviewers. One told me and I realized in the beginning it wasn't a match in his group. But the other 5 went pretty well, as far as I think. Any one here got a reply back from Qualcomm after 2 weeks?"}
{"i": "4127235", "t": "The director have me a matrix on paper and asked to generate the matrix. Very simple, once found out the answer - 5x5 from number 1-25, only diagonals were changed. Couldn't answer the question, probably that cost the interview. He asked another question to build a matrix from 1 to 100 without repeating any number. I told him to use recursion, he didn't agree."}
