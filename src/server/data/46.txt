{"i": "5197244148482048", "t": "What is the most ideal approach to get my application found?"}
{"i": "5673005863141376", "t": "It will gain you more knowledge intensify your soft skills, grow your network and work ethics, what is it"}
{"i": "5644541638475776", "t": "What application adaptation techniques should I pick?"}
{"i": "5663393457897472", "t": "What amount of time would it take for application to create?"}
{"i": "5683846763249664", "t": "What dialects are versatile applications customized in?"}
{"i": "5692615433912320", "t": "Does your application thought take care of any genuine issue?"}
{"i": "5706560093814784", "t": "What is an activity in android?"}
{"i": "5732335291465728", "t": "Generate random max index\r Given an array of integers, randomly return an index of the maximum value seen by far.\r e.g.\rGiven [11,30,2,30,30,30,6,2,62, 62]\r Having iterated up to the at element index 5 (where the last 30 is), randomly give an index among [1, 3, 4, 5] which are indices of 30 - the max value by far. Each index should have a \u00bc chance to get picked.\r Having iterated through the entire array, randomly give an index between 8 and 9 which are indices of the max value 62."}
{"i": "5690892925534208", "t": "Given a word of length n, and n six-sided dice with a  character in each side, find out if this word is constructible by the set of given dice"}
{"i": "5649500673146880", "t": "[[2, NULL, 2, NULL], \r\n [2, NULL, 2, NULL], \r\n [NULL, NULL, NULL, NULL], \r\n [NULL, NULL, NULL, NULL]]What does the array look like after the corrected function has run?"}
{"i": "5634769581244416", "t": "\":=\" denotes the substitution, and \"=\" is the equal comparator.\r\n\r\n========\r\nInitial state of an array \"a\":\r\n\r\n[[4, 2, 4, 2],\r\n[4, NULL, 4, 2],\r\n[2, NULL, 8, 2],\r\n[16, NULL, 4, NULL]]\r\n\r\n========\r\nMain function:\r\n\r\nFUNCTION foo()\r\n   FOR y := 0 to 3\r\n       FOR x := 0 to 3\r\n           IF a[x+1][y] != NULL\r\n               IF a[x+1][y] = a[x][y]\r\n                   a[x][y] := a[x][y]*2\r\n                   a[x+1][y] := NULL\r\n               END IF\r\n               IF a[x][y] = NULL\r\n                   a[x][y] := a[x+1][y]\r\n                   a[x+1][y] := NULL\r\n               END IF\r\n           END IF\r\n       END FOR\r\n  END FOR\r\nEND FUNCTIONWhat is the issue with the above code, and how would you fix it?"}
{"i": "5684463585984512", "t": "How can I tell what version of Microsoft Office 365 that I am using?"}
{"i": "5730713916145664", "t": "How do I export and import Company records?"}
{"i": "5677521685708800", "t": "I cannot allocate to a project in a Payroll Cheque Run ?"}
{"i": "5639673158828032", "t": "How to connect your Office 365 to Sage 50  ?"}
{"i": "5093088171655168", "t": "when you try to activate your Sage ID ?"}
{"i": "5680855117201408", "t": "I forgot my Sage Drive password, how do I reset it?"}
{"i": "5763995374452736", "t": "What is Sage Drive?"}
{"i": "5698368274169856", "t": "The Connection Manager could not start the database engine In Sage ?"}
{"i": "5741873986011136", "t": "The company file is on the server or another computer.?"}
{"i": "5677081787105280", "t": "0x80040702 \"Failed to load dll: Reg 32\" when installing Sage  ?"}
{"i": "5717162421911552", "t": "How to Disable Kodak Printer Ink Monitor  ?"}
{"i": "5680401662607360", "t": "How do I clean the printhead on my Kodak ESP c310?"}
{"i": "5710535153156096", "t": "How do I calibrate my Kodak printer?"}
{"i": "5709854736384000", "t": "How do I reset my Xerox WorkCentre 7835?"}
{"i": "5648889621774336", "t": "Given two strings, A and B, of equal length, find whether it is possible to cut both strings at a common point such that the first part of A and the second part of B form a palindrome.\r Extension1. How would you change your solution if the strings could be cut at any point (not just a common point)?\r Extension2. Multiple cuts in the strings (substrings to form a palindrome)? Form a palindrome using a substring from both strings. What is its time complexity?"}
{"i": "5758026552705024", "t": "You need to test a time converter that converts minutes to seconds, hours, days, weeks, months, years. What kind of test cases would you recommend? We enter only minutes, and the site automatically translates them into seconds, hours, days, weeks, months, years. This is how it looks:\r [0]minutes \r----------------\r[0] seconds\r[0] hours\r[0] days\r[0] weeks\r[0] months\r[0] years\rValues change dynamically, when input data changes - minutes"}
{"i": "5679151961341952", "t": "/*\r## Setup\r The flow of a dispute is as follows:\r- A charge is created by an end customer. \r- Stripe receives a dispute record from the bank. \r- The business responds with evidence.\r- If no second dispute is received within 30 days after evidence submission, the dispute is won. If a second dispute is received, the dispute is lost. \r Charge\r(Maybe) Dispute Record\r(Maybe) Evidence submission\r(Maybe) Second Dispute Record\r The raw tables generated from the API look like:\r ```\rCharges                             \r+---------------+-----------+      \r| charge_id     | varchar   |       \r| created       | timestamp |       \r| amount        | int       |       \r| seller_id     | varchar   |       \r| customer_id   | varchar   |\r+---------------|-----------+       \r Dispute Records\r+----------------+-----------+\r| dispute_id     | varchar   |\r| created        | timestamp |\r| charge_id      | varchar   |\r+----------------|-----------+\r Evidence Submission\r+-------------------+-----------+\r| evidence_id       | varchar   |\r| created           | timestamp |\r| charge_id         | varchar   |\r+-------------------|-----------+\r```\r*/\r /*\r 1. Can you design a unified dispute table that would allow us to compute things like the win rate, dispute rate, evidence submission rate etc?\r */"}
{"i": "6250176453279744", "t": "A happy number is defined by the following process. Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers, while those that do not end in 1 are unhappy numbers.\rInput:\rYour program should read lines of text from standard input. Each line contains a single positive integer, N.\rOutput:\rIf the number is a happy number, print 1 to standard output. Otherwise, print 0."}
{"i": "5753059758571520", "t": "Given two binary trees, explain how you would create a diff such that if you have that diff and either of the trees you should be able to generate the other binary tree. Implement a function which takes Node tree1, Node tree2 and returns that diff."}
