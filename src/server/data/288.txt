{"i": "19085671", "t": "How would you test the search functionality on Bing?"}
{"i": "18868666", "t": "Give you two sequences of length N, how to find the max window of matching\r patterns. The patterns can be mutated.\r For example, seq1 = \u201cABCDEFG\u201d, seq2 = \u201cDBCAPFG\u201d, then the max window is 4. (\r ABCD from seq1 and DBCA from seq2)."}
{"i": "19570669", "t": "You are given a file (and you do not know how big the file is, nor how big the lines in the file are). Write an algorithm that will generate a random number (which will be used to index into the file) such that the output of lines will be roughly proportional? That is if the file contained 4 lines, and if I ran the program 1 million times I should get each line printed approximately 250K times."}
{"i": "19332669", "t": "write a sample code to find no of 'a' words in a sentence?\rEg: If a sentence is given as \"I found an apple in a tree.\"\rThe output is : 1 (not 2)\rWe have to count no of words."}
{"i": "18929680", "t": "d1 = a1*x1 + b1*x2 + c1*x3\rd2 = a2*x1 + b2*x2 + c2*x3\rd3 = a3*x1 + b3*x2 + c3*x3\r Knowing all of a,b,c,d, find x1, x2, x3. As you might notice, this is high school math. But it's hard to write the code for solving it.\r /*\r/a1 b1 c1| /x1| /d1|\r|a2 b2 c2|*|x2|=|d2|\r|a3 b3 c3/ |x3/ |d3|\r*/\rdouble A[3][3], X[3], D[3];\rX[0] = ?\rX[1] = ?\rX[2] = ?"}
{"i": "19300678", "t": "If a=1, b=2, c=3,....z=26. Given a string, find all possible codes that string can generate. Give a count as well as print the strings.\r For example:\rInput: \"1123\". You need to general all valid alphabet codes from this string.\r Output List\raabc   //a = 1, a = 1, b = 2, c = 3\rkbc     // since k is 11, b = 2, c= 3\ralc      // a = 1, l = 12, c = 3\raaw    // a= 1, a =1, w= 23\rkw      // k = 11, w = 23"}
{"i": "19300677", "t": "Given:\rArray of n objects of type Object\r ///<summary>\r/// Given two objects, this function returns a value between 0-100 depending on the relation of the two objects\r/// <param1: objToBeCompared>Any object instance which has to be compared to the objReference</param1: objToBeCompared>\r/// <param2: objReference>Instance of an object against which the other instance of the Object is to be compared</param2: objReference>\r/// <return>A value between 0-100</return>\r///</summary>\rint Compare(Object objToBeCompared, Object objReference)\r Now implement a function:\r///<summary>\r/// Given an object array of length n, a reference object this function returns the top numberOfMatches matches based on Compare(obj, obj) function's return value\r/// Start with the object(s) that return 99 and go up till you find numberOfMatches element\r/// The return array doesn't have to be sorted by the Compare value\r/// <param1: objects>Array of n Object from which numberOfMatches have to be selected</param1: objects >\r/// <param2: ObjectToBeCompared>Object against which the other objects need to be compared to</param2: ObjectToBeCompared>\r/// <param3: numberOfMatches>number of matches to be returned</param3: numberOfMatches>\r/// <return>Array of numberOfMatches objects</return>\r///</summary>\rObject[] FindTopMatch(Object[] objects, Object ObjectToBeCompared, int numberOfMatches)"}
{"i": "19460664", "t": "You have two threads one printing even numbers in order and other odd numbers. Design an algorithm so that it prints numbers in natural order"}
{"i": "19512665", "t": "1. Which of the following regular expressions denotes zero or more instances of an a or b? \ra) a l b \rb) (ab)* \rc) (a l b)* \rd) a* l b"}
{"i": "19503663", "t": "Given a 2D rectangular matrix of boolean values, write a function which returns whether or not the matrix is the same when rotated 180 degrees."}
{"i": "19473664", "t": "Write a MapReduce job that takes in two text files, and output the probability that those two files are identical (with 0% -> completely different, 100% -> completely different). \r Clarification: Matching should not be a per-line diff, but it's about the content. One article could be 80 characters per line in one version, but could be 100 characters per line in another version, for the same content. In that case, it should be 100% match even though, if you are comparing line by line, they are totally different."}
{"i": "19401671", "t": "Given a matrix consisting of nos you can print the max length of sequence possible where in a sequence each consecutive nos have a diff of +1 or -1.\r Ex :\r    3 5 7 3\r     4 5 8 1\r     6 4 5 2\r here sequence is\r                             3\r                              4 5\r                                 4 5"}
{"i": "19389662", "t": "What are checked exceptions"}
{"i": "19388662", "t": "Given +ve numbers in  an array . Put the even #s to the left of the array and the odd to the right side of the array . Don't use extra array."}
{"i": "19386662", "t": "code a singleton class"}
{"i": "19369681", "t": "Rakesh likes skiing a lot. That's not very surprising, since skiing is really great. The problem with skiing is one have to slide downwards to gain speed. Also when reached the bottom most point  one has to wait for ski-lift to get to higher altitude.\r Rakesh seeks your help to know the longest run possible with the given peaks. That altitude of different peaks is given by a grid of numbers. Look at this example:\r 7  2  3  4  5 \r36 37 38 34 6 \r33 44 46 40 7 \r24 43 42 41 8 \r35 32 47 30 9\r One can ski down from one peak to a connected peak if and only if the height decreases. One peak is connected to another if it's at left, at right, above or below it. In the sample map, a possible ski path would be 36-33-24(start at 36, end at 24). Of course if one would ski 46-44-43-42-41-30-9....3-2, it would be a much longer run. In fact, it's the longest possible. There could be more than one longest ski path, but all Rakesh needs from you is to tell maximum number of peaks he could cover for a given map, in this case it is 14.\r Input ::\rAll input comes from input.txt file. The first line contains the number of test cases N. Each test case starts with a line containing the name (it's a single string), the number of rows R and the number of columns C. After that follow R lines with C numbers each, defining the heights. R and C won't be bigger than 100.\r Output :: \rFor each test case, print a line to output.txt containing the name of the area, a colon, a space and the length of the longest run (maximum points covered) one can slide down in that area. \r Sample Input\r2\rManali 10 5\r56 14 51 58 88\r26 94 24 39 41\r24 16 8 51 51\r76 72 77 43 10\r38 50 59 84 81\r5 23 37 71 77\r96 10 93 53 82\r94 15 96 69 9\r74 0 62 38 96\r37 54 55 82 38\rNarkanda 5 5\t\r1 2 3 4 5\r16 17 18 19 6\r15 24 25 20 7\r14 23 22 21 8\r13 12 11 10 9\r Sample Output\rManali: 7\rNarkanda: 25"}
{"i": "18813688", "t": "Consider an array of integers wherein each element is +1 or -1 its preceding element. Given a number, find the first occurence of this number (index) in this array without using linear search.\r For example, consider the array :\r4 5 6 5 6 7 8 9 10 9 10 (each element in this array is +1 or -1 its preceding element)\r Input : 10 (find first occurence of 10 without using linear search)\rOutput : 8"}
{"i": "19188693", "t": "Given a 'friendship' graph, how would you generate friend suggestions for people, and how would you distribute the data across machines?"}
{"i": "18920673", "t": "Find out the no of times the statement will get executed for the below code snippet.\r int temp = 1;\rfor(int i =0; i <n; i++) {\r\tfor(int j = 0; j<= i; j++) {\r\t\tfor(int k= 0; k <= j; k++) { \r\t\t\ttemp++;\r\t\t}\r\t} \r}\rSystem.out.prinln(temp); // Or what will be the value of the temp?."}
{"i": "19367671", "t": "Find the no classes, no methods and the no class level variables from a given Java file...\r Example :\rInput:       test.java\rOutput: \rNumber of class in Java file. : Class names\rNumber of Methods in Each class : count of methods for each class\rNumber of Class variables : Count of variables for each class."}
{"i": "19370662", "t": "How to find in a binary tree, whether all leaves are at same level or not, and return a boolean value after identifying this."}
{"i": "19367663", "t": "Given a binary tree, a complete path is defined as a path from root to a leaf. The sum of all nodes on that path is defined as the sum of that path. Given a number K, you have to remove (prune the tree) nodes from the tree which lie on a path having sum less than K.\rNote: A node can be part of multiple paths. So we have to delete it only in case when all paths from it have sum less than K."}
{"i": "19365663", "t": "Design an online marketplace."}
{"i": "19016700", "t": "Given 2 arrays.Imagine you are making bst from each array.u need to tell whether 2 bsts will be identical or not without actually constructing the tree.\rEx: \r 2 3 1 \r 2 1 3\rwill construct the same tree\rA1[]={2,1,3} \r2 \r1 3 \r A2[]={2,3,1} \r2 \r1 3"}
{"i": "19358691", "t": "WAP to send mails(or any other functionality can just write a dummy method call) simultaneously using multiple theads. (Use of ExecutorService not allowed)."}
{"i": "19356689", "t": "How will you find a loop in a linked list. e.g. if the 4th node of the list is pointing back to the 2nd node (for a list of size 6), then it will be in a loop; how will you find this node?"}
{"i": "19355681", "t": "Write code to Print the power set of given string"}
{"i": "19035700", "t": "Bar raiser round \rWrite code to return Kth smallest node from BST"}
{"i": "19035699", "t": "Find a pair of numbers from Array that will sum up to K \rme : I know this , told him both approaches using sorting as well as HashTable"}
{"i": "19231695", "t": "Write a Program for Dictionary which has functionality of lookup and insert . This program should be able to add words on the fly\r I wrote simple code using HashTable \r follow up \r 1) Now we are getting too many words what happens \r me: Hashtable will dynamically resize resulting into  performance hit . Also they might get hashed to same location as well as we might run out of main memory\r 2) Okay you are out of main memory , How will you scale this program \rme: I will create buckets of HashTable lets say 26 buckets for one for  each alphabet and would put them on different machines \r 3) Lets say you are out of memory on those machines too \rme: Okay I need to put them on secondary storage . Here we can have fileSystem or Database . I chose database . I will create simple DB schema of BucketNumber and word .\r I will use buckets on main memory as cache , if we are not able to find a word in the bucket then query databse with bucket number and words then remove the least number times looked up word (every time we lookup a word we increament the count i.e value in key,value pair on hashtable) from that bucket and add this word . \r I mentioned that bottleneck in this case will be every time  a word is not present we need to query DB which usually has high latency which will result into performance hit \r 4) Lets say we are okay with latency but what if we are getting inserting words  between that are only between only in two buckets ex. words starting from a and b only"}
