{"i": "5077849960611840", "t": "OSI layers"}
{"i": "5116068995530752", "t": "Diff between tcp and udp"}
{"i": "5745676841385984", "t": "Life cycle of bug, test severity and priority"}
{"i": "5640799914033152", "t": "shell script to rename all files in directory"}
{"i": "4988025551454208", "t": "find if linked list is palindrome\ra -> b-> Null"}
{"i": "5705018667696128", "t": "Implement 2 stacks in a single array"}
{"i": "5757223055654912", "t": "Program to get current %CPU and %MEM"}
{"i": "5675897178816512", "t": "Given two sorted arrays, mergesort them into 2nd array that has enough space to accommodate both."}
{"i": "5716235511660544", "t": "Given two sorted arrays, merge sort in the 2nd array that has enough space to accommodate both"}
{"i": "5703332758814720", "t": "Given a string write a function to return the length of the longest sub string with only unique characters"}
{"i": "5763750332203008", "t": "Given row on N house, each is marked either R or B. And each house having some gems. You have to collect gems from these house with some constraint:\rYou can choose gems from any blue house but you have to choose even number of red house ( either from 2 Red houses or from 4 red houses)\reach time you take gem from one house, you will multiply gems received with gems currently, you have. \rYou have to choose continuous houses.\rYou have to return start point and end point of house (remember this should be continuous )"}
{"i": "5629539583524864", "t": "you have given array of Size N and two numbers M, K. K is size of subarray and M is count of subarray.\rYou have to return sum of max M subarray of size K (non-overlapping)\r N = 7, M = 3 , K = 1\r  A={2 10 7 18 5 33 0} = 61 \u2014 subsets are: 33, 18, 10 (top M of size K)\r  M=2,K=2\r {3,2,100,1} = 106 - subsets are: (3,2), (100,1) 2 subsets of size 2"}
{"i": "5987787134205952", "t": "Please share your thoughts over this designing question (If you need any more info, pls. do let me know):\rGIVEN: Let's say we have a popular eCommerce site with lots of sellers and millions of products.\rThe system has a CatalogManager Service which is being called by various seller platforms to update info (attributes) about seller and it's products. For e.g. Seller can say 'Hey, my brand name has changed to New_Brand', 'Hey, My Product P1 weight has changed to 6kg'. The catalog manager service has it's own datastore and cache in place where it goes and update accordingly. Imagine the sclae of these update requests to be very high as we have thousands of sellers and millions of products and each may have 50-60 attributes which could be chaned. The CatalogManager service is able to handle all these updates smartly.\r TO DESIGN:\rThere are various other back-end services (ShippingService, SearchService) in the system who must me notified about these changes in REAL TIME. For e.g. ShippingService must be notified by CatalogManager that 'Hey, Product P1 of seller S1 weight has changed to 6 kg'. Other example, SearchService must be notified that 'Hey, Seller S1 brand name has changed to New_Brand' so that it can change it's index to be searched.\r * Design such a system which can scale & is fault tolerant ensuring all edge cases including one mentioned below:-\r * Every back-end service may not be interested in all the events. It may only wish to listen subset of attributes. E.g. ShippingService may only want if product dimension related attributes change. So how will you ensure that only related messages reach to consumer services?\r * How will you ensure that event message published by producer service (CatalogManager) reacheed to the related consumer service for sure and in REAL TIME?\r * How can you ensure the messages passed to backend services are in sync (in order it's important)\r * How to ensure that same event is not messaged twice to the consumers? Although, eventually it will result in same data state but still looking at scale of the events this would be a burden to backend system\r How would you design such a system?"}
{"i": "5755360918896640", "t": "You have a file with 100 billion URLS, find first unique URL."}
{"i": "6401882882834432", "t": "Design a data structure for following operations in O(1) time.:\rinsert\rremove (FIFO)\rfind MODE"}
{"i": "5730232944295936", "t": "Design an LRU cache,  where you remove an element not only by time lapsed since last used but also by a cost associated with each element.  F(t,  c)  is a method to find weight for each element.  Where c is cost and t is time since last used."}
{"i": "5687352158584832", "t": "Implement DFS \r After I implemented this, I was told to implement it without recursion.  He told me to write pseudo code. I wrote it using stacks."}
{"i": "5756920797331456", "t": "Given a matrix (0,0 is to the botto9m left like co-ordinate system)of 0s and 1s and two co-ordinates find if there is a path between them, Also you can only travel via 1s and you can only go up or right.\r Answer: Backtracking algorithm"}
{"i": "6260788878639104", "t": "given K sorted arrays merge them\r Answer: Told him how to do using merge of merge sort. He wanted me to do another approach I googled later you can use min heap for it."}
{"i": "5680651472732160", "t": "Given an array of integers find the element for which the sum of left = sum of right. example -1 100 1 98 1 should return index of 1 i.e 2\r  Answer: First told him about Brute Force approach and then told him if we can iterate once and get the total sumint findIndex(A){\r\n\r\nint sum =0;\r\n   for(int i =0;i<A.lenght;i++)\r\n   {\r\n       sum+= A[i];\r\n   }\r\n   \r\n   int lSum=0;\r\n   for(int i=0;i<A.length;i++)\r\n   {\r\n       int rsum = sum - lsum-A[i];\r\n       \r\n       if(lsum==rsum)\r\n       return i;\r\n       \r\n       lsum += A[i];\r\n       \r\n   }\r\n   \r\n   return -1;\r\n\r\n}"}
{"i": "5768050835980288", "t": "Given a string having a number:\r\"625626628\"\rHere the substrings are in consecutive order except for 1 substring which is missing. Find the missing substring. \rTest cases:\r\"1235678\" -> 4 is missing\r\"9979981000\" -> 999 is missing\r\"624625627\" -> 626 is missing"}
{"i": "5855201493778432", "t": "Write a function which will return a char from a given encoded string from given index without decoding string. e.g. from \u201ca2bc3d4\u201d ( means \u201caabcbcbcdddd\u201d ) and index value is 7 means function should return c without decoding original string ?"}
{"i": "5717567253512192", "t": "Inplace reverse a sentence\r You given a sentence of english words and spaces between them. \rNothing crazy:\r1) no double spaces\r2) no empty words\r3) no spaces at the ends of a sentencevoid inplace_reverse(char* arr, int length) {\r\n    // your solution\r\n}Example:\rinput \"I wish you a merry Christmas\"\routput \"Christmas merry a you wish I\"\r Constrains: O(1) additional memory"}
{"i": "6715482117767168", "t": "The closest common ancestor in a tree forest.class Node {\r\n    Node* parent; // == null for root of tree\r\n    Node* left;\r\n    Node* right;\r\n}\r\n\r\nNode* tree_forest[]; // array of pointers which points to roots of each tree respectively\r\n\r\nNode* closest_common_ancestor(Node* n1, Node* n2) {\r\n    // your solution\r\n}Example:|    a     |   j\r\n|   / \\    |  /\r\n|  b   c   | h\r\n| /   / \\  |\r\n|d   e   f |for e and d CCA is a\rfor e and f CCA is c\rfor e and c CCA is c\rfor h and d CCA is null\r Constrains: O(1) additional memory"}
{"i": "5646151174848512", "t": "3> write program to find wrong no of \"(()\" parenthesis in expression \"((B+a)\"\r         give error for \"((A))\" - for unnecessary brackets"}
{"i": "4725389828030464", "t": "2> write program to mirror the binary tree."}
{"i": "5733237978562560", "t": "1> write program to calculate power(x,n) in log(n) time"}
{"i": "5695231544524800", "t": "Design a URL system.\rHe even wanted to know what kind of algorithm to use, improve the speed, availability etc."}
{"i": "5137694256529408", "t": "Given a 4 X 4 game slot that has random alphabets in all the slots\rWrite a function that takes the keyboard and the word as input and returns true if the word can be formed\rFalse otherwise.\r A word can be formed on the board by connecting alphabets adjacent to each other (horizontal, vertical and diagonally) \rSame alphabet should not be reused."}
{"i": "5090815091146752", "t": "Given a set of n people, find the celebrity.\rCelebrity is a person who:\r1. Knows only himself and no one else\r2. Every one else knows this person\r You are given the following helper function:\rbool knows(i, j);\rReturns:\rTrue: If i knows j\rFalse: otherwise\r I proposed the O(n2) algorithm at first but he wanted me to improve on it. He wanted an O(n) algorithm"}
