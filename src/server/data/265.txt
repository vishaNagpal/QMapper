{"i": "5451487635308544", "t": "Implement simple tail command in C++."}
{"i": "5219673217957888", "t": "Long Subtraction -- Given two arrays A, B, each contains elements of digits, return an array of A - B. Your machine can only do calculation of less than 20.\reg. A = [1,2,5,7,5];\rB = [3,4,8,9];\rA - B = [9,0,8,6];"}
{"i": "6318635089920000", "t": "Given a keyboard with every letter maps a digit from 0 to 9, return all possible permutation of given a n digit number.\r eg. 0 <- z,a,q,x,s,w\r1 <- c,d,e\r2 <- v,f,r\r3 <- b,g,t\r...\rThen permutation of num 1230 will be:\rcvbz\rcvba\rcvbq\r..."}
{"i": "4783411914866688", "t": "create a java api for mood detection for the image captured from webcam with approximate indexing"}
{"i": "6002131165249536", "t": "String temp = \"A\" + \"B\" + \"C\" ;\r how many objects are created"}
{"i": "5922416572235776", "t": "Write code to print all different paths in an undirected graph from a given source to destination with no loop(any node can be at most once in a path )."}
{"i": "5647413305933824", "t": "\"Given an array of strings, find the string which is made up of maximum number of other strings contained in the same array.\r e.g. \u201crat\u201d, \u201dcat\u201d, \u201cabc\u201d, \u201cxyz\u201d, \u201cabcxyz\u201d, \u201cratcatabc\u201d, \u201cxyzcatratabc\u201d\rAnswer: \u201cxyzcatratabc\u201d\r\u201cabcxyz\u201d contains 2 other strings,\r\u201cratcatabc\u201d contains 3 other strings,\r\u201cxyzcatratabc\u201d contains 4 other strings\""}
{"i": "4700102434226176", "t": "Given a array of characters of this replace the characters which occur continously with the character and no. of times it occured e.g. AAAABCCDDD A4BC3D3 (count for characters that occurs once can be ignored). Do it Inplace."}
{"i": "5844419160834048", "t": "Implement Cache in Java.\r function should support\r\tObject get(key)\r\tvoid put(key, value)"}
{"i": "5668651919212544", "t": "Spiraly print n*n matrix.\rEg: [1,2,3,4]\r[12,13,14,5]\r[11,16,15,6]\r[10,9,8,7]\r Should print\r1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16"}
{"i": "5211521370030080", "t": "Given a class with n people,where each people plays a game with all other people. Results are with you. You have to arrange them in a queue with a condition that, a[i] should have won a[i-1], for all I, you don\u2019t need to care about a[i-2] . (a[i] may win or lose a[i-2])."}
{"i": "5801100120686592", "t": "Print all pairs(sets) of prime numbers (p,q) such that p*q <= n, where n is given number"}
{"i": "6193320829124608", "t": "Given a undirected graph, source and destination, write the code to find the total number of distinct nodes visited, considering all possible paths."}
{"i": "5329244276129792", "t": "An arraylist containing datatype studentsScores are given where studentId, and results are twostates of this datatype. Each student takes more than 10 exams. We need to return the averages score of each student as a Map<student, average score> where the average score is calculated by taking the average of top 5 exams of a student.\rFirst we iterate the arraylist and create another Map<Integer, ArrayList<>> where the inner ArrayList has values of test scores. Iterating the arrayList to find avergae score and adding it to the another Map<student, averageScore>. What is the complexity of this?"}
{"i": "5604918899507200", "t": "Write a program to find the reoccurence the character in a given string ,if it find in that given string , come out from the loop. \r For Example \rchar *str = \"abcdefgha\"; \rhere a is occured second time, so comes out from the loop."}
{"i": "6142665984835584", "t": "Given a chess board of finite length (NxN), start position of a knight(x, y) and an end position (p, q). 1) Find number of minimum hops required to reach end position. \r2) Check your solution extendable to infinite length chess board ??"}
{"i": "5016766077992960", "t": "Design a DS to perform\r1. Insert\r2. Search\r3. Delete\r4. Get Random\rAll in O(1)."}
{"i": "6670981321981952", "t": "n1 pairs of \u201c{} \u201d brackets\rn2 pairs of \u201c[] \u201d brackets\rn3 pairs of \u201c() \u201d brackets\rPrint all valid combinations of all the pairs"}
{"i": "4693286321127424", "t": "A student needs to implement a BST structure to solve a problem, but instead he used a linked list. New value will always be added at beginning of a linked list. So basically at each step after insertion , root of BST and head of link list should point to same node. Then give an example of input sequence, in which his implementation works\u2026"}
{"i": "6522873669746688", "t": "Given an array consisting of both positive and negative numbers, 0 is considered as positive, rearrange the elements such that positive and negative numbers are placed alternatively, constraints are that it should be in-place and order of elements should not change."}
{"i": "5396973762904064", "t": "write a program  takes array input{1,0,2,3} and num =3.and provides output {1,2}{0,3}{2,1}{3,0} sum equals the num."}
{"i": "5485432909332480", "t": "write test cases for a program which accepts x,y as input and outputs x power of y.\rwhat is the automation scope of the above testing"}
{"i": "5492579734913024", "t": "experience on performance testing.\rdifference between load and stress testing\rwhat are the parameters that interests you in the above tests"}
{"i": "6101210960494592", "t": "write test cases to test amazon website"}
{"i": "6424140961546240", "t": "what is accessibility testing.how do you test a website,mobile app for accessbility"}
{"i": "5074387359236096", "t": "Complete the below function which takes an arraylist and displays the list in the expected output\r public class TreePrinter {\rpublic static void printTree(Iterable<Relation> rs) {\r// your code\r }\r}\r \tpublic static class Relation {\r\t\tString parent;\r\t\tString child;\r\t\tpublic Relation(String parent, String child) { ... }\r}\r}\r Example input:\rList<Relation> input = newArrayList();\r input.add(new Relation(\u201canimal\u201d, \u201cmammal\u201d));\rinput.add(new Relation(\u201canimal\u201d, \u201cbird\u201d));\rinput.add(new Relation(\u201clifeform\u201d, \u201canimal\u201d));\rinput.add(new Relation(\u201ccat\u201d, \u201clion\u201d));\rinput.add(new Relation(\u201cmammal\u201d, \u201ccat\u201d));\rinput.add(new Relation(\u201canimal\u201d, \u201cfish\u201d));\r TreePrinter.printTree(input);\r Expected output:\r line 1: lifeform\rline 2:   animal\rline 3:     mammal\rline 4:       cat\rline 5:         lion\rline 6:     bird\rline 7:     fish"}
{"i": "5435439490007040", "t": "// merge sorted arrays 'a' and 'b', each with 'length' elements,\r// in-place into 'b' to form a sorted result. assume that 'b'\r// has 2*length allocated space.\r// e.g. a = [1, 3, 5], b = [2, 4, 6] => b = [1, 2, 3, 4, 5, 6]\r //how to do it without rearanging the b array"}
{"i": "5188884744896512", "t": "boolean isBST(const Node* node) {\r  // return true iff the tree with root 'node' is a binary search tree.\r  // 'node' is guaranteed to be a binary tree.\r}\r      n\r    / \\\r   a   b\r    \\\r     c"}
{"i": "5314486768500736", "t": "How would you assign numbers if you were AT&T, describe a data structure"}
{"i": "5818131813498880", "t": "Given an n x n matrix A(i,j) of integers, find maximum value A(c,d) - A(a,b) over all choices of indexes such that both c > a and d > b.\rRequired complexity: O(n^2)"}
