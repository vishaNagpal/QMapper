{"i": "4758558331633664", "t": "Fill in the following methods:public interface PointsOnAPlane {\r\n\r\n    /**\r\n     * Stores a given point in an internal data structure\r\n     */\r\n    void addPoint(Point point);\r\n\r\n    /**\r\n     * For given 'center' point returns a subset of 'm' stored points that are\r\n     * closer to the center than others.\r\n     *\r\n     * E.g. Stored: (0, 1) (0, 2) (0, 3) (0, 4) (0, 5)\r\n     *\r\n     * findNearest(new Point(0, 0), 3) -> (0, 1), (0, 2), (0, 3)\r\n     */\r\n    Collection<Point> findNearest(Point center, int m);\r\n\r\n}"}
{"i": "6034491445346304", "t": "Question 2 / 2 (Weighted Stone Arrangement)\rYou are given an infinite number of stones.\r The 1st stone has the weight 1\rThe 2nd stone has the weight 3\rThe tth stone has the weight W(t) = 2 * W(t-1) + W(t-2)\rThus, the weights of the first 10 stones are\r 1, 3, 7, 17, 41, 99, 239, 577, 1393, 3363\r Note that you only have one stone of each weight.\r You have a weighing machine which is the age old 2-pan balance. You wish to use this machine to measure the weight of an item whose weight is T. The item will always be kept on the right pan. A stone may be kept on either one of the pans. Also, it is not required to use all the stones.\r The stones have a weird magnetic property, due to which, the kth stone cannot be in the same pan as the (k-1)th stone. This means that the stone with weight 239 cannot be in the same pan as the stone with weight 99, or in the same pan as the stone with weight 577; and so on.\r For example,\r T = 11 can be measured as\r LEFT PAN: 1, 17\rRIGHT PAN: 7\rNote that the other alternative\r LEFT PAN: 1, 3, 7\rRIGHT PAN:\ris Illegal since 3 cannot be in the same pan as 1 (or 7 cannot be in the same pan as 3).\r T = 21 can be measured as\r LEFT PAN: 41\rRIGHT PAN: 3, 17\rIt can be proven that to measure any weight T, there exists a unique arrangement of stones that satisfy the given constraints and measure weight T. Thus, T = 11 or T = 21 can only be measured by the respective arrangements above.\r You are given T in the input. Output the arrangement of stones that measures T.\r Input Specification\r The input contains a single positive integer T.\r Output Specification\r Output the weights of the stones used on the left pan in increasing order, one number per line. Then output a blank line. Followed by the weights of the stones used on the right pan in increasing order. Note that it is assumed that the item will be kept on the right pan.\r If there is no stone kept on the right pan, simply output the weights of the stones used on the left pan in increasing order as above, followed by a blank line.\r Constraints\r 1 \u2264 T \u2264 1015\r Sample Input 1\r 11\rSample Output 1\r 1\r17\r 7\rSample Input 2\r 21\rSample Output 2\r 41\r 3\r17\rSample Input 3\r 1000\rSample Output 3\r 3\r41\r239\r1393\r 99\r577"}
{"i": "6574215624916992", "t": "Directi Off Campus Interview Process 2013-14\r.......................................................................\rThis is year 4096 and humans have found a medicine for immortality in the year 2048. Tukro a famous online social networking site founded in the year 3072 was celebrating its 1024th anniversary. To celebrate the occasion its CEO, Shark, and his team had launched a unique personalised video of length 17min 4sec for each user. The video consisted of a collage of all popular posts made by the user on Tukro.\r Raka shared this video with all his friends without reviewing it. Immediately after he finished watching the 1024 second length clip he realised that he made a huge mistake. The video was made of all posts made by Raka, irrespective of the privacy settings of the individual post.\r A post is compromised if a friend who was not supposed to see the original post, has seen it now. Raka wants to know how many of his posts have been compromised. Tukro provides the list of users who have watched the video till now. Help Raka find how many posts were compromised.\r Raka has N friends, identified by a unique integer between 0 and N-1.\r Raka has L lists of friends, identified by a unique integer between 0 and L-1.\r Each list can be of length at the most N.\rOne friend cannot be added more than once to the same list.\rA list must have at least one friend.\rA friend may be added to multiple lists.\rVisibility of a post in Tukro works through two filters\r Include Filter: An array of lists, from the L lists above. Friends can view a post if they belong to any friend list, specified in the Include Filter.\rExclude Filter: An array of lists, from the L lists above. Friends can view a post if their name does not belong to any friend list, specified in the Exclude Filter.\rSome caveats of the above are\r If no Filter is active, the post is visible to all friends\rIf only Include Filter is active, a friend can see the post only if he is present in at least one of the lists of Include Filter.\rIf only Exclude Filter is active, a friend can see the post only if he is not present in any of the lists of exclude filter.\rIf both Include and Exclude Filters are active, a friend can see the post if and only if\rhe is present in at least one of the lists of include filter and\rhe is not present in any of the lists of exclude filter\rif he is present in both an include filter list, and exclude filter list, he should not be able to see the post\rInput Specification\r First line contains a single integer N, the number of friends.\r Second line contains a list of integers separated by a single space. The first integer V, represents the number of friends who viewed the video. There are V other integers in the line representing the ID's of friends who viewed the video.\r Third line contains a single integer L representing the number of lists.\r L lines follow. Each line representing a list. The first integer of the line A, denotes the size of the list; followed by A integers, each denoting the friends in the list.\r Next line contains a single integer P denoting the number of posts in the video. 2 * P lines follow. Each pair denoting the Include Filter and Exclude Filters of one post respectively.\r First two lines denote the Include and Exclude Filters for first post\rNext two lines denote the Include and Exclude Filters of second post\rand so on..\r An include filter is represented by a list of space separated integers. The first integer B represents the number of lists in the filter. B may be 0, to denote that the include filter is not active. If B is more than 0, the include filter is active and the next B integers in the line denote the ID's of lists present in the include filter.\r Exclude filters are also represented in the same format.\r Output Specification\r Print a single integer specifying the number of posts that are compromised according to the definition above.\r Constraints\r 1 \u2264 N \u2264 10000\r1 \u2264 V \u2264 N\r1 \u2264 L \u2264 6\r1 \u2264 P \u2264 100000\r Note that the constraints on N and P are large.\rYour solution will exceed time limits if its complexity is O(N*P).\rEven O(V*P) solutions may exceed time limit!\rNote the small constraint on L.\rSample Input 1\r 10\r8 1 2 5 6 0 9 8 7\r4\r2 4 3\r2 7 6\r3 0 1 5\r3 2 8 9\r4\r0\r1 0\r1 1\r0\r0\r0\r3 1 2 3\r0\r Sample Output 1\r1\r Explanation\r There are 10 friends. Their ID's are from 0 to 9\r8 of them viewed the video = {0,1,2,5,6,7,8,9}\rThere are 4 lists\rList-0 has 2 friends {3,4}\rList-1 has 1 friend {7,6}\rList-2 has 3 friends {0,1,5}\rList-3 has 3 friends {2,8,9}\rThere are 4 posts\rPost-0 doesn't have any include filter but has List-0 - {3,4} - in exclude filter\r3, or 4, have not seen the video\rHence Post-0 is not compromised\r\u200bPost-1 has an include filter of List-1 - {7,6} - and no exclude filter.\rBut other friends have seen the video\rHence Post-1 is compromised\r\u200bPost-2 doesn't have any filters. Such a post was intended to be seen by anyone.\r\u200bHence Post-2 is not compromised.\rPost-3 has a include filter of List-1, List-2 and List-3.\rTheir union is {0,1,2,5,6,7,8,9}\rThese are the exact friends who saw the video\rHence Post-3 is not compromised\rHence only 1 post is compromised.\rSample Input 2\r5\r2 2 3\r5\r1 0\r1 1\r1 2\r1 3\r1 4\r4\r3 2 3 4\r1 0\r3 1 2 3\r0\r3 0 1 3\r0\r3 2 3 4\r1 0\r Sample Output 2\r1"}
{"i": "4655994848149504", "t": "Consider 0 as water and 1 as land. Write code in C to find out whether there is pool in the following matrices.\r 11111\r10001\r10001\r11111\rabove matrix is pool\r 11111\r11001\r11001\r10111\r11111\rabove matrix is NOT pool\r 11111\r11001\r11001\r10001\r11111\rabove matrix is pool\r 11111\r11101\r11001\r10001\r11111\rabove matrix is pool"}
{"i": "5906402736340992", "t": "Implement the queue using stack"}
{"i": "5898494862688256", "t": "Implement the stack using queue"}
{"i": "6544254671257600", "t": "def inc: \r  while True: \r      v = v + 1  //---A\r     set(s)       // ---B\r def disp: \r  while True: \r     wait(s)      //---C\r       print v    //----D\r print all possible value, which is shared value. At the begin , v = 0 \rs is binary semophore. initial value is 0"}
{"i": "5424071030341632", "t": "Given a list of strings. Produce a list of the longest common suffixes. If it asks for longest common substring, then building a suffix tree should be the way to go. But how should we implement this if it is for longest common suffixes?"}
{"i": "5905151726452736", "t": "Given a source string say \"xxyyxxx\" and a destination string say \"xxxxyyx\" and the number of steps, determine whether the source can be changed to the destination in the given steps..\rOne step is where you can change x to y or y to x or rotate the whole string by 1 element either left of right..\r Example:\r xxxyyxx and yxxxxxy and steps 5\rAnswer would be yes, as we can reach the number by rotating 3 steps and swapping a character twice.."}
{"i": "5664942795522048", "t": "Given a string S1, convert it to another string S2 (Anagram) by swapping only adjacent elements. Print all the intermediate strings formed.\r eg: s1: abcde\rs2: bcdae\r output: bacde,bcade, bcdae.\r like wise."}
{"i": "4702086893666304", "t": "Given N Vertices and M Edges. Each Edge connects two vertices.\r There is at most one way to move between each pair of vertices.\r Each vertex is either locked or unlocked .There is a perfect path between two different vertices if both vertices are unlocked, and are connected with each other by some way.\r The question is What is the number of pairs of vertices, which have a perfect path between them and also What is the number of the vertices, which have at least one perfect path passing through that vertex.\r NOTE : There is at most one way to move between each pair of vertices, that is, the given graph is a forest\r EXAMPLE : Say we have 6 Vertices and 5 Edges.\r A=[1,1,1,1,1,0] It shows that A[i]=1 if ith vertex is unlocked otherwise 0.\r Let the connected pair of vertices are : (1,2),(1,6),(1,5),(2,4),(4,3)\r Here ,Answer for first question is 10 and second one is 5.\r So,interviewer asked me to device an efficient algorithm for it and also code it in c++"}
{"i": "4586596565254144", "t": "Given a matrix, you need to create another matrix such that the value (i,j) is either -1, 0 or 1.\r1 - if multiplication of all values in ith row and jth column is greater than 0.\r-1 - if multiplication of all values in ith row and jth column is less than 0.\r0 - if multiplication of all the values in ith row and jth column is 0.\r e.g.\r1 2 3 1\r1 0 -1 2\r-1 1 1 1\r o/p\r-1 0 -1 1\r0 0 0 0\r1 0 1 -1"}
{"i": "5041383974895616", "t": "Given a list of countries with their population, write a method to pick any country such that the probability of it being chosen is proportional to its population"}
{"i": "5475694725300224", "t": "This was asked to one of my friends in her telephonic interview with ADP.\r Imagine you have a 5x5 matrix containing integers... If any of the elements in this original matrix is 0, then your resultant matrix should have the corresponding row and column filled with 0s. For e.g. if 1st element of 1st row, 2nd element of 2nd row......up to 5th element of 5th row are all 0s, then your resultant 5x5 matrix should be all 0s. Your code should be flexible and work for any size of matrix (not just with 5x5)."}
{"i": "6499596339511296", "t": "A number of intersecting bridges is given.Remove minimum number of bridge to make remaining bridges non-intersecting."}
{"i": "5071568031973376", "t": "Given linked list as a-x-b-y-c-z\routput it as a-b-c-z-y-x\rthat is reverse alternate element and append to end of list"}
{"i": "5438941951950848", "t": "Given a kernal code in \"0\"th machine. How soon you can replicate the kernal across N machines. Now if the machines has upload and download bandwidth constraints, how can you impove the copy time."}
{"i": "5680330589601792", "t": "If you have data coming in rapid succession what is the best way of dealing with redundant data?"}
{"i": "6702347652694016", "t": "In a book with N pages, pages are numbered from 1 to N. Find out how many times\reach digit occurs in that book.\r  You are expected to complete the function getDigitslnBook, which takes an integer as input and \rprints how many times each digits occur, one in a line.\r The Nth line in the output denotes how many times the integer N-1 occurs in page numbers.\r Constrains:\r   N will be between 1 and 1,000,000,000, inclusive.\rThe output will fit in an integer.\r Sample lnputOO:\r7\r Sample Outputo : 0\r         1\r0\r0\r  Explanation :\rThe page numbers are 1,2, 3,4, 5, 6 and 7.\r  Sample lnput01: 11\r Sample Output01:\r1\r4\r            Explanation:\rDigit 1occurs 4 times, at 1,10 and 11.Rest of the digits occurs only once."}
{"i": "5085331422445568", "t": "How would you use Dijkstra's algorithm to solve travel salesman problem, which is to find a shortest path from a starting node back to the starting node and visits all other node exactly once."}
{"i": "6495252147863552", "t": "I was asked a question in an interview. \r On an office floor , there are e entities - Walls , Cubicles , Coffee Rooms.\r In what data structure we should store this design that when a new member joins the company , the cubicle number which is empty and next closest to any coffee room should be assigned to it.\r Basically , data structure DS.pop() should return that cubicle number in the most efficient way.\r A Person can walk through cubicles to reach a coffee room but not through walls."}
{"i": "6577142510911488", "t": "How does trie handle scalability as opposed to hashtable? Assuming it is used for a dictionary. Sclability here should cover large size of input, running out of memory, or even running out of memory on multiple machines if distributed system is used."}
{"i": "5619363327508480", "t": "given 2 arrays wrds[] , chars[] as an input to a function such that \rwrds[] = [ \"abc\" , \"baa\" , \"caan\" , \"an\" , \"banc\" ] \rchars[] = [ \"a\" , \"a\" , \"n\" , \"c\" , \"b\"]\rFunction should return the longest word from words[] which can be constructed from the chars in chars[] array. \rfor above example - \"caan\" , \"banc\" should be returned\r Note: Once a character in chars[] array is used, it cant be used again.\reg: words[] = [ \"aat\" ]\rcharacters[] = [ \"a\" , \"t\" ]\rthen word \"aat\" can't be constructed, since we've only 1 \"a\" in chars[]."}
{"i": "6685828805820416", "t": "Given the following 3 by 3 grid where the (first row, first column) is represented by (0,0):\r 0,1     1,2     3,3\r1,1      3,3   3,2\r3,0     1,3     null\r we need to find if we can get to each cell in the table by following the cell locations at the current cell we are at. We can only start at cell (0,0) and follow the cell locations from that cell, to the cell it indicates and keep on doing the same for every cell."}
{"i": "6189859303587840", "t": "Given a Text String T: abbbacctlkjlkcccaaabbb and pattern string P: ab[.]*c[.]*b, Find all occurances of P in T"}
{"i": "6140059795324928", "t": "Given a Text String T: aaabbbzzccc\rand pattern string P: ab , Find all occurances of P in T"}
{"i": "4847461101207552", "t": "Write a Program for Dictionary which has functionality of lookup and insert . This program should be able to add words on the fly \r I wrote simple code using HashTable \r follow up \r 1) Now we are getting too many words what happens \rme: Hashtable will dynamically resize resulting into performance hit . Also they might get hashed to same location as well as we might run out of main memory \r 2) Okay you are out of main memory , How will you scale this program \rme: I will create buckets of HashTable lets say 26 buckets for one for each alphabet and would put them on different machines \r 3) Lets say you are out of memory on those machines too \rme: Okay I need to put them on secondary storage . Here we can have fileSystem or Database . I chose database . I will create simple DB schema of BucketNumber and word . \r I will use buckets on main memory as cache , if we are not able to find a word in the bucket then query databse with bucket number and words then remove the least number times looked up word (every time we lookup a word we increament the count i.e value in key,value pair on hashtable) from that bucket and add this word . \r I mentioned that bottleneck in this case will be every time a word is not present we need to query DB which usually has high latency which will result into performance hit \r 4) Lets say we are okay with latency but what if we are getting inserting words between that are only between only in two buckets ex. words starting from a and b only.\r Now that I think about it, is it better to do this in a trie? What do you guys think?"}
{"i": "5359122669109248", "t": "Given an input string and a dictionary of words, find out if the input string can be segmented into a space-separated sequence of dictionary words. You need to output the minimum number of words.  For example, input: \"aaaisaname\" \rdict: (\"a\", \"aaa\", \"is\", \"name\")\r output: \"aaa is a name\"\r Wrong output: \"a a a is a name\""}
{"i": "5481743482093568", "t": "You have two sorted list. Write code for returning the first k elements. K may be a large number like 10 million."}
{"i": "5908384326877184", "t": "You have a lists with integers. Find all the pairs of numbers that sum less than or equal to to a particular number k. The list contains minimum 5 Million number.\r (I provided a n^2logn solution but they may be looking forward to having a better answer)."}
