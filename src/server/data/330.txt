{"i": "14946895", "t": "* 54. An array of integers of size n. Generate a random permutation of the array, given a function \rrand_n() that returns an integer between 1 and n, both inclusive, with equal probability. What is the\rexpected time of your algorithm?"}
{"i": "14941905", "t": "A huge room is spanned by square tiles. Given the dimensions ( MXN ) of the room, determine how many tiles does any one of the diagonal pass through. \r We say that the diagonal passes through a tile if it divides the tile into 2 non-zero areas.\r INPUT \rThe input consists of several test cases. The first line of the INPUT is an integer T denoting the number of testcases. For every test case, there's a single line containing two positive integers M,N.\r OUTPUT \rFor every test case, output a positive number denoting the number of tiles the diagonal passes through.\r SAMPLE INPUT \r2\r4 4\r5 6\r SAMPLE OUTPUT \r4\r10"}
{"i": "14945873", "t": "Given a 2D Boolean matrix consisting of 0s and 1s. Find the largest size rectangle having all four borders as 1. The interior of it may or may not be entirely filled with 1s."}
{"i": "14945870", "t": "what is x86 and x64 why it is require is there any possibility that it will move forward like x 128"}
{"i": "14954840", "t": "A tuple can contain a list as an element.\r   True\ror\rFalse"}
{"i": "14945860", "t": "All O(1) functions take exactly the same amount of time to run.\r   True\r or\r False"}
{"i": "14948874", "t": "After a mutable object has been created, its identity can change.\r   True\r or\r False"}
{"i": "14942847", "t": "After a mutable object has been created, its value can change.\r True\r or\r False"}
{"i": "14947841", "t": "Given two node values for a tree, find LCA. Consider edge cases - (1) If there exists only one value in the tree, return null. (2) If none of the values exist in the tree, return null. (2) Handle ancestors for duplicate values like -\r                                             20\r                                           /       \\\r                                        10        50\r                                        /    \\        /  \\\r                                      10   17  40  60\r                                      /    \\\r                                    5      15\r So for above tree if values 5 and 17 are given, there LCA is the upper 10 and not the lower. You can exemplify something I bet :-)"}
{"i": "14967795", "t": "Given a sorted array of size n implemented as ring buffer, so that when array has reached (n-1) index, it will be overwritten from 0th index and likewise it will continue. Given any number, find its index in the array in less than linear time. Interviewer asked to consider the edge cases which I could not quite understand during the interview. I told, the edge cases would be no-element array, array with one element and such."}
{"i": "14954834", "t": "I will try to state the question. We all know mobile phone's keypad where \"2\" is mapped to ABC, \"3\" to DEF and so on. Given any sequence of integers, find all the (matching) combinations in your phone book."}
{"i": "14967793", "t": "You are given an input form such as the following\r(1, (2, 3), (4, (5, 6), 7))\rEach element is either a number or a list (whose elements may also be numbers or other lists).\rOutput the numbers as they appear, stripped down into a single list.\rE.G. (1, 2, 3, 4, 5, 6, 7)\r (Complication - how does your code handle the case of ((((5)))) vs just ( 5 ) ? )"}
{"i": "14959819", "t": "You are given a string that is in roman numeral format.\rOutput the integer representation.\rE.G. You're given XIV\rOutput 14."}
{"i": "14952824", "t": "Write an algorithm to print out how many extra duplicates there are in a binary search tree.\r input 1:\r    2 \r  / \\\r 1   2\r output 1:\r2 1 \r  input 2:\r      3\r    / \\ \r   2   3\r  / \\   \\\r 1   2   4\r        / \\\r       3   4\r            \\\r             5\r              \\\r               5\r output 2:  \r 2 1\r3 2\r4 1\r5 1 \r Given:\rNode {\r  int value;\r  Node left;\r  Node right; \r}"}
{"i": "14959796", "t": "What would be an example of glass-box testing?\r(ruby on rails)\r  Throwing random data at your application to see if it breaks\r Testing a particular code path in the program\r Automatically making small but syntactically legal changes to the program\r Testing the result of a predetermined input to the program"}
{"i": "14921917", "t": "What is the benefit of using factories over fixtures?\r(ruby on rails)\r  Factories create full-featured objects, but fixtures do not\r Factory objects persist across specs, while fixture objects do not\r Factories keep tests independent, while fixtures may not\r All objects from a certain factory are exactly the same, while objects from a fixture may vary"}
{"i": "14952822", "t": "What is the main difference between BDD and TDD?\r(ruby on rails)\r  BDD focuses on validation while TDD focuses on verification\r BDD focuses on verification while TDD focuses on validation\r BDD is better than TDD at testing methods independently\r BDD generally uses mocks and stubs more than TDD"}
{"i": "14952821", "t": "Which of the following statements are true regarding mocks in RSpec? Select all that apply.(ruby on rails)\r  Mocks are used to isolate tests from the database\r Model mocks automatically have access to all existing methods of the model\r Mocks can be created with default attribute values"}
{"i": "14951801", "t": "Which of the following lists the kinds of tests in order of increasing code exercise complexity?(ruby on rails)\r   Integration tests, functional or module tests, unit tests\r Unit tests, integration tests, functional or module tests\r Unit tests, functional or module tests, integration tests\r Functional or module tests, unit tests, integration tests"}
{"i": "14921914", "t": "Your test randomly changes the comparison operators in your conditionals. This is which kind of testing?\r   Mutation test\r Glass-box test\r Black-box test\r Fuzz test"}
{"i": "14946838", "t": "Which of the following guarantees that you have exhaustively unit-tested a piece of code?\r   100% C0 (statement) coverage\r 100% C1 (branch) coverage\r 100% C2 (path) coverage\r None of the above"}
{"i": "14951800", "t": "For a service like TMDb with an HTTP-based RESTful API, a Ruby wrapper library such as the ruby-tmdb gem is necessary in order to call the service from a Ruby app.\r   True\r False"}
{"i": "14955825", "t": "RSpec's stub method can be used to override a method call on\r   an instance only\r a class only\r an instance or a class only\r any Ruby object"}
{"i": "14945829", "t": "Sally wants to create a dating website and decides to write an algorithm that takes a list of male and female users' preferences and returns the best matching of males with females. To test her algorithm, she manually calculates the best match. She then runs the algorithm and checks to see if the observed output matches with her manual calculation. What FIRST principle is clearly not being followed?\r   Fast\r Independent\r Repeatable\r Self-checking\r Timely"}
{"i": "14954809", "t": "High coverage can always be achieved by writing a unit test for every method.\r   True\r False"}
{"i": "14946831", "t": "Write code using commands below for two rovers to meet. Two rovers are dropped on Mars. Imagine Mars to be a straight infinite plane. When the rovers are dropped on Mars they are dropped with parachute. So their initial position on Mars is on parachute. \r Only commands possible to execute:\r1. Go left\r2. go right\r3. NO OPERATION\r3. If on parachute go to lablel.\r Label can be a piece of code with a name where we can transfer execution\r Using ONLY commands above write code for rovers to meet."}
{"i": "14921898", "t": "int match(string input, string pattern)\rinput= input string\rpattern = pattern that we are looking for in a string.\r                 The pattern can contain * wild char which atleast matches 1 char, that is A*B doesnt match AB.\r return = index of start of first such sequence ."}
{"i": "14921897", "t": "How to implement stack using queue"}
{"i": "14945816", "t": "How does JVM decides whether deadlock has happened or not?\rWhat is the Data Structure/ Algorithm JVM uses to know for the deadlock condition?"}
{"i": "14921888", "t": "Remove the duplicates in a linked list"}
