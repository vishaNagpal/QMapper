{"i": "5701929771466752", "t": "There is an input log file given as follows-\r log = [\r  { 'user': 'A', 'page': 1},\r  { 'user': 'B', 'page': 5},\r  { 'user': 'A', 'page': 2},\r  { 'user': 'A', 'page': 1},\r  { 'user': 'B', 'page': 2},\r  { 'user': 'C', 'page': 7},\r  { 'user': 'C', 'page': 3},\r  { 'user': 'A', 'page': 3},\r  { 'user': 'C', 'page': 1},\r]\r please implement\rdiscover_site_map(log)\r discover_site_map returns a representation of the links between pages, using whatever data structure you think is suitable:\r1 -> 2, 3\r2 -> 1\r3 -> 1\r5 -> 2\r7 -> 3  \r How to solve this in C++ and Python?"}
{"i": "5633477589336064", "t": "You have rating (0-10) of the hotels per user in this format:\r scores = [\r    {'hotel_id': 1001, 'user_id': 501, 'score': 7},\r    {'hotel_id': 1001, 'user_id': 502, 'score': 7},\r    {'hotel_id': 1001, 'user_id': 503, 'score': 7},\r    {'hotel_id': 2001, 'user_id': 504, 'score': 10},\r    {'hotel_id': 3001, 'user_id': 505, 'score': 5},\r    {'hotel_id': 2001, 'user_id': 506, 'score': 5}\r]\r Any given hotel might have more than one score.\r Implement a function, get_hotels(scores, min_avg_score) that returns a list of hotel ids that have average score equal to or higher than min_avg_score.\r get_hotels(scores, 5) -> [1001, 2001, 3001]\rget_hotels(scores, 7) -> [1001, 2001]\r*/  \r How to solve this in C++ and Python?"}
{"i": "5694865288462336", "t": "Find out the longest repeated common sub-string(overlapped) in a string.\rFor example:- mystr = banana # The \"ana\" is the common overlapped sub-string is been used 2 times."}
{"i": "5707246940979200", "t": "Write code in C to implement 2048 game in c \r?"}
{"i": "5171244619005952", "t": "Given input format, The first line has the number of employees of a company Z. The next two lines have employees to perform certain operations on. The first employee of the fourth line can be assumed to be the ceo of the company. Each line from then on has the format Employee X Employee Y where X manages Y. (and hence Y forms the child for X). \r input:\r6\rRajesh \rRavi\r//Tree Starts here\rRam Raj\rRam Goku\rRaj Rajesh\rRaj Richa\rRicha Ravi\r Its known that each person in the company can directly line manage a maximum of 2 other employees.\rFor the two employees in the first two lines, find the lowest common manager. \r How to construct this tree in java to eventually do an lca?"}
{"i": "5676160974323712", "t": "You want to design a Cab system which will show you nearest 5 taxis.\rEach taxi will continuously emit (x,y) coordinates.\rYou need to print the nearest taxi from (p,q)."}
{"i": "5686558821711872", "t": "You want to design a Cab system which will show you nearest 5 taxis.\rEach taxi will continuously emit (x,y) coordinates.\rYou need to print the nearest 5 taxis from (p,q)."}
{"i": "5730509222051840", "t": "Given an arithmetic expression, write a program to find the value of the expression. Only binary operations that are allowed are +,-,*,/. Also assume that all parentheses are well matched.\r Note that the use of eval() is forbidden\r Input format :There is a single positive integer T on the first line of input . It stands for the number of expressions to follow.\rNext T lines followed by expression\rOutput format : For each expression print the value of expression\r 3\r19 + 12 / 4 - ((4 - 7) * 3 / 1)\r1 + (2 - 3) * 4 + 5 - 6 * 8 - (18 * 12 * 13) - (11 / (5 + 2 + 4))\r((2 + 4) / 3 - 2 + 1)\r Output:\r31\r-2855\r1"}
{"i": "5707685497405440", "t": "Print the lucky numbers which contains \"4\" and \"7\" from the series 4, 7, 44, 47, 74, 77\rex\rinput 5\ro/p 74"}
{"i": "5649532713959424", "t": "Print the element in anti spiral order \rfor example \rMatrix \r1 2 3\r4 5 6 \r7 8 9\ro/p\r5 6 9 8 7 4 1 2 3"}
{"i": "5648393205448704", "t": "You have an array of unique integer numbers and only one operation: MoveToFront(x) that moves given number to the beginning of the array.\rWrite a program to sort the array using the minimum possible number of MoveToFront() calls."}
{"i": "5708282229424128", "t": "In a 2D(m*n) int array few cells are marked as 0(zero). Distance between each cell is 1(one). Hence diagonal from one cell to next cell in the diagonal is 2(two). For each cell find the distance from the closest 0(zero) value cell.\r Input would be: length of array. width of array. count of zero in the array. followed by list of x coordinates and list of y coordinates\r Example:\r 3\r 5\r 1\r 0\r 0\r Output:\r 0\t1\t2\r1\t2\t3\r2\t3\t4\r3\t4\t5\r4\t5\t6"}
{"i": "5692498761482240", "t": "Implement a web crawler. Follow up - parrarelize it."}
{"i": "5717983285477376", "t": "Given points on the Cartesian plane. Return the K points closest to the origin (0,0)."}
{"i": "5169449926656000", "t": "Implement a Reader/Writers lock by only using primitive locking semantics (such as mutex,semaphore, etc..)"}
{"i": "5652150026764288", "t": "You are given a \"hand\" in the  game of blackjack. where cards are numbered 1 - 10, A = 1/11 J - 12,Q - 13, K - 14. a Hand consists of several cards. Given a single hand, you need to return the score of that hand which is closest to 21."}
{"i": "5732399880077312", "t": "Given an N X M matrix where some position are free and some have trees in them. You can build a house on any group of free positions that form a square (including a single position). Return the largest house you can build given these requirements."}
{"i": "5675186889162752", "t": "Basic background questions, describe a situation where you proposed a design and it was opposed. What did you do to convince people that your design was sound. Describe a situation where something you suggested resulted in improved process or caused a big positive impact on the company, etc."}
{"i": "5651199228379136", "t": "Implement a TwoSum interface that has 2 methods: Store and Test. Store adds an integer to an internal data store and Test checks if an integer passed to Test is the sum of any two integers in the internal data store. Once you provide an answer interviewer will ask the O complexity of the solution and ask you to optimize it.\r I provided 2 solutions, one with O(n-square) and another O(n). However the O(n) solution used 2 internal data stores. I was asked to preserve O(n) but not use the second internal storepublic interface TwoSum {\r\n    /*\r\n     * Stores input in an internal data structure.\r\n     */\r\n    public void Store(int input);\r\n \r\n    /*\r\n     * Returns true if there is any pair of numbers in the internal data structure which\r\n     * have sum val, and false otherwise.\r\n     * For example, if the numbers 1, -2, 3, and 6 had been stored,\r\n     * the method should return true for 4, -1, and 9, but false for 10, 5, and 0\r\n     */\r\n    public bool Test(int val);\r\n}\r\n\r\npublic class TwoSumImpl : TwoSum\r\n{\r\n    private List<int> _store = new List<int>();\r\n    private List<int> _sums = new List<int>();\r\n    public void TwoSumImp()\r\n    {\r\n    }\r\n    //-3,-2,3,5,7\r\n    //-5,0,1,-2,-3,8,\r\n    public void Store(int input)\r\n    {\r\n        if(!_store.Contains(input))\r\n        {\r\n            _store.Add(input);\r\n            \r\n        }\r\n    }\r\n    public bool Test(int val)\r\n    {\r\n        for(int i=0; i<_store.Count;i++)\r\n        {\r\n            \r\n            if(_store[i] < 0) //store[i] is negative\r\n            {\r\n               \r\n                diff = val + Math.Abs(_store[i]);\r\n                \r\n                if(_store.Contains(diff))\r\n                {\r\n                    return true;\r\n                }\r\n            }\r\n            else //store[i] is positive\r\n            {\r\n            \r\n                diff = val - _store[i];\r\n                if(_store.Contains(diff))\r\n                {\r\n                    return true;\r\n                }            \r\n            return false;\r\n        }\r\n    }\r\n}"}
{"i": "5728178464096256", "t": "You are given an old touch smartphone numbers having dial pad and calculator app. \rThe goal is to type a number on dialpad.\rCalculator have 1-9 and +,-,*,/,= as operations. But as phone is old, some of the numbers and some operations can't be touched.\rBut you can always make a number using other numbers and operations. There could be multiple ways of making a number. You have to find minimum operation for making a number.\rFor ex: lets say 1,4,6,7,8,9 works and +,-,* works.\r2,3,5 and / doesn't work.\rIf you have to type 18-> 2 operations. (Each touch is considered an operation)\rIf you have to type 5 -> '1+4=' that requires 4 operations. There could be other ways to make '5'.\r The goal is to find minimum operations."}
{"i": "5156071640399872", "t": "Given a read only array of n + 1 integers between 1 and n, find one number that repeats in linear time using less than O(n) space and traversing the stream sequentially O(1) times."}
{"i": "5199920035266560", "t": "Design for online card game say like poker or any other game. The classes etc.."}
{"i": "5636290054717440", "t": "Design Food Panda or online food ordering system."}
{"i": "5727438924414976", "t": "Chess Knight Problem: - It deals with a knight piece on a chess board. You are given two inputs: starting location and ending location. The goal is to then calculate and print the shortest path that the knight can take to get to the target location."}
{"i": "5155414241968128", "t": "Write a unix command to display the every character in the word \"AMAZON\" in new line.\r Ex : Input - AMAZON\routput:  A\r             M\r             A\r             Z\r             O\r             N"}
{"i": "5726440612954112", "t": "Given an array of positive integers and a target total of X, find if there exists a contiguous subarray with sum = X\r [1, 3, 5, 18]   X = 8  Output: True\r                X = 9  Output: True\r                X = 10 Output: False\r                X = 40 Output :False"}
{"i": "5641255036911616", "t": "In a race track, N runners participate. They may have different time of completion of track.\rCalculate how many times will they meet after a certain time time period.\r If track completion time is same, do not consider meet.\r E.g.\rTime: 8\rParticipants time: 1 2 4\rTotal meets: 12"}
{"i": "5739353163694080", "t": "Implement a data structure to represent this\r[1,[2],[[[5]]],6,7,8]. Multi level indirection with in a list"}
{"i": "5679769082396672", "t": "Write a method given a string with unbalanced parenthesis, the output should return a string with balanced parenthesis.\r Ex: (a(b(c)de should change to (a(b(c)d)e)"}
{"i": "5643011141664768", "t": "Tell me about one Android API that you had difficulty using in a project and how did you resolve that Issue."}
