{"i": "6243110352846848", "t": "How do you test search functionality of Amazon. Include category based searches as well. What tests you will automate and what tests you will not automate"}
{"i": "6273553081040896", "t": "Given a string and two words which are present in the string, find the minimum distance between the words\rEg: \"the brown qucik frog quick the\", \"the\" \"quick\" O/P -> 1\r\"the quick the brown quick brown the frog\", \"the\" \"the\" O/P -> 2"}
{"i": "5746818291859456", "t": "How to find if a given expression is a valid arithmetic expression?\rEg:(())()) - Invalid expression, (()()) - Valid expression"}
{"i": "5120301346062336", "t": "Find the first and last occurrence of a number in a sorted array of integers\rFor Example: int[] a = {1,2,3,4,5,5,7,8}"}
{"i": "5680160399425536", "t": "The Echo device light's up when a question is asked, but does not answer the question. Troubleshoot the scenario"}
{"i": "6222314456743936", "t": "Write test cases for an analog watch"}
{"i": "4811161277038592", "t": "Given a linkedlist, write an algorithm to divide the linkedlist into two linkedlists, the first contains the Fibonacci numbers in the list and the second contains the non-Fibonacci numbers.\rTest the algorithm after developing the code"}
{"i": "4819140520968192", "t": "How to find kth prime number with k<=500000 and time limit - 1s?"}
{"i": "5080100049518592", "t": "You are given a set of points on x axis (consumers)\rAlso you are given a set of points on a plane (producer)\r For every consumer print the nearest producer.\rWanted something better than O(n^2) time.\r Example:\rconsumers: 1 5 7\rproducers: (0, 3), (1,1), (3, 2), (8, 10), (9, 100)\r Answer:\rfor 1 nearest producer is (1, 1), for 5 nearest is (3, 2), for 7 nearest is (3, 2)\r Follow-up question: now both sets are sorted by x coordinate. Could you come up with a linear algorithm?"}
{"i": "5766749087596544", "t": "Find a counter example proving that the following substring algorithm is incorrect:const char* findSubstr(const char* str, const char* substr)\r\n{\r\n\r\n\tint len = strlen(str);\r\n\tint substrlen = strlen(substr);\r\n\tint j = 0;\r\n\tconst char* result = NULL;\r\n\tfor (int i = 0; i < len; ++i)\r\n\t{\r\n\t\tif (str[i] != substr[j])\r\n\t\t{\r\n\t\t\tj = 0;\r\n\t\t\tresult = NULL;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (j==0)\r\n\t\t\t\tresult = &str[i];\r\n\r\n\t\t\t++j;\r\n\t\t\tif (j >= substrlen)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}"}
{"i": "5714929568972800", "t": "Count the Mines Problem:\r Your program will first read an integer N from stdin.\rThen it will then read N lines of N integers separated by spaces.\rEach integer in this Grid will be either 1 or 0.\r The program then outputs an N x N Grid where each Grid element represents the number of 1's surrounding that element, (excluding the element itself).\r For (column, row) = (0, 0), surrounding element indices are (0,1) (1,0) and (1,1). \rSimilarly for (1,1), surrounding element indices are  (0,0) (0,1) (0,2) (1,0) (1,2) (2,0) (2,1) and (2,2). \r Constraints:\r Your output lines should not have any trailing or leading white space\rMaximum Dimension of Grid = 1000 x 1000\r Example Input:\r \"3 0 1 0 0 0 0 1 0 0\"\r Expected output:\r 1 0 1\r 2 2 1\r 0 1 0"}
{"i": "5714443633688576", "t": "Input argument of a method is a list of char array. The method have to print all the possible combination of input char(s)...For example if the input argument has ['A','B','C','D'] the output should be A,B,C,AB,AC,AD,BC,BD,CD,ABC,ACD,BCD,ABCD"}
{"i": "5676298150084608", "t": "Given an array of \"array range\", return an optimized array by deleting subarrays. \r NOTE: Array range (2,6) represents (2,3,4,5,6)\r INPUT: [(2,6),(3,5),(7,21),(20,21)]\rOUTPUT: [(2,6),(7,21)] \r Reason: (3,5) is a subarray of (2,6) and (20,21) is a subarray of (7,21)"}
{"i": "6239098115194880", "t": "Given a sentence in a form of a string, reverse the words in the string and return a string. Handle a case where there might be period at the end of the sentence. If there is a period, the period has to come to the end of the reversed sentence. Discuss the time complexity of your algorithm.  \r INPUT: \"This is a sentence\"\rOUTPUT: \"sentence a is This\"\r INPUT2: \"This one has period.\"\rOUTPUT2: \"period has one This.\""}
{"i": "5645501623959552", "t": "2. VeryLongInt \rDesign a class which can add and subtract integers up to 1000 digits. You can make the following assumptions\rNo need to handle overflow or underflow (extra credit if you do)\rCopy constructor is available\r\u201c+\u201d and \u201c-\u00ad\u201d are binary operators"}
{"i": "5757635703865344", "t": "1. Balanced Parentheses \rGiven a string s of parentheses (ex: \u201c(()\u201d), return the minimum number of parentheses that need to be inserted to make it into a well formed string\rA well formed (balanced) string of parentheses is defined by the following rules: \u25cf The empty string is well formed. \u25cf If s is a well formed string, (s) is a well formed string. \u25cf If s1 and s2 are well formed strings, their concatenation s1s2 is a well formed string.\rImplement \u00a0\u00a0\r \u00a0int MinNumInsersertionsForBalancing(const string& s)"}
{"i": "5695003068203008", "t": "Find if the characters of the sample string is in the same order in the text string.. Give a simple algo.. \rEg.. TextString: abcNjhgAhGjhfhAljhRkhgRbhjbevfhO\rSample string :NAGARRO"}
{"i": "5702373701844992", "t": "Sort an array of 0s, 1s and 2s\rGiven an array A[] consisting 0s, 1s and 2s, write a function that sorts A[]. The functions should put all 0s first, then all 1s and all 2s in last.\r Example\rInput = {0, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 1};\rOutput = {0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2}\r The problem is similar to http://www.csse.monash.edu.au/~lloyd/tildeAlgDS/Sort/Flag/\r But they have added 1 trick into the question, You cannot use high = n;\r It means don't calculate the length of array.\r Can anyone help me in writing the code for this problem ?"}
{"i": "5693045032878080", "t": "there are n ranges of numbers, we need to find the kth smallest element.\r One way to find it is to perform a merge sort and return the kth element. but we don;t have extra space. For that we need to write the algorithm,\r eg:\r [2-8]\r [5-10]\r [7-20]\r 5th smallest element is 5. 10th smallest element is 7."}
{"i": "5711050139762688", "t": "there are n ranges of numbers, we need to find the kth smallest element.\r One way to find it is to perform a merge sort and return the kth element. but we don;t have extra space. For that we need to write the algorithm,\r eg:\r [2-8]\r [5-10]\r [7-20]\r 5th smallest element is 5. 10th smallest element is 7."}
{"i": "5732413307092992", "t": "How would you go about testing a distributed system such as Gmail, before releasing it to the public. How would you simulate realistic server load?"}
{"i": "5696307127648256", "t": "add 2 huge numbers represented by linked list.  Each linked list element represents a 4 digit number:\r linked list1 : 8798 -> 8765 -> 1243 -> 9856 -> 8888 -> 0914\rlinked list 2: 8710 -> 5634 -> 1276 -> 8123 -> 1354 -> 9876\r output:          ................-> ............. ..->    7980->0243 -> 0790"}
{"i": "5751697106272256", "t": "difference between shared tree and source specific tree in multicast"}
{"i": "5736439503388672", "t": "write a program to validate a IPV4 address"}
{"i": "4847754398400512", "t": "design a bit map of 16K bit\rget_bit, should get a free bit in this bit map\rclear_bit, should clear a bit in this bit map"}
{"i": "5198851868721152", "t": "write a program to toggle certain bits in a integer.  \rEg.\r Inputs : int a, int start bit, int num_of_bits\r if a is say 11111010110100000\r if start = 6\rnum_of_bits = 4\r output should be (starting 6th bit from right, toggle 4 bits)\r11111010001000000"}
{"i": "5152918065905664", "t": "write a program to count the 2 letter words in a sentence. Eg. \"I am in love with New York\" should return 2 (am and in)."}
{"i": "5089977132122112", "t": "design routing table using trie"}
{"i": "5176185715687424", "t": "what are the advantages of IPV6 over IPV4 other than the scale advantage ?"}
{"i": "5689142249783296", "t": "write a program to find the number when a string is transformed to a palindrome, you can go from higher alphabet to lower alphabet and not the other way:\r Example:\r to convert \"abc\" to palindrome, 'c' should be changed to 'a'.  output should be 2 ('c' - 'a')."}
