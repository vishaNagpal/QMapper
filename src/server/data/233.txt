{"i": "6509608940077056", "t": "Name some DNS records and their purposes."}
{"i": "6247401723527168", "t": "Difference between inner join and left join?"}
{"i": "5098624002293760", "t": "What is the default port for mysql?"}
{"i": "6004339189481472", "t": "What is inside a packet?"}
{"i": "5163800265228288", "t": "Difference between Active and Passive FTP?"}
{"i": "6271593529475072", "t": "I type www.Amazon.com into the browser and click go, explain in detail what happens?"}
{"i": "5661573955715072", "t": "Move the first n numbers in a 10 element array to the end.\r I think the way to do it was to reverse the array and then reverse the first 10-n and then the last n."}
{"i": "5116100895309824", "t": "What would be the O/P and why?#include<stdio.h>\r\n#include<conio.h>\r\n\r\nint main()\r\n{\r\n\t\r\n\r\nint k = -7; \r\nprintf(\"%d\", 0 < !k);\r\n\r\nreturn 0;}"}
{"i": "5762415492857856", "t": "Imagine x is an operand and * is a binary operator. We say a string of x and * follows Reverse Polish notation if it is a postfix notation.\r For example strings xx*, x, and xx*xx** follow Reverse Polish notation.\r Given a string of x and *, how many insert, delete, and replace operations are needed to make the string follow the RPN.\r For example, xx* need 0 operation to follow RPN since it already follows RPN.\rx*x needs two operations to become xx* which follows RPN.\r*xx* needs one operation to become xx* which follows RPN.\r Your algorithm should work for a string of size up to 100."}
{"i": "5075068254158848", "t": "Develop a program to demonstrate your implementation of a CSV parsing framework which can be used to generically parse given CSV file into Java beans and prints out information about parsed objects using toString(). The program should follow OOAD open-closed principle to avoid/minimize modification of code when new types are added in future.\r You should accept input from STDIN and print the output to STDOUT.\r Assume following input format and study sample inputs given below:\r Data-type \rHeader-Row\rData-Row-1\rData-Row-2\r....\rData-Row-N\rThe first line indicates the entity type, 2nd line is comma separate list of column names, 3rd line onwards is the comma separated data values.\r Test Case 1 Input\r Type:Employee\rname,age,salary\rAshok,36,20000\rKishor,30,15000\rBharath,25,30000\rExpected Output\r Name : Ashok;Age : 36\rName : Kishor;Age : 30\rName : Bharath;Age : 25\rTest Case 2 Input\r Type:Department\rcode,name\racc,accounts\rprl,payroll\rExpected Output\r Code : acc;Name : accounts\rCode : prl;Name : payroll\rYour solution should parse the input into Java Beans (POJOs). For example, in test case 1, you will be make use of following Java bean (if you chose Java as programming language, and equivalent if you were using other language).\r class Employee {\r     private String name;\r    private int age;\r    private int salary;\r     public Employee() {\r    }\r     public void setName(String name) {\r        this.name = name;\r    }\r     public String getName() {\r        return this.name;\r    }\r     public void setAge(int age) {\r        this.age = age;\r    }\r     public int getAge() {\r        return this.age;\r    }\r     public void setSalary(int salary) {\r        this.salary = salary;\r    }\r     public int getSalary() {\r        return this.salary;\r    }\r     public String toString() {\r        return \"Name : \" + this.name + \";\" + \"Age : \" + this.age;\r    }\r}\rYou can create a similar bean for Department as required for test case 2."}
{"i": "5971990569549824", "t": "An array is given like {3,6,10,4,5,7,8}.  Pick any two number suppose 10 and then 7, as 10 >7, it's an inversion, now if you choose 3 & 5, 3<5,  it's not an inversion.  \r So you have to write a program to calculate total no of such inversion, in a given array. You can use extra space of O(n)."}
{"i": "6311825561878528", "t": "Given an Array, replace each element in the Array with its Next Element(To its RHS) which is Larger than it. If no such element exists, then no need to replace.\rEx: \ri/p: {2,12,8,6,5,1,2,10,3,2}\ro/p:{12,12,10,10,10,2,10,10,3,2}"}
{"i": "6082007230578688", "t": "One of the questions in one of the interviews - \r Given a stack S and another empty stack T and a variable v, write a function that returns S but with its elements reversed."}
{"i": "4631586708389888", "t": "N jobs are given, their dependency list is given how will you schedule them ?"}
{"i": "4860478937366528", "t": "n jobs are given , their dependency list is given how will you schedule them ?"}
{"i": "4909367207919616", "t": "WAP to modify the array such that arr[I] = arr[arr[I]].\rDo this in place i.e. with out using additional memory.\r example : if a = {2,3,1,0}\ro/p = a = {1,0,3,2}\r Note : The array contains 0 to n-1 integers."}
{"i": "5180645529616384", "t": "Stooge sort implementation using Iteration?"}
{"i": "5661939564806144", "t": "Give a N*N matrix, print it out diagonally.\rFollow up, if it is a M*N matrix, how to print it out.\rExample:\r1 2 3\r4 5 6\r7 8 9\rprint:\r1\r2 4\r3 5 7\r6 8\r9\r This is the question in the phone interview.\rPlease share more questions."}
{"i": "5159516840656896", "t": "There is a dictionary of billion words and there is one method provided\rString getWord(int index); We can give it index and it will return the String on that index .\rNow word is given to us we have to find out its index. O(logn) solution was required."}
{"i": "5950229446656000", "t": "Frog can jump 1 or 2 steps write the code to find out number of ways to go up to n steps"}
{"i": "5763491516383232", "t": "program to pruning a binary tree"}
{"i": "6153780563279872", "t": "Program to check whether undirected graph is a tree or not?"}
{"i": "5698049099694080", "t": "You are given an array with numbers - [11, 3, 11, 11, 3, 2, 0, -2, 2]\r You are supposed to write a function that returns the number that appears \"odd\" number of times. \r The solution is obviously using HashMap. But that takes O(n) to create the HashMap and O(n) to lookup. How can one eliminate the second O(n) yet keeping the HashMap? \rHint: Do you really need to count frequency of occurrence of each digit?"}
{"i": "5412018236424192", "t": "Given a linked list where apart from the next pointer, every node also has a pointer named random which can point to any other node in the linked list. Make a copy of the linked list."}
{"i": "6139456847347712", "t": "Microsoft Excel numbers cells as 1...26 and after that AA, AB.... AAA, AAB...ZZZ and so on.\rGiven a number, convert it to that format and vice versa."}
{"i": "4922014007558144", "t": "Design question: Say you have hacked in to a network and can deploy your bot thousands of machines, how would you design your bot so that all the machines work together to download a website, say wikipedia. There should be load balancing and a page should be queryable given its URL."}
{"i": "5890898499993600", "t": "Given a matrix of letters and a word, check if the word is present in the matrix. E,g., suppose matrix is:\ra b c d e f\rz n a b c f\rf g f a b c\rand given word is fnz, it is present. However, gng is not since you would be repeating g twice.\rYou can move in all the 8 directions around an element."}
{"i": "5998719358992384", "t": "Given a matrix consisting of 0's and 1's, find the largest connected component consisting of 1's."}
{"i": "4713484755402752", "t": "Given two arrays of sorted integers, merge them keeping in mind that there might be common elements in the arrays and that common elements must only appear once in the merged array."}
{"i": "5198302274387968", "t": "Inorder traversal of binary tree"}
