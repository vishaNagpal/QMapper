{"i": "15289733", "t": "Microsoft recruiting final round:\rInterview 1-Question 1:\rInsert  node in a sorted singly linked list"}
{"i": "15290734", "t": "What is the Minimum Amount not possible using an infinite supply of coins (Unbounded knapsack)\r You are given coins of \rDenominations {v1, v2 , v3, v4 ....vn } of weight {w1, w2, w3 .....wn}\r Now that you have a bag of capacity W .\rFind the smallest Value V that is not possible to have in the bag.\r(Note , you are not trying to maximize the value V)"}
{"i": "15203891", "t": "Given a very very very large integer(with 1 million digits, say), how would you convert this integer to an ASCII string"}
{"i": "15259789", "t": "Write a long running program in C. This program should not hog the CPU, use no sleep()/block()/select()/wait(), should not block resources...and should terminate after a very very very long time"}
{"i": "15261773", "t": "Find the 2nd largest element in a binary search tree"}
{"i": "15258753", "t": "a. How does OS detects a device on boot up, how does it gets to know whether it is working or faulty?\rb. How does the device driver initialize this device (initialization, registration etc)?"}
{"i": "15259770", "t": "What is pass by value and pass by reference?\ra. Can a structure be passed by value?\rb. Can an array be passed by value?"}
{"i": "15206845", "t": "How will you implement a T9 dictionary? (requiring only 1 look up, no partial searches meaning one keys in a name and then presses go to find it)"}
{"i": "15206843", "t": "How will you tell whether a given number is a palindrome?\rEdit: The question was for a string actually."}
{"i": "15258752", "t": "How will you reverse a given number? (not using \"/\", \"&\" operators)\rFor eg 756 - > 657"}
{"i": "15289689", "t": "You have a sequence of data which tells about daily prices of a stock (of a company in some market). Given the sequence for N such days tell when should one buy and sell to maximize the profit. (for simplicity Assume you can buy only 1 stock). Prices of stock is same for a single day and you cannot buy and sell on the same day. \r Edit: You have to buy once only and sell once only. (I also misunderstood Q during interview that we have to tell sequence of buying and selling but it was not the question)"}
{"i": "15290691", "t": "There are 50 Red and 50 white balls. and two back.\rPut all these balls in two bag such that if we pick any of the bag, probability of getting red is maximum ....."}
{"i": "15295678", "t": "Defining a tree as such that the parent node always contains the sum of children nodes.\r Coul be something like this): \r        private static int p_get_nodes_value_sum(TreeNodeCollection v_tree_original)\r        {\r            //TreeNodeCollection a_child = v_tree_original.ChildNodes;\r            //TODO:sum the child nodes           \r             int a_suma = 0;\r             foreach (TreeNode a_child in v_tree_original)\r            {\r                if (a_child.ChildNodes.Count > 0)\r                    a_suma += p_get_nodes_value_sum(a_child.ChildNodes);\r                else\r                    a_suma += Convert.ToInt16(a_child.Value);\r             }\r             return a_suma;\r         }\r          public class TreeParentSum: TreeNode{\r             public TreeParentSum(TreeNode v_tree)\r            {\r                int a_sum = p_get_nodes_value_sum(v_tree.ChildNodes);\r                 TreeNode a_node = new TreeNode(\"PARENTNODE\", a_sum.ToString());\r                a_node.ChildNodes.Add(v_tree);              \r             }\r        }"}
{"i": "15208887", "t": "Write a program to find the unique char in the ascii string."}
{"i": "15290675", "t": "Given an integer, return all sequences of numbers that sum to it. (Example: 3 -> (1, 2), (2, 1), (1, 1, 1)).  Interview was for a php position."}
{"i": "15192865", "t": "How you maintain the list of top selling product (like on Amazon). Also how you update list based on user like and unlike for a particular product."}
{"i": "15210829", "t": "Write a method to validate that given Binary tree is a BST."}
{"i": "15294674", "t": "There are elements being inserted in a HashSet. Print all the values in the order in which they are inserted."}
{"i": "15202864", "t": "Change the structure of a Tree node to hold a pointer for the next in-order element (sucessor).\r Given a Binary Search Tree.. transform it on a LinkedList by setting the next pointer described above.\r Maybe this is a duplicate question."}
{"i": "15203853", "t": "Implement a shared int pointer in C++ (SharedIntPtr).. the use would be like this:SharedIntPtr a(new int); // reference count 1;\r\nSharedIntPtr b(a);       //  reference count 2;\r\n\r\n*a = 2;\r\ncout << *b; // \"2\";\r\n\r\na.reset();  // reference count -> 1\r\n*a // <- NULL\r\n\r\nb.reset();  // reference count ->0 , object is deleted.There is also this reference count which tells how many references do you have.\r And the question was: Implement SharedIntPtr, constructors and reset()."}
{"i": "15203851", "t": "Print all combination of given length k possible with characters available in a given string \"S\" with repetition in new lines.\rExample\rS=\"abc\"\rk=2\routput:\raa\rab\rac\rba\rbb\rbc\rca\rcb\rcc"}
{"i": "15207811", "t": "Whats the difference between Semaphore and Lock in Java?"}
{"i": "15192847", "t": "We are given a matrix of MxN elements with each element either being 0 or 1.Find the shortest path between a given source cell to a destination cell.\rAn element value of 0 means we cannot create a path out of that cell"}
{"i": "15259735", "t": "You are given two Strings lets say \"S\"  which consist Upper Case albhabets and '?' character only and p. You are required to replace '?' with some alphabet so that resulting string have maximum number of \"p\" in it. You can replace '?' with any alphabet.\r2. Replace '?' such that it should be lexicographically sorted.\rExample\rS=\"ABAAMA????MAZON????????\"\rp=\"AMAZON\"\rThe final string S = \"ABAAMAZONAMAZONAAAMAZON\"  \r S=\"?????\"\rp=\"ABCD\"\rFinal Result=\"AABCD\"\r  Soln:- Proceed from the end of the String.#include<stdlib.h>\r\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char S[]=\"ABAAMA????MAZON????????\";\r\n    char p[]=\"AMAZON\";\r\n     printf(\"%s  \\n\",S);\r\n     int i,j,flag=0;\r\n     i=i=strlen(S)-1;\r\n     while(i>=0)\r\n     {\r\n    \tint k=i;\r\n    \tfor(j=strlen(p)-1;j>=0;j--)\r\n    \t{\r\n    \t\tif(S[k]==p[j] || S[k]=='?')\r\n    \t\t{\r\n    \t\t   k--;\r\n                   flag=1;\r\n                }\r\n                else\r\n                {\r\n    \t\t    flag=0;\r\n\t            break;\r\n\t\t }\t\t\r\n    \t}\r\n        int m=i\r\n        if(flag==1)\r\n        {\r\n        \tfor(j=strlen(p)-1;j>=0;j--)\r\n        \t{\r\n                       if(S[m]=='?')\r\n        \t\t   S[m]=p[j];\r\n                         m--;\r\n        \t}\r\n        }\r\n        else\r\n        {\r\n        \tif(S[i]=='?')\r\n        \t   S[i]='A';\r\n        }\r\n        i--;\r\n    }\r\n    printf(\"%s\",S);\r\n}"}
{"i": "15202840", "t": "You are given a text file which contains all valid english words.(huge one). \rNow consider a typical mobile keypad in which letters (a,b,c mapped to number '2', and  d,e,f mapped to 3..w,x,y,z mapped to 9).\r give an algorithms that gives all valid words given a 'n' digit number.\ri.e. your given\rthe following mapping \rabc -- 2\rdef -- 3\rghi -- 4\rjkl -- 5\rmno - 6\rpqr -- 7\rstu -- 8\rwxyz -- 9\r And huge text file with all valid words\r write a method \r String[] getAllValidWords(String number);\r e.g. input 228.\r output .: BAT, CAT, ACT, ..etc.\r discuss the time and space complexity for your algo."}
{"i": "15259717", "t": "How would you implement an infinite counter?"}
{"i": "15203822", "t": "Intersection of two lists of unsorted integers."}
{"i": "15259700", "t": "Give two ints, return index(0 based) of an int if it is present in another int. For eg. int a = 34, int b = 12345. Function must return 2 since 34 starts in 12345 at index 2."}
{"i": "15210774", "t": "Given a UNORDERED tree and two node elements, we are suppose to find the common LEAST ancestor if present from the given tree."}
{"i": "15261678", "t": "Given sorted integer array and a given value we have to find two elements which will sum up to a given value. Test all corner cases with minimum complexity."}
