{"i": "5730652431319040", "t": "Given a set of integral coordinates, find the minimum area of a rectangle that can be drawn to encompass all the points. The sides of such a rectangle have to be parallel to the two axes. Return the area of the rectangle.\r Sample Test Case\r Sample Input: \r 4\r1 1\r1 4\r2 2\r5 3\r Sample Output: 12\r Explanation: The points are (1,1) , (1,4) , (2,2) and (5,3) and the area of the rectangle that encompasses all the points is 12."}
{"i": "5145759489982464", "t": "Given an array of integers,  sort the array into a wave like array, namely \ra1 >= a2 <= a3 >= a4 <= a5....."}
{"i": "5757179223080960", "t": "Give this input: Sea!tle is a nice place. Work Hard! have Fun, make HIStory!\rdisplay this output using any C or vb script:\r\tSeattle is a nice place.\r\tWork hard.\r\tHave fun.\r\tMake history."}
{"i": "6669318070730752", "t": "Given three strings str1, str2 and str3; complete the function to find the smallest subsequence in str1 which contains all the characters in str2 (in any order) and not those in str3.\rSample Test Case: \rSample Input:\rstr1: spqrstrupvqw\rstr2: sprt\rstr3: q\rSample Output: strup\rExplanation: In the given string str1, the smallest subsequence that contains the characters in str2 ( 's' , 'p' , 'r' , 't' ) and does not contain the character in str3 ( 'q' ) is 'strup'."}
{"i": "5746617898500096", "t": "Design a web-site like Paypal.\r The interviewer was interested in the \r i) Major components & the way they will interact. \rii) Various way of scaling the web-site to support many users\riii) Handling the failure cases like when the DB goes down, etc."}
{"i": "5452732613787648", "t": "Given a binary matrix of 0 and 1. Find the longest sequence of 1's either row wise or column wise.\r For example\r 0 0 0 0 0 0\r0 1 1 1 0 0\r0 0 0 1 0 0\r It should return  1 1 1"}
{"i": "5656004825972736", "t": "Can anyone tell me that from where i can get/download java code on Ray Casting Algorithms or Point in Polygon algorithms? or any library is avaiable."}
{"i": "4794084883431424", "t": "Input will be a matrix consiting of only 1's n 0's.\rThe 1's represent the lines and 0's its absence. \rFor eg a matrix 6X7 is shown\r 0   0   0   1   1   1   1 \r0   1   1   1   0   1   1 \r0   1   0   1   0   1   1 \r0   1   0   1   0   1   1 \r0   1   1   1   0   1   1 \r0   0   0   1   1   1   1 \r  In the above matrix, the sequence of 1\u2019s represents the lines. These eight lines constitute three \rrectangles. \r Conditons : \r 1. The rectangles will always enclose some 0\u2019s. e.g. last two vertical lines does not constitute a \rrectangle. \r 2.  A rectangle can contain multiple rectangles \r  Output : should be no. of rectangles formed in the matrix(intersecting rectangles are also counted)."}
{"i": "6071368428814336", "t": "Leetcode: Jump Game.\rGiven an array of non-negative integers, you are initially positioned at the first index of the array.\r Each element in the array represents your maximum jump length at that position.\r Determine if you are able to reach the last index."}
{"i": "4945468521971712", "t": "Given a string, reverse the word, but keep the comma, number and space."}
{"i": "5665578308075520", "t": "Given a matrix, there are two 1s and many 0s. Find a path from the first 1 to the second 1."}
{"i": "5632249361858560", "t": "Find Top k most frequent elements"}
{"i": "5119085058719744", "t": "Find Top k biggest numbers"}
{"i": "5653018213089280", "t": "Determine minimum sequence of adjacent values in the input parameter array that is greater than input parameter sum.\r Eg\rArray 2,1,1,4,3,6. and Sum is 8\rAnswer is 2, because 3,6 is minimum sequence greater than 8."}
{"i": "5794059570380800", "t": "You are given a matrix where some pixels are white and some are black. Basically there are different disjoint images in the matrix.\r a) Expand/Shrink the images\rb) Count the no of images\rc) Color the images\rd) Rotate the images"}
{"i": "6331656331853824", "t": "Given three points in a 2D plane with their (x, y) coordinates say if the origin lies inside the triangle formed by the three points."}
{"i": "5104398418051072", "t": "Disconnect two nodes in a graph by removing minimum number of edges."}
{"i": "5710199260184576", "t": "Given a matrix pattern containing only 'plus' & 'dots',search no of times that pattern is present in a very large file which has a very large matrix which contains 'plus' and 'dots'."}
{"i": "5152424742354944", "t": "I/P: An array of Integers: which will be used to construct a binary search tree in the order they appear.\r o/p: all permutations of the input elements which will result in the same Binary Search tree as the one formed with the input array.\r  Eg:\rI/P: 4, 3, 1, 2, 6, 5, 7\r o/p:4 , 6, 3, 7, 5, 1, 2\r      4, 3, 2, 1, 6, 5, 7\r and soo on."}
{"i": "5115960470011904", "t": "design e commerce web site like amazon...."}
{"i": "5678910423433216", "t": "given data about students who had taken some subjects.\rI had to make a data structure such that if I query for no of students in a subject or no of subjects a student has taken, the complexity should be less."}
{"i": "5735841288683520", "t": "Given an nxn screen, Each pixel is represented by intensity values. Given a specific pixel as an input, find the no. of pixels of the same colour which can reached from this pixel. Assume any suitable data structure for a screen."}
{"i": "5735322939817984", "t": "Objective: Write a function to find all the combinations of three numbers that sum to zero\r  Sample input: \r  [2, 3, 1, -2, -1, 0, 2, -3, 0]\r  Sample output:\r  2, -2, 0\r  1, -1, 0\r  3, -2, -1\r  3, 0, -3\r  3, 0, -3"}
{"i": "5768136489959424", "t": "write a function that has an int as input and return the equivalent String as an output\r  12 -> 'twelve'\r4345 -> 'four thousand three hundred and forty-five'\r7654567643 -> 'seven billion six hundred and fifty-four million five hundred and sixty-seven thousand six hundred and forty-three'"}
{"i": "5482546934579200", "t": "3, 5, 7, 9, 11, 13. Which is least like others?"}
{"i": "6461440848297984", "t": "I was asked this during a recent interview.\r Lucky number \u2013 a number is a lucky number if it comprises of combination of 4\u2032s and 7\u2032s.\r For example , if 32 is the input number, the next nearest lucky number would be 44.\r Similarly ,\r43 -> 44\r45 -> 47\r1004 -> 4444\r Input number can be of any digits.\r Design an algorithm that will take any random number and return its next lucky number"}
{"i": "4851725760462848", "t": "In Byteland they have a very strange monetary system. Each Bytelandian gold coin has an integer number written on it. A coin n can be exchanged in a bank into three coins: n/2, n/3 and n/4. But these numbers are all rounded down (the banks have to make a profit).\r You can also sell Bytelandian coins for American dollars. The exchange rate is 1:1. But you can not buy Bytelandian coins. You have one gold coin. What is the maximum amount of American dollars you can get for it?\r Input The input will contain several test cases (not more than 10). Each testcase is a single line with a number n, 0 <= n <= 1 000 000 000. It is the number written on your coin.\r Output For each test case output a single line, containing the maximum amount of American dollars you can make.\r Explanation You can change 12 into 6, 4 and 3, and then change these into $6+$4+$3 = $13. If you try changing the coin 2 into 3 smaller coins, you will get 1, 0 and 0, and later you can get no more than $1 out of them. It is better just to change the 2 coin directly into $2. Pls suggest a better approach.\rHere's My code:import java.util.*;\r\nclass Bytelandain\r\n{\r\n\tVector v= null;\r\n\tScanner sc = null;\r\n\tpublic Bytelandain()\r\n\t{\r\n\t\tv = new Vector();\r\n\t\tsc = new Scanner(System.in);\r\n\t\tint i=1;\r\n\t\tString s =null;\r\n\t\twhile (i<=10 )\r\n        {\r\n         s = sc.nextLine();\r\n       if( s.equals(\"\") ) \r\n          break;\r\n        int temp = Integer.parseInt(s);\r\n       v.add(temp);\r\n       i++;\r\n        }\r\n        for(i=0;i<v.size();i++)\r\n        {\r\n        \tshowProfit((Integer)v.get(i));\r\n        }\r\n\t}\r\n\t\r\n\tpublic static void main(String args[])\r\n\t{\r\n\t\tBytelandain by = new Bytelandain();\r\n\t}\r\n\tpublic  void showProfit(int num)\r\n\t{\r\n\t\tSystem.out.println(computeValue(num));\r\n\t}\r\n\tpublic int computeValue(int num)\r\n\t{\r\n\t\tint value = 0;\r\n\t\tif(num<=2)\r\n\t\t{\r\n\t\t\treturn num;\r\n\t\t}\r\n\t\tvalue = getProfit(num,value);\r\n\t\tif(num >= value)\r\n\t\t{\r\n\t\t\treturn num;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\tpublic int getProfit(int num,int value)\r\n\t{\r\n\t\tint sum;\r\n\t\tsum = value;\r\n\t\tsum = sum+ computeValue(num/2)+computeValue(num/3)+computeValue(num/4);\r\n\t\treturn sum;\r\n\t}\r\n\t\t\r\n}"}
{"i": "6308269429620736", "t": "Given a sequence of n random numbers: suppose: 1,5,7,3,...\rand n-1 symbols of  <,> in the given fashion:\r_<_>_>_>.....\rthe task is to fill the blank best possible time complexity. (I solved upto O(nlogn))"}
{"i": "4892562309513216", "t": "Q1. Given array a[]={'a','n','u','b','h','a','v'}\rYou have to generate a[]={'v','a','h','b','u','n','a'} in the same array with space complexity O(1). You may use just one bit extra.\r Q2. perform the same operation with the same constraints for \rarray a[]={'m','y',' ','n','a','m','e',' ','i','s',' ','a','n','u','b','h','a','v'}\r Q3 Perform the same operation with same contraints to arrange the words in alphabetic order, ie the output array should be:\ra[]={'a','n','u','b','h','a','v',' ','i','s',' ','m','y',' ','n','a','m','e'}"}
{"i": "4669539153346560", "t": "The input is a sequence x1,x2,...,xn of integers in an arbitrary order, and another sequence \ra1,a2,..,an of distinct integers from 1 to n (namely a1,a2,...,an is a permutation of \r1, 2,..., n). Both sequences are given as arrays. Design an 0(n logn) algorithm to order \rthe first sequence according to the order imposed by the permutation. In other words, for \reach i, Xi should appear in the position given in ai. For example, if x = 17, 5, 1,9, and a = \r3, 2, 4, 1, then the outcome should be x = 9, 5, 17, 1. The algorithm should be in-place, so \ryou cannot use an additional array."}
