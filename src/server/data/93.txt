{"i": "5204251128102912", "t": "implement a Fibonacci iterator"}
{"i": "5761994675191808", "t": "Now we have one server, one database, what if response time is slow? \rHow to optimize?"}
{"i": "5675368674492416", "t": "Given an integer n, count the total number of digit 3 appearing in all non-negative integers less than or equal to n.\r (E.x: given 30, return 4 {3,13, 23, 30})"}
{"i": "5695742657167360", "t": "prime factors. given a number  return the prime factor multiplication. \r eg. 90 = 2 * 3 * 3 * 5."}
{"i": "5729483920244736", "t": "Remove any number containing 9 like 9, 19, 29, ... 91, 92, ... 99, 109... \r   Write a function that returns the nth number. E.g.  newNumber(1) = 1  \r   newNumber(8) = 8, newNumber(9) = 10"}
{"i": "6297234405588992", "t": "Given a n*m size 2D array with integers from 1 to n*m - 1 in it. \rIntegers are not sorted. The last position of the matrix stays a movable block. \rFor each time, you can swap the movable block with any adjacent number. \rAnd eventually you will have the integers sorted and the movable block returned \rto its starting position. Think about an approach to print the path. \r(You can assume it always have at least a solution)"}
{"i": "6258339181756416", "t": "How to get the repeating decimal pattern of a division? (e.g 1/3, 1/6)"}
{"i": "5766700180963328", "t": "Given input - xyzonexyztwothreeeabrminusseven as a string, return an integer as the sum of all numbers found in the string\rOutput -  1 + 23 + (-7) = 17"}
{"i": "5198530399436800", "t": "Given items as Shirt, Trouser, Shoes, Tie, Belt, Shocks, and dependencies as - \rTie can be worn after Shirt\rBelt can be worn after Shirt and Trouser\rShocks can be worn after Trouser\rShoes can be worn after Shocks\r Find various orders in which the activity of wearing clothes can be completed."}
{"i": "5093369735806976", "t": "Find all the abbreviations of string:\reg\rABC\rSOME Valid abbreviations are :\r1BC\r2C\r3\rA1C\rAB1\rA2\rNOT VALID\r11C(two numbers cannot occur continuously)"}
{"i": "5712666707361792", "t": "Given a method \rpublic int getOccurence(int x,int y);\rwhere y is always a single digit number.\r So find the number of occurrences of number y in the range x\rE.g.\rif x=25,y=2\rfunction should return 9(as 22 contains two occurrences of 2) - 2,12,20,21,22,23,24,25"}
{"i": "5115495528267776", "t": "Create a customized data structure such that it has functions :-\rGetLastElement();\rRemoveLastElement();\rAddElement()\rGetMin()\r All the functions should be of O(1)"}
{"i": "5082316369035264", "t": "Given a very large file of 10GB containing product price . Sort the file of product if memory available is 1 GB"}
{"i": "5663945672097792", "t": "Given a preorder traversal of a BST, print out the inorder transversal of the BST\rpublic  void printInorder(int[] nums){}"}
{"i": "5666670023540736", "t": "Implement circular buffer with read & write functions"}
{"i": "5670692394631168", "t": "Coding III\rImplement int divide(int a, int b) without division or mod operation.\r   ## Round IV\rBehavioral Questions + Project Walk Through + Coding (Validate BST)\r ## System Design V\rDesign memcache to enable read, write and delete (single server, non-distributed infrastructure).\rWhich data structure to go with?\rEviction rules?\rHow to minimize segmentation?\rHow to handle concurrency? \r ## Extra \rAfter two weeks they called me to an extra round of system design.\rHow to store social graphs?\rHow to handle concurrent read/write requests(read heavy) on one server."}
{"i": "5123435312185344", "t": "I was asked a very vague design question. How to design the backend architecture of a worldwide application (e.g. yelp)? I'm not sure what kind of questions I need to ask to narrow down this question and what kind of answer I need to give. The interviewer asked me to list technologies that I plan to use."}
{"i": "5667895162961920", "t": "how to sort a list with dictionary as variables.Sort should be based on dictionary value.\r for example :a = [{'b':2},{'b':1},{'b':5}{'b':4]now the sort should be based on value."}
{"i": "5761817373573120", "t": "Given a m x n array filled with 1's & 0's. Find all the rectangles which are filled with all the 1's. \r  Note : - It is guaranteed that there won't be any overlapping rectangles."}
{"i": "5688021379710976", "t": "Find Famous person in the list of persons.\r A person is a famous person if he doesn't know anyone in the list and everyone else in the list should know this person.\r The function isKnow(i,j) => true/ false is given to us. No need to worry about it.\r Goal is to find the famous person in O(n) complexity."}
{"i": "5644393638789120", "t": "Say there are 100K users. Each user object has certain details like city, credit score, gender ..etc\r Say there are 100 Campaigns, Each campaign has an entry criteria, meta data consists of email body / template and a rank.\r Goal is to send an campaign email for each user per one day which matches the entry criteria. The email should have highest rank suitable for this user.\r Ex entry criteria :- Gender should be Female, Credit score is 700-720 and San Francisco city. Typically the criteria can be combination of several things and involves different operators.\r How would you design the system to find best campaign for each user and sends email?"}
{"i": "5705451296522240", "t": "Given a stream of objects, O1, O2, O1, O3, O4...  Provide an algorithm to identify the first unique object at any given point in time.\r So for example, in the above, after receiving the first Object, it is unique.  After receiving the second, the first is still the first unique object.  After receiving the 3rd, the 1st object is no longer unique (you've not seen O1 twice), so O2 is not the first unique object. etc..."}
{"i": "5766882347974656", "t": "Designing a data-structure for following functions\rInsert X : Insert an element X into the set.\r Delete X : Delete an element X from the set. It is guaranteed that such X always exist in the data structure.\rMean : Report Mean of the elements present in the data set. It is guaranteed that data structure will not be empty at this query.\rMode : Report Mode of the elements present in the data set. It is guaranteed that data structure will not be empty at this query.\rMedian : Report Median of the elements present in the data set. It is guaranteed that data structure will not be empty at this query."}
{"i": "5733553401757696", "t": "/* Find all subsets of size k in an array that sum up to target \rthe array may contains negative number */\rclass Solution {\r     public List<List<Integer>> combinationSum(int[] nums, int target, int k) {\r  }"}
{"i": "5756947954401280", "t": "A bot is an id that visit the site m times in the last n seconds, \rgiven a list of logs with id and time sorted by time, return all the bots's idclass Log{\r\n\tString id;\r\n\tint time;\r\n}\r\npublic HashSet<String> getBots(Log[] logs, int m, int n){\r\n\t\r\n}"}
{"i": "6323491721707520", "t": "how to implement a Wish List like this one\rhttps://www.amazon.com/hz/wishlist/intro"}
{"i": "5163293279780864", "t": "Given a array of integers there is one that is repeated several time. How would you compute the length of the sequence of repeated elements.\rAssuming the initial array is sorted can you do better than O(n) both for spatial and temporal cost?"}
{"i": "5669547785846784", "t": "download all urls from 1000 hosts. Imagine all the urls are graph.\rRequirement: Each host has bad internet connection among each other, Has to download url exacly once."}
{"i": "5726405368217600", "t": "Last Monday phone interview of G.\r Given a vector/list of doubly linked list pointers (a pointer is the directed linkage of two nodes), count how many independent blocks of linked lists there are for the pointers given."}
{"i": "5729515461410816", "t": "Give you a robot and a room where you do not know where the robot is in the room and you do not know the size of the room, you have a remote control that allows the robot to walk around four directions. Here you give a move method: boolean move (int direction), direction: 0,1,2,3 that four directions. If it can move in that direction, return true, and if it cannot move in that direction, return false. Ask you determine how big this room is. the shape of the room can be any shape, so you cannot assume it is rectangle or square."}
