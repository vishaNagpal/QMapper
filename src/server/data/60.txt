{"i": "5752967813660672", "t": "Language : java\rFind the length of the non repeated numbers in an array.\rInput : 1,2,2,3,4,5,6,2,3"}
{"i": "6217124124033024", "t": "You are given the length and time of occurrence of packet and Queues which process packets. Total processing time for a packet is equal to the length of packet plus the waiting time in queue. For eg lets say we have only one queue for now, and A packet of length 5 comes at t = 1, and another packet of length 4 comes at t = 3. Total processing time for first packet is 5( no waiting time as queue is empty at t = 1) and at t = 3, 2 units of first packet is processed and 3 units remaining so, for second packet 3 units will be waiting time in queue plus 4 units for its length. Total processing time for 2nd packet is 7 units. If there are multiple queues you can add new packet in any of the other queues. Given the time and length of all incoming packets, we need to find the minimum no. of   queues required such that total processing time of each packet is less than 10 units. Maximum possible no. of queues are 5. If you require more than 5 queues print -1. \r  Test Cases Format: First Line contains the number N, the total no. of packets and N following line contains two numbers ti, li where li is length of packet coming at time = ti units.\r Test case1:\r2\r2 7\r5 8\r Test Case 2:\r3\r1 3\r2 3\r3 5\r Test Case 3:\r3\r1 5\r2 4\r3 8\r Output:\r Case1: 2\rCase2: 1\rCase3: 2\r Consider the following time table of incoming packets:time\tpackets-length\r\n1\t    8\r\n2\t    5\r\n3\t    2\r\n4\t    6If you put the packet in queue with minimum time then this will lead to 3 queues:\r t = 1: \rq1: 8\r t = 2:\rq1: 7\rq2: 5\r t = 3:\rq1: 6\rq2: 4, 2\r t = 4:\rq1: 5\rq2: 3, 2\rq3: 6\r But its output should be 2 queues:\r1) 8 in queue 1\r2) 5 in queue 2\r3) 2 in queue 1\r4) 6 in queue 2"}
{"i": "5658073631817728", "t": "I read this question here in careercup and saw no comments on it. So, I am answering it.\rgiven a string find the sum of number of unique substring characters.\rmeans if string is ACAX. the sub strings are A,C,A,X,AC,CA,AX,ACA,CAX,ACAX. in ACA, A occurs more than once so, its count is not considered, but C occurs once so its count is 1. Similarly in ACAX, A's count=0,C's count=1,X's count=1. In such a manner  find sum of all counts for all substrings. The worst case time complexityis O(n). IF same substring occurs more than once then find its sum for that many times."}
{"i": "5727925906178048", "t": "You are given an array of length N that contains only integer.\r A number in this array is called a special number if it is divisible by at least one other number in the array.\r Write a program to print the count of special number of array.\r Input format :\r First Line - N\r Second line - N space separated integer.\r Output format :\r print the count of special number in the array.\r constraints\r 1<= N <= pow(10,5)\r Note - divisible with same number will not considered. \r Example - \r input\r N=3\r Array=  5 3 10\r output\r 1\r Description - 10 is divided by 5, \r 5 and 3 are not divided by any number"}
{"i": "5747832811159552", "t": "You are given an array of strings. For example, \t[\"AB\", \"BC\", \"FOO\", \"ZA\", \"BAZ\"]\r- \tOutput strings where you can get from one to the other using any ROT transformation.\r \tROT_1(AB) = BC\r\tROT_1(BC) = CD\r\tROT_25(AB) = ZA\r\tAB,BC you can go from one to the other using ROT_1\r\tInput: list of strings\r\tOutput: strings where you can get from one to the other using any ROT transformation.\r\tExample:\r\tInput : [\"AB\", \"BC\", \"FOO\", \"ZA\", \"BAZ\"]\r\tOutput: [ [ab, bc] , [ab, za] ]\r\tAB,BC because you can go from one to the other using ROT_1\r\tAB,ZA because you can go from one to the other using ROT_25\r\tDo not return FOO, BAZ you can\u2019t get from one to the other."}
{"i": "6202931572375552", "t": "How do you go about the phone interview for troubleshooting a problem, say \"my computer has become slow 3 times from the last week.\". Can someone please give the detailed explanation of how to go about this question. Also, \"my internet is not working\". How to go about these 2 troubleshooting problems in the phone interview?"}
{"i": "5669768827764736", "t": "FB On-site March\r Q: Find number of Islands.\r XXXOO\r OOOXX\r XXOOX\rReturn 3 islands. \r 1 1 1OO\r OOO2 2\r 3 3OO 2\r  Followup: If the board is too big to fit in memory, how to get the number?"}
{"i": "5225514187882496", "t": "Given an array of elements print even and odd numbers out of it using 2 threads . even_thread and odd_thread.\rint arr[] = {3,1 ,2, 5, 6, 7, 8, 10, 9};"}
{"i": "5081518698397696", "t": "Need to design and develop java program for assigning rankings to \u201cPremier League\u201d players. To start with all the players would have zero points. After every game, points would be updated for players based on the performance. Design data structure and algorithm to print the player rankings after every game.\r   Sample input and outputs:\r Input to program would be of the format \u201cplayer Id, points from the game\u201d. Example :\r 1 2\r 2 1\r 3 5\r 1 2\r 2 3\r 3 5"}
{"i": "5156596605779968", "t": "Interleave list of lists in Java\rExample:\rinput = [[1,2,3], [9, 0], [5], [-4,-5,-2,-3,-1]];\routput = [1,9,5,-4,2,0,-5,3,-2,-3,-1]"}
{"i": "5799193238044672", "t": "Input unsorted integer array represents a list of coins,\rfind the minimum amount of money that cannot be formed by these coins, each coin can only be used once\r\u00a0\u00a0\u00a0\u00a0\u00a0E.g. {1,1} -> 3, {1,2,4} -> 8"}
{"i": "5064613505794048", "t": "We have an array if 0's and 1's like \r 00010000010001001\r Assume that all 1's are a person and if a new person comes and if we want to add to the array in such a way that the gap between individuals are maximum as possible. \r if we add a new person, then the new array should be \r 000100100010001001"}
{"i": "5078775824908288", "t": "Give me a list of int, find the length of the smallest cycle. For example, 1, 2, 1, 2, the length of the cycle is 2. Then 1, 2, 1, 2, 1 has a minimum length of 2. Then the length of 1, 2, 1, 2, 3 should be 5 because the entire list is not in repeat. Then the minimum length of 1, 2, 1, 2, 1, 1, 2 is 2."}
{"i": "5728965690916864", "t": "### Problem 3: Theatre Seating\r You run a small theater and each month, you have patrons mail in requests for pre-sale tickets.  You need to process these ticket requests and either tell them where their party will sit or explain to the patron why you can't complete their order.\r You have a few rules that you need to follow when you fill the orders:\r1.\tFill as many orders as possible\r2.\tPut parties as close to the front as possible.\r3.\tIf there are not enough seats available in the theater to handle a party, tell them \"Sorry, we can't handle your party.\"\r4.\tEach party must sit in a single row in a single section.  If they won't fit, tell them \"Call to split party\".\r Your program must parse a theater layout and a list of ticket requests and produce a list of tickets or explanations in the same order as the requests.\r The theater layout is made up of 1 or more rows.  Each row is made up of 1 or more sections separated by a space.\r After the theater layout, there is one empty line, followed by 1 or more theater requests.  The theater request is made up of a name followed by a space and the number of requested tickets.\r  Sample input:\r```\r6 6\r3 5 5 3\r4 6 6 4\r2 8 8 2\r6 6\r Smith 2\rJones 5\rDavis 6\rWilson 100\rJohnson 3\rWilliams 4\rBrown 8\rMiller 12\r```\r Your program must produce results to standard output in the same order as the requests, with the name of the person who requested the ticket and either the row and section of the ticket or the explanations \"Sorry, we can't handle your party\" or \"Call to split party.\"\r  Sample output:\r ```\rSmith Row 1 Section 1\rJones Row 2 Section 2\rDavis Row 1 Section 2\rWilson Sorry, we can't handle your party.\rJohnson Row 2 Section 1\rWilliams Row 1 Section 1\rBrown Row 4  Section 2\rMiller Call to split party."}
{"i": "5669083109392384", "t": "Write a program that controls the traffic signals for a four-way intersection. Initially, we consider traffic flowing in straight lines only, no turns. The four directions are S(outhbound) and N(orthbound) on Snell Rd; and W(estbound) and E(astbound) on Weaver Rd. The traffic lights should obey the following rules:\r 1. Cars arrive in each direction on both roads (Snell and Weaver) at the rate of 1 car per second. That is, 4 cars approach the intersection each second.\r 2. Only one road (Snell or Weaver) can have a \"green\" light at one time.\r 3. It is acceptable for both roads to have the \"red\" light at the same time. Of course, traffic backs up on both roads if this happens.\r 4. Start by turning on the traffic on Snell Rd \"green\" in both directions for 3 seconds; then turn it \"red\" for one second; then turn Weaver \"green\" for 3 seconds; and then red for one second.\r 5. When the light turns from red to green at any intersection, it takes the first car 2 seconds to start moving and cross the intersection. Subsequent cars take 1 second each.\r 6. At the instant the light turns from \"green\" to \"red\", a car may not start moving to cross the intersection; whether that car just arrived at the intersection or was waiting at that intersection.\r 7. The output should be the number of cars that are waiting at the intersection in each direction at each second, for the first 20 seconds. Do not make the program wait 20 seconds to produce the output: this is only a simulation, so print the output when it's ready.\r 8. Expected output\r```\r \t0: N = 0; S = 0; E = 0; W = 0\r \t1: N = 0; S = 0; E = 1; W = 1\r \t2: N = 0; S = 0; E = 2; W = 2\r \t3: N = 0; S = 0; E = 3; W = 3\r \t4: N = 1; S = 1; E = 4; W = 4\r \t5: N = 2; S = 2; E = 5; W = 5\r \t6: N = 3; S = 3; E = 5; W = 5\r \t7: N = 4; S = 4; E = 5; W = 5\r \t8: N = 5; S = 5; E = 6; W = 6\r```"}
{"i": "5699151906996224", "t": "Denver International Airport has decided to give an automated baggage system another shot. The hardware and tracking systems from the previous attempt are still in place, they just need a system to route the baggage. The system will route baggage checked, connecting, and terminating in Denver.\rYou have been asked to implement a system that will route bags to their flights or the proper baggage claim. The input describes the airport conveyor system, the departing flights, and the bags to be routed. The output is the optimal routing to get bags to their destinations. Bags with a flight id of \u201cARRIVAL\u201d are terminating in Denver are routed to Baggage Claim.\rInput: The input consists of several sections. The beginning of each section is marked by a line starting: \u201c# Section:\u201d ``` Section 1: A weighted bi-directional graph describing the conveyor system. Format: <Node 1> <Node 2> <travel_time>\rSection 2: Departure list Format: <flightid> <flightgate> <destination> <flighttime> Section 3: Bag list Format: <bagnumber> <entrypoint> <flightid> ```\rOutput: The optimized route for each bag `\rThe output should be in the same order as the Bag list section of the input.\rExample Input: ```\rSection: Conveyor System\rConcourseATicketing A5 5 A5 BaggageClaim 5 A5 A10 4 A5 A1 6 A1 A2 1 A2 A3 1 A3 A4 1 A10 A9 1 A9 A8 1 A8 A7 1 A7 A6 1\rSection: Departures\rUA10 A1 MIA 08:00 UA11 A1 LAX 09:00 UA12 A1 JFK 09:45 UA13 A2 JFK 08:30 UA14 A2 JFK 09:45 UA15 A2 JFK 10:00 UA16 A3 JFK 09:00 UA17 A4 MHT 09:15 UA18 A5 LAX 10:15\rSection: Bags\r0001 ConcourseATicketing UA12 0002 A5 UA17 0003 A2 UA10 0004 A8 UA18 0005 A7 ARRIVAL ```\rExample Output: `\r0001 Concourse_A_Ticketing A5 A1 : 11 0002 A5 A1 A2 A3 A4 : 9 0003 A2 A1 : 1 0004 A8 A9 A10 A5 : 6 0005 A7 A8 A9 A10 A5 BaggageClaim : 12"}
{"i": "5644156729819136", "t": "Given list of schedules for different flights in a month, determine maximum number of flights that can be in the air anytime in that month.\rInput : list of schedules for flights.- spread over a month.\r output: a number - maximum flights that can be in the air\rAssumptions: 1. All the given times are in a specific timezone( like GMT). \r2. Given Schedules can be any time in the month"}
{"i": "5185915394719744", "t": "Given a list of N threads detect a deadlock in the system."}
{"i": "5667690264920064", "t": "Find the kth missing element in a sorted array. For example [2,3,5,7], k = 0: return 4, k = 1: return 6\r expected time complexity logn"}
{"i": "6622509276332032", "t": "Given  an array of n elements return true if 3 of the sum of 3 elements is equal to a constant c\r Example array a[6,2,3,4]   constant c = 9\r if  a[1] + [2] + [3]  == c return true\r The size of the array is n\r If any set of 3 elements is equal to the constant c, then return false"}
{"i": "5111409590403072", "t": "To an array and K, each element in the array can only move K positions to the left at most, no limit to the right, try to sort the array under the limit of K\ra = [5, 2, 4, 3, 1], k = 2\rReturn [2, 3, 1, 4, 5]"}
{"i": "5647567269396480", "t": "Given a function rand32() (random number range 0-2**32-1) that randomly generates a 32-bit int, design a new random function:\rRandn(n) generates a random distributed random number (0 - 2**n-1)\rRand3n(n) generates (0 - 3**n-1) the uniformly distributed random number"}
{"i": "5630603759190016", "t": "Topic: There is a set of coordinates. The original format of each coordinate is (1.3, 0.5). However, the comma and decimal point are gone. Only one string is left, allowing you to restore all possible combinations. For example, 123, possible (1, 23) (1, 2.3) (12, 3) (1.2, 3)"}
{"i": "6290396098330624", "t": "given   period and threshold, Assume there is a endless streaming events, each event occurs at timestamp \"x\".  The question want you to write an API that return true if number of the events are over the threshold within the period around timestamp \"x\"\r  Ex:\rperiod = 3, threshold =2\rgetEvent(10) -> false\rgetEvent(12) -> false\rgetEvent(13) -> true [10,12,13]\rgetEvent(20) -> false\r  part one: event come in order\rpart two: event come without order"}
{"i": "4855176404926464", "t": "Given vector<int> nums, and pair<int, int> range. Find out how many continuous subsequences within this vector sum up the number within the range.\r Input: [1, 2, 3], [3,6]\rOutput: (4)\r because [1,2,3], [1,2], [2,3], [3]"}
{"i": "6196511871336448", "t": "Each  have a (x,y) coordinate.   \rWrite an API that group three Googler together for lunch if they are close enough. Otherwise, throw them in un-schedule pool.\r Distance formula = sqrt((x1-x2) ^2 + (y1-y2) ^2)\rGiven an int range;\r Range: 2\rInput | Output of API                Un-schedule pool\r0,0 -> []                                        [[0,0]]\r1,0 -> []                                        [[0,0], [1,0]]\r3,0 -> []                                        [[0,0], [1,0], [3,0]]\r1,1-> [[0,0], [1,0], [1,1]]                 [[3,0]]"}
{"i": "5713617960828928", "t": "Given an vector<int> nums and an int target, you can change any element of the vector to positive or negative. How many uniquely different vector sum up to target?\rInput: [1,1,1], target = 2\r[-1,1,1]\r[1,-1,1]\r[1,1,-1]\r return (3)"}
{"i": "5164496191488000", "t": "Given a matrix find the subset sum while performing spiral traversing."}
{"i": "6448741744640000", "t": "find max path sum in DAG, weight can be negative"}
{"i": "5089059251683328", "t": "Given a string with alpha-numeric characters and parentheses, return a string with balanced parentheses by removing the fewest characters possible. You cannot add anything to the string."}
