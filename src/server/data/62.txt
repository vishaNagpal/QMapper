{"i": "5680675939155968", "t": "public TreeNode{\r  int val = val;\r    TreeNode left, right;\r    public TreeNode(int val){\r      this.val = val;\r    }\r given a tree and an API, delete a part of the nodes in the tree and return the forest formed after the node is deleted.\r public List<TreeNode> deletenodes(TreeNode root, List<TreeNode> toDeletes){\r }\rexample1\r\n / \\\r\n 2  3\r\n/  / \\\r\n4  5 6\r\nIf you delete the 2 and 5 nodes, you will need to return to the forest\r\n[4,     1]\r\n         \\\r\n          3\r\n           \\\r\n           6"}
{"i": "5804910846148608", "t": "Question 2: Given a number 'k', return the corresponding row, given the pattern:\r\tk => output\r\t0 => []\r\t1 => [\"0\", \"1\", \"8\"]\r\t2 => [\"00\", \"11\", \"69\", \"96\", \"88\"]\r\t3 => [\"000\", \"111\", \"101\", \"888\", ...] // and so on ..."}
{"i": "5757912092770304", "t": "Question 1: Given an input of an array of string, verify if, turned 180 degrees, it is the \"same\".\r\t\tFor instance: \r\t\t\t[1, 6, 0, 9, 1] => return true\r\t\t\t[1, 7, 1] => return false"}
{"i": "5646332306915328", "t": "We have a quote file with millions of entries. Design a system to read from the system and return a random quote always with O(1) time. We can read the file once and can keep in memory but should not re read the same. Also when you restart your system, it should preserve and work with O(1) complexity."}
{"i": "5667505556160512", "t": "Design a system to forward 20% of your requests to cloud datacenter and rest to onprem data center. comsider you are fwd api."}
{"i": "5961351515078656", "t": "Design S3 file storage system."}
{"i": "6333105093738496", "t": "turns the following format string into a tree: node has keys, values, and subtrees.\r  For example, the first key is node1 and the value is \u2018aaaa\u2019\r  <node1>aaaaa<node2>bbbbb</node2><node3>cccc</node3><node4>dddd</node4></node1>"}
{"i": "5063393709916160", "t": "All Sim characters are loaded with the same copy of your software. Imagine two of these sims are positioned somewhere on a line that extends to infinity in both directions, left and right. Using the below interface, write a C# method called \"Collide\" that ensures that the two sims will collide at some point in the future. Remember, the code that you write will be deployed to each Sim. You cannot write code that will be deployed to one and not the other. The method should have no parameters. You do not need to implement the ISim interface.public interface ISim\r\n{\r\nvoid MoveLeft(); // Moves the sim character one unit on the line to the left\r\nvoid MoveRight(); // Moves the sim character one unit on the line to the right\r\nvoid Relax(); // Commands the sim character to not do anything\r\nvoid MarkPosition(); // Puts a mark on the line at the current position of the sim character\r\nbool IsCurrentPositionMarked(); // Inspects the current position of the sim character for a mark and returns true if one is found, false if one is not found.\r\n}"}
{"i": "5706911210012672", "t": "Evaluate infix expression: 2 + 3 * 5"}
{"i": "5674520311496704", "t": "Interleave two singly linked lists into one.\r LL1: 1 -> 2 -> 3 -> 4\rLL2: 10 -> 20 -> 30 -> 40 ->50\r Output LL1: 1-> 10 -> 2 -> 20 -> 3 -> 30 -> 4.\rNote: Stop when we hit null for LL1."}
{"i": "5710139951677440", "t": "Given: Collection of sorted (ascending) iterators which return integer value.\rImplement hasNext() and next() methods in SuperIterator class that next() method should return sorted values from all iterators.\rNote that we can't load all iterators to memory, because they might get values from big file (1TB for instance) and it will lead to OutOfMemoryError./*\r\n    iter1: 1,  4,  5, 20, ...\r\n    iter2: 2, 10, 12, 50, ...\r\n\r\n    SuperIterator.next() method should return: 1, 2, 4, 5, 10, 12, 20, 50, ...\r\n*/\r\n\r\ninterface Iterator {\r\n    boolean hasNext();\r\n    int next();\r\n}\r\n\r\nclass SuperIterator {\r\n    public SuperIterator(Collection<Iterator> iters) {\r\n        \r\n    }\r\n    \r\n    boolean hasNext() {\r\n        //TODO\r\n    }\r\n    \r\n    int next() {\r\n        //TODO\r\n    }\r\n}"}
{"i": "6097504796934144", "t": "Dropbox\r Grid Illumination: Given an NxN grid with an array of lamp coordinates.\r Each lamp provides illumination to every square on their x axis,\r every square on their y axis, and every square that lies in their diagonal\r (think of a Queen in chess).\r Given an array of query coordinates,\r determine whether that point is illuminated or not. The catch is when checking a query all lamps adjacent to, or on,\u2026"}
{"i": "4521314613198848", "t": "Given a pyramid of consecutive integers:\r1\r2 3\r4 5 6\r7 8 9 10\r11 12 13 14 15\r16 17 18 19 20 21\r......\r Find the sum of all the integers in the row number N.\rFor example:\rThe row #3:  4 + 5 + 6 = 15\rThe row #5:  11 + 12 + 13 + 14 + 15 = 65"}
{"i": "5324070039060480", "t": "find longest common suffix of two linked list."}
{"i": "5710446639185920", "t": "Design a system to support a pool of servers. The pool Api should be able to add a server, get a server (can be random) and delete a server from the pool.\r You need to design and implement an interface for such pool.\r The pool implementation should operate with a high performance so all operations need to be done in O(1)."}
{"i": "6313643925831680", "t": "March 2018 Phone Interview FB\rCalculate a moving average that considers the last N values. \rCircular Queue (Interviewer didn't agree with the linked list queue that I suggested at first. Said the pointers took space)"}
{"i": "6194496701202432", "t": "Design bookshelf class model to perform checkout of book operation"}
{"i": "6050241970176000", "t": "Tell me how to test whether the high-order bit is set in a byte?"}
{"i": "5053549108002816", "t": "When would you use a linked list vs. arraylist?"}
{"i": "6450995369345024", "t": "Suppose under this directory /web there are 50,000 - html files\r List all the files which has phone numbers with below pattern\r(xxx)-xxx-xxxx\rxxx-xxx-xxxx"}
{"i": "5868597804007424", "t": "Print out the grade-school multiplication table up to 12x12\rmultiplication output:1   2   3   4   5   6   7   8   9  10  11  12\r\n   2   4   6   8  10  12  14  16  18  20  22  24\r\n   3   6   9  12  15  18  21  24  27  30  33  36\r\n   4   8  12  16  20  24  28  32  36  40  44  48\r\n   5  10  15  20  25  30  35  40  45  50  55  60\r\n   6  12  18  24  30  36  42  48  54  60  66  72\r\n   7  14  21  28  35  42  49  56  63  70  77  84\r\n   8  16  24  32  40  48  56  64  72  80  88  96\r\n   9  18  27  36  45  54  63  72  81  90  99 108\r\n  10  20  30  40  50  60  70  80  90 100 110 120\r\n  11  22  33  44  55  66  77  88  99 110 121 132\r\n  12  24  36  48  60  72  84  96 108 120 132 144*/"}
{"i": "5630301744136192", "t": "Write a program to read a string with first_name, last_name, age and sort it based on any of the input column name\r sample string\rjohn doe 33\rsmith black 9\rdiana yale 12\r assume the string to be single giant string"}
{"i": "5325095462502400", "t": "How to design a system which allows millions of requests"}
{"i": "6273236068204544", "t": "Design an app which allows different types of jobs to be triggered at user specified delay"}
{"i": "4745565593141248", "t": "Implement below methods\r //stores the number in some data structure\r void store(n);\r //tests whether the given number is present as sum of 2 numbers from the data structure store\r boolean test(v);\r  e.g. store -> 1, 3, 5, 6\r tests\r4 = true (1 + 3)\r5 = false (no sum will result into this)\r6 = true (1 + 5)"}
{"i": "6460923991556096", "t": "write a program to list factors of a given number\re.g. for input as 12, factors are 1, 2, 3, 4, 6, 12"}
{"i": "5129263542960128", "t": "A group of friends are tracking the miles per gallon for each of their cars. Each time one of them fills up their gas tank, they record the following in a file:\rHis or her name\rThe type of car they drove\rHow many miles driven since they last filled up\rHow many gallons purchased at this fill up\rDate of the fill\rTheir data is formatted as a comma separate value (csv) file with the following format for each row:(#person,carName,milesDriven,gallonsFilled,fillupDate)\rMiles are recorded as floating-point numbers and gallons as integers.\rPlease create a program that allows members of this group to determine the miles per gallon (MPG) of each of their cars during a specific time range. Note: person may have more than one so a time range query might need to output data for one or more cars. A skeleton class will be provided; your job will be to complete the program.\rThe principal function for querying MPG is of the form (the exact name, data types, etc., can be learned by inspecting the \"solution\" class in the skeleton code):\rGetRangeMPG(PersonName, StartDate, EndDate)\rReturns list of objects containing (CarName, MPG)\rMPG is calculated as (total miles traveled during time period)/ (total gallons filled during time period.\rThe dates you receive in the query should be treated inclusively."}
{"i": "6293677965049856", "t": "Give a 0/1 matrix to find and remove the islands. Assume that the boundaries of the matrix are 1\rThe definition of islands is surrounded by 0\r The simplest example is\renter:\r111111\r100001\r100101\r100001\r111111\r Output:\r111111\r100001\r100001\r100001\r111111"}
{"i": "6224106742611968", "t": "Write a hash function so that a string and its reverse get the same return value\r Hash(\u2018banana\u2019) == hash(\u2018ananab\u2019)\rHash(\u2018banana\u2019) == hash(\u2018banana\u2019)\rHash(\u2018banana\u2019) != hash(\u2018banaaa\u2019)"}
{"i": "5699021220872192", "t": "You need to design a new YouTube feature where userA is uploading a video and userB (friend of userA) gets notified for the video  and wants to watch the same video in real time (i.e. even the video is not completely uploaded but we want to enable the other user to watch it).\rHow would you tackle the situation when userB wants to view the content starting from a position which is not yet uploaded.\r Draw block diagram for this problem identifying the different components."}
