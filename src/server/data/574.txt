{"i": "123716", "t": "Expalin : Cross site forgery prevention - Cross site requests - cross site scripting \r When / how / where do you use them."}
{"i": "122726", "t": "How do you design cache server for a simple web application. \r How do you make sure of the data consistancy. \r How do update your data/cache."}
{"i": "123715", "t": "Explain Hashing . Max time / Min time taken to search in a Hash table.\r How do you use hashing for web based applications."}
{"i": "122725", "t": "How do you find out intersection between two arrays - when they are sorted / when they are not sorted.\r There was discussion on complexity of various algorithms."}
{"i": "123714", "t": "Explain MVC Architecture. Can you explain how u used MVC architecture in your current project at financial institution."}
{"i": "124663", "t": "You are given a plotter which can plot points provided to it in the form of 'x' and 'y' coordinates. The plotter hand can move horizontally or vertically only. Your program will be given a list of 'n' coordinates in the form of {(x1,y1), (x2,y2} ... (xn,yn)}. Your program must print a sorted list of all 'n' points that would represent the least cumulative distance for the plotter hand to plot all 'n' points in that sorted order. If you are feeling adventurous - modify the program to provide the same output if the plotter can also move diagonally"}
{"i": "121665", "t": "Oil excavation is a common phenomenon in the sea. At every excavation site a rig is setup to extract the oil. The only mode to reach a rig is by a boat. Men who would like to reach a rig use special purpose boats which can run on crude fuel available at the rigs and the shore. These boats can run a mile for every unit of fuel they consume. Each man on the boat consumes a unit of food for every mile he travels. Boats have a limited load capacity. The net weight, including the weight of fuel, food and the men, on boat should never exceed its load capacity. The weight of one unit of fuel is same as the weight of one unit of food. However, as the rigs are far from the shore in the sea it is usually a very long sail. The capacity of the boat available for fuel may not be sufficient to reach the destination rig directly. In such cases, the men may goto a near by rig to load required fuel. The men can also store food at the rigs as well as at the shore for later consumption. They must buy all the food they require to reach the destination rig at the shore only. And all the men who started should be together throughout the sail.\r You should now write a program which can help these men decide the minimum amount of food they require to reach the destination rig. The positions of rigs and the boat's starting point are indicated as co-ordinates of a two dimensional plane with x and y axises of 1 mile units. Food at shore is available only in whole units.\r Assume that the food and fuel are consumed continuously, that is if you travel a partial mile the number of units of food and fuel consumed is equal to portion of mile traveled.\r Input\r The first line of input has a list of integers terminated by -1. The first integer is the capacity of the boat. The integers following it up to -1 are the weights of men who need to reach the destination rig.\r Lines following will have two integers separated by a space, each line indicating the x and y coordinates of a coordinate pair respectively. The input will be terminated by a coordinate pair (0,0) and this should not be processed. The first co-ordinate pair indicates the position of the boat's starting point. The last coordinate pair indicates the position of the destination rigs. All other points indicate the position of various rigs in the sea in a random order.\r Output\r Your program should print the minimum amount of food required to reach the destination. If it is not possible to reach destination, then the program should print -1.\r Samples\rSample Input 1:\r250 20 30 -1\r10 -20\r-10 5\r30 15\r15 35\r0 0\r Output 1:\r111 \t\r  Sample Input 2:\r300 15 20 30 -1\r10 -20\r-10 5\r30 15\r-30 45\r0 0\r Output 2:\r807 \t\r  Sample Input 3:\r150 20 30 -1\r1 1\r100 100\r0 0\r Output 3:\r-1"}
{"i": "121664", "t": "One of the cherished customs of my childhood was choosing up sides for a cricket game. We did it this way: The two bullies of our gully would appoint themselves captains of the opposing teams, and then they would take turns picking other players. On each round, a captain would choose the most capable (or, towards the end, the least inept) player from the pool of remaining candidates, until everyone present had been assigned to one side or the other. The aim of this ritual was to produce two evenly matched teams and, along the way, to remind each of us of our precise ranking in the neighbourhood pecking order.\r We all believed this was the fairest process, but does it ensure the fairest selection of players with evenly matched teams? We believed so, but then there were times when, as the game progressed we realized that the other team was stronger than ours and may be an exchange of a couple of players between the teams would have made them balanced. That scope of improvement seemed to be there...\r Here, we need to find a way to create two evenly balanced teams for any game(or as evenly balanced as possible considering the strength of each player). A set of players must be divided into two teams. Each player must be on one team or the other; the number of player on the two teams must not differ by more than 1; each player will have a skill-point associated with him. The total skill-points of the players on each team should be as nearly equal as possible.(The absolute difference of the sum of skill-points of players in each team should be the least).\r Input:\r The first line of input shall contain N, the total number of players. N lines will follow with the first line giving the skill-point of person 1; the second line, the skill-point of person 2; and so on. Each skill-point shall be an integer between 1 and 450. There shall be at most 100 players in all.\r Output:\r Your output should be a single line containing 2 numbers: the total skill-points of the players on one team, and the total skill-points of the players on the other team. Print the smaller sum first.\r Sample Input 1:\r3\r90\r200\r100\r Output 1:\r190 200 \t\r Sample Input 2:\r10\r2\r3\r10\r5\r8\r9\r7\r3\r5\r2\r Output 2:\r27 27 \t\r Sample Input 3:\r10\r1\r1\r1\r1\r1\r1\r1\r1\r1\r9\r Output 3:\r5 13 \t\r  Sample Input 4:\r8\r87\r100\r28\r67\r68\r41\r67\r1\r Output 4:\r229 230"}
{"i": "122688", "t": "Discuss the strategies of how would you check if two folders are in sync or not.(should contain the same files). \rAlternative ways and mostly a discussion kind of question"}
{"i": "123685", "t": "Convert a binary search tree to a circular sorted linked list. The highest valued node should point to the lowest valued node at each step."}
{"i": "122687", "t": "Test a function that sorts a linked list. You have two pointers head which is the original unsorted list and head1 which is said to be the sorted linked list. Return true if head1 did the sorting correctly and return false if not.bool testlinkedlistsort(Node *head,Node *head1)I got the solution correct but messed it up while writing it over the white board :|"}
{"i": "122685", "t": "Given a number check whether it is equal to its sum of its factors or not (excluding the number itself)"}
{"i": "119670", "t": "The following code is the real code. Try to implement bridge design pattern. Question:\r1) Please check if the code has problem?\r2) Do you need to delete the ri and sr object? If yes, how?#include <stdio.h>\r\n\r\nclass shape_Impl\r\n{\r\n  public:\r\n\t  virtual int area()=0;\r\n};\r\n\r\n\r\nclass RectImpl:public shape_Impl\r\n{\r\n    int length;\r\n    int width;\r\n\r\npublic:\r\n\tRectImpl(int l=0, int w=0):length(l), width(w){};\r\n\t~RectImpl(){};\r\n\tvirtual int area() {return length * width;};\r\n\r\n};\r\n\r\n\r\nclass shape\r\n{\r\n  public:\r\n     shape(shape_Impl  * imp) { Impl=imp;};\r\n    ~shape() {delete Impl;};\r\n\r\n    int area(){return Impl->area();};\r\n\r\n  private:\r\n    shape_Impl *Impl;\r\n};\r\n\r\n\r\n\r\nint main()\r\n{\r\n\tshape_Impl* ri = new RectImpl(100, 100);\r\n\tshape *sr = new shape(ri);\r\n\tprintf (\"area: %d\\n\\n\\n\\n\\n\\n\", sr->area());\r\n\r\n\t\r\n\tdelete ri;\r\n\tdelete sr;\r\n\r\n\treturn 0;\r\n}"}
{"i": "112663", "t": "What are the advantages of using spring?"}
{"i": "112662", "t": "Design an inventory tracking system using database tables. Customers, inventory, and orders are tracked. \r Then, write a query to find an order when you only have a lastname"}
{"i": "112661", "t": "What is static method?  What is a static initializer?"}
{"i": "111662", "t": "When would you use an interface vs. abstract class?"}
{"i": "110661", "t": "Explain the differences between HashTable and HashMap?"}
{"i": "107662", "t": "to print \r     *\r    *\r   **\r   **\r  ***\r  ***\r ****\r ****\r*****\r*****#include<stdio.h>\r\nvoid main()\r\n{\r\n    int n,j,k,l,i;\r\n          printf(\"enter the number\");\r\n            scanf(\"%d\",&n);\r\n            for (i = 1; i <= n; i++)\r\n            {\r\n                for (j = 1; j <= 2; j++)\r\n                {\r\n                    for (l = n; l > i; l--)\r\n                    {\r\n                        printf(\" \");\r\n                    }\r\n                    for (k = 1; k <= i; k++)\r\n                    {\r\n                        \r\n                        printf(\"*\");\r\n                       \r\n                    }\r\n                   printf(\"\\n\");\r\n                }\r\n            }\r\n\t\t\tgetch();\r\n}"}
{"i": "102817", "t": "Find the median in B-tree of order 4?  Note that as the tree has order 4, it is not a binary tree."}
{"i": "102802", "t": "Implement a double linked list using a single linked list. You have given only data and one pointer in struct node { int data, struct node *ptr}.\rYou should be able to traverse in both directions."}
{"i": "100825", "t": "Why should we hire you?"}
{"i": "100820", "t": "Compute the square root of a function"}
{"i": "102771", "t": "You are given a threaded binary tree where each node of a tree points to some node to the right of it in in-order traversal. Given such tree, check whether each thread pointer of the node in a tree satisfies this condition( i.e check whether if thread pointer is pointing to node that is on the right side in in-order traversal). If not make that pointer NULL else leave it.\r Each node has only three pointers pointing to left, right nodes and other the thread pointer. Space and Time constraint has to be considered while designing it."}
{"i": "102744", "t": "shuffle an array of size n such that each element has 1/n probability to remain in its original spot. The best solution has O(n) complexity."}
{"i": "99691", "t": "int getNthNonZeroElement(vector<int> & elements, int n) {\r    vector<int>::iterator i;\r    int count;\r    for (i = elements.begin(); i < elements.end(); i++) {\r        if ((*i) != 0) {\r            if (count == n) {\r                return (*i);\r            }\r            count++;\r        }\r    }\r    return -1;\r}\r The above code should return the nth non-zero element. For example, given vector v = [0, 8, 6, 0, 9, 7,20], should return 9 if n pass-in is 3;\r Question: optimizing it. \r My answer: \rint getNthNonZeroElement(vector<int> & elements, int n) {\rvector<int>::iterator i;\rfor (i = elements.begin(); i < elements.end(); i++) {\r\tn -= ((*i) != 0);\r\tif (n == 0) return (*i);\r}\rreturn -1;\r}\r btw, the original question should init count = 0"}
{"i": "99690", "t": "Write code to print out a binary tree so that each depth is printed on its own line. The spacing doesn't need to be correct, but the items within a depth must be in order and on a single line.\r        1\r      /   \\\r    2       3\r           / \\\r          4   5\r                  \\ \r                    7\r1\r2 3\r4 5\r7"}
{"i": "96798", "t": "When to use composition and when to use inheritance. Explain with example. Do interfaces have an advantage over inheritance?"}
{"i": "97795", "t": "Given two arrays (of numbers), how can you find the common elements between the two arrays? What is the complexity? Will the complexity change is one array is much larger than the other?"}
{"i": "96797", "t": "Given a point how can you tell if it is inside a circle?"}
