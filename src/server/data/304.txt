{"i": "15782681", "t": "Which one is faster and why?\r1. Array\r2. Link List.\rIf we just want to iterate in for loop and print it."}
{"i": "16233703", "t": "Each time a visitor requests a page from our website, our webserver writes a log entry recoding the visitor's identity and the kind of page requested.  Entries are written in chronological order to a plain-text file, with one entry per line.  The format of each entry is:\r  user-id      page-type-id  \r User IDs are arbitrary strings that uniquely represent a given user; if a user visits multiple pages, each log entry will have the same user ID.  Page type IDs are arbitrary strings that uniquely represent a given kind of page on our site, such as the homepage, a product detail pages, or the shopping cart. Tons of users visit our website, but there are only a few dozen types of pages.\r We can use our weblogs to answer questions about user behavior.  One interesting question is: what is the most common three page sequence through the site?  E.g., if the most common pattern is to buy items advertised on the home page of the site, we might see the most common three page sequence as \"Homepage -> ProductDetailPage -> ShoppingCart\".  However, if customers spend a lot of time browsing the \"Customers who bought this item also bought\" feature, we might see the most common three page sequence as \"ProductDetailPage -> ProductDetailPage -> ProductDetailPage\".\r Attached is a sample log file for your reference.  Within the first 10 lines of the sample, customer \"234\" travels through the sequences \"Listmania -> ProductDetail -> Checkout\" and \"ProductDetail -> Checkout -> HomePage\" once each.\r For the sake of this test feel free to assume that everything will fit in memory.  Do keep in mind that given the size of our data sets, performance has to be considered, also, we will be looking at more than just correct output.."}
{"i": "16075701", "t": "How do you add up a very long list of numbers multiple threads (100 threads?) How many cores do you require?\r How do you  increase the performance of this program? Does the number of threads created get limited by the cores of the box? How exactly are you gonna delegate it to the cores? (as in- these number of threads need to use core#1, and so)"}
{"i": "16148684", "t": "You are given a dictionary, in the form of a file that contains one word per line. E.g.,\r abacus\r deltoid\r gaff\r giraffe\r microphone\r reef\r qar\rYou are also given a collection of letters. E.g., {a, e, f, f, g, i, r, q}.\rThe task is to find the longest word in the dictionary that can be spelled with the collection of\rletters. For example, the correct answer for the example values above is \u201cgiraffe\u201d. (Note that\r\u201creef\u201d is not a possible answer, because the set of letters contains only one \u201ce\u201d.)"}
{"i": "15928678", "t": "You are given a set of integers and you are also allowed to apply sign change operation on all elements. Write an efficient algorithm to find minimum Sum. The minimum Sum should be greater than equal to zero. e.g. if Set is { 2, 1, 3, 4, 2 } Minimum Sum is 0 since you can modify the original set as  { -2, -1, -3, 4, 2 }\r The input begins with n (the number of integers in the set) followed by n integers. Input ends when n is 0.\r For each test case please output the answer in a separate line for each value of n.\rBounds : \r0 < n <= 1000\r  sum of the following n numbers <= 100,000"}
{"i": "16119681", "t": "Write implementation of PIVOT keyword found in SQL server."}
{"i": "16099680", "t": "How will you store a million phone numbers in a space efficient way?"}
{"i": "16147669", "t": "There are five 10 monster As on the left of the road and 10 monster Bs on the right of the road, the road is with length 21 with a empty slot in the middle. Both A and B can jump over the other type or move forward to a empty slot but cannot move backward.\r for example(* means the empty slot), the following movement are allowed:\r AA*BB --> AAB*B\rAAB*B --> A*BAB\r the following movement is not allowed:\r AAB*B --> AA*BB\r Question:\rWhat is the least number of steps to let them go through the road."}
{"i": "15855681", "t": "Given the matrix21 22 23 24  25\r\n20 7  8   9  10\r\n19 6  1   2  11\r\n18 5  4   3  12\r\n17 16 15  14 13the coordinate of 1 is (0, 0), of 2 is (1, 0), of 17 is (-2, -2).\r Question:\r1) what is the number in the matrix given (x, y);\r2) what is the function n(x, y)."}
{"i": "16118670", "t": "Given list of pounds, the pounds that can be measured using a balance should be displayed.\r For Ex: 100,250\r The output will be 100,250,150\r The number of pounds which will be given in input might vary. Can someone please help with an algorithm for this?"}
{"i": "16013665", "t": "We're playing a game. Cards numbered from 1-10 are placed in a hat. whatever card is drawn is the paid out amount. how much should i charge you to play this game? If you can redraw by placing the first card back into the hat, what is the new price?"}
{"i": "15856707", "t": "Assume you daily prices of a stock\r3 7 4 10 11 8 5 4 8 yadda yadda\rYou can only buy 1 share or sell 1 share a day, but you can only sell if you own the stock. You can't hold more than 1 share. write me an algo that finds me the strategy that has the highest pay off. \rDon't want the generate all possible strategies and compare."}
{"i": "15858666", "t": "Input is a number of words. Construct a listing of valid 6-letter words. You have access to bool IsValid(const string& word);  Implement Insert() and Get() for this listing."}
{"i": "16139666", "t": "Given coordinates (X[i],Y[i]) of all the cities in the world(for simplicity lets consider we have 2D world map). You are given a user's location (x,y), find out the closest city to the user. Write code for it.\r Update: \rTime complexity of the solution should be better than O(n) as there will be multiple lookup queries with different input points.\rYou can preprocess the data in any way you like, but you need to minimize the query execution time complexity."}
{"i": "15882684", "t": "There is an old dry well. Its sides are made of concrete rings. Each such ring is one meter high, but the rings can have different (internal) diameters. Nevertheless, all the rings are centered on one another. The well is N meters deep; that is, there are N concrete rings inside it.\rYou are about to drop M concrete disks into the well. Each disk is one meter thick, and different disks can have different diameters. Once each disk is dropped, it falls down until: * it hits the bottom of the well; * it hits a ring whose internal diameter is smaller then the disk's diameter; or * it hits a previously dropped disk. (Note that if the internal diameter of a ring and the diameter of a disk are equal, then the disk can fall through the ring.)\rThe disks you are about to drop are ready and you know their diameters, as well as the diameters of all the rings in the well. The question arises: how many of the disks will fit into the well?\rWrite a function:\rclass Solution { int falling_disks(int[] A,int[] B); }\rthat, given two zero-indexed arrays of integers \u2212 A, containing the internal diameters of the N rings (in top-down order), and B, containing the diameters of the M disks (in the order they are to be dropped) \u2212 returns the number of disks that will fit into the well.\rFor example, given the following two arrays:\r  A[0] = 5    B[0] = 2\r  A[1] = 6    B[1] = 3\r  A[2] = 4    B[2] = 5\r  A[3] = 3    B[3] = 2\r  A[4] = 6    B[4] = 4\r  A[5] = 2\r  A[6] = 3\rthe function should return 4, as all but the last of the disks will fit into the well. The figure shows the situation after dropping four disks.\r Assume that:\rN is an integer within the range [1..200,000];\rM is an integer within the range [1..200,000];\reach element of array A is an integer within the range [1..1,000,000,000];\reach element of array B is an integer within the range [1..1,000,000,000].\rComplexity:\rexpected worst-case time complexity is O(N);\rexpected worst-case space complexity is O(N), beyond input storage (not counting the storage required for input arguments).\rElements of input arrays can be modified."}
{"i": "16123664", "t": "Given a sorted array of size N and a sorted array of size M+N, merge the first array into the second preserving order. There is enough space in the second array to hold all elements from the first one."}
{"i": "15974664", "t": "Given a set of 2D points, some integer k, find the k points closest to the origin, (0,0)."}
{"i": "15842672", "t": "How will you describe iOS manual memory management for a new developer in few words?"}
{"i": "16012676", "t": "How would you implement call for canceling queued blocks with dispatch_after?"}
{"i": "16119663", "t": "Suggest a best data structure which cab be used to represent N-ary tree. Given the root node of the same, write a function which finds out whether or not the tree has a loop/cycle."}
{"i": "16126663", "t": "Given a binary tree. Write a function that takes only root node as arguement and returns (sum of values at odd height)-(sum of values at even height)."}
{"i": "16097677", "t": "Given a stock prices 20,50,52,10,45,34 and each day the stock price will buy and sold in another n days.Calculate which day the maximum profit will get."}
{"i": "15832681", "t": "Escape strings. Convert special ASCII characters to form of \u2018\\ooo\u2019, where \u2018ooo\u2019 is oct digit of the corresponding  special character. \rThe ascii characters that smaller than space are regarded as special characters."}
{"i": "16047668", "t": "An array contains two sub- sorted arrays. Give an inplace algorithm to sort two sub arrays.\r for ex:  I/P:   1 4 5 7 8 9 2 3 6 10 11\rO/P:  1 2 3 4 5 6 7 8 9 10 11"}
{"i": "16074662", "t": "Return a shortest prefix of <code>word</code> that is <em>not</em> a prefix of any word in the <code>list</code>\r e.g. \rword: cat, it has 4 prefixes: \u201c\u201d, \u201cc\u201d, \u201cca\u201d, \u201ccat\u201d\rlist: alpha, beta, cotton, delta, camera   \rResult is \u201ccat\u201d"}
{"i": "15807692", "t": "Implement memcpy function which accepts num of bits as argument as oppose to number of bytes.\r memcpy (src, dst, num_bits)"}
{"i": "15807691", "t": "Arrange 1 to N in random order with no duplication."}
{"i": "15920664", "t": "Write a program to sort an array of strings so that all anagrams are next to each other\r ex\rinput {god, dog, abc, cab, man}\routput {abc, cab, dog, god, man}"}
{"i": "16071664", "t": "What should be the output of the following code.\r class Test {\r   public int i=0;\r@Override\rpublic int hashCode() {\r    return i;\r}\r}\r Class a{\r    psvm(){\r    HashMap <Test, String> hm = new HashMap();\r Test t1 = new Test();\r hm.put(t1,\u201dsuccess\u201d);\r sysout(hm.get(t1));  //print success\r t1.i = 10;\r sysout(hm.get(t1));  //NULL\r  }\r}"}
{"i": "15958666", "t": "Given a array of numbers and a number N. Find out all combinations of 3 numbers in array whose sum is N. \r Genarally, there is a common similar problem to find all possible pairs whose sum is given number. Now the problem extention to this. Find all possible 3 numbers whose sum is given number."}
