{"i": "14968548", "t": "Implement memmove .\rDont use extra memory. \rHow to optimise it further?"}
{"i": "14946570", "t": "generate permutations of a string without duplicates and without using hashtable to memorize the permutations."}
{"i": "14952616", "t": "Given two singly linked list, find if they are intersecting. Do this in single iteration. Also find the intersecting node in O(n) time and O(1) space. By intersection I mean intersection by reference not by value"}
{"i": "14992056", "t": "write insert method to insert a node into sorted circular linked list (Sorted based on int value). insert method takes 2 arguments, one is value to be inserted and other is reff to any random node in the sorted circular linked list"}
{"i": "14992050", "t": "An array of building coordinates (x-axis point from origin,height,width) in units were given as an input. Buildings can overlap. We have to give the side view as an answer. Input will be given in sorted order based on x-axis point.\rEx : Draw rectangles based on the given co-ordinates to understand the problem better.\r i/p : (5,10,25),(10,20,15),(15,5,5)\ro/p : 5R 10U 5R 10U 15R  10D 5R 10D\rmeans draw line 5units Right 10units Up 5 units Right ...\rhere\rR-right, U-up , D- Down\rthe o/p should be in such a way if we follow that, we should be able to draw side view of those buildings.\r Expected better than O(n^2) solution."}
{"i": "14948654", "t": "Just came from interview. The interviewer asked me this question: copy tree with unlimited number of children with breadth fist search..."}
{"i": "14945568", "t": "Given an array of pointers to some nodes in a doubly linked list, find the number of connected node blocks the pointers point to."}
{"i": "14955548", "t": "This was at a recent written test...\rThere is a toycar placed on a 5 by 5 board.We can give 5 commands to it , \rPLACE(X,Y,F) where x denotes X Axis,y denotes Y Axis and F denotes the direction to which its facing.\rMOVE->Move will move the toycar one step in the direction where its facing\rLEFT->Left will turn the toycar by 90 degrees to its left and face it to the new direction .Note:Left will not move the toycar, it will just change the direction\rRIGHT->Right will turn the toycar by 90 degrees to its right and face it to the new direction .Note:Right will not move the toycar, it will just change the direction\rREPORT->Report shall tell me the X Axis,YAxis and Direction of the toycar. like 0,0,NORTH\r Note:You cannot move,left,right,report the toycar unless you place it.\r Assume its a Prod level code, Solve it in Java only.\rBelow is my code and I haven't been selected, please tell me if there is better way to do it because my solution is correct but probably very basic.Thanks.package com.ds;\r\n\r\npublic class ToyCar {\r\n\t\r\n\tprivate ToyCar toycar;\r\n\tprivate boolean isToyPlaced;\r\n\tprivate int xAxis,yAxis;\r\n\tprivate enum Direction {EAST,WEST,NORTH,SOUTH};\r\n\tprivate Direction direction;\r\n\tpublic int getxAxis() {\r\n\t\treturn xAxis;\r\n\t}\r\n\tpublic void setxAxis(int xAxis) {\r\n\t\tthis.xAxis = xAxis;\r\n\t}\r\n\tpublic int getyAxis() {\r\n\t\treturn yAxis;\r\n\t}\r\n\tpublic void setyAxis(int yAxis) {\r\n\t\tthis.yAxis = yAxis;\r\n\t}\r\n\tpublic Direction getDirection() {\r\n\t\treturn direction;\r\n\t}\r\n\tpublic void setDirection(Direction direction) {\r\n\t\tthis.direction = direction;\r\n\t}\r\n\t\r\n\tToyCar(){\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic ToyCar(int xAxis,int yAxis,Direction direction) {\r\n\t\t\r\n\t\tthis.xAxis=xAxis;\r\n\t\tthis.yAxis=yAxis;\r\n\t\tthis.direction=direction;\r\n\t}\r\n\t\r\n\tpublic void place(int x,int y, Direction d){\r\n\t\t\r\n\t\tif(x<0||x>5||y<0||y>5 || d==null){\r\n\t\t\tSystem.out.println(\"Place Error:Attempt to place toy outside the box\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttoycar = new ToyCar(x, y, d);\r\n\t\tisToyPlaced=true;\r\n\t}\r\n\t\r\n\tpublic void move(){\r\n\t\tif(!isToyPlaced){\r\n\t\t\tSystem.out.println(\"Move Error:Attempt to Move Toy without placing in board\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(toycar.getDirection().equals(Direction.EAST)){\r\n\t\t\tint newPosition=toycar.getxAxis()+1;\r\n\t\t\tif(newPosition<0||newPosition>5){\r\n\t\t\t\tSystem.out.println(\"Move Error:Attempt to place toy outside the box\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttoycar.setxAxis(newPosition);\r\n\t\t}else if(toycar.getDirection().equals(Direction.WEST)){\r\n\t\t\tint newPosition=toycar.getxAxis()-1;\r\n\t\t\tif(newPosition<0||newPosition>5){\r\n\t\t\t\tSystem.out.println(\"Move Error:Attempt to place toy outside the box\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttoycar.setxAxis(newPosition);\r\n\t\t}else if(toycar.getDirection().equals(Direction.NORTH)){\r\n\t\t\tint newPosition=toycar.getyAxis()+1;\r\n\t\t\tif(newPosition<0||newPosition>5){\r\n\t\t\t\tSystem.out.println(\"Move Error:Attempt to place toy outside the box\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttoycar.setyAxis(newPosition);\r\n\t\t}else if(toycar.getDirection().equals(Direction.SOUTH)){\r\n\t\t\tint newPosition=toycar.getyAxis()-1;\r\n\t\t\tif(newPosition<0||newPosition>5){\r\n\t\t\t\tSystem.out.println(\"Move Error:Attempt to place toy outside the box\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttoycar.setyAxis(newPosition);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic void left(){\r\n\t\t\r\n\t\tif(!isToyPlaced){\r\n\t\t\tSystem.out.println(\"Left Error:Attempt to Move Toy without placing in board\");\r\n\t\t}\r\n\t\tif(toycar.getDirection().equals(Direction.EAST)){\r\n\t\t\ttoycar.setDirection(Direction.NORTH);\r\n\t\t}\r\n\t\telse if(toycar.getDirection().equals(Direction.WEST)){\r\n\t\t\ttoycar.setDirection(Direction.SOUTH);\r\n\t\t}\r\n\t\telse if(toycar.getDirection().equals(Direction.NORTH)){\r\n\t\t\ttoycar.setDirection(Direction.WEST);\r\n\t\t}\r\n\t\telse if(toycar.getDirection().equals(Direction.SOUTH)){\r\n\t\t\ttoycar.setDirection(Direction.EAST);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic void right(){\r\n\t\t\r\n\t\tif(!isToyPlaced){\r\n\t\t\tSystem.out.println(\"Right Error:Attempt to Move Toy without placing in board\");\r\n\t\t}\r\n\t\tif(toycar.getDirection().equals(Direction.EAST)){\r\n\t\t\ttoycar.setDirection(Direction.SOUTH);\r\n\t\t}\r\n\t\telse if(toycar.getDirection().equals(Direction.WEST)){\r\n\t\t\ttoycar.setDirection(Direction.NORTH);\r\n\t\t}\r\n\t\telse if(toycar.getDirection().equals(Direction.NORTH)){\r\n\t\t\ttoycar.setDirection(Direction.EAST);\r\n\t\t}\r\n\t\telse if(toycar.getDirection().equals(Direction.SOUTH)){\r\n\t\t\ttoycar.setDirection(Direction.WEST);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic void report(){\r\n\t\t\r\n\t\tif(!isToyPlaced){\r\n\t\t\tSystem.out.println(\"Report Error:How can i report when I am not on board\");\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tSystem.out.println(toycar.getxAxis()+\" , \"+toycar.getyAxis()+\" , \"+toycar.getDirection());\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args){\r\n\t\t\r\n\t\tToyCar to = new ToyCar();\r\n\t\tto.place(0, 0, Direction.WEST);\r\n\t\tto.left();\r\n\t\tto.move();\r\n\t\tto.report();\r\n\t}\r\n\r\n}"}
{"i": "14928575", "t": "Write a function that takes an array as an input and returns starting and ending indexes \rwithin the array such that if we add elements from the starting and ending index we would get \rmaximum possible sum of any contiguous set of elements within that array."}
{"i": "14955536", "t": "how to Print elements of singly linked list in reverse without using recursion.."}
{"i": "14946517", "t": "Print a binary tree in vertical order using singly linked list...complexity should be O(n)"}
{"i": "14952564", "t": "Reverse words in a string\rEx:\rInput : \"This is a String\"\rOutput: \"String a is This\""}
{"i": "14942556", "t": "Print Level order traversal of a binary tree in reverse way.\rIf tree is         1\r                     /  \\\r                    2    3\r                  /  \\     /  \\\r                4    5   6  7\rOutput will be  4 5 6 7 2 3 1"}
{"i": "14922622", "t": "Implement a method (in java) that takes an Iterator<T> iterator and an int sampleSize and returns a random sample no larger than sampleSize from the iterator."}
{"i": "14948577", "t": "Given a satellite picture with islands in ocean, how would you count the number of islands?"}
{"i": "14948575", "t": "they request me to fix the error of install (they installed)\r install ethereal?\rthis is error : http://www.kmasecurity.net/xforce/attachments/error-jpg.182/"}
{"i": "14955476", "t": "Given a string like 01011011001, convert it to 00000111111 with best efficiency possible."}
{"i": "14942507", "t": "given a very large file with words. Reverse the order of all words. For Example: How are you doing today? -->>today? doing you are How  I know you may say reverse the whole and reverse each word but, the interviewer said that the file is too big to fit into the memory and the file should be read through a inputStream object, then write the result file to harddisk."}
{"i": "14945498", "t": "U have a number, don't know how long it is, do not know how many digits, don't know when number ends, do not know which is the last number. There is a function to increment the number by 1, but function can take only stream of digits and not the complete number e.g if you have 878999 as a number, you could input this number into the function only as single digit e.g 8,7,8,9,9,9. The output should be the whole number incremented by 1 i.e 879000, remember only single digits you can send to function as input. You can use any data structure, but need to tell why you are using that particular data structure. No need to worry about Time complexity. \rKindly, suggest how to approach this problem ?"}
{"i": "14949515", "t": "construct a BST given its preorder traversal. solution which i gave :-\rmake first element of array as node of tree and then if element is less than root and if greater then on right. but i got the answer right for the given example but i am not sure if it was right. can you please suggest me a method to do it."}
{"i": "14952515", "t": "Given a seria of points (Xi, Yi), find the line containing the highest number of points from the list. \rPer my question he mentioned that I can assume that there is a given function that receives two points and returns the a and b of the line euqation (aX+b)"}
{"i": "14942493", "t": "Write a function that returns a boolean value, if two strings(passed as input) represent the same algebraic equation, depending upon whether the strings are same or not. I guess, the length of both strings are equal, but not sure, and the operators involved are +, *, /, ^, (, )"}
{"i": "14945457", "t": "Give a rectangular matrix(order mxn), each cell having only 0's or 1's, find the largest rectangular sub-matrix with equal number of 0's and 1's in it. O(m^2 n^2) solution possible... More time efficient algorithm required... Is O(mn) possible?"}
{"i": "14975259", "t": "How its possible to have only a specific Functionality as per the user Object should have , not all the functionality of the class to be loaded in object only user specific functionality?"}
{"i": "14955428", "t": "How can we  have an Abstract Class without any using any virtual Function in it ?"}
{"i": "14991885", "t": "What is the difference between HashMap and Hashtable?"}
{"i": "14955419", "t": "Why character array is better than string for storing password in java?"}
{"i": "14990074", "t": "You have a log file with start/end times of different functions.\rFind the total exclusive working time for a particular method foo().\r E.g. Log: \r(foo()_start, 10:01);\r  (foo2()_start, 10:03);\r    (foo()_start, 10:05);\r    (foo()_end, 10:08);\r  (foo2()_end, 10:12);\r(foo()_end, 10:20);\rTotal time: (10:03-10:01) + (10:08-10:05) + (10:20-10:12) = 2 + 3 + 8 = 13\r P.S. Recursion calls and inner calls of foo() are possible"}
{"i": "14945419", "t": "I need to insert an element in a heap, making sure that it does not already exist in it. Can this be done in O(logn) time?"}
{"i": "14975214", "t": "find longest palindrome in a given string, expecting time complexity must be less than O(n^2)."}
