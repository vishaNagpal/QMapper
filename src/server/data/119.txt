{"i": "5721754900103168", "t": "I"}
{"i": "5656882640322560", "t": "An instruction pipeline has the speedup factor 10 while operation with 80% efficiency. What could be the number of stages in the pipeline?"}
{"i": "6250330888077312", "t": "Consider a four stage pipeline with the respective delays t1=60nSeconds, t2=70nSeconds, t3=100nSeconds, t4=80nSeconds and the latch delay of 10nSeconds. What is the approximate speedup when the very large number of instructions on pipeline?"}
{"i": "5124430981234688", "t": "Suppose that a system taken 90% of the computation can be parallelized, What is the maximum speedup we can except from 8 processors according to the Amdahl\u2019s law?"}
{"i": "5091668970700800", "t": "Write a C program to convert date from 24 hrs format to 12 hrd format? Ex: 23:10 = 11:10PM"}
{"i": "5646492845998080", "t": "Given a sorted (increasing order) array, write a program to create a binary tree with minimal height"}
{"i": "6278330048315392", "t": "Write C program such that if an element in an MxN matrix is 0, its entire row and column is set to 0."}
{"i": "5687380934656000", "t": "Consider a system with three processes and four resources. Resource R1 and R3 with one instance, R2 with two instance, process P1 holding an instance of R2 and waiting for r1,process P2 is holding an instance of  R1 and R2 and waiting for R3,process P3 is holding an instance of R3. Is it possible to apply the Resource allocation graph algorithm to avoid deadlock? Explain."}
{"i": "5762796131188736", "t": "Consider a disk drive with the specifications of 16 platters, 2 surfaces, 512 tracks, 2K sectors and 4KB page or sector size. What is the capacity of the disk drive in terms of bytes?"}
{"i": "5719679088721920", "t": "Consider a system where counting semaphore initialized to +17, on this semaphore variable the various operations like 23P, 18V, 16P, 14V and 1P are performed. Then what is the final value of semaphore?"}
{"i": "5134631394344960", "t": "Let the average process size be s bytes and the page size be p bytes. Furthermore, assume that each page entry requires e bytes. Derive the optimal page size."}
{"i": "5646028452659200", "t": "Process ID\tArrival Time\tBurst\rP1 arrived at 0 and need10 units burst time, P2 is arrived at 1 and need 8 units of burst time, process P3 is arrived at 2 and need 6 units of burst time and process P4 arrived at 3 and need 4 units of burst time.\rAssume that context switch takes one unit of time. Draw that gant chart and find the average waiting time, turnaround time using SJF scheduling."}
{"i": "5697581347766272", "t": "Five jobs are waiting to be run. Their expected run times are 9, 6, 3, 5, and X . In what order should they be run to minimize average response time?"}
{"i": "5746360499306496", "t": "f(n)=n\u20442 when n is even;f(n)=f(3n+1)when n is odd. Write recursive function to compute f(n)."}
{"i": "5736601259868160", "t": "A program P reads in 500 integers in the range (0,100) representing the scores of 500 students. It then prints the frequency of each score above 50. Implement program P in C language."}
{"i": "5670768001155072", "t": "There are four coins a , b , c , d out of which three coins are of equal weight and one coin is heavier. Write a C program to find the heavier coin."}
{"i": "5753656306565120", "t": "Given an Array A with n elements. Pick maximum number of elements from given array following the rule:\r1. We cannot pick A[i] and A[j] if absolute value of (A[i] - A[j]) > absolute value of (i - j)\r Example: {13,5,4}\rAns: 2\rPick 5 and 4."}
{"i": "5178781644881920", "t": "A frequent traveller collects all his travel tickets.\rA ticket has only 2 attributes, Start Journey Location name and Destination Name. Example from Delhi to Mumbai.\rAt the end of the year, the traveller gets all his tickets together and tries to map his journey across the year. Print his travel route in a readable format. He does not remember his start location.\rEdit: he can visit a location multiple times, and can also go back and forth a place several times."}
{"i": "5682419978993664", "t": "http://www.buycakeonline.in/corporate-cakes.php"}
{"i": "5721602953052160", "t": "Problem statement: You are given a maze with N cells. Each cell may have multiple entry points but not more than one exit (ie. entry/exit points are unidirectional doors like valves). The cells are named with an integer value from 0 to N-1. You need to find the following :\r Nearest meeting cell: Given any two cells - C1,C2, find the closest cell Cm that can be reached from both C1 and C2.\r Note: Aim for O(Log(N)) solution.\r INPUT FORMAT - First line has the number of cells N\r Second line has list of N values of the edge[] array. edge[i] contains the cell number that can be reached from of cell \u2018i\u2019 in one step. edge[i] is -1 if the \u2018i\u2019th cell doesn\u2019t have an exit.\r Third line contains two cell numbers whose nearest meeting cell needs to be found. (return -1 if there is no meeting cell from the two given cells) .\r OUTPUT FORMAT -   Find nearest meeting cell (NMC)."}
{"i": "5692354775220224", "t": "Problem statement: You are given a maze with N cells. Each cell may have multiple entry points but not more than one exit (ie. entry/exit points are unidirectional doors like valves). The cells are named with an integer value from 0 to N-1. You need to find the following :\r find Maximum number of entry points (incoming edges) for any cell in the maze  \r Note: Aim for O(N) solution.\r INPUT FORMAT - First line has the number of cells N\r Second line has list of N values of the edge[] array. edge[i] contains the cell number that can be reached from of cell \u2018i\u2019 in one step. edge[i] is -1 if the \u2018i\u2019th cell doesn\u2019t have an exit.\r OUTPUT FORMAT -  Find max entry points in any cell."}
{"i": "5757366608855040", "t": "Problem statement: You are given a maze with N cells. Each cell may have multiple entry points but not more than one exit (ie. entry/exit points are unidirectional doors like valves). The cells are named with an integer value from 0 to N-1. You need to find the following :\r The length of the largest cycle in the maze. Return -1 if there are no cycles. \r Note: Aim for O(N) solution.\r INPUT FORMAT - First line has the number of cells N\r Second line has list of N values of the edge[] array. edge[i] contains the cell number that can be reached from of cell \u2018i\u2019 in one step. edge[i] is -1 if the \u2018i\u2019th cell doesn\u2019t have an exit.\r OUTPUT FORMAT -  length of the largest cycle."}
{"i": "5756056106958848", "t": "There is a 2D grid and there are two players P1 and P2. Their x,y positions are given. Then there are N gems on the grid and their positions are also given. The two players together are supposed to collect the gems in the given sequence making minimum moves (movement in all 8 directions is considered as 1 move). Note: the gems should be collected in the given order by either one of the players and then their position then becomes the position of the gem."}
{"i": "5746539545755648", "t": "Either C or C++ is faster and which one is efficiently access memory?"}
{"i": "5737948524838912", "t": "Can we execute a C program with out main?"}
{"i": "5680706287042560", "t": "Write a C program to check biggest among two numbers  with out using any relational operators."}
{"i": "6002346992599040", "t": "Implement method:L\u00ecst<Range> getRanges(L\u00ecst<Shard> shards, L\u00ecst<Key> keys)That returns list of ranges. Each range represents multiple keys aggregated over a shard:\rn-keys \u2014> 1-shard \u2014> l-range\r Method should return no more than 1 range per shard that spans all keys or their parts belonging to this shard.\r Each of the \u2018Range` , 'Shard\u2019 and \u2018Key\u2019 classes have \u2018end\u2019 and \u2018start\u2019 fields of int type, where \u2018start\u2019 is inclusive and \u2018end\u2019 is exclusive.\r Example:1\u20149, 12\u201459, 100\u2014999 <\u2014 shards (input)\r\n2\u20143, 6\u20148, 11\u201420, 200\u2014220 <\u2014 keys (input)\r\n2\u20148, 12\u201420, 200\u2014220 <\u2014 ranges (output)"}
{"i": "5681516425248768", "t": "Given: sorted array of integers\rReturn: sorted array of squares of those integers\r Ex: [1,3,5] -> [1,9,25]\r Integers can be negative."}
{"i": "5177626017660928", "t": "Write a program which will get the top 'x' tweets based on their re-tweet count from 'n' tweets."}
{"i": "5749986793881600", "t": "Given (a,b) can you reach to (c,d) if a and b can move either (a+b,b) or (a,a+b). Example a =1, b=4,c=5,d=9 then (1,4) -> (5,4) -> (5,9)"}
