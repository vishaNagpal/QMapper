{"i": "5565570867003392", "t": "Given a set of intervals like 5-10, 5-10, 8-12, 9-15\rFind the ith smallest number in these intervals.\r for eg:-\rSuppose we have intervals like 5-10, 8-12. \rThen total numbers in these two intervals would be: {5,6,7,8,8,9,9,10,10,11,12} \r\t\tSo, 1st smallest number: 5\r\t\t\t4th smallest number: 8\r\t\t\t5th smallest number: 8 (here is the \rchange since now we have duplicate elements also) and so on."}
{"i": "6498645130084352", "t": "how to redirect the url to the custom url after the successful completion of the payment in the emppay gateway"}
{"i": "5114678757818368", "t": "How Hashmap works internally? Resizing? Hashbuckets' separation?"}
{"i": "5141263665856512", "t": "Array of Integers. Given Integer X, return true iff there exist A,B, so that A+B=X. Hint: additional data structure might be needed."}
{"i": "5128688001613824", "t": "How would you store a phone book. Unique phone numbers, possibly multiple same names with different phone numbers."}
{"i": "5074605773422592", "t": "Array of Integers with even number of same Integers. Find the Integer that is an odd number of times. Compare efficiency between different approaches."}
{"i": "4869907900530688", "t": "Find next higher number with same digits.\r Example 1 : if num = 25468, o/p = 25486\rExample 2 : if num = 21765, o/p = 25167\rExample 3 : If num = 54321, o/p = 54321 (cause it's not possible to gen a higher num than tiz with given digits )."}
{"i": "5667257573179392", "t": "/*\r\n * Returns true if the input string is a number and false otherwise\r\n */\r\n \r\npublic boolean isNumber(String toTest)\r\n{\r\n    // implementation here\r\n}"}
{"i": "5826758028820480", "t": "/**\r\n * Implement a method which takes an integer array and returns an integer array (of equal size) in\r\n * which each element is the product of every number in the input array with the exception of the\r\n * number at that index.\r\n *\r\n * Example:\r\n *   [3, 1, 4, 2] => [8, 24, 6, 12]\r\n */\r\npublic int[] selfExcludingProduct(int[] input) {\r\n    // implementation...\r\n}"}
{"i": "5678716545925120", "t": "Given a string, find the largest repetitive sequence. Algo + Code\rEx: abcdefbcd \u2013 bcd, banana \u2013 ana"}
{"i": "5114520783552512", "t": "Sliding window problem where window size is 3 and we need to find the minimum from the window."}
{"i": "4883670854795264", "t": "Given a list with duplicate values find the first unique elements in it.\r for eg: BH BH F AL HJ AL HJ PK\rso answer is F"}
{"i": "5203506868781056", "t": "Given a matrix and need to traverse through it last position from first position and the matrix has 0 and 1 if there is 1 we cant proceed ahead."}
{"i": "5674228305100800", "t": "Compare two release version and tell me which is larger \reg: 1.0.10 and 1.0.2 \r1.0.2 is greater\r 1.2.0 and 2.1.0 \r2.1.0 is greater"}
{"i": "5752914790318080", "t": "Given a list of 'N' coins, their values being in an array A[], return the minimum number of coins required to sum to 'S' (you can use as many coins you want). If it's not possible to sum to 'S', return -1\r Example:\r  Input #00:\rCoin denominations: { 1,3,5 }\rRequired sum (S): 11\rOutput #00:\r3\rExplanation:\rThe minimum number of coins requires is: 3 - 5 + 5 + 1 = 11;"}
{"i": "5687700006895616", "t": "Unable to get what exactly the Question Is?\r so What is the whole logic behind this question .It seems to be  complete Math problem to me.\r There is a Grasshopper in a tropical forest. The grasshopper can jump only vertically and horizontally, and the length of jump is always equal to x centimeter. A GRasshopper has found herself at the center of some cell of the chess board of the size pxq centimeters(each cell is 1x1 centimeters). She can jump as she wishes for an arbitrary number of times, she can even visit a cell more than once. the only restriction is that she cannot jump out of the board.\rThe grasshopper can count the number of cells that she can reach from the starting position(x,y). Let's denote this amount by dx,y. your task is to find the number of such starting position(x,y), which have the maximum possible value of dx,y\rInput\rThe integer array contains three integers p,q,x\r p= length of the board\rq= width of the board\rx=length of the grasshoppers jump.\r Output\rOutput the only integer - the number of the required starting position of the Grasshopper\rExample\r input 2 3 1000000\routput 6\r input 3 3 2\routput 4 \r Regards,\rJSD"}
{"i": "4805368769150976", "t": "Write a function to convert an Integer representing a number of bytes (less than or equal to 1 Gigabyte) into an easy to read format, defined as follows: \u2022             Maximum of 3 digits (not counting a decimal point), and a single letter to signify the unit of measure. \u2022             No leading zeroes, or trailing zeroes after a decimal point. \u2022             Be as accurate as possible.   \rMaximum of 3 digits (not counting a decimal point), and a single letter to signify the unit of measure.  \u2022 Round to the nearest valid values. Examples: o             341 = 341B o             34200 = 34.2K o             5910000 = 5.91M o             1000000000 = 1G \u2022             No leading zeroes, or trailing zeroes after a decimal point. Examples: o             34K, not 034K o             7.2M, not 7.20M \u2022             Be as accurate as possible. Example: o             54123B = 54.1K, not 54K \u2022             Note: For this problem, 1000 bytes = 1 KB, and so on"}
{"i": "6363631222521856", "t": "Given a paragraph of text, write a program to find the first shortest sub-segment that contains each of the given k words at least once. A segment is said to be shorter than other if it contains less number of words"}
{"i": "5073715104579584", "t": "divide a given array into two subarray (not necessary to be continuous) such that difference between sum of both array is minimum. Required was recursive code for this. tried solving using idea from min coin change problem was couldn't."}
{"i": "5640905264463872", "t": "Print the diameter of binary tree i.e. set of nodes comprising diameter of binary tree."}
{"i": "5657599802343424", "t": "Find the smallest window in a string containing all characters of another string"}
{"i": "6441875862978560", "t": "count the consecutive chars in a string. \r Example input  string: BBSBSS\r                output string:  B2S1B1S2\r  * ignore case . out put is always uppercase\r       input : AaV\r       output: A2V1"}
{"i": "5694654632689664", "t": "count the consecutive chars in a string. \r Example input  string: BBSBSS\r                output string:  B2S1B1S2\r  * ignore case . out put is always uppercase\r       input : AaV\r       output: A1V1"}
{"i": "5735545137266688", "t": "Given an excel column number convert it to excel column alphabet and reverse.\r Example : If column number(starts from 0) = 26 : Column alpha = AA."}
{"i": "6276805505843200", "t": "Find if the given expression contains redundant parantheses. ex :if expr =  a+(b*c) , print false,      if expr = a+((b*c)), print true."}
{"i": "4632862884102144", "t": "COUNT 1s in BINARY FORMAT OF A NUMBER."}
{"i": "6546452679491584", "t": "Given a matrix with only 1s and 0s now find and PRINT SUB MATRIX WITH EQUAL NUMBER OF 0s AND 1s."}
{"i": "4931682415149056", "t": "Given a list of stock quotes over a month of time,\r  Return the buy day and sell day which gives the max\r profit."}
{"i": "5952956918661120", "t": "given a set of n meetings and m meeting rooms, how will you schedule the meetings in the meeting rooms?"}
{"i": "4691284505657344", "t": "you have an array which has a set of positive and negative numbers, print all the subset sum which is equal to 0.\r eg 2, 1, -1, 0, 2, -1, -1\ro/p: 1, -1\r         1, -1, 0\r         0\r         2, -1, -1"}
