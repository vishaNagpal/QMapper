{"i": "5699018040541184", "t": "Write a pseudocode for a function that does the following.\rGiven a node in the tree datastructure, it determines whether there exists a path from the given node to a leaf node where the sum of values along the path equals the given sum.\r signature :\rboolean dse(Node node, int sum)\r The following assumptions maybe made\r1.Each node in the tree may have anywhere from zero to many children\r2. the three can have any arbitray depth\r3. each node the tree has a paositive integer value assigned to it.\rA can have children B,C,D\rB Children are E,F\rC children G\rD Children H,J\rH Children K\rJ Children L, M\rA= 5,B=2, C=3,D=8,E=1,F=4,G=6,H=2,J=1,K=3,L=7,M=8\rInput and output should be\rdse(F,4) = true \rdse(F,1) = false\rdse(B,6) = true\rdse(B,2)= false\rdse(b,7) = false\rdse(A,14) = true\rdse(A,22) = true\rdse(A,29) = false"}
{"i": "5683639910137856", "t": "Given string a and b, with b containing all distinct characters, find the longest common subsequence's\r length. Expected complexity O(nlogn)."}
{"i": "5745628770467840", "t": "Given a 4*n block, find number of different ways of filling it with 1*2 smaller blocks. Rotation of smaller blocks is allowed."}
{"i": "5757497241501696", "t": "Given an array of numbers, for every index i, find nearest index j such that a[j] > a[i].If such an index doesn\u2019t exist for i, \u00ad1 should be printed."}
{"i": "5726654544478208", "t": "Imagine a man reading a book.\rHe can perform only 2 possible actions of reading: \r1) read a page in a minute (careful reading), \r2) read two pages in a minute (look through).\rNothing else is permitted.\rCalculate the number of all possible combinations of book reading ways with given number of pages.\rExample: given 3 pages.\rAnswer is 3 combinations, as follows: \r1st: Careful reading (1) - careful reading (1) - careful reading (1),\r2nd: Careful reading (1) - look through (2),\r3rd: Look through (2) - careful reading (1)."}
{"i": "5756186739605504", "t": "Given an array of integers of unknown size, how to reverse the order of the positive integers? \r Ex [4 3 8 9 -2 6 10 13 -1 2 3 .. ] => \r[ 9 8 3 4 -2 13 10 6 -1 3 2]"}
{"i": "5745017811369984", "t": "Given-an-array-of-length-n-having-integers-0-to-n-1-in-unsorted-order-we-have-to-modify-this-array-such-that-the-value-at-a-n-becomes-a-a-n-for-example-if-a-0-contains-5-then-a-0-will-have-value-a-5-and-so-on-condition-is-that-this-should-take-O-n-time-complexity"}
{"i": "5143781982601216", "t": "https://www.quora.com/Given-an-array-of-length-n-having-integers-0-to-n-1-in-unsorted-order-we-have-to-modify-this-array-such-that-the-value-at-a-n-becomes-a-a-n-for-example-if-a-0-contains-5-then-a-0-will-have-value-a-5-and-so-on-condition-is-that-this-should-take-O-n-time-complexity"}
{"i": "5739867608711168", "t": "Consider a setup where a program is continuously receiving floats as inputs (a stream of numbers). Write a method that at any given time returns a moving average. That is the average of the last K numbers received. If the method is called before the program has received K numbers, simply return the average of however many numbers have been received thus far."}
{"i": "5684494608629760", "t": "Data structure which supports both map operations and array operations without time complexity penalty."}
{"i": "5752399786409984", "t": "Given an active stream of sorted arrays, how would you merge them efficiently?"}
{"i": "5709026522300416", "t": "What is the fastest way to compute cube root?"}
{"i": "5158367691538432", "t": "Problem Statement\r Given an integer N, express it as the sum of at least two consecutive positive integers. For example:\r 10 = 1 + 2 + 3 + 4\r24 = 7 + 8 + 9\rIf there are multiple solutions, output the one with the smallest possible number of summands.\r Input Format\r The first line of input contains the number of test cases T. The descriptions of the test cases follow:\r Each test case consists of one line containing an integer N (1 \u2264 N \u2264 109).\r Output Format\r For each test case, output a single line containing the equation in the format:\r N = a + (a + 1) + ...+ b\r as in the example. If there is no solution, output a single word \u2018IMPOSSIBLE\u2019 instead.\r Sample Input\r 3\r8\r10\r24\r Sample Output\r IMPOSSIBLE\r10 = 1 + 2 + 3 + 4\r24 = 7 + 8 + 9"}
{"i": "5100595952222208", "t": "Given a character limit and a message, split the message up into annotated chunks without cutting words as, for example when sending the SMS \"Hi Sivasrinivas, your Uber is arriving now!\" with char limit 25, you should get \r[\"Hi Sivasrinivas,(1/3)\", \"your Uber is arriving(2/3)\", \"now!(3/3)\"]"}
{"i": "5693475519463424", "t": "The idea is their are \"ticket stalls\" with a certain number of tickets, say 9. Any ticket they sell is priced at the number of tickets that remain, so first ticket would be $9, second $8 etc...\r You're given two lines of data, say:\r 2 4\r1 5\rThe first row contains two numbers:\r The number of stalls\rHow many tickets are sold\rThe second line contains a list of how many tickets each stall has initially, so in this case stall 1 has 1 ticket, stall 5 has 5 tickets.\r The problem: what is the maximum amount of money you can make selling the given number of tickets?\r In this case, you sell four tickets from stall two for a price of 5 + 4 + 3 + 2 = $14"}
{"i": "5745322082959360", "t": "Assuming that a payment request is coming into an ecommerce network like Amazon, what are some of the design techniques that one should follow for a fail-safe transaction from the time the request hits the website till it is successfully processed?"}
{"i": "5697827931947008", "t": "Given a group of no.s you need to arrange them in a such a way that they result into maximum no.\rThe input no. can be of more than 1 digit, don't change no. digits order."}
{"i": "5726732524978176", "t": "Write func repeat(e, n).\r Args:\r\te: any object\r\tn: a number of times\rReturns:\r\tan iterator producing the element e n times"}
{"i": "5760955579367424", "t": "Design auto complete for booking.com"}
{"i": "5701630857052160", "t": "Write a function to test if the given set of brackets are balanced or not. e.g. {{}}{)([][]"}
{"i": "5708658983829504", "t": "The \"Island Count\" Problem\r Given a 2D matrix M, filled with either 0s or 1s, count the number of islands of 1s in M.\rAn island is a group of adjacent values that are all 1s. Every cell in M can be adjacent to the 4 cells that are next to it on the same row or column.\r Explain and code the most efficient solution possible and analyze its runtime complexity.\r Example: the matrix below has 6 islands:\r         0  1  0  1  0\r        0  0  1  1  1\r        1  0  0  1  0\r        0  1  1  0  0\r        1  0  1  0  1"}
{"i": "5975096474730496", "t": "Given the two objects below, implement the methods defined in the Phonebook class. This is a simulated phonebook. You should expect LookupByName and LookupByPhoneNumber to be called much more often than AddPerson. Also, this is a multi-threaded simulation so your implementations of the functions other than the constructor should be threadsafe. Feel free to rewrite this in any language of your \rchoice.public struct Person \r\n{\r\n\tstring name; \r\n\tstring phoneNumber; \r\n}\r\npublic class Phonebook \r\n{\r\n\tpublic Phonebook (List<Person> people) \r\n\t{\r\n\t}\r\n\r\n\tpublic Person LookupByName(string name) \r\n\t{\r\n\t}\r\n\r\n\tpublic person LookupByphoneNumber(string phoneNumber) \r\n\t{\r\n\t}\r\n\r\n\tpublic void Addperson(person person) \r\n\t{\r\n\t}\r\n}"}
{"i": "5184228494934016", "t": "write a program to parse a prefix expression and calculate it's result. Example: *-6 5 7 = 7."}
{"i": "5747178448355328", "t": "You're given a maze (that is not necessarily square shaped). The maze is composed of square rooms. In one of these rooms there is a flag. You have a robot that you can control using the following APIs:\r1. void Go() - drives the robot straight.\r2. void Turn(int degrees) - turns the robot x degrees to the right (x has to be a multiple of 90).\r3. bool IsWall() - returns true if the robot is facing a wall (you can't move from one room to the other).\r4. bool IsFlag - returns true if the room has the flag in it.\r5. void PutBreadCrumb() - throws a single breadcrumb in the room.\r6. bool HasBreadCrumb()- returns true if the room contains a breadcrumb.\rUsing these Apis only, write a program to navigate the robot through the maze until it finds the flag."}
{"i": "5192663810703360", "t": "Implement ReentrantLock using simple locks."}
{"i": "5656066891186176", "t": "The problem is quite interesting.\rWe have to find the integer solution of the below equation .\r n<=sum of(ki*xi)<n+1\r such that ki are all constants, xi are integers.\r For example : 4<=1.4x1+3.4*x2+1.1*x3<5\r solutions (x1,x2,x3) =(1,1,0),(3,0,0),(0,1,1),(0,0,4) ..."}
{"i": "5879102479269888", "t": "Check given Number is same after 180 degree rotation?\r i/p:  69\ro/p: True\r i/p:  916\ro/p: True\r i/p:  123\ro/p: False"}
{"i": "5677177410420736", "t": "A company is trying to find best possible optimal solution for servicing his customer base of 300 with 12 employee.\rThey want a technology solution that tells how they will be able to meet customer requirement as business will grow and other changes like location of customer changes, new locations added and so on. \r Problem is basically a form of Travelling Salesman Problem ( TSP ) or Vehicle Routing problem ( VSP ). Following things need to be completed here.\r 1>\tExplain logistics involved in this problem into succinct business definition.\r2>\tDifferent approach with which problem can be solved\r3>\tOne implementation of the problem ( proof of concept ), using customer base coordinates mentioned below. ( 0,0 ) is considered the company coordinate which is the starting point.    (  preferably Java )\r Here are coordinates with which working  solution is expected provided in a text file as input:\r X coordinate\tY Coordinate\r420\t278\r421\t40\r29\t178\r350\t47\r298\t201\r417\t186\r378\t134\r447\t239\r42\t114\r45\t199\r362\t195\r381\t243\r429\t1\r338\t209\r176\t9\r364\t26\r326\t182\r500\t129\r190\t51\r489\t103\r368\t142\r132\t260\r305\t200\r446\t137\r375\t154\r440\t190\r9\t118\r437\t32\r383\t266\r282\t51\r366\t19\r465\t173\r93\t210\r257\t185\r316\t242\r315\t141\r236\t14\r352\t155\r311\t106\r300\t261\r66\t154\r172\t245\r376\t16\r152\t283\r41\t259\r278\t158\r299\t102\r81\t178\r178\t218\r344\t150\r269\t172\r379\t710\r301\t611\r287\t295\r392\t258\r259\t333\r427\t273\r411\t233\r355\t707\r439\t717\r298\t390\r338\t547\r407\t697\r287\t220\r355\t524\r365\t228\r257\t632\r294\t395\r315\t626\r275\t268\r346\t724\r324\t230\r436\t310\r279\t240\r317\t601\r274\t661\r294\t483\r350\t234\r328\t689\r656\t765\r778\t792\r724\t797\r686\t723\r784\t785\r730\t756\r775\t731\r777\t647\r881\t498\r634\t906\r588\t709\r884\t867\r837\t670\r513\t477\r414\t794\r387\t798\r430\t587\r638\t18\r26\t497\r721\t765\r595\t706\r985\t962\r619\t125\r106\t252\r198\t104\r554\t91\r11\t875\r757\t386\r378\t253\r719\t878\r561\t969\r36\t821\r179\t442\r31\t814\r710\t103\r8\t168\r401\t304\r913\t921\r983\t250\r100\t727\r0\t425\r114\t900\r337\t977\r709\t808\r107\t435\r442\t488\r68\t42\r826\t967\r771\t399\r460\t831\r520\t83\r530\t406\r727\t406\r58\t195\r732\t240\r512\t974\r438\t366\r184\t954\r423\t905\r549\t923\r433\t292\r395\t237\r764\t73\r698\t503\r146\t536\r200\t211\r48\t38\r31\t39\r60\t37\r41\t38\r71\t37\r54\t39\r23\t35\r73\t38\r67\t33\r45\t39\r47\t34\r69\t30\r39\t34\r52\t38\r28\t30\r949\t892\r959\t909\r966\t930\r993\t923\r925\t887\r946\t888\r998\t951\r931\t894\r966\t839\r959\t812\r986\t965\r946\t979\r927\t800\r979\t803\r987\t980\r983\t975\r993\t858\r936\t851\r998\t912\r993\t939\r997\t916\r1000\t832\r975\t898\r919\t882\r916\t883\r980\t974\r975\t902\r996\t808\r999\t864\r991\t829\r995\t985\r982\t926\r13\t690\r23\t525\r10\t864\r15\t283\r2\t149\r3\t580\r8\t299\r16\t361"}
{"i": "6260161775665152", "t": "Give a Barrel a position say X.\r Barrel can pushed left or right with equal probability. \r A single push to left side will place the barrel to left of X and push to right will place the barrel to right of X.\r After 10 pushes (either left or right with equal probability) what is the probability that barrel will be back to the same position X ?\r  Write a code or derive mathematically."}
{"i": "5956505037701120", "t": "Given a string of characters, find the longest legal word. A generic method to check word legality is given."}
