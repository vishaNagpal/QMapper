{"i": "14084742", "t": "WAP to return numbered index if input is excel sheet column header name.\re.g \rexcel sheet column headers are A, B, C , D ... Z, AA, AB...AZ, BA,, etc\rif Input is D , output should be 4\rand for AA output should be 27"}
{"i": "14097727", "t": "WAP to delete all the nodes from given BST."}
{"i": "14091733", "t": "WAP to return all anagrams from  the array of strings."}
{"i": "14091731", "t": "Given an array which is alternatively sorted. Find an element in it.\re.g. 12,2,16,5,18,32,33,38"}
{"i": "14088738", "t": "Given two integer unsorted arrays, your task is to compare the BST formed by both the arrays.\rany o(n) solution???"}
{"i": "14094740", "t": "Hi all,\rcan anyone tell some methods & related brief for sorting the strings lexicographically , \ri just have implemented using quick sort.....\ri want to learn abt hashing nd TRIE......bt still nt able to get.....how to sort using these  methods"}
{"i": "14086721", "t": "reverse a string\r\"hello my name is\" to be displayed as \"is name my hello\""}
{"i": "14085723", "t": "find the no. of time a particular word is occurring in a string?\reg. \"Hello I am going to I with Hello am\"?"}
{"i": "14099726", "t": "3 black caps and 2 white caps\rrandomly 3 caps are chosen and A,B,C are made to wear\rthey are standing in que and A can see B nC , B can only see C and C cant see anyone\rA is asked which cap are you wearing? Ans from A was he dont knw\rB was asked which cap is he wearing? B answered I dont know\rBut when asked C , he gave the correct answer\rThe question was...which color cap was C wearing?\rI took 10min to ans"}
{"i": "14084724", "t": "overall there will be 5 rounds which includes 4 Tech + 1HR round. They asked me data structures , java , oops concepts and some basic questions in selenium automation\rthere are 2 jars 5 lit and 3 lit capacity\rmeasure 4 lit using them\rdamn easy question.... hehe!...answered in jus 60secs"}
{"i": "14095713", "t": "What is wrong with the below code?#include <iostream>\r\n#include <string.h>\r\nusing namespace std;\r\n \r\n \r\nclass A\r\n{\r\n        char *p;\r\n        public:\r\n        A(const char* str)\r\n        {\r\n                p=new char[strlen(str)+1];\r\n                strcpy(p,str);\r\n        }\r\n \r\n        ~A()\r\n        {\r\n                delete p;\r\n        }\r\n};\r\n \r\nint main()\r\n{\r\n        A s(\"Object s\");\r\n        A t=s;\r\n        s.~A();\r\n        A u(\"Object u\");\r\n        u=s;\r\n        return 0;\r\n}"}
{"i": "14099719", "t": "#include<stdio.h>\rvoid main(){\r int x,y,z;\rx=y=z=1;\rz=++x||++y&&++z;\rprintf(\"%d  %d  %d \\n\",x,y,z);\rgetch();\r}\r what is the output n explain the output!!!!"}
{"i": "14092717", "t": "what will be the o/p of the following program:main()\r\n{\r\n  int ret;\r\n  ret=fork();\r\n  ret=fork();\r\n  ret=fork();\r\n  ret=fork();\r\n\r\n  if(!ret)\r\n    printf(\"one\");\r\n  else\r\n    printf(\"two\");\r\n}"}
{"i": "14084712", "t": "Explain the time complexity of external merge sort where each array has N elements & there are exactly N arrays."}
{"i": "14088706", "t": "Give an example of times you\u2019ve used thread safe code."}
{"i": "14092697", "t": "#include<stdio.h>\r#if something == 0\rint some=0;\r#endif\rint main(){\rint thing = 0;\rprintf(\"%d %d\\n\", some ,thing);\r}\rExplain the output ."}
{"i": "14085703", "t": "#include<stdio.h>\r #include<string.h>\rvoid f(int **c){\rprintf(\"%d\",c[0][0]);\r}\rint main(){\rint c[2][2]={1,2,3,4};\rf(c);\rreturn 0;\r}\rExplain the output and also remove the error if any ."}
{"i": "14093701", "t": "Write a C program which counts 1, 2, 3... and so on, every second. On pressing Ctrl+C, the timer should pause and then pressing Ctrl+Z should resume the timer"}
{"i": "14088704", "t": "write a C program which generates random numbers between 1-100 (inclusive) on mouse movements."}
{"i": "14104667", "t": "Given an unsorted array of size 5.\rHow many minimum comparisons are needed to find the median?"}
{"i": "14111666", "t": "Write a function that receives three integer inputs for the lengths of the sides of a triangle and returns one of four values to determine the triangle type (1=scalene, 2=isosceles, 3=equilateral, 4=error). Generate test cases for the function assuming another developer coded the function"}
{"i": "14133666", "t": "Implement a circular queue of integers of user-specified size using a simple array. Provide routines to initialize(), enqueue() and dequeue() the queue. Make it thread safe."}
{"i": "14099698", "t": "we have one magic number while we multiply that no. with 2,3,4,5 or 6 we will get the permutations of that number only. what is that number? \rex: take magic no. as 135 while we multiply 135 with 2 to 6 numbers we have to get either 531 or 351.\r the number should be not 0."}
{"i": "14119663", "t": "What is the difference between the two declarations?\r int p=*(int*)i;\rint p=*(int*)&i;"}
{"i": "14091690", "t": "There are M servers each have a sorted list of  N numbers. (N is very Large)\rfind kth smallest element from all the lists.\roperations on servers are costly...."}
{"i": "14091686", "t": "given 3 arrays, array a, array b, array c.\rfind all pairs where a[i] + b[j] = c[k]\r a, b , c are sorted."}
{"i": "14088687", "t": "void freeList( struct node *n )\r\n{\r\n\twhile( n )\r\n\t{????}\r\n}\r\n\r\nWhich one of the following can replace the ???? for the function above torelease the memory allocated to a linked list?\r\nChoice 1 \tn = n->next;\r\n\t\tfree( n );\r\n\r\nChoice 2 \tstruct node m = n;\r\n\t\tn = n->next;\r\n\t\tfree( m );\r\n\r\nChoice 3 \tstruct node m = n;\r\n\t\tfree( n );\r\n\t\tn = m->next;\r\n\r\nChoice 4 \tfree( n );\r\n\t\tn = n->next;\r\n\r\nChoice 5 \tstruct node m = n;\r\n\t\tfree( m );\r\n\t\tn = n->next;"}
{"i": "14089664", "t": "void *ptr;\rmyStruct myArray[10]; \rptr = myArray;\rWhich of the following is the correct way to increment the variable \"ptr\"?\rChoice 1 ptr = ptr + sizeof(myStruct);\rChoice 2 ++(int*)ptr;\rChoice 3 ptr = ptr + sizeof(myArray);\rChoice 4 increment(ptr);\rChoice 5 ptr = ptr + sizeof(ptr);"}
{"i": "14101663", "t": "I have given a Long Sentence and some words(to be searched in the sentence), i have to find the smallest part of the sentence which contains all the words to be Searched in that Sentence and print that part.\r I have tried it, 1. First get all locations(indexes) of all words from the given sentence. 2. then try to find smallest part from these indexes of words.\r But i am having problem implementing 2nd part . So i want some advice for it or if you suggest any other algorithm which can make it fast.\rExample: If i have a String > \"Hello, my name is undefined. but your name is not undefined.\" and i have to search word [is, undefined] then the answer should be printed is: is undefined //which is taken from the sentence 1st and we can not print from second sentence as it is \" is not undefined\" because it is not shortest.import java.util.*;\r\nimport java.io.*;\r\npublic class ShotestSubSegment2 \r\n{\r\nstatic SearchStr[] search;\r\nstatic String copystr;\r\npublic static void main(String s[])\r\n{\r\ntry\r\n{\r\nBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\r\n        String str = in.readLine();\r\n        copystr = str.substring(0).toLowerCase();\r\n        int k = Integer.parseInt(in.readLine());\r\n        search = new SearchStr[k];\r\n        for(int i=0;i<k;i++)\r\n        {\r\n            search[i] = new SearchStr(in.readLine().toLowerCase());\r\n            getIndicesOf(search[i]);\r\n            if(search[i].noOfElements()==0)\r\n            {\r\n                System.out.println(\"No Segments Found\");\r\n                return;\r\n            }\r\n        }\r\n        searchSmallestPart();//Dont getting Idea Of this\r\n\r\n    }\r\n    catch(Exception x){}\r\n}\r\n\r\npublic static void getIndicesOf(SearchStr searchS) \r\n{\r\n    String searchStr = searchS.getName();\r\n    int startIndex = 0, searchStrLen=0;\r\n    int index;\r\n    searchStr = searchStr.toLowerCase();\r\n    searchStrLen = searchStr.length();\r\n    while ((index = copystr.indexOf(searchStr, startIndex)) > -1) \r\n    {\r\n        searchS.add(index);\r\n        startIndex = index + searchStrLen;\r\n    }\r\n}}"}
{"i": "14099679", "t": "Design an algorithm that, given a list of n elements in an array, finds all the elements that appear more than n/3 times in the list. The algorithm should run in linear time ( n >=0 )\r You are expected to use comparisons and achieve linear time. No hashing/excessive space/ and don't use standard linear time deterministic selection algo"}
