{"i": "6556802862809088", "t": "write a program to give an array such that:\r1. the data value is from 1 to n\r2. the length of it is 2*n\r3. the two elements with same value keep the same number distance.\rfor example, when n = 3, the length of array is 6, the array should be like: 2, 3, 1, 2, 1, 3. there are two elements between \"2\" pair, and three elements between \"3\" pair and one element between \"1\" pair"}
{"i": "5698621152428032", "t": "The question was:\rWhat are general guidelines you follow while creating new classes in C++\r My answer:\r1. Keep variables pvt (use setter and getter methods)\r2. Use reference counting to do mem management, he asked me to use shared_ptr within the class"}
{"i": "6218115968925696", "t": "I have two arrays A and B(each containing 8 bit integers). Find the common elements between them.\rThe questions started out as a general discussion with the most inefficient method. Then the interviewer asked me to improve the solution (to give a NlogN and finally a linear time solution)"}
{"i": "5764501924216832", "t": "An extension of Dijkstra's algorithm:\r In a graph each vertex represents a city. \rAnd each edge defines the connectivity between two vertices. \rEach edge has two more information\r 1) the distance between the two vertices\r 2) A Boolean flag indicating if the destination is uphill or downhill to the source.\r One constraint: you can change the path from uphill to downhill or downhill to uphill only once.\rE.g: initially if you are going up the hill and at some point choosed to go down the hill, you can not change to take a path which is uphill again..\r Similarly you are going down the hill and at some point choosed to go up the hill, you can not change to take a path which is down hill again..\r O/P: find the shortest path between source to destination."}
{"i": "6291421799645184", "t": "Interview gave towers of Honai with 4 pegs namely: source, helper1, helper2, destination.\r What are the minimum number of steps to move N number of discs from source to destination.\r he was looking for a recursive function which defines the number of moves required for N and the minimum value for that function."}
{"i": "5760002811756544", "t": "Given a circular linked list with each node either r,g,y or b. number of nodes of each color are same. Arrange the nodes in a specified order. Eg. if list is like \"rrrgggyyybbb\" and order is \"rgyb\" then after rearrangement it should be \"rgybrgybrgybrgyb\". Just a bit more explanation...the question was given in form of students stading in a circular fashion and color denotes the club they are in. Hence adding new node or list is not possible."}
{"i": "5683354288521216", "t": "You are given a set of nodes, for e.g. 2, 3, 1, 4. Each of them is connected to all of others. There is no cycle, A node can send its value to other node.The receiver node can either overright its value with the new received value, or discard this new value or add this value to its existing value. You need to update each node to sum of all nodes. So for eg. 1, 2,3 4 the output shuold be 10, 10, 10, 10 in minimum no of time unit. One time unit is defined as time taken in one operation. This needs to be done in less then 2n operations."}
{"i": "5743493628559360", "t": "I  have been asked this question in written test. which pattern to use..\r Using Java create a simulation of a car park. The \rprogram will record vehicles entering and exiting the car \rpark, as well as the total balance of parking fees paid.\r Cars can park in the car park for $2 per hour.\rTrucks can park in the car park for $3 per hour.\r For example a car parked for 2 hours will pay $4\rand a truck parked for 2 hours will pay $6.\r The program can also be asked for a balance report that \rwill show how many vehicles have entered and exited, \rthe number of spaces available and how much money has \rbeen paid so far.\r Trucks take up 2 car spaces.\r The requirements for the interface:\r 1. The user records vehicles entering and exiting the \rcar park.\r2. Upon exiting the car park a time in whole hours \rspent in the car park is also entered.\r3. The user can request a balance report of the car park\r at any time.\r4. The program can be exited at any time.\r5. The program should validate user input.\r Provide a production ready solution including source \rfiles, project structure and any testing you have used.\r  Example #1\r --------------------------------------------------\r Program: How many spaces does the car park have?\r User: 10\r User: ENTER CAR\r User: ENTER TRUCK\r User: REPORT\r Program: \r Cars Entered: 1\rTrucks Entered: 1\rCars Exited: 0\rTrucks Exited: 0\rParking Cars: 1\rParking Trucks: 1\rSpaces available: 7\rFees paid: $0\r User: QUIT\r  Example #2\r --------------------------------------------------\r Program: How many spaces does the car park have?\r User: 15\r User: ENTER CAR\r User: ENTER TRUCK\r User: EXIT CAR 2\r User: REPORT\r Program: \r Cars Entered: 1\rTrucks Entered: 1\rCars Exited: 1\rTrucks Exited: 0\rParking Cars: 0\rParking Trucks: 1\rSpaces available: 13\rFees paid: $4\r User: QUIT"}
{"i": "5896837382799360", "t": "Machine Coding 1 hour \r------------------------------\rU have an organizational structure, which shows hierarchy of the organization. This hierarchy contains employees E or managers M who has some Employees or Managers reporting to M.\rEmployee has ( id, name, JobDesc, salary etc). \rDesign the data structure you would be using to store this hierarchy\r problem 1: Given an ID of an employee , print all the employee ID's who are directly reporting or indirectly reporting to the manager.\r problem 2: prefix search of employees by String. If employees have nishant and nikhil. If searched by \"ni\" we need to print all details of both nishant and nikhil.\r problem 3(bonus): search should print all emloyee's and their details if a given string is subString of the name of  an employee.(Like a phonebook contacts search)\r P.S- This was asked to one of my friend in Flipkart."}
{"i": "5649227149475840", "t": "Given an array of positive numbers, find the maximum sum of a subsequence with the constraint that no 2 numbers in the sequence should be adjacent in the array. \r You have to print the sub-sequence also."}
{"i": "5181298515640320", "t": "Generate all Kaprekar Number (refer Wiki for Kaprekar number's definition) from 1 to 999999.\r I gave a brute force approach of generating all number in the range and checking if it is Kaprekar or not."}
{"i": "5668311568220160", "t": "What approach you will take in migrating your production databases from MySql to Postgre SQL with zero downtime."}
{"i": "5645950492082176", "t": "i) Difference between HashMap & HashTable\r ii) How will you implement your own sorting algorithm in java?"}
{"i": "5664121559187456", "t": "Coin Change Problem\r-----------------------------\r Given an unlimited supply of coins of denominations C1, C2, ..., CN we wish to make change for a value V. Give an algorithm for producing change with minimum number of coins.\r You have to print the denominations selected."}
{"i": "5672810680680448", "t": "1  2  3\r4  5  6\r7  8  9\r*  0  #\r Given a starting number, find all 6-digit numbers possible, numbers can only be dialed horizontally or vertically. \rRepetitions not allowed. Number can't start from zero and doesn't include * and #. For example, if last dialed number \ris 3, the next one could be 1, 2, 6 or 9."}
{"i": "5082857865216000", "t": "For a given array with positive and negative element, find sub array with maximum sum. Sub array must have same sequence of element as that of parental array.\rEg: P = {4,6,-3,1,5,9,-2} then S ={4,6,-3,1,5,9} //Correct output."}
{"i": "5707569985224704", "t": "Construct an array of size 10 such that if a[x] =y then x should be repeated y times in that array. Eg: If a[1] = 2 then 1 should be present in that array 2 times."}
{"i": "5917525971828736", "t": "Given three strings a, b, c. Write a function to find the smallest subsequence in a, which contains all the characters from b but none from c.\r* b and c are mutually exclusive."}
{"i": "5629766652657664", "t": "Create a Employee Database for an organization. Each employee may or may not have a manager. One employee may have many subordinates. This can grow upto any level.\r * Find all the subordinates for a given employee.\r* Find the manager details of an employee.\r Assumptions:\r* Employee contains\rID: int (Unique)\rName: string\rDesignation: string\rEmail: string\r * One employee can have only one manager.\r* All the information is in-memory. No database needed."}
{"i": "5745799489126400", "t": "You want to create a staff to use in your martial arts training, and it has to meet some specific requirements.\r 1. You want it to be composed of two smaller staves of equal length so that you can either use it as a single staff or as two smaller ones.\r 2. You want the full sized staff's center of gravity to be exactly in the middle of the staff.\r You have a very, very long branch from which you can cut the pieces for your staff.  The mass of the branch varies significantly throughout it, so you use just any two pieces of the same length.  Given a description of the mass throughout the branch, determine the longest staff you can make, then return three integers on a single line, the first two indicating the first index of each half-staff, and the third indicating the length of each half-staff.\r The input will be given on a single line as a string of digits [1-9], each digit representing the mass of a section of the branch.  All sections are the same size and the maximum length of the string is 500. Here is an example:\r 41111921111119\r11119   11119\r If the indicated sections are cut from the branch they will satisfy your requirements.  They are both the same length, and they can be put together as either 9111111119 or 1111991111, both of which have a center of gravity exactly in the center of the staff.\r  Center of gravity can be determined by taking a weighted average of the mass of each section of the staff.  Given the following distances and masses:\rDistance: 12345678\rMass: 22241211\r \t  Sum of the mass of each section: 2 + 2 + 2 + 4 + 1 + 2 + 1 + 1 = 15\r\t  Weighted sum of the masses:\r\t\t  2*1 + 2*2 + 2*3 + 4*4 + 1*5 + 2*6 + 1*7 + 1*8 = 60\r\t\t\t  Weighted sum / regular sum = 60 / 15 = 4\r \t\t\t  This means that the center of mass is in section 4 of the staff.  If we wanted to use this staff the center of gravity would need to be (8+1)/2 = 4.5.\r \t\t\t  Here is an example problem:\r \t\t  131251141231\r\t\t\t  ----    ----\r \t\t\t  If we take the sections indicated we get 1312 and 1231.  By reversing the first one and putting them together we get 21311231\r \t\t\t  Sum of the mass of each section: 2 + 1 + 3 + 1 + 1 + 2 + 3 + 1 = 14\r\t\t\t  Weight sum of the masses:\r\t\t  2*1 + 1*2 + 3*3 + 1*4 + 1*5 + 2*6 + 3*7 + 1*8 = 63\r\t\t\t  Weighted sum / regular sum = 63 / 14 = 4.5\r \t\t\t  This puts the center of mass exactly in the center of the staff, for a perfectly balanced staff.  There isn't a longer staff that can be made from this, so the answer to this problem is\r \t\t\t  0 8 4\r \t\t\t  Because the half-staves begin at indices 0 and 8 (in that order) and each is of length 4."}
{"i": "5636238631501824", "t": "Code for computing a^b and optimize it."}
{"i": "5769129214607360", "t": "The nargin and nargout command returns the number of input and output respectively for a function.\rnargin is particularly useful when the input values are trivial. For example (0, 0) seems to be trivial\rinput in Q5. Modify the program so that the default value of (a,b) is (0,0) whenever it is not speci\ffed\rby the user.\rQ5:The following function is supposed to generate an array of Cartesian coordinates for a circle with\rradius r and centered at (a; b).\r function [x,y] = circle(r,theta)\rtheta = [0:pi/100:2*pi];\rx = r*cos(theta);\ry = r*sin(theta);\rend"}
{"i": "5756542007640064", "t": "Write a MATLAB function maxmin that returns the maximum and minimum value for an input array\rx as well as the indices that correspond to the maximum/minimum."}
{"i": "5710264003461120", "t": "Write a MATLAB function  that takes a matrix A as an input and returns it's diagonal part D,\rlower triangular part L and upper triangular part U."}
{"i": "5758972959129600", "t": "given a string determine which character appears the most and the number of times that character appeared."}
{"i": "5120149992505344", "t": "The buildings of an office are numbered sequentially. Person A is in building 1 and person B is in building 106. If A crosses 5 offices in a minute and B crosses 10 offices in a minute, at which office number will they both meet?"}
{"i": "6187918859173888", "t": "Find the next number in the series.\r -3, 6, -18, 72, - 360"}
{"i": "6130995107463168", "t": "Find the missing number in the series.\r3, 8 , 18 , _ , 78"}
{"i": "6206517812396032", "t": "A string 'aBlY' is said to be well ordered because the letters of the string occur one after the other in the alphabet. Write a function where the number of letters in the string are passes as parameter and all such well ordered strings are found."}
{"i": "6195959037952000", "t": "Let the user enter a decimal number. The range allowed is 0.0001 to 0.9999. Only four decimal places are allowed. The output should be an irreducible fraction.\rEg: If the user enters 0.35, the irreducible fraction will be 7/20."}
