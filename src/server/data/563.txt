{"i": "198725", "t": "implement dfs on binary tree without recursion"}
{"i": "198714", "t": "can we use conditional statements in switch case \rsay i<=10 && i>=0 can this be a particular case"}
{"i": "197704", "t": "what will be the o/p of print and why ?\rvoid main\r{\rchar *str=func();\rprintf(\"%c\",*str);\r}\rchar* func()\r{\rchar *mystr='a';\r return mystr;\r  }"}
{"i": "197703", "t": "what is the difference between these two lines \r int x=1;\rprintf(\"%d\",x);\rprintf(\"%c\",*(char*)&x);\r what will be o/p of each line explain in detail"}
{"i": "198712", "t": "using recursion print first n fabnnocci numbers. Remember we are not only finding nth fabinnocci number but we are also printing all the fabinnocci numbers"}
{"i": "198711", "t": "write c code for finding number of unique trees that can be made by n node binary tree"}
{"i": "198708", "t": "given an integer between 0-999,999 print an English phrase that describes the integer"}
{"i": "198707", "t": "ER diagram for a company which has people and professionals, investments in other companies"}
{"i": "198706", "t": "reverse singly linked list"}
{"i": "198705", "t": "Given two nodes P,Q on a tree, find the smallest subtree containing both of them. If p=q and also if p!=q4"}
{"i": "198698", "t": "Given 2 sorted array print their intersection."}
{"i": "198687", "t": "Write down the C code to remove the substring from the main string. This should be done recursively.\re.g\rmain string = \"hello xyydd\"\rsub string  = \"yd\"\ro/p = \"hello x\"\r#1 recursion o/p = \"hello xyd\" //first \"yd\" removed but it formed new matching substring that has to be removed in next recursion \r#2 o/p = \"hello x\""}
{"i": "198686", "t": "Find the rectangle of maximal area under a histogram."}
{"i": "197682", "t": "Mobile application with 3 screens.\r1.Login page.(contains username and password)\r2.Register page.(first name,lastname,username,password,retype password,mobile etc)\r3.Main page(textbox to enter phone number,textbox to send message,and submit button to send the message).\rRequirements : Maximum time to send message = 2minutes.\rMaximum time to get response = 2minutes\rMaximum numbers of users to support = 1000\rAnd only 20% of test automation.\r Come up with all the testcases that you test this applications?\rWhat are the performace testing you will do?\rWhat are the security testing you will do?"}
{"i": "198679", "t": "let there be a n x n matrix. two points say (a,b) and (c,d) are there in the matrix. find all the paths from point1 to point2 such that none of the path follows a diagonal path between the two points"}
{"i": "198669", "t": "how would you know if a map is corrupted?"}
{"i": "193748", "t": "do itoa in o(n)"}
{"i": "194732", "t": "There is a recursive function which takes 2d array as an argument. How to pass 2d array to this function"}
{"i": "194715", "t": "1) Type of stl containers\r2) difference in composition, agregation,association.\r3) Predicates\r4) Deadlock and Starvation\r5) Raised condition\r6) Diff in Conversion ctr and explicit ctr\r7) diff in has_map and map\r8) explain hash_map and bucketing\r9) virtaul inheritance, diamond problem\r10) function adaptors\r11) fucntors\r12) function objects\r13) in how many ways two classes A and B be related to each other.\r14) diff between vector and dqueue\r15) Repopulation of dqueue and its complexity.\r16) types of iterators\r17) how would you implement a map.\r18) concept of immutability."}
{"i": "193681", "t": "Given N points in a place with their (x,y) co-ordinates. Find two points with least distance between them."}
{"i": "194669", "t": "There are given n men and n women.\rEach woman ranks all men in order of her preference\r(her first choice, her second choice, and so on).\rSimilarly, each man sorts all women according to\rhis preference. The goal is to arrange n\rmarriages in such a way that if a man m\rprefers some woman w more than his wife, and w prefers m more then her husband a new marriage occurs between w and m. If w prefers her husband more, then she stays married to him. This problem always has a solution and your task is to find one."}
{"i": "193678", "t": "Johnny was asked by his math teacher to compute nn (n to the power of n, where n is an integer), and has to read his answer out loud. This is a bit of a tiring task, since the result is probably an extremely large number, and would certainly keep Johnny occupied for a while if he were to do it honestly. But Johnny knows that the teacher will certainly get bored when listening to his answer, and will sleep through most of it! So, Johnny feels he will get away with reading only the first k digits of the result before the teacher falls asleep, and then the last k digits when the teacher wakes up.\r Write a program to help Johnny to compute the digits he will need to read out."}
{"i": "194668", "t": "The Chef has one long loaf of bread. Let us say, of length 1. He wants to cut it into as many little loaves as he can. But he wants to adhere to the following rule: At any moment, the length of the longest loaf which he possesses may not be larger than the length of shortest one, times some constant factor. Every time, he is only allowed to cut exactly one loaf into two shorter ones.\rInput\r One floating-point number, 1 k 1.999, meaning the stated constant factor.\rOutput\r First, you should output one number n, the maximal achievable number of loaves for the given value of the constant factor. Then, you should output any proof that this number of loaves is in fact achievable: n-1 descriptions of cutting, using the following notation. At each step, you print two numbers: first, the index of the loaf that you want to cut into two parts; second, the length of the newly created loaf (cut off from the original one). It is assumed that the starting loaf has index 0. Each newly created loaf will be given the lowest possible free integer index (so, at the ith step this will be i). Each time, the size of size of the original loaf will be decreased by the size of the newly created loaf.\rExample\r Input:\r1.5\rOutput:\r4\r0 0.4\r0 0.3\r1 0.2"}
{"i": "194667", "t": "Your program will take as an input 'n' coordinates of type {(X1,Y1,Z1), (X2,Y2,Z2), (X3,Y3,Z3),...(Xn,Yn,Zn)} and from these 'n' coordinates print a list of 's' coordinates (where 's' is another input parameter less than 'n') which are closest to the origin (0,0,0) and a list of 't' coordinates (where 't' is another input parameter less than 'n') points closest to each other. Your solution should use an optimal strategy and minimal time / space complexity"}
{"i": "194666", "t": "Each cell of an N x N grid is either a 0 or a 1. You are given two such N x N grids, the initial grid and the final grid. There is a button against each row and each column of the initial N x N grid. Pressing a row-button toggles the values of all the cells in that row, and pressing a column-button toggles the values of all the cells in that column. You are required to find the minimum number of button presses required to transform the grid from the initial configuration to the final configuration, and the buttons that must be pressed in order to make this transformation."}
{"i": "194664", "t": "int * p= NULL;\rp = (int*) malloc(0);\r what will be the value of p?"}
{"i": "192847", "t": "How would you traverse a linked list with complexity O(n^0.5)?"}
{"i": "191798", "t": "Given a sorted array A, how will you find out elements in that array (a,b,c) such that the sum of the squares of a and b is the square of c? You need to do it in O(n^2)"}
{"i": "192816", "t": "Median of BST in O(logn)"}
{"i": "192799", "t": "Write a program htoi(char *) to convert a given hexadecimal value to decimal."}
