{"i": "5633203023380480", "t": "logical questions I have two container 2lit and 4lit. i have to fill 3litre  with efficiently. how do yu fill it"}
{"i": "5680456320679936", "t": "Given a text file - find out all the unique words and display the frequency of each word in descending order."}
{"i": "6600973944881152", "t": "Given a input string 'Hello World' and a input reference String, give count of each character (from refString) in the given string \rEg inputString: \"Hello World Please\", refString: \"Help\"\rOutput: H: 1, e: 3, l: 4, p: 1"}
{"i": "5691711416696832", "t": "Average Marks of Lowest ID Student:\r In this problem, you have to write a program that reads a file containing scores received by students in a number of\rsubjects, and does some processing on it.\rThe input is being read in from a file called input.txt, in this format:\r22, Data Structures, 45\r23, English, 52\r22, English, 51\r26, Data Structures, 72\r23, Data Structures, 61\r24, English, 81\r Each line consists of three fields \"Student ID,\" \"Subject,\" and \"Marks.\" \"Student ID\" and \"Marks\" are integers and\r\"Subject\" is a string that does not contain commas or newlines. There can be any number of students and up to 6 subjects.\r Your program should read this file, compute the average marks scored across all subjects by the student with the lowest ID, and write the average marks to a file called output.txt.\rFor example, if your program is run with the input given above, then at the end the file output.txt should contain just\r48. That's because 48 is the average of the marks received by the student with ID 22 (which is the lowest ID).\r ***Need code in python****"}
{"i": "5712274042388480", "t": "An input file called input.txt consists of data in the following format: \r 22 Data Structures 45 \r23 Maths 2 52 \r23 Maths 3 57 \r22 English 51 \r26 Data Structures 72 \r23 Data Structures 63 \r26 English 81 \rEach line consists of three fields \"Student ID,\" \"Subject,\" and \"Marks.\" \"Student ID\" and \"Marks\" are integers and \"Subject\" is a string that does not contain '|' or newlines (but might contain digits). There can be any number of students and up to 6 subjects. You have to read this file, and print the average marks in \"Data Structures,\" across all students. \r  ***I need code in python***"}
{"i": "5670248861138944", "t": "Given a string s consisting of items as \"*\" and closed compartments as an open and close \"|\", an array of starting indices startIndices, and an array of ending indices endIndices, determine the number of items in closed compartments within the substring between the two indices, inclusive.\r An item is represented as an asterisk ('*' = ascii decimal 42)\rA compartment is represented as a pair of pipes that may or may not have items between them ('|' = ascii decimal 124).\rExample\r s = '|**|*|*'\r startIndices = [1, 1]\r endIndices = [5, 6]\r The string has a total of 2 closed compartments, one with 2 items and one with 1 item. For the first pair of indices, (1, 5), the substring is '|**|*'. There are 2 items in a compartment.\r For the second pair of indices, (1, 6), the substring is '|**|*|' and there are 2 + 1 = 3 items in compartments.\r Both of the answers are returned in an array, [2, 3].\r Function Description .\r Complete the numberOfItems function in the editor below. The function must return an integer array that contains the results for each of the startIndices[i] and endIndices[i] pairs.\r numberOfItems has three parameters:\r   -  s: A string to evaluate\r   -  startIndices: An integer array, the starting indices.\r   -  endIndices: An integer array, the ending indices.\r Constraints\r 1 \u2264 m, n \u2264 105\r1 \u2264 startIndices[i] \u2264 endIndices[i] \u2264 n\rEach character of s is either '*' or '|'\rInput Format For Custom Testing\r The first line contains a string, s.\r The next line contains an integer, n, the number of elements in startIndices.\r Each line i of the n subsequent lines (where 1 \u2264 i \u2264 n) contains an integer, startIndices[i].\r The next line repeats the integer, n, the number of elements in endIndices.\r Each line i of the n subsequent lines (where 1 \u2264 i \u2264 n) contains an integer, endIndices[i].\r Sample Case 0\r Sample Input For Custom Testing\r STDIN         Function \r-----         --------\r*|*|      \u2192   s = \"*|*|\"\r1         \u2192   startIndices[] size n = 1\r1         \u2192   startIndices = 1\r1         \u2192   endIndices[] size n = 1\r3         \u2192   endIndices = 3\rSample Output\r 0\rExplanation\r s = *|*|\r n = 1\r startIndices = [1]\r n = 1\r startIndices = [3]\r The substring from index = 1 to index = 3 is '*|*'. There is no compartments in this string.\r Sample Case 1\r Sample Input For Custom Testing\r STDIN         Function\r-----         --------\r*|*|*|    \u2192   s = \"*|*|*|\"\r1         \u2192   startIndices[] size n = 1 \r1         \u2192   startIndices = 1\r1         \u2192   endIndices[] size n = 1\r6         \u2192   endIndices = 6\rSample Output\r 2\rExplanation\r s = '*|*|*|'\r n = 1\r startIndices = [1]\r n = 1\r endIndices = [6]\r The string from index = 1 to index = 6 is '*|*|*|'. There are two compartments in this string at (index = 2, index = 4) and (index = 4, index = 6). There are 2 items between these compartments."}
{"i": "5768335512305664", "t": "ELK related questions especially on optimizing logging"}
{"i": "5695062262939648", "t": "Design a Nearby shops features for online map service provider."}
{"i": "5733957486772224", "t": "Design a system to find top 10 sold products for an online website at any point of time for last 15 minutes.\r Which data structure & algorithm would be the best to design such kind of systems?"}
{"i": "5633331603963904", "t": "You are given a directed cyclic graph represented by an adjacency matrix. The graph has at least one terminal node (i.e. the node with no outgoing edges). \r Each edge of the graph is assigned a positive integer representing a probability of taking this edge. E.g. if you have 3 outgoing edges with numbers 3, 2, and 4, this means that the prob. of taking these edges are: 3/9, 2/9 and 4/9, respectively.\r You need to find the probability of reaching each terminal node from the starting node 0.\r Example:\radjacency matrix 5x5:m = {{0 1 0 0 1},\r\n        {0 0 3 2 0},\r\n        {4 0 0 1 0},\r\n        {0 0 0 0 0},\r\n        {0 0 0 0 0}}so we have two terminal nodes here: 3 and 4\rwe can take the following paths:\r0 -> 1 -> 3 = probability: 1/2*2/5 = 1/5\r0 -> 1 -> 2 -> 3 = probability: 1/2*3/5*1/5 = 3/50\r0 -> 1 -> 2 -> 0 -> 1 -> 3 ... and so on\r or to the node 4:\r0 -> 4: probability: 1/2\r0 -> 1 -> 2 -> 0 -> 4: probability 1/2*3/5*4/5*1/2 = 3/25\r and so on, summing up probabilities of all possible paths we get:\rtotal probability to reach node 3: 13/38\rtotal probability to reach node 4: 25/38"}
{"i": "5171970981756928", "t": "Say that you have p1(Child) - > a & b and p2 (Child) -> c & d.  Which return list  p1 and p2 child and see p1 and p2 are related. We need to check if they going over the tree.  \r Inupt assumption is : p1 -> a & b \r                                  p2 -> c & d \r      a - it own parent & b - it own parent\r      c - it own parent & d - it own parent       and so on."}
{"i": "5714238855708672", "t": "Suppose we have some input data describing a graph of relationships between parents and children over multiple generations. The data is formatted as a list of (parent, child) pairs, where each individual is assigned a unique positive integer identifier.\r <p>\r For example, in this diagram, 3 is a child of 1 and 2, and 5 is a child of 4:\r <p>\r 1   2    4   15\r \\ /   / | \\ /\r 3   5  8  9\r \\ / \\     \\\r 6   7    11\r <p>\r <p>\r Sample input/output (pseudodata):\r <p>\r parentChildPairs = [\r (1, 3), (2, 3), (3, 6), (5, 6), (15, 9),\r (5, 7), (4, 5), (4, 8), (4, 9), (9, 11)\r ]\r <p>\r <p>\r Write a function that takes this data as input and returns two collections: one containing all individuals with zero known parents, and one containing all individuals with exactly one known parent.\r <p>\r <p>\r Output may be in any order:\r <p>\r findNodesWithZeroAndOneParents(parentChildPairs) => [\r [1, 2, 4, 15],       // Individuals with zero parents\r [5, 7, 8, 11]        // Individuals with exactly one parent\r ]\r <p>\rn: number of pairs in the inputpublic static void main(String[] argv) {\r\n        int[][] parentChildPairs = new int[][]{\r\n                {1, 3},\r\n                {2, 3},\r\n                {3, 6},\r\n                {5, 6},\r\n                {15, 9},\r\n                {5, 7},\r\n                {4, 5},\r\n                {4, 8},\r\n                {4, 9},\r\n                {9, 11}};\r\n        findNodesWithZeroAndOneParents(parentChildPairs);\r\n    }\r\n\r\n    public static void findNodesWithZeroAndOneParents(int[][] parentChildPairs) {\r\n        Map<Integer, List<Integer>> childAncestor = new HashMap<>();\r\n        for (int[] parentChildPair : parentChildPairs) {\r\n            int parent = parentChildPair[0];\r\n            int child = parentChildPair[1];\r\n            if (!childAncestor.containsKey(child)) {\r\n                childAncestor.put(child, new ArrayList<>());\r\n            }\r\n            List<Integer> parentValue = childAncestor.get(child);\r\n            parentValue.add(parent);\r\n            childAncestor.put(child, parentValue);\r\n        }\r\n        System.out.println(childAncestor.toString());\r\n\r\n        dfs(childAncestor);\r\n    }\r\n\r\n    private static void dfs(Map<Integer, List<Integer>> childAncestor) {\r\n        Set<Integer> childerOneParent = new HashSet<>();\r\n        Set<Integer> parentWithOutParent = new HashSet<>();\r\n        for (Map.Entry<Integer, List<Integer>> parent : childAncestor.entrySet()) {\r\n            if (parent.getValue().size() == 1) {\r\n                childerOneParent.add(parent.getKey());\r\n            }\r\n            List<Integer> part = parent.getValue();\r\n            for (Integer p : part) {\r\n                if (!childAncestor.containsKey(p)) {\r\n                    parentWithOutParent.add(p);\r\n                }\r\n            }\r\n        }\r\n        System.out.println(childerOneParent.toString() + \" / \" + parentWithOutParent.toString());\r\n    }\r\n}"}
{"i": "5634686599036928", "t": "22)\tWhat is the advantage of collapsing white space?"}
{"i": "4838470596427776", "t": "21)\t What are Web Workers?"}
{"i": "5107475152371712", "t": "20)\t. Is the <!DOCTYPE html> tag considered as a HTML tag?"}
{"i": "6614880881213440", "t": "19)\tHow to handle events in HTML?"}
{"i": "6514479846653952", "t": "18)\tWhat type of audio files can be played using HTML?"}
{"i": "5705433904316416", "t": "17) Difference between SVG and Canvas HTML element?"}
{"i": "4508786692194304", "t": "16) Define multipart form data?"}
{"i": "4664792722178048", "t": "15)\tWhat are forms and how to create forms in HTML?"}
{"i": "6146647858348032", "t": "14)\tHow to include javascript code in HTML?"}
{"i": "6393688253530112", "t": "13)\tWhat is the \u2018class\u2019 attribute in HTML?"}
{"i": "5634872423481344", "t": "12)\tWhat is the difference between <meter> tag and <progress> tag?"}
{"i": "5168991885066240", "t": "11)\t How to specify the link in HTML and explain the target attribute?"}
{"i": "4613185603108864", "t": "10)\t Is it possible to change an inline element into a block level element?"}
{"i": "5480587551309824", "t": "9)\tHow can we club two or more rows or columns into a single row or column in an HTML table?"}
{"i": "5365340005990400", "t": "8)\tHow is Cell Padding different from Cell Spacing?"}
{"i": "5385063703773184", "t": "7)\tConvert the below data into Tabular format in HTML?"}
{"i": "6651024574513152", "t": "6)\tInline and block elements in HTML?"}
{"i": "5737570929999872", "t": "5)\tWhat are void elements in HTML?"}
