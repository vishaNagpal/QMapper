{"i": "9059144", "t": "Write a function which takes two arrays of equal size as input and makes averages of those two arrays equal.Or rather sum equal"}
{"i": "9075110", "t": "How to check a tree is balanced? what if it is not BST?"}
{"i": "9064049", "t": "Given an N arrays of size K each.. each of these K elements in the N\rarrays are sorted, each of  these N*K elements are unique. Choose a\rsingle element from each of the N arrays, from the chosen subset of N\relements. Subtract the minimum and maximum element. Now, this\rdifference should be least possible minimum.. Hope the problem is\rclear :) :)\r Sample:\r N=3, K=3\r N=1 :  6, 16, 67\rN=2 :  11,17,68\rN=3 :  10, 15, 100\r here if 16, 17, 15 are chosen.. we get the minimum difference as\r17-15=2."}
{"i": "9063940", "t": "Find a element in binary tree?"}
{"i": "9063778", "t": "It was for the preliminary phone interview question.\r Find the shortest distance between two nodes in a binary tree.\r My answer has two other helper functions to make it clean.\rThe first function is node* GetCommonDenomination( node* root, node* n1, node* 2) and the second function is int GetDist( node* hd, node* nde)\r First I got the common denominator between two nodes and add the distances between commondenominator to node1 and commondenominator to node2.\r The interviewer asked me if there is anything to improve and possible error cases.  I thought that I gave him the complete answer for the question but they didn't call me for the followup.\r What do you think of the problem?  Can you guys think of any better answer for that?"}
{"i": "9058706", "t": "When is a template a better solution than a base class?"}
{"i": "9030757", "t": "Hello\r Suppose I have set of files and in every files there are include# to other files in the same set.Suppose I have function that load all the includes in certain file.I need to write function that load all the includes in some given source file so I will avoid infinite loop and circular call for the include.\r To solve the question I have to use this function i can't use pragma once or something similar I think it could be solved by recursion though I am not sure how\r Thank you"}
{"i": "8968675", "t": "There is an Array with positive and negative integers randomly distributed. find the maximum sum of a subset of this array. (subset could contain any number of elements but not the adjacent elements). Follow up, what is the complexity of your algo.\rYou can use additional Datastructures if you want."}
{"i": "8973666", "t": "There is a linkedlist. Each node in the linked list has a pointer to next and some arbitary.\r normal next 1-->2-->3-->4-->5-->6\r arbitrary links 1-->3-->6-->2-->5-->4\r  something like above. Make a copy of this linked list. Follow up what is the complexity (time,space) the complexity (time,space)"}
{"i": "8976422", "t": "There are N stones in front of you. You and your opponent have to play a game. Anyone who plays next can take 1 or 2 stones from the pile of stones and leave the rest of the pile to be taken by the next guy. Whoever picks the last stone wins according to the rule. You are allowed to choose whether you should start the game or the other guy should start. How will you make a winning strategy out of it such that you always win the game."}
{"i": "8978411", "t": "Design a system that manages the inflow/outflow of the messages in an email."}
{"i": "8978410", "t": "You have a list of jobs that need to be scheduled. For each job, you know when it should start and when it should end. You need to come up with an algorithm to schedule the maximum number of jobs possible."}
{"i": "8972528", "t": "Simulate Friend recommendation system in a social network. Propose various heuristics for the same and how will you manage the tables."}
{"i": "8975427", "t": "You are given an array of size n (may be a stream also). You have a sliding window of size k. The window first boxes the first k elements of the array and slides slowly over the array by shifting its position 1 element each time. At each position of the array, you need to find the minimum element in the sliding window. i.e. you need to give the minimum of 0 to k-1 elements, then 1 to k elements, 2 to k+1 elements etc. So if your array's size is n, you have to give me n-k+1 minimum values.\rE.g. Assume that the array is 5,1,3,2,6,8,4,6, and the window size is 3\rYou should give me 1,1,2,2,4,4. How will you give it?"}
{"i": "8972527", "t": "You are given a large string. You need to cut the string into chunks such that each substring that you get is a palindrome. Remember that each 1 length string is always a palindrome. You need to find the minimum number of cuts that you need to make such that each substring is a palindrome."}
{"i": "8972521", "t": "Write algorithms to implement the following operations on a stack \rpop"}
{"i": "8971927", "t": "what is the difference betweenT *o = new T\r\nand\r\nT *o = new T()"}
{"i": "8954732", "t": "suppose You have a billion urls, where each is a huge page. How do you\rdetect the duplicate documents?\ron what  criteria you will detect it, what algorithm , approach ,\rwhats will be the complexity of each approach\ras it has many application in computer science ...\rA good discussion on this topic"}
{"i": "8909414", "t": "how do we return value from a function from a recursive function and we should be able to return value as soon as particular value is encountered"}
{"i": "8951475", "t": "how to print out the nodes of link list that has loop in it ?"}
{"i": "8950706", "t": "Given an array of elements and a value.....see that the sum of two elements of an array are equal to the value with minimum loop"}
{"i": "8916771", "t": "Design a parking lot class."}
{"i": "8915782", "t": "Write a java program which will return word equivalent of a number. For example if input is 101, it should return \"One hundred and one\""}
{"i": "8909783", "t": "What is \"Final\" and \"finally\" in Java ?"}
{"i": "8885784", "t": "F2F 4 - Code and Design : implement bounded LRUcache"}
{"i": "8888700", "t": "F2F 3 - Code : roman numeral to integer, assume valid roman input string (I,V,X etc)\rCode : find unique elements and number of times they are occurring in an array of integers"}
{"i": "8888699", "t": "F2F 2 - Code : nth prime number\rDesign : find top k, n page sequence visited by logged user from server log data file containing fields UID, timestamp and URLs"}
{"i": "8885783", "t": "F2F 1 - Code : 2nd largest element in a binary search tree\rDesign : Vending machine\r Alogorithm:\r Perform the inorder traversal and then the second element from the last will be 2nd largest element."}
{"i": "8886769", "t": "Phone 2 - Code : Given array and elements that are occurring even number of times and one occurring odd number of times, find number occurring odd.\rFollow-up - Code : write algo other than XOR"}
{"i": "8883835", "t": "Phone 1 - Code : Array of integers and target number, find if sum of any two numbers in the array is the target. Followup - assume numbers in array are not unique\rDesign : Game of Chess"}
