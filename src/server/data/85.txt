{"i": "5076099007512576", "t": "There are some professors, some courses, and some students.\rEach professor can teach only a single course.\rEach course has a fixed duration(Eg. 10 weeks).\rFor each professor, you are given time availability schedule(assume week wise).\rEach student has a list of courses he wants to learn.\rThere can be only 1:1 classes, i.e., 1 professor can teach only a single student.\rA student can attend only one course at a time.\rA professor has to finish teaching a course in a one go.\r Your aim is to prepare a schedule so that all courses are taught in the least time."}
{"i": "4879927785553920", "t": "Given a stream of numbers which contains n numbers, each number is positioned at max k positions away from its actual position. Sort the array in the most optimized way."}
{"i": "5102048663044096", "t": "Implement a queue using only one stack."}
{"i": "5142077758242816", "t": "It\u2019s a two player game. Both the players are equally intelligent to win the game. Give n no. of stones. A player can choose either 1 stone or k stones or l stone (1<k<l). Suppose player 'A' starts game then challenge was to identify the player who will win the game. Player who picks the last 1 stone or last k stone or last l stones win the game."}
{"i": "5734140610609152", "t": "Design bus booking system:- Each row has x seat. If customer wants K seats if you have K consecutive seats available, reserve them. Otherwise give seats from any row."}
{"i": "5664998616465408", "t": "There is a bridge and N no. people takes (a1,a2,\u2014an) time to cross it and there are K torch and at any time x no of people can pass the bridge and it takes maximum of x people time to cross it. Minimum time required for N persons to cross the bridge."}
{"i": "5705027711664128", "t": "There is a graph where each node represents a city and it contains specific no. of people. A tournament is going on and each match is playing in one city. All city\u2019s people gather to watch match. Traffic department wants to manage how many people travel through city x if match is playing in city y for each x. City x and y can be any city."}
{"i": "6302562352365568", "t": "Given an Infinite stream of strings as AAAAABBBCCDDDEEE\u2026 How will you arrange characters so that string become unique without duplicates . \r Return true if it is possible to arrange else return -1.\r  Ex . AAABBCCDEF \u2013 O/p ABABCDCEF : Possible . AAAAAAAAAAAAAAAAAAAAAAB : Not possible"}
{"i": "5670946206646272", "t": "Given an array of integers, replace every number with the next higher number to its right. If a number can\u2019t be replaced, we leave it as-it is.\rFor example, the list: 5, 2, 1, 4, 6, 7 needs to be changed to 6, 4, 4, 6, 7, 7."}
{"i": "5711289505546240", "t": "Given two unsorted arrays A, B. They can contain duplicates. For each element in A count elements less than or equal to it in array B\r Examples:\r Input : A = [1, 2, 3, 4, 7, 9]\r        B = [0, 1, 2, 1, 1, 4]\rOutput : [4, 5, 5, 6, 6, 6]"}
{"i": "5755380297629696", "t": "Got Sp00ked by MS simple question..\r Eight Ball problem, find Minimum steps to determine the heaviest one.\r Anyone know the answer is 2 in case of 8 balls.. Question is code getHeavy when number of balls are not determined.\r int getHeavy(List<Integer> balls){\r // Your solution\r}"}
{"i": "5130158150254592", "t": "How do I design a Payment Gateway system? What are the things to consider in this design ?"}
{"i": "5709527025451008", "t": "Design a system to find top 10 twitter hashtags in the most recent 1 min, 10 min, 1 hr"}
{"i": "5666143225249792", "t": "x=10 ,y=20\rx=x++ + ++y;\ry=y++ + ++x\routput?"}
{"i": "5640041433923584", "t": "In Docker, building an image has dependencies. An image can only be built once \rits dependency is built (If the dependency is from outside, then the image can\r be built immediately). \r Sometimes, engineers make mistakes by forming a cycle dependency of local images. \rIn this case, ignore the cycle and all the images depending on this cycle.\r Input is vector of pair of images (image, its dependency).\r Output the order of images to be built in order.\r ##Example:\r```\rExample 1:\r{{\"master\", \"ubuntu\"}, {\"numpy\", \"master\"}, {\"tensorflow\", \"numpy\"}}\rOutput: master, numpy, tensorflow \r Example 2:\r{{\"python\", \"numpy\"}, {\"numpy\", \"python\"}, {\"tensorflow\", \"ubuntu\"}}\rOutput: tensorflow\r Example 3:\r{{\"b\", \"c\"}, {\"c\", \"d\"}, {\"a\", \"b\"}, {\"d\", \"e\"}, {\"e\",\"c\"}, {\"f\", \"g\"}}\rOuput: f"}
{"i": "5644453640404992", "t": "There are n servers, reboot time is S0, S1..Sn-1\rThere are m tasks, the completion of the time required are T0, T1\u2026  Tm-1\rHow to assign tasks to each server makes the total time the shortest"}
{"i": "5641027330244608", "t": "Your input is a double array, and you can use *, +, -, and () parenthesis anywhere to create and output the maximum possible value.\r Ex: \rinput is  {3,4,5,1} --> output: 72\rinput is  {1,1,1,5} --> output: 15 \r Follow up, if there are numbers <0"}
{"i": "5741535269224448", "t": "Today Google phone interview I was asked to code multithreading solution to return union of two sorted arrays in java for given number of processors. Does anybody can provide a short neat code sample om that?"}
{"i": "5123820187811840", "t": "Write a logic to print the elements of 2D matrix in a spiral way?\r for eg if int[][] matrix = {{1,2,3,4}{5.6,7,8}{9, 10, 11,12}};\rThe output should be 1 2 3 4 8 12 11 10 9 5 6 7\rThe interviewer asked me to implement a recursive algorithm."}
{"i": "5748062545772544", "t": "Given a continuous stream of numbers, write a logic to find k maximum numbers at any given point of time where k is fixed?"}
{"i": "5740330195353600", "t": "Given some set of points in each quadrant of a 2D graph and two edges at a fixed angle, find the minimum angle at which the edges would cover maximum points between them?\r I was confused on how to start and interviewer hinted me to consider each point at some angle from base (say 0) and continue finding all points which lies within the fixed angle."}
{"i": "5744859842347008", "t": "What is the output for the following code\r +>+>)+)+)+++)++++((((-[!)>->.\r+\"+\"===================#+\".\")\r+++!((+++++++++)++++++)<.---+\r++=#===================\")---.\r++((.-(.)).+++..+++++++.<---\r !+======================---\r=#>++++++++++++++.).+++.-!>!\r  =======================#=#"}
{"i": "5648856048992256", "t": "Given an array with +ve and -ve integer, find the maximum sum such that you are not allowed to skip 2 contiguous elements ( i.e you have to select at least one of them to move forward).\r Test Cases:\r10 , 20 , 30, -10 , -50 , 40 , -50, -1, -3\rOutput : 10+20+30-10+40-1 = 89\r-1,-2,-3,-4,-5\rOutput: -2-4=-6"}
{"i": "5631199706873856", "t": "Given a dictionary containing some words, and a start word and end word, you need to find the minimum number of conversion needed to convert start word to end word with the following restrictions :-\r1. Each intermediate word must be in the dictionary\r2. You can change only one character in the word to convert to another word.\r Example If You are given start word as \u2018SAT\u2019 and end word as \u2018PAN\rand the dictionary contains words = [\u2018RAT\u2019,\u2019PAT\u2019,\u2019DAM\u2019]\r then SAT -> PAT ->PAN is the answer."}
{"i": "5730612362084352", "t": "WAP to Convert Hex String to Equivalent decimal  Integer."}
{"i": "5755250710413312", "t": "Given a matrix which each element can be the following:\r0: not walkable\r1: walkable\rn: Integer  > 1 and is distinct in matrix\r Find the minimum number of path it takes to visit each n in ascending order starting from matrix[0][0].  Note matrix[0][0] will always be 1. Allowed moves are (up,right,down,left);\r Example:input: [ \r\n [1,1,0,5]\r\n [0,1,1,4]\r\n]\r\n\r\nOutput: 5.Starting from position (0,0) we need to visit next smallest n which is 4. Min Distance from (0,0) to (1,3) is 4. \rStarting from position (1,3) we need to visit next smallest n which is 5. Min Distance from (1,3) to (0,3) is 1. \rTotal Min Distance is 4 + 1 = 5\r  Edit:\r Allowed moves are [up,right,down,left]"}
{"i": "5689623610130432", "t": "Given an array of objects with a known set of properties , implement a function that finds all possible partial matches (one object's property value matches the same property on another object), and produce a results object that describes those matches in any format you want."}
{"i": "5699583505072128", "t": "Given an unsorted array of integers, find the length of the longest consecutive elements sequence.\r For example,\r Given [100, 4, 200, 1, 3, 2],\rThe longest consecutive elements sequence is [1, 2, 3, 4]. \rReturn its length: 4.\r Your algorithm should run in O(n) complexity."}
{"i": "5660482122809344", "t": "Given a binary tree, how do you serialize and deserialize. Remember it is not BST it is a general binary tree which can also have duplicate elements."}
{"i": "5766709683159040", "t": "The stock exchanges work with price matching. A seller comes with a price, and a buyer, given asking for the exact same price are matched, and in quantity.\r Design a system that works. \rConsiderations:\r1. More than a million buy/sale happens in a second.\r2. One needs to show a ticker prices - last sold price of a stock."}
