{"i": "236761", "t": "Given two buffers; how would you deduce whether or not they are overlapping?\r At the end of the discussion; he showed me a one line code for that."}
{"i": "237724", "t": "Imagine a system where gas service to homes is controlled by a server of a service provider. How would you create a secure protocol for transfer of msgs. between this server and the apparatus at every home? \rAssumption - The apparatus is secure and couldn't be hacked."}
{"i": "237693", "t": "Given an integer, print the closest number to it that is a palindrome - eg, the number \"1224\" would return \"1221\"."}
{"i": "237687", "t": "Which of the following will not add john to the users array?\r          1. $users[] = 'john';\r         2. array_add($users,'john');\r         3. array_push($users,'john');\r         4. $users ||= 'john';"}
{"i": "237686", "t": "Five boxes, A through E, are stacked in alphabetical order with box A on top. The bottom three boxes are simultaneously removed and placed on top with their vertical order maintained. If this procedure were repeated two more times which box would end up in the middle of the stack? \r Box E\rBox D\rBox C\rBox A\rBox B"}
{"i": "236718", "t": "what is the diff between static and dynamic power"}
{"i": "236696", "t": "# Given a string *Str of ASCII characters, write the pseudo code to remove the duplicate elements present in them. For example, if the given string is \"Potato\", then, the output has to be \"Pota\". Additional constraint is, the algorithm has to be in-place( no extra data structures allowed) . Extend your algorithm to remove duplicates in the string which consisted of UNICODE characters."}
{"i": "235700", "t": "# Given that, there are 2 linked lists L1 and L2. The algorithm finds the intersection of the two linked lists. i.e' \"L1 intersection L2 \" ( similar to intersection of 2 sets ). Write all the possible test cases involved in the above given problem."}
{"i": "236691", "t": "U have one String s1=\"WritingCode\" and S2=\"Code Writing\". write one code which will check all the contents of s1 is present in the String s2.use index of Operator and set a flag at class lavel, if the the index== -1; set flag, break;\rdon't use substring or contains(chSeeq)"}
{"i": "235697", "t": "write a method to calculate the acute angle between a clock: clock(int hours, int minutes)in java.My suggestion is to attemp these programmes 1st.public int clock(int hours, int minutes){// 360/12 = 30 360/60 = 6\rint angle = ((hours*30 - minutes *6)<0 )? minutes *6 - hours*30 : hours*30 - minutes *6 ;\rangle = (angle > 180)? 360-angle: angle;return minutes;}"}
{"i": "236689", "t": "U have one String s1=\"WritingCode\" and S2=\"Code Writing\". write one code which will check all the contents of s1 is present in the String s2.\r use index of Operator and set a flag at class lavel, if the the index== -1; set flag, break;\r don't use substring or contains(chSeeq)"}
{"i": "235696", "t": "write a method to calculate the acute angle between a clock: clock(int hours, int minutes)in java.\r My suggestion is to attemp these programmes 1st.\r public int clock(int hours, int minutes){\r\t// 360/12 = 30 360/60 = 6\r\tint angle = ((hours*30 - minutes *6)<0 )? minutes *6 - hours*30 : hours*30 - minutes *6 ;\r\tangle = (angle > 180)? 360-angle: angle;\t\r\treturn minutes;\t\t\r\t}"}
{"i": "235675", "t": "design hash table"}
{"i": "235674", "t": "reverse linked list"}
{"i": "235673", "t": "mth element from last in linked list"}
{"i": "236668", "t": "you have infinite integers arriving  in a stream.  \rfind duplicates  in them."}
{"i": "230797", "t": "explain what is done in compilation phase and what is done in linking phase and where does assembler comes into picture if at all ?"}
{"i": "230796", "t": "what will happen if process without any children executed thread_join"}
{"i": "231775", "t": "you have an eight bit multiply operator that takes two 8 bit numbers and returns a 16 bit value. Given two 16 bit values stored in 32 bit int variables, find the product using the\r8 bit multiply operator."}
{"i": "230781", "t": "is this valid syntax in 'C' \r int a[10];\ra = a + 1;"}
{"i": "231774", "t": "swap bits in position i and j for a number....in the most efficient way...."}
{"i": "230780", "t": "code to remove duplicate characters in a string."}
{"i": "230779", "t": "3. printing a number in a matrix in snake like order"}
{"i": "230778", "t": "2. counting number of binary 1s in a number."}
{"i": "230777", "t": "C coding \r 1.calculating power( M, N ) in log N time, power( 2, N ), finding if a number is power of \r'2'"}
{"i": "231773", "t": "3. printing a number in a matrix in snake like order"}
{"i": "231772", "t": "2. counting number of binary 1s in a number."}
{"i": "230776", "t": "C coding \r 1.calculating power( M, N ) in log N time, power( 2, N ), finding if a number is power of \r'2'"}
{"i": "230751", "t": "WHY CONSTRUCTORS NEED NOT TO BE DECALRED AS VIRTUAL"}
{"i": "231742", "t": "can process which is sleeping at uninterruptible priority be interrupted by higher priority process"}
