{"i": "6205601070710784", "t": "Design calculator and related class, which returns result of the given expression, e.g if input is (3* 3) + 2  it returns 11.\r Identify different OOPS classes and how would you call them."}
{"i": "5713021740515328", "t": "Given two positive integers represented as linked lists, provide the sum of the numbers as a linked list.1->2->3\r\n4->5->6\r\n-----------\r\n5->7->9\r\n\r\n1->2->3\r\n4->5\r\n-----------\r\n1->6->8\r\n\r\n4->5->6\r\n7->8->9\r\n-----------\r\n1->2->4->5"}
{"i": "5852943185084416", "t": "Why facebook?\rWhat was the biggest technical problem that you solved?\rDo you have any apps on google play?\rGive me a scenario where the requirements were ambiguous, what did you do?"}
{"i": "5116596073791488", "t": "Design Instagram like app end to end"}
{"i": "4741489669177344", "t": "Given a string \"L*&EVe)))l\", write a method which will determine if the input is a palindrome. Ignore all special characters. Uppercase/lowercase should be considered as same."}
{"i": "5718065105862656", "t": "Imagine a room full of people, with only 1 celebrity in the room. Celebrity is defined as a person who does not know anyone, but everyone knows him/her. Write a method who will take array of people and a person as input and return boolean if the person is a celebrity or not."}
{"i": "5101488526327808", "t": "A bus has to travel from A to B and the distance is d miles. There are many gas stations between A and B. \rThe bus has initially g gallon of gas in tank. 1 gallon of gas travels 1 mile.\rGas stations have inforamtion of remaining distance from station to destination b and max gas that can be filled from the station.\rFind the minimum number of stops for bus without running out of gas ever.\r eg: gas = 10 , distance = 20\rgasStation[] = {{16,3}, {10, 7}, {14, 11},{11, 5}, {7, 6}}\r o/p = 1 \rIf bus stops at the stop{14,11} that is 14 miles away from destination and fills 11 gallon then it can reach destination with 1 gallon spare.\rIt can also stop as {16,3} and {10,7} but its 2 stops and at destination it runs out of gas.\rSimilarly {11, 5}, {7, 6} has 2 stops but has 1 gallon spare at destination."}
{"i": "5725463187030016", "t": "Feb On-site Google \r  DP Problem. Given the length and width of a matrix, get the number of paths from bottom-left to bottom right.\r You may only walk into those 3 directions \u27a1 (right) \u2197 (upper-right) \u2198 (lower-right) at each point.\r Follow-up: optimize 2d DP to 1d DP of linear extra space.\r Follow-up: what if some cells are blocked\r  System Design\r Availability test/debug on distributed system. Discussed and drafted about failover, replication, NoSQL etc.\r Interviewer seemed to be expecting more but time ran out."}
{"i": "5702569199403008", "t": "x={a,b,c}, y={p,q}, z={r,s} \rDefine a\rOperation, x * y * z = {{a,p,r},{a,p,s},{a,q,r},{a,q,s}......{c,q s}}\rIs to output all the results in the order of each subset, implementing a class iterator that has Next() and hasNext() methods"}
{"i": "5164298866262016", "t": "Give a tree-like graph that lets you find the maximum length from the leaf node to the leaf node. The input is an array of edges."}
{"i": "6236639792726016", "t": "Last Man Standing\rA king gathers all the men in the kingdom who are to be put to death for their crimes, but because of his mercy, he will pardon one. He gathers the men into a circle and gives the sword to one man. The man kills the man to his left, and gives the sword to the man to the dead man's left. The last man alive is pardoned. \r With 5 men, the 3rd is the last man alive. \r Write a program that accepts a single parameter: a number N that represents the number of criminals to start with. The program should output the number of the last two men alive.\r Example #1: myProgram 5\r would output:\r 5, 3\r Example #2: myProgram 7\r would output:\r 3, 7"}
{"i": "5707890932318208", "t": "Given the description of the ancient castle that contains years (e.g 910, 1111, 1560, 1809), centuries (X, XII, IX or 11th c, 15th c). The years and centuries might repeat many times.\rAssume that the centuries are equals(e.g XI = 1000, XV = 1400, 16th c = 1500)\r Find the first historical mention about the castle in the text if you know that the very first mention could not be under 601 year."}
{"i": "6205092385521664", "t": "This is a word splitter program, I wanted to know the complexity of this program:String s = //\"The quick fox jumped over a lazy dog\";\r\n           \"The Java language provides special support for the string \" +\r\n           \"concatenation operator ( + ), and for conversion of other \" +\r\n           \"objects to strings. String concatenation is implemented \" +\r\n           \"through the StringBuilder(or StringBuffer) class and its \" +\r\n           \"append method. String conversions are implemented through \" +\r\n           \"the method toString, defined by Object and inherited by \" +\r\n           \"all classes in Java.\";\r\nint charLimit = 13;\r\nSystem.out.println(\"-------------\");\r\nchar[] chars = s.toCharArray();\r\nboolean endOfString = false;\r\nint start = 0;\r\nint end = start;\r\nwhile(start < chars.length-1) {\r\n    int charCount = 0;\r\n    int lastSpace = 0;\r\n    while(charCount < charLimit) {\r\n        if(chars[charCount+start] == ' ') {\r\n            lastSpace = charCount;\r\n        }\r\n        charCount++;\r\n        if(charCount+start == s.length()) {\r\n            endOfString = true;\r\n            break;\r\n        }\r\n    } \r\n    end = endOfString ? s.length()\r\n                      : (lastSpace > 0) ? lastSpace+start : charCount+start;\r\n    System.out.println(s.substring(start, end));\r\n    start = end+1;\r\n}"}
{"i": "5686209870299136", "t": "Given a biased coin whose probability for Heads is 0.67 and Tails is 0.33, write an algorithm which will print the Heads and Tails with this probability."}
{"i": "5200577918140416", "t": "To determine whether two people have kinship, all data structures need their own definition"}
{"i": "5783754281844736", "t": "Find the missing letters from a string if it doesn't create a pangram."}
{"i": "5204285011787776", "t": "https://leetcode.com/problems/word-search/description/\r Given a 2D board and a word, find if the word exists in the grid.\r The word can be constructed from letters of sequentially adjacent cell, where \"adjacent\" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.\r For example,\rGiven board =\r [\r  ['A','B','C','E'],\r  ['S','F','C','S'],\r  ['A','D','E','E']\r]\rword = \"ABCCED\", -> returns true,\rword = \"SEE\", -> returns true,\rword = \"ABCB\", -> returns false."}
{"i": "6238976993132544", "t": "Write a word processor that can do left and right justification for a sample input of string type. \r Here is an example:\r\tThis is a sample.This is a sample.This is a sample.\rThis is a sample.This is a sample.This is a sample.This is a sample. \r Additional details:\r* The left margin is 5 units.\r* The right margin is 75 units.\r* The input string is a single-spaced collection of words and punctuation.\r* If the length of the word exceeds the right margin, then we must not break the word. Instead, we must print it on the next line and justify the existing line by adding more spaces to the middle of the line."}
{"i": "5648638570135552", "t": "Given an integer n (say somewhere between 100 and 1000), you want to generate a random binary tree having exactly n nodes. You are only interested in the structure of the tree. Each structurally unique tree should ideally have the same chance of being generated."}
{"i": "5083986199052288", "t": "Given a binary matrix, find if there is a path from the upper left corner to the lower right corner, meet the conditions each time the value of the cell must be different. \rFollow up if there is a path with the same number of 0 and 1?"}
{"i": "5659282035965952", "t": "Given k numbers as strings. The numbers may be very large (may not fit in long long int), the task is to find sum of these k numbers. \rExample \rS1 = \u201c100\u201d\rS2 = \u201c10\u201d\rS3 = \u201c1\u201d\rReturn \u201c111\u201d\rpublic string addNumbers(String[] nums){\r}"}
{"i": "5849698404401152", "t": "A number is special if it is possible to remove some digits from it to get a number having 3, 5 or 6 only.\rFor example, 38597 is special since it is possible to remove digits 8, 9, 7 to get 35. You cannot remove all the digits.\rYou can remove digits from left, right or middle.\rWrite a program in C which given a number N, calculate how many divisors of N are special"}
{"i": "5731876177182720", "t": "Given the N*N matrix, find the given number in the matrix. All rows are sorted. And each row first element is less than the previous row last index.\rinput :\r [1,3,5,7,9]\r[11,13,15,16,20]\r[21,22,23,24,25]\r[30,32,35,40,45]\r Given Num : 23\r What is the best Optimal solution ? I have used BST but the interviewer asked to use any other which could do better in the above scenario."}
{"i": "5114743600709632", "t": "Given the below input and ouput.\r Input :\rString[] input = {\"hello\", \"world\"};\routput: (Higher count should come before and natural order)\rhello : l=2, e=1,h=1,o=1\rworld: d=1,l=1,o=1,r=1,w=1"}
{"i": "5656448766836736", "t": "given an array of integers suppose 1234, print all groups of integer array possible of length upto n where n can be any number greater than zero \rexample for n=5\r1,11,111,1111,11111,12341,22222,2222,222,22,2 etc\rfor n=3\r1,11,123 etc"}
{"i": "5701990720995328", "t": "There is a process sequence that contains the start and end of each process. There is a query sequence asking how many processes are running at a certain point in time. Please return the query result of the query sequence.\r  Example\rGiven logs = [[1, 1234], [2, 1234]], queries = [2], return [2].\r Explanation:\rThere are 2 processes running at time 2.\rGiven logs = [[1, 1234], [2, 1234]], queries = [1, 1235], return [1, 0].\r Explanation:\rThere is a process running at time 1, and 0 processes running at time 1235."}
{"i": "5681989863604224", "t": "Given: \rR number of Red Cards \rB number of Black cards \rK \r Cards needs to be placed in a circle. Start from a position and for \revery K moves remove that card And \rrepeat the process until all the cards are eliminated. \r Question: Position the cards such that the red cards are completely \reliminated before the blacks cards are selected for elimination."}
{"i": "5712724112703488", "t": "Given a BST convert it into new Data Structure that satisfies following conditions: \r1. every leaf node's left ptr point to its parent and right ptr points to the next leaf \r2. every non leaf node's left ptr points to its parent and right ptr is NULL \r3. return the head and print the new DSexample: \r\n\t 7 \r\n\t/ \\ \r\n\t5  9 \r\n   / \\  \\ \r\n  4   6  10 \r\n\r\noutput: \r\n\r\nhead->4->5->7 \r\n| \r\n->6->5->7 \r\n| \r\n->10->9-7with optimal time and space complexity"}
{"i": "5641709781254144", "t": "input: \"kitten%20pic.jpg\" \routput: \"kitten pic.jpg\" \r %20 -> ' ' \r%3A -> '?' \r%3D -> ':' \r modify your input in place. \rno string library functions. \r void Decode(char[] str)"}
{"i": "5648676755079168", "t": "Given a string T of length n, partition it in n' \"phrases\" (p1, p2, ..., pn'), \r such that \rpi = pj + c, for some j<i, where + is string concatenation and c is a character \r p0 = '' \rp1 = pj + c where j < 1 \r  T = p1 + p2 + ... + pn' \r For example: \rT = aababcabcd = a + ab + abc + abcd \rp1 p2 p3 p4"}
