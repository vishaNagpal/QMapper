{"i": "6251926844866560", "t": "Write a function which gives the length of the largest palindrome found within a string.", "k": ["largest palindrome found", "write a function", "largest palindrome", "palindrome found", "write"]}
{"i": "5671132107636736", "t": "Write a function that detects if a string is a palindrome.", "k": ["write a function", "function that detects", "write", "palindrome", "function"]}
{"i": "5670849981972480", "t": "1st Face to face\r--------------------\r Find if any string has repetitions or not.\rAbabababab - true\rAbcabcabcx - false\rAbcdabce - false\rAbaaabaaabaa - true\r Virtual functions?\r 2nd facte to face\r----------------------\r Create a strategy for testing flipkart.com (any e-com site)\rSuppose it is under development. \r\t- I started with UI testing but he said that UI is developed in end \r\t- What all positive scenarios to be tested? Negative scenarios to be tested?\r\t- How you will ensure integration \r What all type of testing should be done?\r Explain observer design pattern.\r Write a code in which the client registers some method on Registrar and the registrar calls that method in case some event happens.\r\t- I created a hash table for events and function pointers but he was more worried about my testing knowledge.", "k": ["string has repetitions", "find", "true abcabcabcx", "false abcdabce", "false abaaabaaabaa"]}
{"i": "5024585179201536", "t": "You have an array of 0's and 1's. Determine a window [L,R], such that if you flip the bits in that window, you will have maximum number of 1's in your array, and then output this number of 1's.\r For eg:\rInput array: 1 0 0 1 0 0 1\r Output: 6\r Explanation:\rIf you choose a window [1,5], your array becomes,\r1 1 1 0 1 1 1\rwhich gives the total number of 1's now 6. So, your program should output the number 6, i.e. the maximum number of 1's after choosing a window.", "k": ["number", "window", "maximum number", "array", "input array"]}
{"i": "5714550536011776", "t": "Assume the numbers 1 through n are stored in a binary tree T. For the pre-\rorder, postorder and inorder traversals the output of a preorder\rtraversal of T with 5 nodes can be something like 2; 3; 1; 5; 4. We can think of\rthis output as the \\preorder traversal signature\" of the tree. Clearly, we can do\rthe same for both the postorder and inorder traversals. \r  a. Is the preorder traversal signature of a tree T unique? That is, are there\rtwo trees storing the numbers 1 through n with the same preorder traversal\rsignature? How about the postorder traversal signature? the inorder traversal\rsignature? If your answer is yes to any of these questions, provide an expla-\rnation.", "k": ["preorder traversal signature", "traversal signature", "preorder traversal", "traversal", "signature"]}
{"i": "6216566983098368", "t": "Box stacking problem with boxes having k dimension, find max height of stack", "k": ["box stacking problem", "find max height", "box stacking", "find max", "height of stack"]}
{"i": "5712696989188096", "t": "Box stacking problem with variation of boxes having K DIMENSIONS , find the max height of stack of boxes", "k": ["box stacking problem", "box stacking", "find the max", "stacking problem", "problem with variation"]}
{"i": "5678741783052288", "t": "Find the permutation of a given string using dynamic programming . Try to do with the best possible time complexity and space complexity .", "k": ["find the permutation", "dynamic programming", "string using dynamic", "time complexity", "space complexity"]}
{"i": "5728589441925120", "t": "// You are given a rectangular grid of binary pixels that can be black or white.\r// Some of the pixels may be black, but you don't initially know how many or\r// where.\r//\r// Given a starting point (x,y), fill (i.e. make black) the region the pixel is\r// in.\r . . . . . . . . . .      . . . . . . . . . .\r. X X X . . X X X .      . X X X . . X X X .\r. X * X X X X . X .      . X X X X X X X X .\r. X . . . . . . X . -- > . X X X X X X X X .\r. X . . . . . . X .      . X X X X X X X X .\r. X X X X X X X X .      . X X X X X X X X .\r. . . . . . . . . .      . . . . . . . . . .\r * . . . . . . . . .      X X X X X X X X X X\r. X X X . . X X X .      X X X X X X X X X X\r. X . X X X X . X .      X X . X X X X . X X\r. X . . . . . . X .  --> X X . . . . . . X X\r. X . . . . . . X .      X X . . . . . . X X\r. X X X X X X X X .      X X X X X X X X X X\r. . . . . . . . . .      X X X X X X X X X X\r See the correct drawing here: https://stackoverflow.com/questions/26079328/given-a-starting-point-x-y-fill-the-region-in-a-grid-the-pixel-is-located", "k": ["rectangular grid", "grid of binary", "binary pixels", "black", "pixels"]}
{"i": "5739048492597248", "t": "What are your strengths?", "k": ["strengths"]}
{"i": "5690796145639424", "t": "Describe your two best projects", "k": ["describe", "projects"]}
{"i": "5669314329837568", "t": "n mice are playing in the desert, when one of them notices some hawks flying in the sky. It alerts the other mice who now realize that the hawks are going to attack them very soon. They are scared and want to get inside holes to ensure their safety.\rMice and holes are placed on a straight line. There are m holes on this line. Each hole can accommodate only 1 mouse. A mouse can either stay at its position, or move one step right from x to x+1, or move one step left from x to x-1. Any of these movements takes 1 minute. \rAssign mice to holes so that the time required for all the mice to move inside the holes is minimized.\r Input Format \rThe first line contains an integer T, the number of test cases. This is followed by T blocks of input: \r First line contains 2 positive integers n and m separated by a single space. \rNext line contains n space separated integers, denoting the positions of the mice. \rNext line contains m space separated integers, denoting the positions of the holes. \rNote: No two holes have the same position.\r Output Format \rFor each testcase, print the minimum time taken by all the mice to reach inside the holes.\r Constraints \r1 \u2264 T \u2264 17 \r1 \u2264 n \u2264 131072 \r1 \u2264 m \u2264 131072 \rn \u2264 m \r-108 \u2264 mouse[i] \u2264 108 \r-108 \u2264 hole[j] \u2264 108 \r Sample Input \r 1\r3 4\r2 0 -4\r3 1 2 -1\rSample Output \r 3\rExplanation \rOne possible solution is : \rAssign mouse at position x=-4 to hole at position x=-1 -> 3 minutes \rAssign mouse at postion x=2 to hole at position x=2 -> 0 minutes \rAssign mouse at postion x=0 to hole at postion x=3 -> 3 minutes \rSo the answer is 3, after 3 minutes all of the mice are in the holes.", "k": ["holes", "mice", "assign mouse", "minutes assign mouse", "mouse"]}
{"i": "5965893364350976", "t": "non recursive method to calculate height of the binary tree.", "k": ["binary tree", "recursive method", "method to calculate", "calculate height", "tree"]}
{"i": "4858630662782976", "t": "you have a dictionary which will return true if the word is present in it otherwise false. You have a string \"ABC\", check if anagram of \"ABC\" is present or not. the condition was not to generate the all the anagram of ABC. (Assumption: you can store the dictionary in trie or hashmap (any data structure) and no need to implement the dictionary)", "k": ["return true", "word is present", "abc", "present", "dictionary"]}
{"i": "6213748142374912", "t": "An array of size n is given. The array contains digits from 0 to 9. I had to generate the maximum number using the digits in the array such that it is divisible by 2, 3 and 5\reg: 1 array = 18760, output must be: 8160\reg: 2 array = 7776, output must be: \u201cno number can be formed\u201d", "k": ["array", "output", "size", "digits", "number"]}
{"i": "5709007612280832", "t": "Given a set of entries, each containing a time index and a int count value,\rie\rclass Entry\r{\r\ttime:int\r\tcount:int\r}\r write a function that will give the time interval with the highest count together,\r ie,\rif we had entries\r100, 2\r100, 1\r110, 10\r200, 4\r1000, 3\r1200, 8\r and we ran something like\rint highestInterval(int interval_range)\rhighestInterval( 50 )\rit would return 100, because in 100-150, you have counts 2, 1, and 10.\r I managed to get a O(n^2) solution for it, but I think theres a better solution. I think it might have to do with some preprocessing of the interval buckets, but I can't figure out the solution.", "k": ["class entry", "int count", "int highestinterval", "write a function", "highest count"]}
{"i": "5645814953148416", "t": "Components of computer systems often have dependencies -- other components that must be installed before they will function properly. These dependencies are frequently shared by multiple components. For example, both the TELNET client program and the FTP client program require that the TCP/IP networking software be installed before they can operate. If you install TCP/IP and the TELNET client program, and later decide to add the FTP client program, you do not need to reinstall TCP/IP. \r For some components it would not be a problem if the components on which they depended were reinstalled; it would just waste some resources. But for others, like TCP/IP, some component configuration may be destroyed if the component was reinstalled. \r It is useful to be able to remove components that are no longer needed. When this is done, components that only support the removed component may also be removed, freeing up disk space, memory, and other resources. But a supporting component, not explicitly installed, may be removed only if all components which depend on it are also removed. For example, removing the FTP client program and TCP/IP would mean the TELNET client program, which was not removed, would no longer operate. Likewise, removing TCP/IP by itself would cause the failure of both the TELNET and the FTP client programs. Also if we installed TCP/IP to support our own development, then installed the TELNET client (which depends on TCP/IP) and then still later removed the TELNET client, we would not want TCP/IP to be removed. \r Write a program to automate the process of adding and removing components. To do this we will maintain a record of installed components and component dependencies. A component can be installed explicitly in response to a command (unless it is already installed), or implicitly if it is needed for some other component being installed. Likewise, a component, not explicitly installed, can be explicitly removed in response to a command (if it is not needed to support other components) or implicitly removed if it is no longer needed to support another component.\r I found a reference to this problem online.. Check this for i/o details. This is the exact same problem\r http://www.cs.cornell.edu/Info/Courses/Spring-98/CS211/assgts/assgt3/assgt3.pdf", "k": ["telnet client", "telnet client program", "tcp", "ftp client program", "ftp client"]}
{"i": "5700518072549376", "t": "Write a program to find first 20 elements with high density", "k": ["write a program", "elements with high", "high density", "program to find", "write"]}
{"i": "6361009417617408", "t": "Hi I wanted to know what I should prepare for an in person interview with amazon for the post of cloud support associate(AWS team)?", "k": ["cloud support associate", "aws team", "support associate", "person interview", "interview with amazon"]}
{"i": "5115221941157888", "t": "We have 'n' patients and 'm' problems. The problems are of boolean type. Eg diabetes problem would be 'T' if a patient has it or 'F' otherwise. Suggest the data structure you would store this scenario on?\r Q: We have a set of problems {diabetes, liver disease, kidney disease} find all the patients who have at least the 3 problems from the set.\r The number of patients can be huge (n).\r The number of problems not comparatively huge (m).", "k": ["problems", "patients", "number", "huge", "disease"]}
{"i": "5073763695591424", "t": "Write a program to calculate height of a binary tree non - recursively.   USE ONLY STACK , not using BFS.\rThen he asked to implement it for n-ary tree.", "k": ["write a program", "program to calculate", "calculate height", "recursively", "write"]}
{"i": "5187906612232192", "t": "Merge two sorted linked list", "k": ["sorted linked list", "merge two sorted", "linked list", "sorted linked", "merge"]}
{"i": "5701535442927616", "t": "Design a stack using queue(s)", "k": ["design a stack", "stack using queue", "design", "queue", "stack"]}
{"i": "5750856565653504", "t": "Design a valet parking system. Requirements of the valet parking system should be:\r1. Customer are given a ticket that they can use to redeem to get their vehicle back\r2. Parking spots come in three sizes, small, med, large\r3. Thee types of vehicles, small, med, large\r\t-a small vehicle can park in a small, medium, and large spot\r\t-a medium vehicle can park in a medium and large spot\r\t-a large vehicle can park in a large spot", "k": ["valet parking system", "valet parking", "parking system", "large", "parking"]}
{"i": "5112383907299328", "t": "Suppose you want improve the performance of search queries, using a cache. Each search queries is in form of a string and returns a list of ad id's in the form of longs.\rDesign a class with the appropriate data structure(s) that can manage a cache of search queries.", "k": ["search queries", "improve the performance", "performance of search", "search", "queries"]}
{"i": "5066745853247488", "t": "Say you have a string:\r\"Thisisasentence\"\rHow would you separate the string into separate words, return either the sentence with spaces or as a list/array where each entry is a word", "k": ["sentence with spaces", "separate words", "thisisasentence", "return", "list"]}
{"i": "5116481574535168", "t": "/* In \"the 100 game,\"  two players take turns adding, to a running \rtotal, any integer from 1..10.  The player who first causes the running \rtotal to reach or exceed 100 wins.\rWhat if we change the game so that players cannot re-use integers? \rFor example, if two players might take turns drawing from a common pool of numbers\rof 1..15 without replacement until they reach a total >= 100.  This problem is \rto write a program that determines which player would win with ideal play.\r Write a procedure, \"Boolean canIWin(int maxChoosableInteger, int desiredTotal)\",\rwhich returns true if the first player to move can force a win with optimal play.\r Your priority should be programmer efficiency; don't focus on minimizing\reither space or time complexity.\r*/\r Boolean canIWin(int maxChoosableInteger, int desiredTotal) {\r  // Implementation here. Write yours\r }", "k": ["running total", "boolean caniwin", "turns adding", "int", "total"]}
{"i": "5095457709621248", "t": "Check if tree is BST.", "k": ["tree is bst", "check if tree", "bst", "check", "tree"]}
{"i": "5721740579700736", "t": "We have a char array and we need to reverse it. say Char Array is \u201cNorthern California USA\u201d, need to print \u201cUSA California Northern\u201d. Can\u2019t use any other data structures or buffer. Can only use a char temp.", "k": ["northern california usa", "usa california northern", "northern california", "california usa", "usa california"]}
{"i": "5654626346991616", "t": "Find the kth minimum element into binary search.", "k": ["kth minimum element", "find the kth", "binary search", "kth minimum", "minimum element"]}
