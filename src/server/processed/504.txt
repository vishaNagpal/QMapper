{"i": "3541621", "t": "Check whether the Binary tree is BST or not", "k": ["binary tree", "tree is bst", "binary", "bst", "check"]}
{"i": "3505612", "t": "Given a binary tree, find a path (from root to a leaf) which gives maximum value by adding values of nodes.", "k": ["find a path", "binary tree", "tree", "find", "path"]}
{"i": "3537658", "t": "You have single linkedlist.Swap every consecutive  two elements without using value stored in the node of linkedlist. for eg. 1->2->3->4->5 then output should be 2->1->4->3->5", "k": ["node of linkedlist", "single linkedlist.swap", "linkedlist.swap every consecutive", "consecutive two elements", "linkedlist"]}
{"i": "3526624", "t": "create your own atoi()?", "k": ["create", "atoi"]}
{"i": "3537657", "t": "Sorted Array is rotated n times. You have to find the current index of the some element X. If element is not present then return the maximum element of the array in O(log n).", "k": ["rotated n times", "sorted array", "array is rotated", "sorted", "times"]}
{"i": "3579690", "t": "You dont know the required size of the array.how will you allocate space for the array.for eg. if you allocate 100 blocks then user can have just 10 elements or 1000 elements.", "k": ["blocks then user", "required size", "allocate space", "elements", "allocate"]}
{"i": "3530619", "t": "What happens after entering URL address at the browser(details of how we get to see the web page)?", "k": ["entering url address", "entering url", "url address", "web page", "url"]}
{"i": "3527567", "t": "you have a base class in which you have private data.There is another class which is derived from base class.How will you access the private data of base class from main() by creating object of derived class.", "k": ["creating object", "base class", "private data.there", "private data", "base class.how"]}
{"i": "3585672", "t": "Different ways to do debugging.", "k": ["debugging"]}
{"i": "3493579", "t": "What are joins.what is natural join.", "k": ["natural join", "joins.what is natural", "join", "joins.what", "natural"]}
{"i": "3559298", "t": "you have table employee with salary as one column.there are n rows with maximum salary and x rows with minimum salary.(we dont know n and x). display the difference between total sum of minimum salary and total sum of maximum salary.", "k": ["table employee", "minimum salary.", "maximum salary", "salary", "rows"]}
{"i": "3570048", "t": "You are given ArrayList with n elements in it,on which you can apply on size(),remove(x) operation.size() will current size of the list and remove(x) will remove xth position element. How will you delete alternate elements from the list.", "k": ["remove xth position", "xth position element", "xth position", "current size", "remove xth"]}
{"i": "3537631", "t": "Given a statement which took an integer, incremented it by 1 and then branched to another location which you provide, implement addition of two numbers multiplication, etc using just that statement (or command).", "k": ["implement addition", "numbers multiplication", "integer", "incremented", "provide"]}
{"i": "3572854", "t": "Are there classes in the Java platform library that either is final but you believe should not be, or that are not final but you believe should be?", "k": ["java platform library", "java platform", "platform library", "java", "final"]}
{"i": "3493498", "t": "Suppose you have a file on disk which does not fit in main memory, how will you sort it optimizing time and the number of reads/writes. Mention exactly how many reads/ writes you would need.", "k": ["main memory", "file on disk", "fit in main", "sort it optimizing", "optimizing time"]}
{"i": "3561207", "t": "4) Given a 3d plane, and infinite points find kth closest point from a given point.", "k": ["find kth closest", "infinite points find", "points find kth", "kth closest point", "find kth"]}
{"i": "3527445", "t": "3) Print characters which are present in StringA but not in StringB.", "k": ["print characters", "present in stringa", "print", "stringb", "characters"]}
{"i": "3528498", "t": "Rotate an array by k units?", "k": ["rotate an array", "rotate", "units", "array"]}
{"i": "3487505", "t": "Design a parking garage. We spent a lot of time deciding whether Park() method should be in Car class or Garage Class. Any idea?\r Now suppose that the parking rate depends on the date and time. How will you store this information?", "k": ["deciding whether park", "car class", "garage", "design", "garage class"]}
{"i": "3571829", "t": "What is polymorphism? Can you overload the same operator more than once?", "k": ["polymorphism", "overload", "operator"]}
{"i": "3542480", "t": "How do you think the updates on facebook work? What kind of a data structure do you think they use? How would you be linked to your friends updates?", "k": ["facebook work", "work", "facebook", "updates on facebook", "updates"]}
{"i": "3488537", "t": "Design a data structure to store a phone book so that you can search for a phone number using name and vice verse. The solution should be time and space efficient.", "k": ["design a data", "vice verse", "store a phone", "phone book", "phone number"]}
{"i": "3561190", "t": "difference between static and new operator", "k": ["difference between static", "difference", "operator", "static"]}
{"i": "3481536", "t": "Can a Class have a static inner Class?", "k": ["static inner class", "class", "static"]}
{"i": "3567803", "t": "Write an algorithm to find the absolute max subsequence of an array containing both positive and negative numbers in O(n) time \r Eg: {100,-2,300} sum=398\r     {1,2,3,-9} sum=9\r     {1,2,3,-4} sum=6\r     {-1,-2}  sum=3", "k": ["absolute max subsequence", "sum", "write an algorithm", "algorithm to find", "find the absolute"]}
{"i": "3547405", "t": "Give an algorithm to compress a memory. To be more clear if you are given a memory of some stored data here and there and some empty and null memory in between, how will you fragment and compress your memory?", "k": ["give an algorithm", "memory", "algorithm to compress", "give", "compress"]}
{"i": "3556172", "t": "Design object-pool", "k": ["design object-pool", "design", "object-pool"]}
{"i": "3488401", "t": "What classes and data structures would you use for a file system?", "k": ["file system", "classes and data", "data structures", "system", "classes"]}
{"i": "3548326", "t": "How do you implement a linked list without using dynamic memory allocation? So basically you need to use an array as a linked list.", "k": ["dynamic memory allocation", "memory allocation", "linked list", "dynamic memory", "implement a linked"]}
{"i": "3492344", "t": "implement your own malloc and free for application x, which should control the heap memory usage of the application x.", "k": ["heap memory usage", "malloc and free", "control the heap", "heap memory", "memory usage"]}
