{"i": "3925697", "t": "1.\tGiven a binary tree print the nodes in this order:\rall the left most nodes from top to bottom, then all the leaves, then all the right most nodes from bottom to top, then the root. like\r10\r5 15\r3 2 12 17\ryou would print 5 3 2 12 17 15 10", "k": ["nodes", "binary tree print", "print", "top", "bottom"]}
{"i": "3910850", "t": "21200\r01234\rhere, the bottom string represents the actual numbers(01234), the upper string represents their counts(the same also represents numbers)\rso, there are two 0's, one 1, two 0's, zero '3', zero '4'. Find a sequence of length '9' which satisfy this property.", "k": ["bottom string represents", "upper string represents", "string represents", "actual numbers", "represents numbers"]}
{"i": "3846087", "t": "Given two words (that are in dictionary) of equal length how to convert one word to another word so that at each step you can replace one letter in word.  And at each step  intermediate word also should be in dictioanryDo it with minimum possible steps . '\rFor example, HEAD->TAIL\rHEAD->HEAL->TEAL->TAAL-TAIL", "k": ["equal length", "replace one letter", "tail head", "step intermediate word", "head"]}
{"i": "3876039", "t": "What data structure would you use to pass 1MB of data to OS from network layer for packet delivering?", "k": ["packet delivering", "network layer", "layer for packet", "data structure", "pass"]}
{"i": "3898068", "t": "How does Distance (10-20miles) affect data rate for Wi-Fi networks?", "k": ["affect data rate", "affect data", "wi-fi networks", "distance", "data rate"]}
{"i": "3892075", "t": "How does Distance (10-20miles) affect data rate for Wi-Fi networks?", "k": ["affect data rate", "affect data", "wi-fi networks", "distance", "data rate"]}
{"i": "3831039", "t": "void copystring(char* dest, char *source)\r{\r\twhile(*source != NULL)\r\t{\r\t\t*dest = *source;\r\t\tdest++;\r\t\tsource++;\r\t}\r}\r  int _tmain(int argc, _TCHAR* argv[])\r{\r\tchar input[10] = \"hello\";\r\tchar *dest;\r \tdest = &input[1];\r \tcopystring(dest, input);\r \treturn 0;\r}\r What is the output of the program...", "k": ["dest", "void copystring", "int argc", "source", "char input"]}
{"i": "3897095", "t": "Find output of the following code\r int\rmingle(int a, int b)\r{\r\tint c = b/2;\r\tif (b<=1) { return a;}\r \tcout<<c <<endl;\r\treturn a*(b-2*c) + mingle(a,c);\r }\r int\rmain()\r{\rint i;\rfor (i = 1; i<=5 ; i++) {\r\tcout<<mingle(i+1,i-1)<<endl;\r}\rreturn 0;\r}", "k": ["code int mingle", "find output", "int main", "return", "int mingle"]}
{"i": "3900054", "t": "what is cluster in dbms?", "k": ["cluster in dbms", "dbms", "cluster"]}
{"i": "3873915", "t": "load a chapter from a .txt file into memory \u2013 split based on paragraphs", "k": ["load a chapter", "txt file", "file into memory", "split based", "based on paragraphs"]}
{"i": "3866813", "t": "Did you faced any stuburn person on your job and how did you handled it ??", "k": ["faced any stuburn", "stuburn person", "faced", "stuburn", "person"]}
{"i": "3860808", "t": "implement:\rfloat evaluate(char* s)\rfor example: \rinput: \"1+2.5\" output: 3.5\routput: \"4-5*8+4/2\" output: -34", "k": ["float evaluate", "output", "implement", "char", "input"]}
{"i": "3870800", "t": "two rectangles are given. As a struct having {bottomleft-x, bottomleft-y, topright-x, topright-y} \ryou are given two rectangles R1, R2? determine if they intersect", "k": ["rectangles", "bottomleft-x", "topright-x", "topright-y", "determine"]}
{"i": "3899805", "t": "how will you sort a file which is too large?", "k": ["sort a file", "large", "sort", "file"]}
{"i": "3844784", "t": "Write a Generic Swap Macro in c", "k": ["generic swap macro", "generic swap", "swap macro", "write a generic", "generic"]}
{"i": "3857744", "t": "Reverse a string using only bitwise operators and without temporary storage.", "k": ["reverse a string", "temporary storage", "bitwise operators", "reverse", "storage"]}
{"i": "3763409", "t": "write a c code for efficient implementation of malloc ....\rAnd then explain", "k": ["implementation of malloc", "code for efficient", "efficient implementation", "write", "malloc"]}
{"i": "3749485", "t": "Imagine I am handing you a wine glass and I ask you to test it, what would your steps be?", "k": ["wine glass", "imagine", "handing", "wine", "glass"]}
{"i": "3765470", "t": "Given the following:  You have an application that consists of three parts: a front end GUI, a middle-ware layer where all the processing of data takes place and a database where data is read from.\rWhat are the areas that would be most likely to break?  What would your testing strategy for this be?  Why?", "k": ["front end gui", "end gui", "application that consists", "front end", "middle-ware layer"]}
{"i": "3749484", "t": "I want to create a course registration database for a university.  I want to store information for each department, information for each course (including which department they\u2019re offered under as well as which professors are teaching them), information for each professor, and the list of the registered students and which courses each student has registered for.  \rKeep in mind that an instance of a course could be taught by multiple instructors (i.e. one instructor for the first half of the course and then a different instructor for the second half).\rAlso keep in mind that there could be multiple instances of a given course offered by different sets of instructors (e.g. offered by Bob Smith on Mondays & Wednesdays at 10am and Bill Jones on Tuesdays & Thursdays at 1pm).\rDesign a set of database tables to store this information.", "k": ["registration database", "information", "smith on mondays", "jones on tuesdays", "bob smith"]}
{"i": "3803501", "t": "I want to create an in-memory definition of an underground city subway system.  I want to maintain a list of all of the available stops (i.e. locations) and routes that service these stops.  I want to be able to store the schedule for each route.   Keep in mind that a given location may be on multiple routes, that a train on a route will visit a given stop multiple times per day, and that each route will have 2 directions.\rDesign a set of in-memory data structures to maintain this information in memory.  I\u2019m not interested in seeing information about how this information would be stored on persistent storage (e.g. hard disk).\r I also want to be able to tell a customer how to get from one location to another location and how long it will take them to get there (keeping in mind that it may require them to take multiple trains).  Describe how you would fulfill this request with your design.", "k": ["city subway system", "underground city subway", "subway system", "underground city", "city subway"]}
{"i": "3788480", "t": "I want to model the rooms in a house.I want to know what the color and texture of the walls is for each room.  I want to know what the flooring material is, what color it is, and the condition of the flooring.  I want to be able to call something that returns me the area for each room (you can assume all rooms are rectangular).   I want to know how many major appliances are in the kitchen.  I want to know how many TV\u2019s are in each room.  I want to know for each bedroom if there is an attached bathroom.  For each bathroom I want to know if it is a full bath or half bath.  I also want to know how many beds are in each bedroom.  For all the rooms I want to know if they are heated or cooled and if cooled what is the method of cooling.  \r Design the class structure to implement this.", "k": ["color and texture", "rooms", "room", "color", "flooring"]}
{"i": "3794386", "t": "Given a stack S, write a C program to sort the stack (in ascending order).\rYou are not allowed to make any assumptions about how the stack is implemented; the only\rfunctions allowed to be used are: Push, Pop, Top, IsEmpty, IsFull.", "k": ["ascending order", "program to sort", "stack", "sort the stack", "write"]}
{"i": "3771429", "t": "There is a sequence of increasing numbers that have the same number of\rbinary 1s in them. Given n, the number of 1 bits set in each number, write an algorithm\ror C program to find the n\u2019th number in the series", "k": ["sequence of increasing", "increasing numbers", "number", "number of binary", "binary"]}
{"i": "3741411", "t": "You are given have a datatype, say X in C. Determine the size of the datatype,\rwithout declaring a variable or a pointer variable of that type, and, of course without using\rthe sizeof operator!", "k": ["datatype", "determine the size", "sizeof operator", "variable", "pointer variable"]}
{"i": "3746400", "t": "Write a C Program to reverse a stack in place using recursion. You can only\ruse the following ADT functions on stack: IsEmpty, IsFull, Push, Pop, Top\ryou can not use extra stack or any other data structure", "k": ["program to reverse", "place using recursion", "program", "adt functions", "write"]}
{"i": "3801407", "t": "Write a program to find and print the 1500\u2019th ugly number.", "k": ["ugly number", "write a program", "program to find", "find and print", "write"]}
{"i": "3734393", "t": "Write a method to generate a random number between 1 and 7, given a method that generates a random number between 1 and 5 (i.e., implement rand7() using rand5()).", "k": ["random number", "write a method", "generate a random", "random", "number"]}
{"i": "3806464", "t": "Given two sets, Write a function to provide the union of them.", "k": ["write a function", "write", "function to provide", "provide the union", "sets"]}
{"i": "3780462", "t": "You are given a list of Ball objects. Each Ball is either Red or Blue. Write a function that partitions these balls so that all of the balls of each color are contiguous. Return \rthe index of the first ball of the second color (your result can be Red balls, then Blue balls, or the other way around). In haskell, you\u2019ll probably want to return a ([Ball],Int).", "k": ["ball objects", "ball", "balls", "red balls", "blue balls"]}
