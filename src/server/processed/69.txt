{"i": "5473845430452224", "t": "Given a MxN matrix where each element can either be 0 or 1. We need to print the shortest path between a given source cell to a destination cell. The path can only be created out of a cell if its value is 1. \rBFS is trival, please solve it use DFS\rpublic void print(int[][] matrix, int[] start, int[] end){\r}", "k": ["int", "mxn matrix", "cell", "bfs is trival", "mxn"]}
{"i": "5663336703197184", "t": "Choose The Best [url=https://www.stonefirearms.com/Innovative-Arms-Slingshot-22LR-Titanium-p/ia-2102.htm]Silencer[/url]\r For Your Guns\rShop online for gun Silencer at Stonefire Arms. With offering the reliable services, we are one of the leading companies of the industry. We are specialized for offering; AR-15, AR10 & SCAR, Shotgun, Handguns,Suppressors, Bolt Guns type rifles. We use and sell only top quality products. Our mission at Stonefire Arms is to provide the best shopping experience by offering quality products and world class customer service at affordable prices. Fast shipping & reliable customer services!", "k": ["guns shop online", "shop online", "guns shop", "gun silencer", "stonefire arms"]}
{"i": "5667815146127360", "t": "Convert Roman to integer and vice-versa", "k": ["convert roman", "roman to integer", "integer and vice-versa", "roman", "convert"]}
{"i": "5662332486156288", "t": "Print a binary tree level by level and zig zag order.", "k": ["zig zag order", "binary tree level", "print a binary", "zag order", "binary tree"]}
{"i": "5664519966687232", "t": "Give a string, finds all duplicate substrings of length k", "k": ["give a string", "finds all duplicate", "duplicate substrings", "substrings of length", "give"]}
{"i": "5129517969440768", "t": "Give an array such as [1,2,2,2,0] every time you can jump 1 to a [i] step,\rIf you can jump to 0, return false \rif you go out to return true", "k": ["give an array", "return true", "return false", "step", "jump"]}
{"i": "5713862966902784", "t": "A group of people goes to eat together, each pay is not the same, then after they go home later, they each use mutual transfer so that everyone pay the same money. \rinput is an int array that each person pay, Ask who the amount of money was paid when the transfer was done, such as B -> A $ 3, C -> A $ 1.", "k": ["group of people", "mutual transfer", "pay", "transfer", "money"]}
{"i": "6747840909934592", "t": "Packers and Movers in Gurgaon", "k": ["movers in gurgaon", "packers and movers", "gurgaon", "movers", "packers"]}
{"i": "5754576840949760", "t": "/**\r     * Google\r     * Given a list of non-negative numbers and a target integer k,\r     * write a function to check if the array has a continuous subarray of size at least 2 that sums up to the multiple of k, that is, sums up to n*k where n is also an integer.\r**/", "k": ["write a function", "list of non-negative", "non-negative numbers", "function to check", "continuous subarray"]}
{"i": "5707987787186176", "t": "find the last index of the last duplicate number in a sorted array\r ex \rinput: 1,2,5,6,6,7,9\routput: 4(index)", "k": ["array ex input", "duplicate number", "sorted array", "output", "find"]}
{"i": "6097445623693312", "t": "Given a string, check if it is can be reorganized such that the same char is not next to each other, If possible, output a possible result\rexample\rinput: google\rone possible output: gogole", "k": ["result example input", "gogole", "output", "string", "check"]}
{"i": "5362490820001792", "t": "from robot movement tell final position of robot...\r testcases:\r\"ULDLLUDL\"\r\"UP 2xDOWN LEFT 4xRIGHT\"", "k": ["movement tell final", "final position", "robot movement", "uldlludl", "left"]}
{"i": "5664189052878848", "t": "You have a non empty binary array with value 0 and 1. You can flip either 0 or 1 bit of array to make the consecutive element same.You have to return the count  of consecutive number with same digit. \r Input : [ 1,0,1,0,0,0]\rOutput : 4\rif you flip the value of 1st index to 1, you have 2 consecutive 1 and 2 consecutive 0 so total 4.\r input : [0,0,0,0]\routput : 3\r input : [0]\routput 1\r there is bug in below code which i couldn't find it.class Solution {\r\n    int solution(int[] A) {\r\n        int n = A.length;\r\n        int result = 0;\r\n        for (int i = 0; i < n - 1; i++) {\r\n            if (A[i] == A[i + 1])\r\n                result = result + 1;\r\n        }\r\n        int r = 0;\r\n        for (int i = 0; i < n; i++) {\r\n            int count = 0;\r\n            if (i > 0) {\r\n                if (A[i - 1] != A[i])\r\n                    count = count + 1;\r\n                else\r\n                    count = count - 1;\r\n            }\r\n            if (i < n - 1) {\r\n                if (A[i + 1] != A[i])\r\n                    count = count + 1;\r\n                else\r\n                    count = count - 1;\r\n            }\r\n            r = Math.max(r, count);\r\n        }\r\n        return result + r;\r\n    }\r\n}", "k": ["empty binary array", "count", "empty binary", "int", "binary array"]}
{"i": "6274144202129408", "t": "You are given with a large paragraph and N words.\rYou have to find a min length subparagraph of the paragraph which contain all those N words in any order. Here length of a paragraph is the count of words in the paragraph.", "k": ["words", "paragraph", "large paragraph", "large", "length"]}
{"i": "5154868879687680", "t": "Warning! User majia168 is posting fake interview questions!", "k": ["warning", "user", "interview questions", "questions", "fake interview questions"]}
{"i": "5840146736873472", "t": "Write a function that given a string would print the 'expanded' version of it. \rFor example a2[bc2[c]]d  would print out abcccbcccd\r Note:\rThe number before the opening and closing square brackets is the multiplier for the characters within the square brackets\r Method Signature [Java]:public String expanded(String str)", "k": ["public string expanded", "brackets method signature", "write a function", "square brackets method", "string expanded"]}
{"i": "6737536666828800", "t": "what is a router?  http://www.foodspotting.com/4682691", "k": ["router"]}
{"i": "6218506243670016", "t": "Amazon\r Given an ArrayList of Nodes, with each Node having an ID and a parent ID, determine whether the List is given in preorder.", "k": ["arraylist of nodes", "list", "amazon", "determine", "preorder"]}
{"i": "5638654788632576", "t": "Given a non-empty string s, you may delete at most k characters. Judge whether you can make it a palindrome.", "k": ["non-empty string", "characters", "non-empty", "string", "delete"]}
{"i": "5744040938045440", "t": "Given a dictionary, generate the shortest string, both palindrome and pangram.\rEach word can be used only once and unlimited words can be used.", "k": ["generate the shortest", "shortest string", "palindrome and pangram", "dictionary", "generate"]}
{"i": "4720666463961088", "t": "Give you a pattern (digit in the pattern matches the corresponding \rnumber of letters, \r                    letter means match the letter itself), \ra string to determine whether match:\rex:\rabc -> 'abc'  true\r'1oc3' -> 'aoczzz', 'bocabc'   true", "k": ["abc", "true", "string to determine", "pattern matches", "aoczzz"]}
{"i": "5953674667884544", "t": "Custom Gus Parts & Accessories\rIf you are looking for the best custom guns, parts and suppressors Then, Stonefire Arms is the right place to start. With a huge selection of firearms at the best prices, you can shop for rifles, handguns and shotguns from top tier brands like; Daniel Defense\u00ae, CMC, Spikes, Magpul, BCM and many more. Browse us today for best customer services.", "k": ["custom gus parts", "stonefire arms", "gus parts", "custom gus", "place to start"]}
{"i": "5955186630590464", "t": "Google\rGiven an array a[] and an integer k, a[i] means flower at position a[i] will blossom at day i. Find the first day that there are k slots between two blooming flowers.", "k": ["google", "flower at position", "blossom at day", "day", "blooming flowers"]}
{"i": "4955803575386112", "t": "Find the Kth most Frequent Number in an Array.\r Example:arr[] = {1, 2, 3, 2, 1, 2, 2, 2, 3}\r\nk = 2\r\nResult: 3\r\n\r\nBecause '3' is the second most occurring element.Follow up: What if the array is extremely large?", "k": ["kth most frequent", "frequent number", "find the kth", "kth", "frequent"]}
{"i": "5726840265113600", "t": "assuming there is a freeway, n cars on the road, each car has a different integer speed, but are in the 1-n range. Now give you an array that represents the speed of each car. The starting order of the vehicle is the order of the array, ask the final formation of several clusters, the size of each cluster is how much? It can be understood that, although the vehicle speed is different, but even behind the car faster than the previous car, because you cannot pass, the last must only travel at the speed of the previous car, which formed a cluster. For example [2,4,1,3], finally [2,4] is a cluster, [1,3] is a cluster.\r Follow up is now suppose you want to add a car, the speed of the car than other large, but not sure the car's starting order, so that the final output of each possible cluster (List of List). Requirements can be adjusted and call the previous function, but can only be called once", "k": ["car", "speed", "integer speed", "cluster", "previous car"]}
{"i": "5161832753922048", "t": "There is a stream of data <Symbol, timestamp, price>, and possibly also Correction Data <Symbol, timestamp, price> and then addData (symbol, timestamp, price) and correctData , Update minPrice, maxPrice, recentPrice in these two functions.", "k": ["update minprice", "correction data", "symbol", "possibly also correction", "timestamp"]}
{"i": "5962130384748544", "t": "Give you a bunch of data <key, value, expiredTime>, design a data structure storage.\rAbout the idea, based on Map solution.\rclass NewMap {\r    Map <Integer, Integer> data = new HashMap <> (); // store key-value pairs\r    Map <Integer, Integer> expired = new HashMap <> (); // store key-expired pairs\r}\r  Then implement the three functions get (), put (), expire ().", "k": ["data structure storage", "integer", "structure storage", "map", "key"]}
{"i": "5656728816320512", "t": "Twitter\rCreate a simple stack which takes a list of elements. \rEach element contains a stack operator (push, pop, inc) and a value to either push/pop or two values, n and m, \rwhich increment the bottom n values by m.\rThen print the topmost value of the stack after every operation. If the stack is empty, print \"empty\"", "k": ["twitter create", "create a simple", "create", "stack", "simple stack"]}
{"i": "5974074151927808", "t": "Check if the string is a panagram & print all the missing characters if the string is not a panagram in sorted order.", "k": ["sorted order", "missing characters", "panagram in sorted", "string", "panagram"]}
{"i": "5196517299191808", "t": "Find the winning hand in Poker. I was given input for 2 hands(eg 6D 7D 8H 9H JS 5S 6C JH QD KC), of which I need to determine who won based on the cards & if there is a tie it should print none.", "k": ["find the winning", "hand in poker", "poker", "winning hand", "find"]}
