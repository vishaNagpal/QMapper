{"i": "5707460955340800", "t": "Q 7. You are getting a stream of integers, You have to find the median of these in real time(or with minimum complexity).", "k": ["stream of integers", "real time", "minimum complexity", "find the median", "integers"]}
{"i": "5680143889596416", "t": "Theoretical Questions\rQ 1. Any design patterns you have used, please explain in details\rQ 2. Difference between a process and a thread\rQ 3. How threads/processes can communicate with each other.\rQ 4. What is latency and throughput, what is there the difference?\rQ 5. When to use merge sort over quick sort and vice-versa.\rQ 6. What is hashmap, how would to implement one.", "k": ["theoretical questions", "questions", "theoretical", "design patterns", "explain in details"]}
{"i": "5664081785651200", "t": "Given arrays for N (>=  2) users, each representing the IDs of hotels visited, find the common IDs of the hotels visited amongst the users.\r Input:\ruserA = { 2, 3, 1 }\ruserB = { 2, 5, 3 }\ruserC = { 7, 3, 1 }\r Output:\r{3}\r Assumptions:\rArrays are unsorted.\r Cases:\r1) Each array consists of distinct hotel IDs\r2) Each array may contain duplicate hotel IDs", "k": ["find the common", "hotels visited", "users", "visited", "ids"]}
{"i": "6232555067015168", "t": "how does java implement priority queue?\ri answered min heap, the interviewer seemed it was not right", "k": ["implement priority queue", "java implement priority", "priority queue", "java implement", "implement priority"]}
{"i": "5675977771319296", "t": "class Log{\r\n\tString fun_name;\r\n\tString enterOrExit;// enter or exit\r\n\tint time;\r\n\tpublic Log(String fun_name, String enterOrExit, int time){\r\n\t\tthis. fun_name = fun_name;\r\n\t\tthis. enterOrExit = enterOrExit;\r\n\t\tthis.time = time;\r\n\t}\r\n}\r\npublic void printInclusiveAndExclusiveTime (List<Log> logs){\r\n\t\r\n}\r\nLog for some functions, calculate the inclusive time and exclusive time for each function\r\nE.g\r\nFun_name \tenter / exit\t time\r\nF1   \t\tenter   \t\t1\r\nF2   \t\tenter   \t\t2\r\nF2    \t\texit    \t\t3\r\nF1    \t\texit    \t\t4\r\nF1: inclusive time = 4-1 = 3, exclusive time = 3-1 = 2\r\nF2: inclusive time = 3-2 = 1, exclusive time = 1", "k": ["string fun", "string enterorexit", "string", "fun", "class log"]}
{"i": "4917596202729472", "t": "For a given Sum and N print all the combinations\r For Example Sum = 16 and N=2 \r Then Answer :\r 16,0\r15,1\r14,2\r13,3\r12,4\r11,5\r10,6\r9,7\r8,8\r7,9\r6,10\r5,11\r4,12\r3,13\r2,14\r1,15\r0,16private void recursivePrint(int sum, int n, int data[], int len, int originalSum) {\r\n\r\n\t\tif (n == 0) {\r\n\r\n\t\t\tint sum1 = 0;\r\n\r\n\t\t\tfor (int j = 0; j < len; j++) {\r\n\r\n\t\t\t\tsum1 += data[j];\r\n\t\t\t}\r\n\r\n\t\t\tif (sum1 == originalSum)\r\n\r\n\t\t\t{\r\n\t\t\t\tfor (int j = 0; j < len; j++) {\r\n\r\n\t\t\t\t\tSystem.out.print(data[j] + \" \");\r\n\t\t\t\t}\r\n\t\t\t\tSystem.out.println();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (int i = 0; i <=sum; i++) {\r\n\r\n\t\t\t// System.out.println(\" len: \"+len+\" sum: \"+sum+\" i: \" + i+\" n:\"+n)\r\n\t\t\tdata[len] = i;\r\n\r\n\t\t\trecursivePrint(sum - i, n - 1, data, len + 1, originalSum);\r\n\t\t}\r\n\t}\r\n\r\n}Need a better solution so that we can store previous results by using hashmaps", "k": ["store previous results", "void recursiveprint", "int originalsum", "int data", "int len"]}
{"i": "6319380112605184", "t": "Amazon SDE 2 On-site (4 of 4 Rounds)\r Assume that there is an e-book application. For every book the sharable part of the book content cannot exceed 10% of the whole book. Design a module to decide whether the current part of content is sharable. \r The description given is vague. I had to push him with questions to give the details. \rAt first I thought the problem was about strStr. But then the interviewer said that even if there are two paragraphs of the book content with the exact same texts, as long as they are not in the same place,  they would be considered different content. \rI then realized it\u2019s a question about merging segments - have a helper to find each pair of start and end point of the input content (given multiple separated paragraphs). Then merge the intervals and see if they combined exceed 10% of the entire book.\rThe interviewer approved my solution and ask me to code it. \r Overall I feel like that the Amazon SDE II Interview doesn\u2019t focus on just algorithm. It\u2019s more about problem solving in practice and then implement the only core function on whiteboard.", "k": ["e-book application", "amazon sde", "on-site", "rounds", "assume"]}
{"i": "5668582508724224", "t": "I have a series of strings sort {\"A\",\"B\",\"C\",\"D\"....}\rSort them and display them in 4 columns.Instead of displaying horizontally they should be display vertical if the string size is greater than 4.\rImportant:null should be in last row alone \reg\rA C D E\rB\rIf string size is less than 4\rA B C D\r Also,the program should be production ready and reusable,readjust the values upon deletion.", "k": ["columns.instead of displaying", "displaying horizontally", "string size", "display vertical", "size is greater"]}
{"i": "5682679665131520", "t": "You are given an array of integers and a number K. You have to find the any continue sub-array whose elements sum is K. Please note that, the array may have positive, negative, and zeros as its element.\rThe desired complexity is O(N).\rExample:\rInput: [7 0 9 -10 0 789], K = 0\rOutput: Array from index 1 to Index 1.\rInput: [1 2 3 5 -10] K = 0\rOutput: Array from Index 1 to Index 4.\rIf K = -2, Output would have been SubArray from Index 2 to Index 4.", "k": ["index", "output", "array", "array from index", "input"]}
{"i": "5640873527214080", "t": "You are given a positive integer number and you have to return the greatest smaller tidy number of this input number. If the input number itself is tidy, then, it become the answer\rExample\rInput: 1234\routput: 1234\rinput: 100\routput: 99\rinput 143456\routput: 139999.\rPS.A tidy number is a number whose digits are in non-decreasing order.", "k": ["greatest smaller tidy", "positive integer number", "smaller tidy number", "positive integer", "return the greatest"]}
{"i": "5136136486780928", "t": "You are given a positive integer number and you have to return a boolean telling whether the input number is a tidy number or not. A tidy number is a number whose digits are in non-decreasing order. For example, 1234 is a tidy number, 122334 is also a tidy number but 143567 is not a tidy number.", "k": ["tidy number", "positive integer number", "tidy", "positive integer", "return a boolean"]}
{"i": "5759964380397568", "t": "You are given an integer array. You have to return/print an array where kth element of this array is the multiplications of all the elements from 0 to k-1 and from k+1 to n-1.\rExample\rinput: [1 2 5 6]\routput: [60 30 12 10]", "k": ["integer array", "array", "integer", "output", "return"]}
{"i": "5758891578097664", "t": "Perform an efficient DeepCopy of a linked list whose node is like below:public class Node\r\n{\r\n\tpublic int Value {get;set;}\r\n\tpublic Node Next{get;set;}\r\n\tpublic Node Random{get;set;}\r\n}The Random field points to any random node in the list.", "k": ["public node random", "public class node", "random field points", "public node", "node random"]}
{"i": "5180349953867776", "t": "Design an electronic voting system for india , design its schema , scaling its working, failure conditions & optimization", "k": ["electronic voting system", "scaling its working", "failure conditions", "system for india", "electronic voting"]}
{"i": "5685636615897088", "t": "find the isomorphic pairs of string !! \r a string is said to be isomorphic if its each alphabets can be replaced by another alphabet\r for ex \"abca\" and  \"zxyz\" are isomorphic but \"abca\" and \"pqrs\" is not isomorphic\r conditions :\r1 - A character can be replaced by itself. for ex   \"abcd\" and \"pbfg\" are isomorphic .\r2- No two characters can be replaced by same character . for ex \"abcd\" and \"bbcd\" are not isomorphic .", "k": ["isomorphic", "isomorphic pairs", "replaced", "abca", "pairs of string"]}
{"i": "5642303617105920", "t": "Find the subarray within an array (containing at least TWO number) which has the largest sum.\rFor example, given the array [-2,-1,-3,-4,-1],\rthe contiguous subarray [-2,-1] has the largest sum = -3.\rtry to do it in O(n) time\rFollowup, if input is stream, how to solve it\rpublic int maxSubArray(int[] nums) {}", "k": ["largest sum", "sum", "find the subarray", "array", "largest"]}
{"i": "5168978356862976", "t": "You are given a BST of integers and an integer K. You have to find the smallest greater integer then K in the BST.\rEx40 --- 50 --- 80\r\n |          |\r\n |         45\r\n20 --- 30\r\n |\r\n |\r\n10\r\n\r\nK = 35\r\nOutput: 40", "k": ["bst", "output", "integer", "smallest greater integer", "bst of integers"]}
{"i": "5722860023709696", "t": "Sorry had to remove this question", "k": ["remove this question", "question", "remove"]}
{"i": "5649004302958592", "t": "Given the following set of strings, write a function that stores this information. \r // /Electronics/Computers/Graphics Cards\r// /Electronics/Computers/Graphics Cards\r// /Electronics/Computers/SSDs\r// /Electronics/Computers/Graphics Cards\r// /Electronics/Computers/SSDs\r// /Electronics/TVs\r// /Electronics/Computers/Graphics Cards\r// /Electronics/TVs\r// /Electronics/TVs\r// /Garden\r// /Automotive/Parts\r Your datastructure should be able to provide information as such:\r// / = 11\r// /Electronics = 9\r// /Electronics/Computers = 6\r// /Electronics/Computers/Graphics Cards = 4\r// /Electronics/TVs = 3\r// etc\r// [\"/Electronics/Computers/Graphics Cards\", \"/Garden\"]", "k": ["graphics cards", "electronics", "computers", "graphics", "cards"]}
{"i": "5140007057620992", "t": "Write code for the following: given a text file containing this information (Date the customer is logged in, tab, customer id)\r04/11/2017 /t 0003\r04/12/2017 /t 0003\r04/13/2017 /t 0004\r04/13/2017 /t 0003\rHow to get the list of those customers that log in on three consecutive days.", "k": ["write code", "consecutive days", "text file", "date the customer", "date"]}
{"i": "5694206820483072", "t": "OOPS: How to design Amazon locker? Provide code using OOP", "k": ["design amazon locker", "amazon locker", "design amazon", "amazon", "locker"]}
{"i": "4803841041104896", "t": "How to merge two binary trees in place? (without creating a new node)", "k": ["trees in place", "merge two binary", "binary trees", "place", "merge"]}
{"i": "6009256496070656", "t": "13.\tWhat types of proactive selling / leads generation have you done and how do you go about preparing?", "k": ["proactive selling", "leads generation", "types of proactive", "selling", "leads"]}
{"i": "4815152911220736", "t": "12.\tPlease provide an example on how you developed a strategy for selling into the highest levels of your accounts or assigned territory?", "k": ["assigned territory", "territory", "provide", "developed", "strategy"]}
{"i": "4883356589228032", "t": "10.\tHow would you characterize how you work with your colleagues? and your manager?\r11.\tAnd how you worked with other functional areas: marketing, application engineering, product development, customer support, etc.? When would you leverage those resources?", "k": ["application engineering", "product development", "customer support", "functional areas", "leverage those resources"]}
{"i": "5953601101889536", "t": "5.\tDescribe your selling/ support approach to Middle East and North Africa companies?", "k": ["north africa companies", "middle east", "east and north", "north africa", "africa companies"]}
{"i": "5476963616555008", "t": "1.\tWhy does it interest you to join MathWorks?", "k": ["join mathworks", "mathworks", "interest", "join"]}
{"i": "5436315240759296", "t": "Consider 10 years down the line we have a mobile device which have 10 TB hard disk.Consider the device a file of 5TB and RAM on the device is 1GB. How will you sort the file of 5TB. You can use extra space but RAM is 1GB which is used by other application on the device also.", "k": ["hard disk.consider", "mobile device", "device", "ram", "disk.consider the device"]}
{"i": "5205996814204928", "t": "We define a k-subsequence of an array as follows\r1) it is a subsequence of consecutive elements in the array\r2) the sum of the subsequence's elements s, is evenly devisible by k(i.e. s % k == 0)\rGiven an integer and input array, find out the number of k-subsequences.\rExample: k=3 and array be [1 2 3 4 1]\rOutput: 4 ({1 2},{1,2,3},{2,3,4},{3})", "k": ["evenly devisible", "integer and input", "consecutive elements", "subsequence elements", "input array"]}
{"i": "5636146378833920", "t": "You are given an array with duplicates. You have to sort the array with decreasing frequency of elements. If two elements have the same frequency, sort them by their actual value in increasing order.\rEx: [2 3 5 3 7 9 5 3 7]\rOutput: [3 3 3 5 5 7 7 2 9]", "k": ["array with duplicates", "array with decreasing", "array", "duplicates", "sort"]}
