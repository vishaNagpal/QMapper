{"i": "5662374476906496", "t": "You are given many files of 6 GB, each having stream of integers. You have space of 4 GB left in your main memory (mainly to\u00a0swap out, swap in). You have to store sorted sequence of integers in all file in a other output file. How will you do that?", "k": ["stream of integers", "integers", "stream", "main memory", "file"]}
{"i": "5740518386958336", "t": "Design an authentication using AWS services like Api gateway and lambda.", "k": ["authentication using aws", "aws services", "services like api", "api gateway", "design an authentication"]}
{"i": "5761633184382976", "t": "Design an online chess game.\r It supports 3 mode:\rPlayer vs. AI\rPlayer vs. player\u00a0 (Offline)\rPlayer vs, player (Online)\r The questions asked were how will you assign a player to another player who wants to play. You need to think about how to divide your players into multiple groups of ratings, so that a newbie is not playing a grand master, rather with someone who is of his level only. Then the question was how will you design your system when a player comes in and say I want to play, and the max wait time is 1 min, you need to find a player suitable for his level", "k": ["online chess game", "chess game", "online chess", "player", "online"]}
{"i": "5761483355455488", "t": "Design a movies reviews aggregator system. Data should be fetched from movie rating providers like imdb, rotten tomatoes, etc", "k": ["reviews aggregator system", "movies reviews aggregator", "aggregator system", "reviews aggregator", "movies reviews"]}
{"i": "5645727452102656", "t": "Find the sum of n elements after a kth smallest element in BST. Tree is very large, you are not allowed to traverse the tree.", "k": ["kth smallest element", "find the sum", "element in bst", "kth smallest", "bst"]}
{"i": "5754278455541760", "t": "Design subscription based sports website which can display scores, game status, history for any games hld and lld", "k": ["design subscription based", "subscription based sports", "based sports website", "design subscription", "display scores"]}
{"i": "5718580230881280", "t": "Consider an infinite stream of numbers. At any point print smallest k elements.", "k": ["stream of numbers", "infinite stream", "numbers", "infinite", "stream"]}
{"i": "5080023686447104", "t": "Given an array of integers(duplicates allowed) return if it is a set of contiguous integers or not?\rInput: 5,2,3,6,4,4,6,6 Output: Yes (as it is from set of [2,3,4,5,6])", "k": ["duplicates allowed", "contiguous integers", "set of contiguous", "array of integers", "integers"]}
{"i": "5713149378953216", "t": "Given an array of integers with the property that arr[j] \u2013 arr[j-1] is either 1,0,-1 and a search value, provide an efficient search mechanism.", "k": ["efficient search mechanism", "provide an efficient", "search mechanism", "array of integers", "efficient search"]}
{"i": "6407010673754112", "t": "Given coin denomination of 3, 6 and 17, find the number of ways in which you can form a sum 'n'. How will do it for large numbers?", "k": ["form a sum", "coin denomination", "find the number", "find", "sum"]}
{"i": "5696371651248128", "t": "There is a huge road. Given are the following\r - Array D that stores the distance from a starting point where billboard can be installed.\r - Array C that stores the profit. C[i] -> profit if the billboard is installed at distance D[i].\r - dist -> minimum distance to maintain between the billboards.\r Assume you can install any number of billboards while maintaining a given minimum distance 'dist' between each of them. Find the maximum profit you can achieve.", "k": ["huge road", "array", "distance", "road", "profit"]}
{"i": "5682075022131200", "t": "Design an airport service that will be used to allocate a free runway when the plane is about to land. Data structure for the same. What if the runway is not available? Message passing between control centre and the plane. Focus on low-level design and code. Can the same runway be alloted to two different planes (locking)? Database storage needed?", "k": ["airport service", "allocate a free", "free runway", "land", "runway"]}
{"i": "5152888947474432", "t": "A smart-set is a set of distinct numbers in which all the elements have the same number of 1s in their binary form. The set of all smallest elements from each smart-set \rthat can be formed from a given array of distinct positive numbers is known as the smartest-set.\r So given an array of distinct numbers, outline the elements of the smartest-set in ascending sorted order.\r Example\rLet the array be {6 , 2 , 11 , 1 , 9 , 14 , 13 , 4 , 18}. \rIn binary form the set is {110, 010, 1011, 0001, 1001, 1110, 1101, 0100, 10010}. \rThe smart-sets are {1, 2, 4}, {6, 9, 18}, {11, 13, 14}.\r The smartest-set is {1,6,11} as each element is the smallest element from each smart-set.\r Input Format\r The first line of input consists of an integer t. This is the number of test cases. For each test case, \rthe first line of input contains an integer n. Here n is the number of elements in the array. The next line contains n space separated distinct integers which are the elements \rof the array.\r Output Format\r The output will space separated integer elements of the smartest-set in ascending order.\r Constraints\r 0 < t < 1000 (This is the number of test cases \r2 < n < 10000 (This is the number of integer elements of the array) \r1 < Xi < 100000 (This is the size of each element of the array)\r Sample input :\r3\r9\r6 2 11 1 9 14 13 4 18 \r3\r7 3 1\r3\r1 2 4\rSample Output :\r1 6 11\r1 3 7\r1 please send me javascript code", "k": ["elements", "array", "distinct numbers", "number", "distinct"]}
{"i": "5692073437560832", "t": "Name the asset that is an accumulated visual asset and can be utilized as a foundation, title, or in other piece of the screen?", "k": ["accumulated visual asset", "accumulated visual", "visual asset", "title", "foundation"]}
{"i": "5749167847112704", "t": "What do you believe are a few disservices of Android?", "k": ["disservices of android", "android", "disservices"]}
{"i": "5712301684948992", "t": "Tell me What Is the Google Android SDK?", "k": ["google android sdk", "android sdk", "google android", "sdk", "google"]}
{"i": "5662615129292800", "t": "Explain what is Android?", "k": ["android", "explain"]}
{"i": "5735650041528320", "t": "A graph has N vertices numbered from 1 to N. We have two lists. One list M consisted of edges between vertices. The other list K consists of restricted paths. We have to add edges one by one from M and check whether the addition of the particular edge leads to a path between the restricted vertices given in K. If it creates a path, we have to discard the edge.\r Example: N = 4; K = {(1,4)}; M = {(1, 2), (2, 3), (3, 4)}. Here, addition of edge (3, 4) will create a path between 1 and 4. Hence we discard edge (3, 4)", "k": ["edge", "path", "vertices", "vertices numbered", "graph"]}
{"i": "5688380906536960", "t": "You have given a string which consists of four characters {a,c,t,g}, find minimum length of unique substring which occurs only once.\r Eg:\r Input :\r#1 aacc\r#2 actg\r Output:\r#1 2 3\r#2 1 4\r Explain:\r aacc -> {aa, ac, cc} are the smallest unique string with single occurrence.", "k": ["find minimum length", "find minimum", "minimum length", "substring which occurs", "actg output"]}
{"i": "5675043355361280", "t": "why we need dua for love back ?", "k": ["love back", "dua for love", "back", "dua", "love"]}
{"i": "5769576525070336", "t": "What sort of help will you be offered once your application is discharged?", "k": ["application is discharged", "discharged", "sort", "offered", "application"]}
{"i": "5648209205002240", "t": "Will I have the capacity to get to the application while it's in advancement?", "k": ["advancement", "capacity", "application"]}
{"i": "5741478714802176", "t": "How is the app going to be hosted?", "k": ["hosted", "app"]}
{"i": "5668429911031808", "t": "What sort of help will I get all through the advancement procedure?", "k": ["advancement procedure", "procedure", "sort", "advancement"]}
{"i": "5653155665149952", "t": "What item the executives procedure will you use?", "k": ["item the executives", "executives procedure", "item", "executives", "procedure"]}
{"i": "5637620793606144", "t": "How to find if a Binary tree has an odd number of nodes without using node count? Binary tree does not have to be balanced", "k": ["node count", "binary tree", "odd number", "binary", "count"]}
{"i": "5696295658848256", "t": "Are there progressing costs once my application is discharged?", "k": ["application is discharged", "progressing costs", "discharged", "progressing", "costs"]}
{"i": "5656506008076288", "t": "Regardless of whether you need an iOS or an Android App?", "k": ["android app", "app", "android", "ios"]}
{"i": "5727261567746048", "t": "For what reason would You Like to Develop an App?", "k": ["develop an app", "app", "develop", "reason"]}
{"i": "5726743017553920", "t": "How Do I Manage Different Display Resolutions?", "k": ["display resolutions", "manage different display", "resolutions", "manage", "display"]}
