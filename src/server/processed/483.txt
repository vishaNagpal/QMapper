{"i": "6256794", "t": "Write an SQL query to select the nth row from a table.\rI asked the interviewer that, can I assume say the nth record is based on a primary/unique key column or any column, he said no, the question is just select the nth row.", "k": ["write an sql", "sql query", "select the nth", "nth row", "nth"]}
{"i": "6292787", "t": "If you were asked to design an efficient elevator system for a 100-storey building, enumerate the list of questions you would ask that you feel would be important to get answered before you start your design.", "k": ["efficient elevator system", "enumerate the list", "efficient elevator", "elevator system", "list of questions"]}
{"i": "6268805", "t": "You are developing a component that requries parsing a lot of XML tags. You have abstracted the responsibility of finding the handler to a class named XMLElement Dictionary. Your will be invoking GetHandlerTag method of this class to find the corresponding handler method for a given element name (code snippet is shown below).\r Typedef HRESULT(*PFNElementHandler)(IXMLAttribute* pAttributes, unsigned_int32nAttributes);\r PFNElementHandler pfnElementHandler =( PFNElementHandler)\rxmlElementDictionary.GetHandlerTag(elementName);\rif(NULL!=pfnElementHandler)\r{\r(*pfnElementHandler)(pAttributes, nAttributes);\r}\r  1. Define a datastructure that you will use inside this class to store the XML tags that you can use in your lookup logic for the fastest possible lookup on a given hardware. Call out your assumptions.\r2. Implement the GetHandlerTag method.", "k": ["developing a component", "component that requries", "requries parsing", "parsing a lot", "xml tags"]}
{"i": "6251783", "t": "A mail server exposes an interface as mentioned below. When given a day in the calendar a user, it gets the meetings mentioned as slots in calendar with start and end time for each meeting.\r CalendarSlot *GetMeetings(char[] username, unsigned int day);\rtypedef struct\r{\runsigned int StartTime;\runsigned int endTime;\r}CalendarSlot\r The developer has implemented a mail client function as mentioned below. This function takes in a list of users, internally uses the GetMeetings mail server interface to get the list of meetings for those users. Eventually, it gives out the first 10 free slots, within the next 3 days from the day specified, which is of the mentioned slotDuration. Everyone in the userList have to be free from meetings during these slots returned, without exception.\r Assumptions:\r1. Meeting start time and end times will align at the beginning of an hour (8:00,9:00etc....)\r2. SlotDuration will be in multiple of full hours (1hrs, 2hrs,etc....)\r CalendarSlot * GetFreeSlots (char [][] userList, unsigned int day, unsigned int slotDuration)\r Write the test cases for testing GetFreeSlots function. NOTE: Assume that GetMeetings function is already well tested.", "k": ["unsigned int", "unsigned int day", "mail server exposes", "unsigned", "mentioned"]}
{"i": "6360675", "t": "Given two arrays A & B of length l, containing non negative integers, such that the sum of integers in A is the same as sum of integers in B.( The numbers need not be the same in both the arrays.)\r Now if you start with an index 'k' in each array and do the following summation, SUMMATION (Ak-Bk), where Ak is the value at index k of array A, and Bk is the value at index k of array B, where 'k' increments and wraps back all the way to k-1, the final sum value will be zero.\r Question: Find a suitable 'k' such that during any point in the summation, SUMMATION(Ak-Bk) is always non negative. Find such a 'k' in O(n) time.", "k": ["sum of integers", "negative integers", "integers", "summation", "array"]}
{"i": "6359673", "t": "Print nodes at k distance from a given node like :\rboth upper side and lower side", "k": ["print nodes", "upper side", "lower side", "print", "side and lower"]}
{"i": "6354703", "t": "A fair die is rolled, you will be given the amount in dollars, equals to the number that shows up on the die. Up to how much dollars you will pay for playing once?", "k": ["number that shows", "fair die", "die is rolled", "die", "rolled"]}
{"i": "6226742", "t": "Toughest project, One improvement to current Amazon website (may be related to usability or new feature), few object-oriented concepts.", "k": ["current amazon website", "amazon website", "toughest project", "current amazon", "object-oriented concepts"]}
{"i": "6266747", "t": "Write a function to find out longest palindrome in a string.\rI was also asked about one interesting system design (not Object Oriented) but I don't remember it properly (I was interviewed almost one month back)", "k": ["write a function", "function to find", "find out longest", "longest palindrome", "object oriented"]}
{"i": "6353707", "t": "Implement queue using stack/s.", "k": ["implement queue", "queue using stack", "implement", "stack", "queue"]}
{"i": "6221733", "t": "Given a binary tree write a function to save it to file and also to reconstruct tree by reading from same file.", "k": ["binary tree write", "write a function", "function to save", "binary tree", "tree write"]}
{"i": "6350720", "t": "Given set of n points (Xi, Yi), write a function to find k nearest points from origin.", "k": ["write a function", "function to find", "find k nearest", "nearest points", "points from origin"]}
{"i": "6222750", "t": "A bag contains 5 coins. Four of them are fair and one has heads on both sides. You randomly pulled one coin from the bag and tossed it 5 times, heads turned up all five times. What is the probability that you toss next time, heads turns up. (All this time you don't know you were tossing a fair coin or not).", "k": ["heads", "bag", "coin", "fair", "times"]}
{"i": "6238751", "t": "How do you avoid dangling pointers and dangling references? Can you have a const reference to an object i.e. MyClass& const refToObj;? Does having a const* to an object guarantee safety from seg faults? What is the best alternative?", "k": ["avoid dangling pointers", "avoid dangling", "dangling pointers", "dangling", "dangling references"]}
{"i": "6308730", "t": "What is a dangling reference? Give sample code.", "k": ["dangling reference", "reference", "give sample code", "dangling", "give sample"]}
{"i": "6249744", "t": "Why does the following code throw segmentation fault?int main(){\r\n\tint myArray[10] = { 1, 2 };\r\n\tdelete[] myArray;\r\n}", "k": ["throw segmentation fault", "code throw segmentation", "int main", "int myarray", "segmentation fault"]}
{"i": "6351714", "t": "hw will u improve the 5s in ur shopfloor", "k": ["shopfloor", "improve"]}
{"i": "6254730", "t": "Find the intersection of 2 unsorted arrays.\r The interviewer asked me about the various methods possible and asked me to code one.", "k": ["unsorted arrays", "find the intersection", "find", "unsorted", "arrays"]}
{"i": "6269735", "t": "Verify if two BSTs are same, if same is defined as BSTs contain same sorted int array.", "k": ["sorted int array", "int array", "sorted int", "defined as bsts", "bsts"]}
{"i": "6318736", "t": "Find all numbers with same popcount number", "k": ["popcount number", "find all numbers", "find", "popcount", "numbers"]}
{"i": "6279719", "t": "Design a resource pool, which promises FIFO to every client", "k": ["promises fifo", "design a resource", "resource pool", "fifo", "design"]}
{"i": "6333723", "t": "Find kth number in a BST", "k": ["find kth number", "find kth", "bst", "kth number", "find"]}
{"i": "6335704", "t": "Given a N*N Matrix. \rAll rows are sorted, and all columns are sorted.\rFind the Kth Largest element of the matrix.", "k": ["matrix", "sorted", "kth largest", "kth largest element", "rows are sorted"]}
{"i": "6265688", "t": "You are given a array with rows sorted and column sorted. You have to print entire array in sorted order.", "k": ["rows sorted", "column sorted", "sorted", "print entire array", "array with rows"]}
{"i": "6299701", "t": "Write a query which return 5 persons who had spent most from a table and table contains customer id, product id and expenses. Customer id can be duplicate.", "k": ["write a query", "query which return", "table", "write", "return"]}
{"i": "6322697", "t": "Write a code which return square of any number, but you can not use Star or carrot sign.", "k": ["star or carrot", "write a code", "carrot sign", "code which return", "return square"]}
{"i": "6306701", "t": "There is 3 text file, like 2008.txt, 2009.txt etc. Every file contains customer id, product id and expenses. Now write java code which will return 5 persons who spent most in these three files. Customer id can be duplicate all over files.", "k": ["text file", "text", "customer", "file", "files"]}
{"i": "6248678", "t": "what is integration service with detailed", "k": ["service with detailed", "integration service", "detailed", "integration", "service"]}
{"i": "6315676", "t": "What happens when you get a segmentation fault? how do you get it and how is it implemented?", "k": ["segmentation fault", "fault", "segmentation", "implemented"]}
{"i": "6291664", "t": "Given an array of integers, each element represents the max number of jumps can make forward. What is the minimum number of element selections to reach the end of the array (starting from the first element). \r Example: arr = 1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9\rHere the min # of selections is : 3\rwith the sequence : 1-> 3 -> 8 ->9\rFirst element is 1, so can only go to 3. \rSecond element is 3, so can make at most 3 jumps: eg to 5 or 8 or 9.\rIf an element is 0, then cannot make any jumps", "k": ["represents the max", "max number", "element", "make forward", "element represents"]}
