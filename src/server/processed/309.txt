{"i": "15424135", "t": "Count the number of shapes in a  given (1/0)  matrix. A cluster of consecutive (not diagonal) 1's defines one shape.\reg \r1 1 0 0 1\r1 0 0 1 0\r1 1 0 1 0\r0 0 1 0 0\r No of shapes = 4", "k": ["count the number", "number of shapes", "matrix", "shapes", "count"]}
{"i": "15474672", "t": "Write a function which compress string AAACCCBBD to A3C3B2D", "k": ["compress string aaacccbbd", "string aaacccbbd", "write a function", "function which compress", "compress string"]}
{"i": "15468738", "t": "Given an expression (in single variable) like 4x+13(x-(4x+x/3)) = 9, evaluate x\rThe expression is a string and the variable is always x.", "k": ["single variable", "expression", "variable", "evaluate", "single"]}
{"i": "15466752", "t": "Given a list of integer numbers, a list of symbols [+,-,*,/] and a target number N, provide an expression which evaluates to N or return False if that is not possible.\re.g. let the list of numbers be [1,5,5] and the target number is 9, one possible solution could be 5+5-1.", "k": ["return false", "provide an expression", "list of symbols", "expression which evaluates", "list of integer"]}
{"i": "15444994", "t": "C# Question.\r class Testint x;\r\nint y;Where the memory would be allocated ? Since both are primitive datatypes would it be allocated on stack or heap ?", "k": ["question", "class testint", "stack or heap", "allocated", "testint"]}
{"i": "15418026", "t": "N people race against each other in a pair of 2 . During prize distribution they are arranged in such a way such that on the left side of that person is a person whom the player lost to and on the right side is a person whom he won .Write an algorithm to arrange the players in that order.", "k": ["write an algorithm", "people race", "prize distribution", "algorithm to arrange", "player lost"]}
{"i": "15436038", "t": "Given a list of quantity of books and corresponding prices.User wants to purchase Q quantity of books. Provide an algorithm which suggest user Q Quantity of books with minimum price\re.g\rQuantity of Books  10   20    30     15     25\rprice of books       100  200  120   130  165\ruser wants to purchase 500 quantity of books.come up with minimum price", "k": ["quantity of books", "quantity", "books", "quantity of books.come", "minimum price"]}
{"i": "15418018", "t": "Given n positive real numbers, find whether there exists a triplet among this set such that, the sum of the triplet is in the range (1, 2). Do it in linear time and O (1) space.", "k": ["positive real numbers", "real numbers", "positive real", "exists a triplet", "triplet"]}
{"i": "15444945", "t": "Given an array sort all the elements in  even positions in ascending order and odd positions in descending order", "k": ["array sort", "positions in ascending", "odd positions", "ascending order", "descending order"]}
{"i": "15444944", "t": "Given an array elements, Find the maximum number which can be formed by the array elements\rEg input \u2013 a[ ] = {9,6,8,1]\rOutput -    9861", "k": ["find the maximum", "array elements", "output", "maximum number", "elements eg input"]}
{"i": "15422001", "t": "Find the occurences of each word in a sentence/\r e.g :\r\"Hi I am there, am good\"\ram=2, good=1,Hi=1, I=1,there=1\r Print in sorted order as per count.\rIf count is same, it should be alphabetically sorted.", "k": ["find the occurences", "print in sorted", "print", "good", "sorted order"]}
{"i": "15417986", "t": "Write a function that gets a billion integers. How can you find the midian in most efficient way (time)?\r same question, but the input is an endless stream of integers, and we want to find the current median.", "k": ["write a function", "billion integers", "write", "integers", "function"]}
{"i": "15464714", "t": "given a maze (matrix bool[N][M]) where 0 = free way, 1= obsticle - How many ways are there to reach from [0][0] to [N][M]? write a non-recursive solution.", "k": ["matrix bool", "obsticle", "maze", "matrix", "bool"]}
{"i": "15428974", "t": "Design a web browser like Chrome with the tab functionality. \rAlso describe the data structure to be used.", "k": ["browser like chrome", "design a web", "tab functionality", "web browser", "chrome"]}
{"i": "15421981", "t": "merge two unsorted linked-list into one new sorted linked list, off course in a efficient way", "k": ["sorted linked list", "merge two unsorted", "linked list", "unsorted linked-list", "sorted linked"]}
{"i": "15417968", "t": "Given a ternary string, you have to count the total number of contiguous substrings (contigious set of characters), that you can form from this given string such that they comprise of either only one or two different characters.\r Please note that a unique substring will be decided by its starting and ending indices. So, a substring 'ab' with starting and ending indices being 1 and 2 respectively should be considered different from a substring 'ab' with starting or ending indices (or both) other than 1 and 2 respectively.\r For example:\r input ternary string - aabc\routput - 8\rThe above string comprises of the following substrings that have either one or two of the characters - a, a, b, c, aa, ab, bc and aab. So the final answer is a total of eight substrings.\r input ternary string - abc\routput - 5\rThe above string comprises of the following substrings that have either one or two of the characters - a, b, c, ab and bc. So the final answer is a total of five substrings.\rinput ternary string - baaccb\routput - 16\rThe above string comprises of the following substrings that have either one or two of the characters - b, a, a, c, c, b, aa, cc, ba, ac, cb, baa, aac, acc, ccb and aacc. So the final answer is a total of sixteen substrings", "k": ["input ternary string", "string", "ternary string", "substrings", "contigious set"]}
{"i": "15467671", "t": "We have array that contain integer number, I would like to find the numbers that repeated k time in this array. The array is not sorted, and the numbers are not bounded.\r Example,\r A(20, 6, 99, 3, 6, 2, 1,11,41, 31, 99, 6, 7, 8, 99, 10, 99, ,6)\r Find the numbers repeated more than 3 times.\r Answer: 6,99\r possible answer using bit wise operations (xor) or combination? Efficiency in running time Big(o) is required as well as the space capacity.", "k": ["find the numbers", "integer number", "array", "numbers", "find"]}
{"i": "15424022", "t": "Given that a disk page can hold at most 1K bytes, a search key uses 4 bytes, and a pointer uses 4 bytes. \r Can we analyze the size of an expendable hashing index to index a table column which is defined using unique constraint. What would be the minimum and maximum size of the expendable hasting index if the bucket address table is fully extended?", "k": ["bytes", "disk page", "page can hold", "search key", "index"]}
{"i": "15431016", "t": "A tree-map is implemented using BST, the complexity of search in a tree-map is guaranteed to be O(logn). How is that case of search complexity O(n) [obtained when the BST is like a linked list from the root node, only in single side] in BST avoided in tree-map.", "k": ["bst", "tree-map is implemented", "tree-map is guaranteed", "tree-map", "logn"]}
{"i": "15424021", "t": "Which data structure is preferred for performing concurrency, serialization out of BST and Hash-Table.?", "k": ["performing concurrency", "data structure", "structure is preferred", "preferred for performing", "bst"]}
{"i": "15428960", "t": "Compare the space complexity of BST and Hash-Table.", "k": ["bst and hash-table", "complexity of bst", "compare the space", "space complexity", "bst"]}
{"i": "15428959", "t": "Given a BST and a node, write a function to find the next biggest element in the BST in preferred language.", "k": ["write a function", "preferred language", "function to find", "biggest element", "bst in preferred"]}
{"i": "15424006", "t": "How can we implement a geo location plugin on any browser", "k": ["geo location plugin", "implement a geo", "geo location", "location plugin", "browser"]}
{"i": "15421954", "t": "Design a realtime service that tells users which of their friends are currently online.\r Your service must implement two functions:// Return a list of friends of `user_id` that are online\r\n\tList<user_id> getOnlineFriends(user_id)\r\n\r\n\t// Tell the service that `user_id` is online\r\n\tsetOnline(user_id)You may assume that you have access to the function `getFriendIds(user_id)` which returns you a list of all friend ids for a given user id", "k": ["design a realtime", "realtime service", "user", "online list", "service"]}
{"i": "15419952", "t": "Given a hashmap M which is a mapping of characters to arrays of substitute characters, and an input string S, return an array of all possible mutations of S (where any character in S can be substituted with one of its substitutes in M, if it exists).\r What is the time complexity?  What is the space complexity?  Can you optimize either?Example input:\r\n\tM = { f: [F, 4], b: [B, 8] }\r\n\tS = fab\r\n\r\nExpected output:\r\n\t[fab, Fab, 4ab, faB, FaB, 4aB, fa8, Fa8, 4a8]", "k": ["substitute characters", "return an array", "fab", "arrays of substitute", "characters"]}
{"i": "15435963", "t": "Given an array of real numbers A of length n, and some integer k such that 0 <= k < n, write a function that returns the kth largest number in A, where k=0 refers to the largest number.\r What is the time complexity?  What is the space complexity?  Can you optimize either?Example input: A = [0.5, 2.5, 1], n=3, k=1\r\nExpected output: 1", "k": ["kth largest number", "largest number", "write a function", "kth largest", "real numbers"]}
{"i": "15420945", "t": "Find an ancestor of given two node from a tree in O(n) time. The tree is binary tree.", "k": ["find an ancestor", "time", "find", "tree", "ancestor"]}
{"i": "15430972", "t": "Let assume you have access full heap memory. Now design & write code malloc and free operation.", "k": ["full heap memory", "access full heap", "heap memory", "access full", "full heap"]}
{"i": "15430950", "t": "Suppose we are detecting fraud cheques and we found the cheques with the following list of patterns are fraud:\r 111122234455\r1234\r22334455\r11111111\r234567\retc.\r Now if you have a new cheque and wan to detect fraud in O(1) time what data structure you want to use?", "k": ["list of patterns", "detecting fraud cheques", "detecting fraud", "suppose", "fraud"]}
{"i": "15419917", "t": "Suppose a customer buys items for $10 in a shop and the cashier swipe her card at a POS charging $10. Assume that the card has $100 balance before swiping. POS sends the $10 transaction to a machine A in the Amazon cloud. A calls a service to update transaction and card balance, and then sends acknowledgement back to the POS. But the ack got lost in the middle and POS sends another $10 transaction request. How would you make sure that the balance is $90, not $80. And how would you distinguish multiple try with two legitimate $10 transaction back to back. \r Hint: You can't use more than one transaction entry in Database and you don't have the rollback provision.", "k": ["customer buys items", "suppose a customer", "customer buys", "buys items", "cashier swipe"]}
