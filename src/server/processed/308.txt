{"i": "15503772", "t": "Write a method that generates a random sequence of numbers of specific percentages", "k": ["write a method", "specific percentages", "method that generates", "generates a random", "random sequence"]}
{"i": "15491794", "t": "how to find lowest common ancestor of a binary tree\r??\rnot BST", "k": ["find lowest common", "lowest common ancestor", "binary tree", "find lowest", "lowest common"]}
{"i": "15519757", "t": "The diameter of a tree is the number of nodes on the longest path between two leaves in the tree. The diagram below shows a tree with diameter nine, the leaves that form the ends of a longest path are shaded (note that there is more than one path in each tree of length nine, but no path longer than nine nodes).  \r In particular, note that the diameter of a tree T is the largest of the following quantities:\r the diameter of T's left subtree\rthe diameter of T's right subtree\rthe longest path between leaves that goes through the root of T \rGiven the root node of the tree, return the diameter of the tree", "k": ["longest path", "diameter", "tree", "path", "longest"]}
{"i": "15503766", "t": "write the most efficient (in terms of time complexity) function getNumberOfPrimes which takes in an integer N as its parameter. \r to return the number of prime numbers that are less than N\r Sample Testcases:\rInput #00:\r100\rOutput #00:\r25\r Input #01:\r1000000\rOutput #01:\r78498", "k": ["time complexity", "function getnumberofprimes", "input", "output", "terms of time"]}
{"i": "15500777", "t": "longest common subsequnce: given two lists, find the longest sublist (in order) that is the same", "k": ["longest common subsequnce", "common subsequnce", "longest sublist", "longest common", "find the longest"]}
{"i": "15488769", "t": "You are given an array of size N containing negative and positive real numbers. Zero may or may not be present in the array. The requirement is to rearrange the array using O(N) time and O(1) space so that all negative numbers come before all positive elements. Develop a program to read a real number array of size N from user, and then arrange it as explained above.\rConstraints :\r(i)  The value of N has to be read from user, and the memory for array has to be allocated dynamically. The real numbers will be also read from user. The menu-driven program should also have an option to populate the array with random data, if the user wants to do so.\r(ii) A maximum of 3 passes allowed  over the entire array. O(N) time expected.\r(iii) O(1) extra space permitted \u2013 creating copy of array etc not allowed. \r(iv) Program must work properly even if zero is NOT present in array.", "k": ["array", "user", "real numbers", "numbers", "real"]}
{"i": "15519735", "t": "Implement LookAndSay function. For example, first, let user input a number, say 1. Then, the function will generate the next 10 numbers which satisfy this condition:\r1, 11,21,1211,111221,312211...\rexplanation: first number 1, second number is one 1, so 11. Third number is two 1(previous number), so 21. next number one 2 one 1, so 1211 and so on...", "k": ["implement lookandsay function", "implement lookandsay", "number", "lookandsay function", "implement"]}
{"i": "15489754", "t": "There is rotated sorted array.Write the program to find  any element in that array\rOriginal Array A={1,2,3,5,6,7,8}\r Rotated Array B={5,6,7,8,1,2,3}\r Write the program to find any element in array B", "k": ["array original array", "rotated sorted array.write", "write the program", "program to find", "find any element"]}
{"i": "15495735", "t": "Implement DFS for binary tree", "k": ["implement dfs", "dfs for binary", "binary tree", "dfs", "implement"]}
{"i": "15532665", "t": "There are 2 sorted sets.Find the common elements of those sets\re.g.\rA={1,2,3,4,5,6}\rB={5,6,7,8,9}\ro/p C={5,6}\r Complexity should ne 0(n+m) where n and m is the size of the first and second set respectively\r Which data structure should be used to store the output", "k": ["sorted sets.find", "store the output", "sets.find the common", "common elements", "data structure"]}
{"i": "15496742", "t": "enumurate all phone numbers by the digit dial on the phone keypad", "k": ["phone keypad", "digit dial", "phone numbers", "enumurate all phone", "enumurate"]}
{"i": "15496741", "t": "Given a string and a dictionary. Break the string into meaningful words.", "k": ["dictionary", "string", "meaningful words", "break", "words"]}
{"i": "15489746", "t": "write a function to sum two single linked lists that represents binaries numbers", "k": ["represents binaries numbers", "single linked lists", "write a function", "binaries numbers", "function to sum"]}
{"i": "15488746", "t": "explain and write algorithm that implements and infinite binary counter, where add() takes O(1) time complexity", "k": ["infinite binary counter", "time complexity", "explain and write", "binary counter", "write algorithm"]}
{"i": "15496728", "t": "What is the difference between a class method and an instance method?", "k": ["class method", "instance method", "method", "difference", "class"]}
{"i": "15500735", "t": "Implement a set that supports insert, remove and getRandomElement() operations.", "k": ["remove and getrandomelement", "operations", "implement a set", "supports insert", "set that supports"]}
{"i": "15503726", "t": "I have 4 files,they are a.abc,b,abc,c.abc and d.abc. \ra.abc file contains \rfile:b.abc\rvalue:4\rfile:c.abc\rvalue:6\r and c.abc file contains\rfile:d.abc\rvalue:7\rfile:e.abc\rvalue:3\r so now i want to read a.abc file and get the file name and check that file is exist or not if file is exit read the value and print ...these are all based on file hierarchy.", "k": ["file", "read a.abc file", "a.abc file", "d.abc", "files,they"]}
{"i": "15518727", "t": "Provide a datastructure that can perform :\r 1. insert\r2. delete\r3. find min\r4,. find max\r5. delete min\r6. delete max\r all in O(1) time.", "k": ["provide a datastructure", "delete", "provide", "perform", "find"]}
{"i": "15500701", "t": "How do you remove repeated values from a INT array, returning the resultant array in the same order as original ?", "k": ["returning the resultant", "order as original", "int array", "remove repeated", "resultant array"]}
{"i": "15501689", "t": "we have given a char array like \u201ca1b2c3\u2033 we have to convert this array to array like this \u201cabbccc\u201d .This has to be done in place as we have given that array has just enough space to hold the expanded array.\r example:\r 1)input: a1b1c1\r output:abc\r length of array will be shortened.\r 2)input: a2b2c2\r output:aabbcc\r length of array will be equal to given array.\r 3)input: a3b4\r output:aaabbbb\r length of array will be greater than given array.", "k": ["array", "space to hold", "hold the expanded", "input", "output"]}
{"i": "15486685", "t": "Design a scheduling system which can run 10M jobs. Jobs can be scheduled to run on a time of day, some day of the week, a particular day of the month etc.", "k": ["design a scheduling", "scheduling system", "jobs", "design", "day"]}
{"i": "15487682", "t": "A robot is placed on an infinite 2D grid. The robot is initially facing the east direction. It moves in a spiral movement turning to its left after each move. The movements are given as an input array.\rFor example, assume the Robot is initially at (x,y) and the movement array is [4,3,5,2,1,6,...]. \rAfter 1st move, Robot will be at (x+4,y)\rAfter 2nd move, Robot will be at (x+4,y+3)\rAfter 3rd move, Robot will be at (x-1,y+3)\rAfter 4th move, Robot will be at (x-1,y+1)\rAfter 5th move, Robot will be at (x,y+1)\rAfter 6th move, Robot will be at (x,y+7)\rand so on. \rFind the minimum area of the rectangle which can enclose all these points.", "k": ["robot", "move", "robot is initially", "grid", "infinite"]}
{"i": "15487664", "t": "Consider a system of n nodes numbered 1 to n. Each node has its id(1 to n) and a value associated with it say val. Now Every node has a send method send(int to , int val) and receive method int receive(int from).\r So if node 1 wants to send value , it does like this . send(1,val).\r Using these two methods, write a distributed algorithm. Such that when the algorithm finishes, every node in the system knows the sum of the values of all the nodes in the system.", "k": ["node", "nodes numbered", "send", "int", "system"]}
{"i": "15474731", "t": "Write algorithm (code) to created a minimal height binary tree from a sorted array.", "k": ["minimal height binary", "height binary tree", "write algorithm", "sorted array", "created a minimal"]}
{"i": "15418115", "t": "Have you heard of the data structure called heaps? What do you know about them? Where would you use heaps and why?", "k": ["data structure called", "structure called heaps", "data structure", "structure called", "called heaps"]}
{"i": "15435114", "t": "What do you know about hash tables? Talk about collisions and collision handling methods. What are the cons of using chaining?\r -- Essentially he wanted to hear about complexity and about the effects of chaining on the complexity.", "k": ["hash tables", "collision handling methods", "tables", "hash", "handling methods"]}
{"i": "15465824", "t": "Given a list of interval , find the maximum overlaping. For ex if input is 0,5  2,9   8,10   6,9  then ans is 2 as 8,10 overlap in 2,9 and 6,9", "k": ["list of interval", "find the maximum", "maximum overlaping", "interval", "find"]}
{"i": "15445031", "t": "2.write a program to diaplay the advisered average for the list of numbers my omitting the largest number in the series.\reg :3,6,12,55,289,600,534,900 and 172.\ravg=(3+6+12+55+289+172) /6and eliminating 534,900,600", "k": ["program to diaplay", "diaplay the advisered", "advisered average", "omitting the largest", "largest number"]}
{"i": "15474681", "t": "1.Substring Addition\rWrite a program to add the substring\reg :say you have a list {1 7 6 3 5 8 9 } and user is entering a sum 16.Output should display (2-4) that is {7 6 3} cause 7+6+3=16.", "k": ["addition write", "write a program", "entering a sum", "program to add", "add the substring"]}
{"i": "15424146", "t": "You have a bunch of files and folders, Design a playlist which can have any file from any folder and a player that plays it", "k": ["design a playlist", "player that plays", "design", "bunch of files", "files and folders"]}
