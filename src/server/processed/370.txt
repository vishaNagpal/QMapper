{"i": "13717672", "t": "Given a 10GB file of integers and a RAM that can hold only 4GB values, how would you sort the integers in the file.", "k": ["ram", "sort the integers", "file", "integers", "hold"]}
{"i": "13728664", "t": "Given a binary tree print all the nodes that lie in a vertical line. So say the binary tree is root 11 -> left child 2 and right child is 15. 2 has left child 10 and right child 1 and 15 has left child 6 and right child 7.\rThe output will be\r10\r2\r11,1,6\r15\r7\rThe tree is drawn in such a way that from a node, if a left and a right traversal is done, the node lies in the vertical line with the grand parent.", "k": ["binary tree print", "binary tree", "left child", "tree print", "vertical line"]}
{"i": "13719675", "t": "Given a m x n array that contains integers (positive and negative) find the rectangular sub array for which the sum of elements is maximum i.e. from all the sub arrays that can be formed from the given array, the sum of which sub array is the maximum.\r The brute force method takes O(n^4), is there any better way to do this?", "k": ["positive and negative", "sum of elements", "find the rectangular", "array", "rectangular sub array"]}
{"i": "13730669", "t": "in this round the question was\rjava solution will be preferred.\rprogrammar will get benefits.\rFinding data on a huge hard disk has been a difficult task for computer manufacturers. In the constant quest to speed up the seek-time to find data, they've come up with a new algorithm. A simplistic view of a hard disk is as follows: \rA hard disk consists of several platters, each of which has a head for reading and writing data. Each platter is divided into 80 tracks, numbered 1 to 80. Initially all the heads are on track 1. Once a head reaches a track, it can read all the data requests that have come in so far for that track, in one read-operation, which takes one unit of time. A head takes one unit time to move from one track to the neighbouring track. To minimize the seek-time, after every read operation, the head will move in the direction of the nearest pending request. That is, if the head was moving toward track 80 and while it was on track 5, two requests came, one each for track 2 and track 18. The head would continue to move in the same direction, read the data on track 18, re-evaluate the nearest track to be 2 and start moving toward track 2. If two competing requests for different tracks are equidistant from the head, then it will move in the direction of track 1. Initially the head of all platters is at rest. The head does not move if there are no requests for any track at the particular time. \rThe head on each platter follows this sequence during each time unit: - \r1.All the requests for the current time unit are noted. \r2.If there are any requests for the current track, read occurs in the same time unit. \r3.If there were no reads, the head moves, if necessary. \r4.Decides the direction of movement, if necessary. \rYou have to write a program to calculate the number of fulfilled requests per platter, after the specified time. If a particular platter has had no read-requests throughout the simulation, its count of fulfilled requests is '0'. The simulation starts at the beginning of time unit 1 and finishes at the end of time unit T \rInput specification:\rThe first line of input will be an integer P (0 \r<= 20), signifying the number of platters. \rThe second line of input will be an integer T, specifying the time unit after which the output is to be printed. \rThe third line of input will be an integer N (0<=N<= 100), specifying the number of read requests that are coming in. \rThe next N lines will contain the read requests in the following format: \r<time-of-request><space><platter-number><space><track-number> \rPlatter numbers start from 1 to P \rAll of the above will be integers separated by a single space. \rOutput specification:\rYour program has to print N lines of output in ascending order of platter number in the following format: \r<platter-number><hyphen><requests-fulfilled> \rSample Input and Output:\r Input:\r2\r5\r4\r1 1 1\r1 1 2\r3 2 3\r2 1 3\r Output:\r1-3\r2-0\r Input:\r3\r53\r7\r2 3 50\r51 1 2\r1 1 3\r51 1 2\r1 2 80\r2 2 5\r2 2 1\r Output:\r1-3\r2-2\r3-1", "k": ["track", "head", "time unit", "time", "requests"]}
{"i": "13716680", "t": "hi to all tech brains.\rwe made an interview round and ask this problem.\rproblem needs complete solution in java.\rAny one of you who can solve it may appreciate and will get some benefits.\rIn this problem, you have to implement a sorting algorithm called Tournament sort, which uses a complete\rbinary tree.\rThe depth D of the tree will be given as input. Also, N positive integers will be given, where N is the Dth\rpower of 2 (ie, 2 ** D).\rConstruct a complete binary tree of depth D and fill in the leaf nodes with the N given integers in the order\rgiven ie. the first integer should be at the leftmost leaf and the last integer should be at the rightmost leaf.\rNext, update all the non-leaf nodes in the tree such that each nonleaf node contains the maximum of the\rvalues in its children. Thus, the root will contain the maximum of all the N integers.\rImplement a procedure \u2019maxdelete\u2019 which essentially removes the maximum value from the tree and updates\rthe tree as follows:\r    1. traverse the tree from the root\r    2. find the leaf with the maximum value ie. the value at the root. (note that in this tree, if the value at a\r        non-leaf node is T, either its left child or its right child will have value T).\r    3. replace the value at that leaf node with -1 and\r    4. update the rest of the non-leaf nodes such that each non-leaf node contains the maximum of the\r        values in its children.\rPerform the \u2019maxdelete\u2019 operation 3 times on the tree and print out the INORDER traversal of the tree after\reach operation.\rExample\rGiven depth = 2\rGiven integers: 25 57 37 48\rConstructed and updated tree:\r                   57\r                /        \\\r              57         48\r             /   \\         /   \\\r           25  57    37   48\r after first 'maxdelete'\r                   48\r                /        \\\r              25         48\r             /   \\         /   \\\r           25  -1    37   48\r after second 'maxdelete'\r                   37\r                /        \\\r              25         37\r             /   \\         /   \\\r           25  -1    37   -1\r after third 'maxdelete'\r                   25\r                /        \\\r              25         -1\r             /   \\         /   \\\r           25  -1    -1   -1\r Input Specification\rThe input will consist of a positive integer D followed by a positive integer N (where N is the Dth power of\r2) followed by N positive integers. All the integers are separated by a single space and will be on a single\rline. There will be no duplicates among the N integers. D will be greater than 1 and less than 9.\rOutput Specification\rThe output should consist of 3 lines. Each line should contain the INORDER traversal of the tree after a\r\u2019maxdelete\u2019 operation. All the integers on a line should be separated by a single space.\rSample Input/Output\rInput\r2 4 25 57 37 48\rOutput\r25 25 -1 48 37 48 48\r25 25 -1 37 37 37 -1\r25 25 -1 25 -1 -1 -1", "k": ["tree", "integers", "input", "tech brains", "maximum"]}
{"i": "13716677", "t": "int count = 0;\rfor(int i=0; i < 10; ++i)\r\tcount = count++;\r std::cout << count;\r what is the output for the above c++ code?", "k": ["int count", "count", "int", "std", "cout"]}
{"i": "13724667", "t": "Definition of high-level operating system (HLOS).", "k": ["high-level operating system", "hlos", "definition of high-level", "operating system", "high-level operating"]}
{"i": "13729662", "t": "In an unsorted array of first N natural numbers. The array contains a number which is dulicated and one is missing. Find both the numbers.", "k": ["unsorted array", "natural numbers", "array", "unsorted", "natural"]}
{"i": "13724664", "t": "Given a circular table and a large no. of circular coins of same size. There are 2 persons playing a game of plotting coins on the table such that each person gets a chance to place the coin alternatively. The coins are to be placed flat on the table and they should not overlap. The person with more no. of coins on the table wins. Find a way (design an algorithm) in such a way that you always win the game. Would you go first or would you let your friend go first? Also each person is allowed to place to coin randomly anywhere on the table. In the end if there is space left to put 2 coins on the table and you put your coin in center. You win.", "k": ["table", "circular table", "coins", "circular", "circular coins"]}
{"i": "13693668", "t": "Consider a service counter. People waiting for service form a queue. At the start, the queue is empty and\rtime is 0. The service time per person is 3 minutes.\rThe input to the program consists of an integer N followed by a sequence of integers indicating the arrival\rtime (in minutes) of the customers. These times are given as offset from the start of the simulation, so that an\rinput of 44 means 44 minutes from the start of simulation. The sequence of input numbers is terminated by\rthe number -1.\rYour program must simulate the queue and print out the following:\r    1. The number of customers waiting in the queue at time = N minutes from the start of simulation.\r    2. The arrival times of the customers in the queue at that time, in increasing order.\rEach integer must be separated by a space. Terminate your output with a newline character.\rFor doing the computation, you can assume that if the counter is expected to be vacant at time t, the first\rperson in the queue will be scheduled for service, before the counting is done for time t.\rYou must use the queue data structure to solve this problem.\rSample Input/Output\rInput\r9 0 2 5 6 6 8 10 -1\rOutput\r2 6 8\r  provide the solution using QUEUE.\rThis problem will tell you your coding power.", "k": ["queue", "time", "input", "service", "start"]}
{"i": "13700663", "t": "Reverse K elements of a linked list.\rSolved on 31st May.\rIt still has one bug, if the number of elements in a linked list are not a multiple of K, then it truncates the linked list at a multiple of K.\rEg. if K=5 and number of elements is 12, it will reverse till 10 th element and then truncate it.   so when the reversed list is printed, only 10 elemtns with ever 5 revesed is shown, need to fix this.import java.util.*;\r\n\r\nclass link\r\n{\r\n    int data;\r\n    public link nextlink;\r\n    link(int d1)\r\n    {\r\n        data = d1;\r\n    }}\r\n\r\nclass List{\r\n    \r\n    link head;\r\n    static int rev;\r\n    link revhead;\r\n    List(){\r\n    head = null;\r\n    Scanner scan1 = new Scanner(System.in);\r\n    rev = scan1.nextInt();\r\n   }\r\n\r\n    \r\n    boolean isEmpty(link head)\r\n    {\r\n        return head==null;\r\n    }\r\n    \r\n    void insert(int d1)\r\n    {\r\n        link templink = new link(d1);\r\n        templink.nextlink = head;\r\n        head = templink;\r\n    }\r\n    \r\n    void printlist(){\r\n        link head1 = head;\r\n        while(!isEmpty(head1))\r\n            {\r\n            System.out.print(head1.data + \" \");\r\n            head1 = head1.nextlink;\r\n            }\r\n        System.out.println();\r\n            }\r\n\r\n    void reverse()\r\n    {\r\n        boolean flag=true;\r\n        revhead = head;\r\n        link previous=revhead,temp=null,temp2=null;int i=1;\r\n        while(true)\r\n    {\r\n     i++;\r\n        \r\n    for(int j=0;j<(2*rev-1);j++)\r\n    {\r\n        if(isEmpty(previous))\r\n        {\r\n     // \tprevious=temp2;\r\n        \tbreak;\r\n        }\r\n        temp2=previous;\r\n        previous=previous.nextlink;\r\n        \r\n    }\r\n        \r\n            for(int k=0;k<rev;k++)\r\n            {\r\n       if(isEmpty(revhead))\r\n        {\r\n            return;\r\n        }\r\n             \r\n        \t\ttemp = revhead.nextlink;\r\n                revhead.nextlink = previous;\r\n                previous = revhead;\r\n                revhead = temp;\r\n            }\r\n            \r\n        if(flag){\r\n            head=previous;\r\n        flag=false;\r\n        }\r\n         previous=temp;\r\n        }\r\n       \r\n    }\r\n    }\r\n\r\nclass RevKLinkedList {\r\n\r\n    public static void main(String[] args) {\r\n        \r\n        \r\n    \tList list1 = new List();\r\n        \r\n        list1.insert(10);\r\n        list1.insert(20);\r\n        list1.insert(30);\r\n        list1.insert(40);\r\n        list1.insert(50);\r\n        list1.insert(60);\r\n        list1.insert(70);\r\n        list1.insert(80);\r\n        list1.insert(90);\r\n        list1.insert(100);\r\n        list1.insert(110);\r\n        list1.insert(120);\r\n        list1.printlist();\r\n        list1.reverse();\r\n        list1.printlist();\r\n        }\r\n}", "k": ["linked list", "list", "head", "previous", "link"]}
{"i": "13676662", "t": "write a program to take a no. as input and generate the output in the form of LED display.\reg. if input in 102 op \r       __   __\r   |  |   |   __|\r   |  |_ |  |__  \r                                                    |", "k": ["form of led", "led display.", "write a program", "generate the output", "led"]}
{"i": "13666668", "t": "If you implement an interface compile asks you to provide implementation of those methods. But in case of object.clone() how come this is inverse? Means you have overridden  clone()  method but your class doesn't implements copyable. How compiles does this mapping to tell user that CloneNotSupported ??", "k": ["provide implementation", "interface compile", "interface", "provide", "implementation"]}
{"i": "13668667", "t": "What is difference between following interface and abstract class:public interface MyInterface\r\n{\r\n  public int get1();\r\n  public int get2();\r\n  public int get3();\r\n}\r\n\r\npublic abstract class MyAbstract\r\n{\r\n  public abstract int get1();\r\n  public abstract int get2();\r\n  public abstract int get3();\r\n}Interviewer was not convinced with following answers, he wanted to hear something else:\r 1. I have to extend MyAbstract and then I cannot have more extends, whereas in case of implementing MyInterface I am open to have inheritance.\r 2. I have to provide implementation of all three methods if used \"implements MyInterface\", whereas in case of \"extends MyAbstract\" I am open to carry forward abstractness. \r 3. Design perspective: All libraries work on interfaces not on abstract classes, it is good design practice to use interfaces so that at any time in future I can create any class (implements MyInterface) that  can be used in some method of library. (basically same as point one)\r What else there could be? I am not concerned with the variables in interface/abstract class etc. How to decide which one to use?", "k": ["public abstract int", "public int", "public abstract", "public", "abstract int"]}
{"i": "13668665", "t": "write an algorithm to change a infix sequence to postfix sequence", "k": ["write an algorithm", "algorithm to change", "change a infix", "infix sequence", "postfix sequence"]}
{"i": "13624664", "t": "Find maximum number of distinct paths between two coordinates x1,y1 and x2,y2. where x2>=x1 and y2>=y1. and movement is allowed only in increasing direction, i.e. x1, y1 can move in (0, +1) means to the right and x1,y1 can move in  (+1, 0) in the up direction.", "k": ["find maximum number", "find maximum", "maximum number", "number of distinct", "distinct paths"]}
{"i": "13674661", "t": "A string contains only 0's and 1's,  like 001010, swapping is permitted only with adjacent elements. Find an efficient way so that all the zero's are in the begining and the one's in the end. So the resultant string becomes 000011.", "k": ["swapping is permitted", "adjacent elements", "swapping", "elements", "find an efficient"]}
{"i": "13573715", "t": "In this problem you have to write a program to check if two given binary trees are structurally equivalent.\rTwo trees are structurally equivalent if they are both null or if the left and right children of one are\rstructurally equivalent to the RESPECTIVE children of the other. In other words, when you draw the trees\ron paper, they should LOOK alike (ignoring the values at the nodes).\rThe input to the program is a number N followed by N lines of input. Each line consists of a sequence of\rpositive numbers terminated by -1. There will be no duplicate numbers in any of the lines.\rConstruct a binary search tree with the input in the second line and use this as the basis-tree. For each of the\rremaining N-1 lines, construct a binary search tree and compare against the basis tree for equivalence. If the\rtrees are equivalent, print YES else print NO. Also print the depth difference between the two trees (ie, depth\rof the bigger tree minus the depth of the smaller tree). Both these for a given tree pair must be on one line\rseparated by a space. The answers for the different pairs must be on separate lines.\rSample Input/Output\rInput\r5\r1  3   2  4  -1\r4  1   2  3  -1\r3  2   1  4  -1\r4  3   2  1  -1\r1  3   4  2  -1\rOutput\rNO 1\rNO 0\rNO 1\rYES 0\r(Note that the depth difference will be zero if the trees are equivalent.)", "k": ["structurally equivalent", "trees", "tree", "input", "structurally"]}
{"i": "13671662", "t": "Consider a service counter. People waiting for service form a queue. At the start, the queue is empty and\rtime is 0. The service time per person is 3 minutes.\rThe input to the program consists of an integer N followed by a sequence of integers indicating the arrival\rtime (in minutes) of the customers. These times are given as offset from the start of the simulation, so that an\rinput of 44 means 44 minutes from the start of simulation. The sequence of input numbers is terminated by\rthe number -1.\rYour program must simulate the queue and print out the following:\r    1. The number of customers waiting in the queue at time = N minutes from the start of simulation.\r    2. The arrival times of the customers in the queue at that time, in increasing order.\rEach integer must be separated by a space. Terminate your output with a newline character.\rFor doing the computation, you can assume that if the counter is expected to be vacant at time t, the first\rperson in the queue will be scheduled for service, before the counting is done for time t.\rYou must use the queue data structure to solve this problem.\rSample Input/Output\rInput\r9 0 2 5 6 6 8 10 -1\rOutput\r2 6 8", "k": ["time", "queue", "input", "service", "start"]}
{"i": "13668664", "t": "Dr. Alberquert invented the following three devices to set up a simple communication network: \rSynthesizer (S), which produces signals continuously and transmits (propagates / passes on) them to neighbouring cells but cannot receive signals. \rReceiver (R), which can receive signals from neighbouring signal sources but cannot produce or propagate signal. \rTransmitter (T), which is capable of both receiving signal from and transmitting signals to neighbouring cells. Transmitters also are NOT capable of producing signals. \rThese devices are laid in a matrix formation. Signals are propagated at the rate of one cell per time unit. The absorption rate of a receiver is unlimited and so also the transmission and absorption rate of a transmitter unlimited. For simplicity we shall ignore the exact nature of signals being produced and consider them uniform across sources. Devices on the extreme right side can also communicate with the extreme left hand side device present in the same row (see fig 2). Similarly a device on the extreme top can also communicate with a device at the extreme bottom if they are present in the same column. \rPlease Note: \rNeighbourhood is a four cell neighbourhood, i.e, the neighbourhood of a cell is defined by cells to its NORTH, SOUTH, EAST and WEST (see fig 1). \rAll Synthesizers will start to produce signals as soon as the simulation begins. \rThere could be multiple Synthesizers in a matrix arrangement. \r   Your task is to write a program that would take a matrix containing devices and output the time at which each receiver/transmitter receives its first signal. \rInput specification:\rThe first line has two integers M and N indicating the number of rows and columns of the matrix. 0 < M, N <= 20 \rM lines follow the first line. Each of these M lines contains N characters and a terminating new line. Each character is one of S, T or R. \rOutput specification:\rThe output should be a matrix of M rows with each row containing N integers separated by spaces indicating the minimum time required for the signal to reach the corresponding device. The output for cells containing Synthesizers is 0. For devices that never receive any signal, print -1. \rSample Input and Output:\r Input:\r3 4\rSRTR\rTTTT\rTTTS\r  Output:\r0 1 3 1\r1 2 2 1\r1 2 1 0\r   Input:\r2 3\rRTT\rTTR\r  Output:\r-1 -1 -1\r-1 -1 -1", "k": ["alberquert invented", "simple communication network", "signals", "produces signals continuously", "output"]}
{"i": "13582694", "t": "Given a matrix of order M x N containing 1.s and 0's, you have to find the number of maximal squares that can be formed. A square is formed by grouping adjacent cells containing 1. A maximal square is one that is not completely contained within another square. Maximal squares that overlap partially are to be counted separately. Unit squares (length of side = 1) should be also counted. \rNote that squares are filled, i.e. they cannot contain 0.s. \r Number of maximal square: 6 \rInput specification:\rThe first line consists of integers M and N, the number of rows and columns of the matrix.\r0 < M and N <=40 \rNext M lines contain N characters from the set {0, 1}. \rOutput specification:\rAn integer representing the number of maximal squares that can be formed followed by a newline. \rSample Input and Output:\r Input:\r4 5\r11001\r11110\r11011\r11001\r  Output:\r9\r   Input:\r2 2\r10\r11\r  Output:\r3", "k": ["maximal squares", "maximal", "squares", "input", "square"]}
{"i": "13573714", "t": "KingKong, the largest living ape, escaped from Xanadu lab into a forest. The forest is filled with dangerous animals, which will attack and kill human beings that venture too close to them. You are required to help the scientists find a way to get to KingKong safely. The table below gives the minimum distance one must keep from each species for safety. \rAnimal Name \rCode \rSafety distance (unit cell) \rLion L 1 \r Panther P 2 \r Both, the animals as well as the scientists can move only in horizontal or vertical directions. So, in the figure, the cells shaded gray are the cells into which the scientists must NOT venture, in order to be safe. The arrow shows that the panther is one vertical and one horizontal (a total of two) cell away from it. \r A snapshot of the forest is obtained from a satellite picture in terms of an MxN matrix, which is the input to your program. This snapshot gives the location of various animals in the forest. Some cells might contain trees, which merely block the path of the scientists. The cells within the snapshot are marked by: \rAnimal code indicating the animal present in the cell \r'T' in case of a tree present in the cell \r'S', which indicates the start position of the scientists \r'K', KingKong's location \r'#', All other cells, which are empty \rThe output of your program should be the number of steps in the path that the scientists should take. \rNotes: \rThere will be a unique path, if one exists. \rThe entire path including the starting position of the scientist as well as KingKong's location must be safe. \rInput specification:\rThe first line contains two integers M and N the number of rows and columns. The next M lines contain N characters from the set {'L', 'P', 'T', 'S', 'K', '#'} as explained above \rOutput specification:\rAn integer specifying the length of the path, from the starting position of the scientist, to KingKong's position both inclusive. If KingKong is not reachable safely, then output the integer '-1'. \rSample Input and Output:\r Input:\r7 6\rTLT#PP\rLL####\rLL#K##\rTT##TT\rTT#TTT\rT###TT\rTTTSTT\r Output:\r7\r  Input:\r11 9\rLL#######\rL##TTTTT#\rLKTTTTTT#\r####P#TT#\r###PP#TT#\r####P#TT#\r######TT#\rL##T##T##\rT##T####S\rT####T###\rTTTTTTLL#\r Output:\r-1", "k": ["largest living ape", "escaped from xanadu", "xanadu lab", "living ape", "output"]}
{"i": "13650674", "t": "a tree is either:\r - a branch with a list of child trees\r - or a leaf with a value@\r\n      /  |  \\\r\n     /   |    \\\r\n    @  D  @\r\n   /   |  \\      |\r\n   |    |   |     |\r\n  A  B C   E1) write a struct to represent it.\r2) write a function f() to print out leaf values in in-order travesalclass InvalidTree {\r\n};\r\n\r\ntemplate <class T>\r\nstruct tree {\r\n    vector<tree> child;\r\n    T*    value;\r\n   \r\n    // no empty tree is allowed \r\n    tree(vector<tree>& _tree, T* _t) {\r\n        if( !_t && _tree.empty() )\r\n            throw InvalidTree();\r\n    }\r\n    \r\n    bool IsLeaf() const { return branch.empty(); }\r\n    T* GetValue() const { return value; }\r\n\r\n    const vector<tree>& GetChild() const { return child; }\r\n};\r\n\r\ntemplate <class T>\r\nvoid f(tree<T>* root) {\r\n    if(root->IsLeaf() ) {\r\n        cout << root->GetValue();\r\n        return;\r\n     }\r\n     \r\n     vector<tree> childs = root->GetChild();\r\n     for(vector<tree>::const_iterator iter = childs.begin(); iter != childs.end(); ++iter) {\r\n         f(iter);\r\n     }\r\n}", "k": ["tree", "root", "vector", "const", "write a function"]}
{"i": "13655662", "t": "You have been given three arrays A,B and C.\rYou have to find out all the elements in A and B such that the A[i]-B[j]=C[k]", "k": ["arrays", "find", "elements"]}
{"i": "13652663", "t": "How would you find out whether there is loop in a linked list or not ? Find out the point where the loop starts .", "k": ["loop starts", "linked list", "find", "starts", "loop"]}
{"i": "13650664", "t": "What will be the change in complexity if we will choose 2 and 3 pivots in the quicksort algorithm ?\rThe exact complexity and why ??", "k": ["quicksort algorithm", "exact complexity", "change in complexity", "complexity", "choose"]}
{"i": "13656661", "t": "You are getting a stream of characters and at any time you can be asked to find out if the string received yet is palindrome or not.\rThere can be multiple queries.He insisted to do it in better than O(n) and No extra space.", "k": ["stream of characters", "asked to find", "string received", "extra space", "multiple queries.he insisted"]}
{"i": "13602678", "t": "we ahve an array of size 30 (say share price for 30 day of amazon in increasing order of day)\ra[0] means first day price\ra[1] means second day price like.\r need to find the maximum loss in shares in these thirty day.\r i gave algo of complexity of big o of n square (n=30 here).", "k": ["array of size", "day price", "ahve an array", "amazon in increasing", "increasing order"]}
{"i": "13602677", "t": "we have one Array size of n.\rsuppose array name is a[],\rit has property like\ra[0] = 0\rand a[n] = p (some value).\rand in array every two consucative value will differ by most 1 only so the difference beetween any two consucutive value in array is either -1,0 or 1.\rfind the k in array such 0<k<p.\r i give the algo having the complexity of o(n/k).\rhe want me to apply the binary search on this.", "k": ["difference beetween", "array", "array size", "suppose array", "size"]}
{"i": "13640673", "t": "Provide an implementation of the stack functionality [i.e. LIFO] in a library. Since its going to be a library function, it can accept objects of any type.\r- Write the APIs\r- Discuss how you would structure the API's to handle objects of any type\r- What data structure would you use\r- Since its a library API that you are providing, keep in mind that you will be dealing with multiple stacks and that an object can be present in more than one stack", "k": ["provide an implementation", "lifo", "stack functionality", "library", "type"]}
