{"i": "5075421557161984", "t": "Forgot to add this question along with my previous...\rThis is a brain teaser type question...\r    S E N D\r  +\r   M O R E\r--------------\rM O N E Y\r--------------\r Each of the above characters hold a specific value which is unique (meaning no two characters have same value). Now the question is, to uncover what value each character stands for... \r (Hint - 'M' has to be 1 because it's the carry in the result (M O N E Y). Now similarly back track the rest of the characters)\rNote: this hint is given by me, for the sake of understanding the question for interested folks, it was not given to me in the interview).", "k": ["forgot to add", "question", "teaser type question", "brain teaser type", "forgot"]}
{"i": "5100302302707712", "t": "Given a sorted 2D matrix. Find the median.", "k": ["matrix", "sorted", "find the median", "find", "median"]}
{"i": "6588887669407744", "t": "Given a number N, now find the smallest number K such that product of digits of K is equal to N. If there is no such K then return -1.\rSuppose N = 100, then K = 455\rN=26, K = -1", "k": ["smallest number", "find the smallest", "product of digits", "number", "find"]}
{"i": "5462987762565120", "t": "Given a number N, now find the number of occurrences of each digit 0..9 from 0 to N\rEg:\ri/p: 12\ro/p:\r2\r5\r2\r1\r1\r1\r1\r1\r1\r1", "k": ["number of occurrences", "find the number", "number", "digit", "find"]}
{"i": "5941065639002112", "t": "A typical Change Making problem but a bit twisted. Given a large amount and the denominations given, I need to come up with total number of ways in which the amount can be made using RECURSION. The signature of the function is as follows\r int makeChange(int Amount, int[] Denominations)A\rAmount-Total Amount\rDenominations- The available denominatins.\rIt returns total number of ways.. make sure this has to be  done Using Recursion..", "k": ["typical change making", "change making problem", "change making", "typical change", "making problem"]}
{"i": "6317822988779520", "t": "Given an input like:  \r     [2, 4]\r    [1, 2]\r    [3, 6]\r    [1, 3]\r    [2, 5]\r Use it to reconstruct this binary tree:\r                  1\r              2      3\r           4   5  6\r Note that:\ra) The first number in each line is a parent.\rb) Second number is a child.\rc) The left child always shows up in the input before the right child.\r Return root.", "k": ["binary tree", "reconstruct this binary", "note", "tree", "parent"]}
{"i": "4724898538717184", "t": "You are given an array A with elements 0 to n-1, numbers can be repeated in the array. Create n sets where\r S[i]={a[i],a[a[i]],a[a[a[i]]]\u2026}. Set has all elements unique. Find the size of the largest set.\r Input:\r First line contains n, size of the array. n<1000\r Next lines contains n numbers, each element of the array\r Output\r Prints one number: Size of the largest set.\r Sample Test Case:\r Input: {3,1,2,0}\r Output: 2\r Explanation:\r Four possible sets are\r {3,0},{1},{2}{0,3}", "k": ["array", "size", "input", "array output prints", "set"]}
{"i": "4532415284379648", "t": "Given an array of integers. Remove minimum number of elements from the array such that the largest and the smallest number does not differ by more than two times.In other words if x is the minimum of the remaining elements in the array and y is the maximum than y<=2x.\r Find the minimum number of numbers that has to be removed from the array so that the largest and the smallest number differed in no more than two times.\r Input:\r First line contains n(2<=n<=10^5), the size of the array\r Second line contains n integers, the elements of the array.\r Output:\r Single integer - the minimum number of elements to be removed from the array.\r Sample Test Case:\r Input: {4,5,3,8,3,7}\r Output: 2\r Note: In the above sample you can remove the fourth and the sixth measurement results (values 8 and 7). Then the maximum of the remaining values will be 5, and the minimum one will be 3. Or else, you can remove the third and fifth results (both equal 3). After that the largest remaining result will be 8, and the smallest one will be 4.\r You do not need to write full code. Just fill out the given function.", "k": ["minimum number", "array", "smallest number", "remove minimum number", "number"]}
{"i": "5326347538792448", "t": "You are given a 2-Dimensional array with M rows and N columns. You are initially positioned at (0,0) which is the top-left cell in the array. You are allowed to move either right or downwards. The array is filled with 1's and 0's. A 1 indicates that you can move through that cell, a 0 indicates that you cannot move through the cell. Given a function numberOfPaths which takes in the above 2-D array, return the number of paths from the top-left cell to the bottom-right cell (i.e. (0,0) to (M-1,N-1)).", "k": ["array", "cell", "move", "top-left cell", "columns"]}
{"i": "6693217491746816", "t": "you have a array which says the order of alphabets say [abcdef....z]. now use this array to sort, constraint is 'a' can be swapped one time 'b' two times, and for sorting you can use only swap.", "k": ["order of alphabets", "abcdef", "array", "order", "alphabets"]}
{"i": "5469781192867840", "t": "you have n different array, all are sorted. form one array of size n whose range is min. meaning in resultant array diff of a[0] to a[n-1] is min.", "k": ["min", "sorted", "array", "range is min", "form"]}
{"i": "6291986613010432", "t": "You are given numbers from 1 through 100 in an array, there is one number missing, find that one", "k": ["number missing", "array", "missing", "find", "numbers"]}
{"i": "4856279977689088", "t": "i have 2 class class employee which has empname and Title(manager,team lead) and class person which has name age and gender.. now i need to create a hasmap which has key and value pair as employee and person and if i give employee as key it should give me person values and if i give person as key it should give me employee value", "k": ["empname and title", "class class employee", "manager,team lead", "age and gender.", "class class"]}
{"i": "5717292071518208", "t": "Suppose you are given one number decomposed in binary representation.\r Input :   101011\rOutput : 000000\r Needs to write algo and tell the approach in how efficiently we can flip the given input numbers to all zero's\r Interviewer not mentioned about time complexity but it should be very efficient.", "k": ["binary representation", "decomposed in binary", "number decomposed", "output", "suppose"]}
{"i": "6736594782388224", "t": "In Linux, we use virtual address.So each process will think it has 4 GB\rmemory space even if the real memory is only 2GB. Now suppose we do not have\rMMU and programmer use real physical address in their program. We only have\rsmall size of physical memory. How can we design the system?", "k": ["virtual address.so", "address.so each process", "linux", "memory space", "mmu and programmer"]}
{"i": "6193570524430336", "t": "We run two video game benchmarks on our new designed SOC. The two\rbenchmarks have the same instruction set. The benchmark with higher power\rconsumption always work well while the other one always get stuck. What can\rbe the problems?", "k": ["designed soc", "video game benchmarks", "run two video", "video game", "soc"]}
{"i": "6329577810952192", "t": "In the new mobile phone, we can either choose to use a 1GHz solo core or\r500MHz duo core processor. What tradeoffs should we consider?", "k": ["duo core processor", "mobile phone", "solo core", "duo core", "core processor"]}
{"i": "5722091697471488", "t": "This is a hardware design problem. I can not figure it out. Suppose we have 2 pipelined hardware multipliers(or something). One is working at 1GHz with 2 operations executed in parallel at the same time. The other one is at 500GHz with 4 operations. Suppose we have transistors of 3 types(low leaky(30%),middle leaky(50%) and high leaky(70%)) and here leaky means leakage power of the transistor. Which multiplier should we use considering the 3 types of transistors.", "k": ["hardware design problem", "design problem", "hardware design", "leaky", "problem"]}
{"i": "6233087981649920", "t": "Given an input like:  \r     [2, 4]\r    [1, 2]\r    [3, 6]\r    [1, 3]\r    [2, 5]\r Use it to reconstruct this binary tree:1\r\n              2      3\r\n           4   5  6Edit: The \"1\" is the root, I dont know why is aligning to the left\r Note that:\ra) The first number in each line is a parent.\rb) Second number is a child.\rc) The left child always shows up in the input before the right child.\r Return root.", "k": ["left note", "binary tree", "reconstruct this binary", "note", "number"]}
{"i": "6010596227022848", "t": "You as a developer are tasked to create an application that builds invoices that are send out to the company\u2019s clients. Invoices are sent to the client\u2019s address and the client should pay the invoice amount by a given date otherwise fees could incur. The client should be able to see detailed information about the items they are being billed for, like item cost, tax, quantity, etc. The client can be billed for products and/or services. Services are not taxable and product tax varies by client zip code. \r Using the objected oriented language of your choice; design an object model for this application.", "k": ["developer are tasked", "tasked to create", "builds invoices", "client", "invoices"]}
{"i": "5104497948884992", "t": "Design a job scheduler.", "k": ["design a job", "job scheduler", "design", "scheduler", "job"]}
{"i": "5685761642856448", "t": "Design news aggregator like google news, without using pull, push or page crawl. Explain how are you going to scale it.", "k": ["design news aggregator", "push or page", "page crawl", "aggregator like google", "design"]}
{"i": "5181970568970240", "t": "Write a method to print output of a^b", "k": ["write a method", "method to print", "print output", "write", "method"]}
{"i": "5796662664495104", "t": "Suppose there is array contains 100 unsorted elements ...say a[1] to a[100].\rfind out the minimum and maximum value in the range of a[25] to a[75].", "k": ["unsorted elements", "suppose", "unsorted", "elements", "array"]}
{"i": "5188640653180928", "t": "Implement an algorithm to determine if a string has all unique characters. What if you can not use additional data structures?", "k": ["implement an algorithm", "unique characters", "algorithm to determine", "additional data structures", "implement"]}
{"i": "6704038393413632", "t": "Design an algorithm and write code to remove the duplicate characters in a string without using any additional buffer. NOTE: One or two additional variables are fine.", "k": ["design an algorithm", "algorithm and write", "write code", "code to remove", "remove the duplicate"]}
{"i": "5332358613958656", "t": "Write a method to decide if two strings are anagrams or not.", "k": ["write a method", "method to decide", "strings are anagrams", "write", "method"]}
{"i": "6273243509948416", "t": "Write a method to replace all spaces in a string with '%20'.", "k": ["write a method", "method to replace", "replace all spaces", "write", "method"]}
{"i": "6276985365987328", "t": "Given an image represented by an NxN matrix, where each pixel in the image is 4 bytes, write a method to rotate the image by 90 degrees. Can you do this in place", "k": ["nxn matrix", "write a method", "method to rotate", "image represented", "image"]}
{"i": "5732142994685952", "t": "Write an algorithm such that if an element in an MxN matrix is 0, its entire row and column is set to 0", "k": ["write an algorithm", "mxn matrix", "entire row", "row and column", "column is set"]}
