{"i": "5647194695663616", "t": "Given a 2D character array of size NxN. Find if there is a path from the cell 'R' to the cell 'T'. You can go left, right, up, down from a cell and you cannot pass through any cell marked with 'X'.\r Example input: \rX__R_X\rX_XXX_\r______\r_XX_XX\rXT__X_\r Output: true", "k": ["character array", "size nxn", "array of size", "cell", "character"]}
{"i": "5738113449066496", "t": "Print all permutations of a given string.", "k": ["print all permutations", "print", "string", "permutations"]}
{"i": "5719740115845120", "t": "If you find your web-services are slow, So where you start debugging and what could be the reasons for performance slow down.", "k": ["find your web-services", "start debugging", "reasons for performance", "performance slow", "web-services are slow"]}
{"i": "5754891470372864", "t": "Find the first non repeating character in a string. For example if the input string \"abcdeabc\", non repeating character is \"e\"", "k": ["repeating character", "repeating", "string", "find", "character"]}
{"i": "5689779766165504", "t": "Find if a mathematical string is balanced in terms of parenthesis. For example \"(1+2)\" is balanced and \"(1+2\"  is not balanced.", "k": ["terms of parenthesis", "mathematical string", "balanced", "find", "parenthesis"]}
{"i": "5703359110578176", "t": "hi, anyone please help in deleting my post.?\rBy mistakenly i added the post. I want to delete that. I am not seeing any option to delete.", "k": ["deleting my post.", "post.", "deleting", "added the post", "delete"]}
{"i": "6199206977994752", "t": "With times stored in the format \"HH:MM:SS\", find the number of \"interesting\" times that can be displayed between two given times S and T (inclusive).\r An \"interesting\" time is one that can be displayed with at most 2 characters.\r For example S \"15:15:00\" and T \"15:15:12\" would return the count of 1 as the only \"interesting\" time between S and T (inclusive) is \"15:15:11\".\r Another example, S \"22:22:21\" and T \"22:22:23\" would return the count of 3 because of the following times: \"22:22:21\", \"22:22:22\", \"22:22:23\"\r Constraints:\r   S <= T\r  00 <= HH <= 23\r  00 <= MM <= 59\r  00 <= SS <= 59", "k": ["find the number", "interesting", "inclusive", "return the count", "times stored"]}
{"i": "5723805839261696", "t": "/* The objective of this exercise is to build a road network connecting every pair of cities. \rEach city should be connected to each other city once. \r*/ \rpublic class Program \r{ \r/* Your function RoadBuilder should return a list of new roads required to be built, \rif the existing roads are given by builtRoads and the total number of \rcities is nCities. Roads should not connect cities to themselves. \r*/ \rpublic static int[][] RoadBuilder(int nCities, int[, ] builtRoads) \r{ \r//implement the function here \rreturn new int[0][]; \r} \r public static void Main() \r{ \rint[, ] test1 = new int[3, 2]{{0, 1}, {1, 2}, {3, 2}}; \rConsole.WriteLine(RoadBuilder(4, test1)); // expected result should be {{0,2}, {0, 3}, {1, 3}} \r} \r}", "k": ["road network connecting", "network connecting", "connecting every pair", "public class program", "int"]}
{"i": "5764058272759808", "t": "There are N gas stations along a circular route, where the amount of gas at station i is gas[i].\rYou have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You can begin the journey with an empty tank at one of the gas stations.\rReturn ALL the starting gas station's index where you can travel around the circuit once\rpublic List<Integer> canCompleteCircuit(int[] gas, int[] cost) {\r }", "k": ["circular route", "gas", "station", "gas stations", "unlimited gas tank"]}
{"i": "5698225014046720", "t": "Implement power function. The function should take two numbers as input (e.g. 2,3) and return 8 as output\r See link below for hints and answer https://baquerrizvinotes.blogspot.in/2017/05/how-to-crack-amazoncom-technical.html", "k": ["implement power function", "implement power", "power function", "implement", "function"]}
{"i": "5669417594650624", "t": "You have a array with integers:[ 1, -2, 0, 6, 2, -4, 6, 6 ]You need to write a function which will evenly return indexes of a max value in the array.\rIn the example below max value is 6, and its positions are 3, 6 and 7. So each run function should return random index from the set.\r Try to implement with O(n) for computation and memory.\rTry to reduce memory complexity to O(1).", "k": ["evenly return indexes", "array with integers", "evenly return", "return indexes", "array"]}
{"i": "5089243010433024", "t": "You have a binary tree which consists of 0 or 1 in the way, that each node value is a LOGICAL AND between its children:0\r\n   /   \\\r\n  0     1\r\n / \\   / \\\r\n0   1  1  1You need to write a code, which will invert given LEAF and put tree in a correct state.", "k": ["invert given leaf", "leaf and put", "write a code", "correct state", "binary tree"]}
{"i": "6206693105991680", "t": "Given n1, n2 is the number after removing one digit from n1. Example, n1 = 123, then n2 can be 12, 13 or 23.\r If we know the sum of n1 + n2, and find the possible values of n1 and n2.\r public List<List<Integer>> getNumber(int sum){\r}", "k": ["number after removing", "removing one digit", "list", "public list", "number"]}
{"i": "4854489224839168", "t": "Design copy-on-write string class\r   e.g. stringclass s(\"abc\");\r         stringclass s1 = s; // no copy\r         s = \"bcd\"; // copy", "k": ["string class", "design", "abc", "bcd", "copy"]}
{"i": "5155889091706880", "t": "Design and implement an algorithm to assign an unlimited M number of messages evenly among N number of servers (N will not change).\rInput to the algorithm\rA message contains a message identifier and a text string. The algorithm will be fed one message at a time.\rThere are N numbers of servers (N will not change), each can be identified by a unique id.\rOutput of the algorithm\rWhen the algorithm is called to process a message, it should output the id of the server that the message is assigned to.", "k": ["design and implement", "assign an unlimited", "algorithm", "message", "messages evenly"]}
{"i": "5693819250016256", "t": "Given an ODD number, print diamond pattern of stars recursively.n = 5, Diamond shape is as follows:\r\n  *\r\n ***\r\n*****\r\n ***\r\n  *void print(int n){\r}", "k": ["print diamond pattern", "odd number", "stars recursively.n", "void print", "diamond pattern"]}
{"i": "5154130839470080", "t": "/From the input array, output a subset array with numbers part of a Fibonacci series.\r//  input: [4,2,8,5,20,1,40,13,23]\r//  output: [2,5,1,8,13]\rpublic static List<Integer> getFibNumbers(int[] nums){}", "k": ["fibonacci series", "numbers part", "public static list", "subset array", "fibonacci"]}
{"i": "5739189942353920", "t": "The number of valid combinations of a strings for given input array a[], where a=>1, z => 26, and 0 <= a[i] <= 9\r {1,1,1} => {aaa, ak, ka} => 3\r{1,1,0} => {aj} => 1", "k": ["number of valid", "valid combinations", "input array", "aaa", "number"]}
{"i": "5660251933114368", "t": "/* The objective of this exercise is to build a road network connecting every pair of cities.\r   Each city should be connected to each other city once.\r*/\rpublic class Program\r{\r\t/* Your function RoadBuilder should return a list of new roads required to be built,\r\tif the existing roads are given by builtRoads and the total number of \r\tcities is nCities. Roads should not connect cities to themselves.\r\t*/\r\tpublic static int[][] RoadBuilder(int nCities, int[, ] builtRoads)\r\t{\r\t\t//implement the function here\r\t\treturn new int[0][];\r\t}\r \tpublic static void Main()\r\t{\r\t\tint[, ] test1 = new int[3, 2]{{0, 1}, {1, 2}, {3, 2}};\r\t\tConsole.WriteLine(RoadBuilder(4, test1)); // expected result should be {{0,2}, {0, 3}, {1, 3}}\r\t}\r}", "k": ["road network connecting", "network connecting", "connecting every pair", "public class program", "int"]}
{"i": "5143163304935424", "t": "Can multiple threads improve the time complexity to merge k sorted arrays? If so, how?", "k": ["multiple threads improve", "sorted arrays", "multiple threads", "threads improve", "improve the time"]}
{"i": "5758317847642112", "t": "There is 3D space, limited with a cube, with edge=2000.\r The center of coordinate system is point (0; 0; 0), so the maximum/minimal coordinate value is 1000/-1000.\r There are 10000 points generated with discrete uniform distribution inside of K spheres, located in the cube.\r Radius (R) of each sphere is 250.\r Centers of spheres are located at the distance of not less than 2*R.\r It is required to determine which point related to which sphere.\r Input: array of 10000 structures, like:\r struct Point {\r             int number;\r            int x;\r            int y;\r            int z;\r }\rwhere number is unique id of the point, x,y,z - it's coordinates.\r Output:\r array of 10000 structures, like:\r struct Point {\r             int number;\r            int cluster_id;\r }\rwhere cluster_id is unique cluster id of a sphere that point belongs to.\r Initially I considered a following solution:\r 1) Find Euclidian distance for each point from center of coordinates (0;0;0) to point's coordinates.\r 2) Sort this array of distances in descending order.\r 3) Get the point from the sorted array of distances and put in a new Set of Cluster Maximals.\r 4) Compare following point from the array to each value from the Set of Cluster Maximals (initially 1 value).\r If it's Euclidian distance less than or equal to 2*R, then\r mark this point as belonging to Kth cluster (range=1..N), otherwise add the point to the Set of Cluster Maximals.\r 5) Repeat step 4.\r Two concerns I have:\r 1) There is an issue that my algorithm would work only in case if Claster Maximals are located on the surface of the spheres.\r 2) Plus, according to the task requirements, there could be the case when 2 spheres can have 1 and only common point.\r I think in case if point belongs to 2 spheres, it is ok to mark it with cluster_id of any of these 2 shperes.\r Could you please provide a proper solution to the task?", "k": ["point", "cluster", "cluster maximals", "int", "maximals"]}
{"i": "5704486338166784", "t": "Products are identified by alphanumeric codes. Each code is stored as a string. We have three types of products:high priority, medium priority, and low priority. Given an array of product codes, sort the array so that the highest priority products come at the beginning of the array, the medium priority products come in the middle, and the low priority customers come at the end. Within a priority group, order does not matter. You are given a priority function which, given a product code, returns 1 for high, 2 for medium and 3 for low. This array may contain a large number of product codes, so do your best to minimize additional storage.", "k": ["priority", "identified by alphanumeric", "products", "product", "product codes"]}
{"i": "5669455779594240", "t": "Products are identified by alphanumeric codes. Each code is stored as a string. We have three types of products:high priority, medium priority, and low priority. Given an array of product codes, sort the array so that the highest priority products come at the beginning of the array, the medium priority products come in the middle, and the low priority customers come at the end. Within a priority group, order does not matter. You are given a priority function which, given a product code, returns 1 for high, 2 for medium and 3 for low. This array may contain a large number of product codes, so do your best to minimize additional storage.", "k": ["priority", "identified by alphanumeric", "products", "product", "product codes"]}
{"i": "5730743486513152", "t": "You get a password and a mapping for each character of the password. Print out all the possible mutations for the password.\r E.g. password: \"pass\"\rmapping:\rp-> $\rp-> P\ra-> A\rs-> /\rs-> S\rs-> &\r Possible mutations would be for example \"PASS\" or \"$A&S\"", "k": ["password", "pass", "character", "mutations", "mapping"]}
{"i": "5731456048431104", "t": "There are three row of houses. There are N houses in each row. Each house can be painted with three colors: red, blue and green. The cost of painting each house with a certain color is different. You have to paint all the houses with following constaints\r No two adjacent houses in a row have the same color.\rHouses in a column have three different colors\rYou have to paint the houses with minimum cost. How would you do it?\r Note: The cost of painting house 1 red is different from that of painting house 2 red in any row. Each combination of house and color has its own cost.", "k": ["houses", "house", "row", "cost", "red"]}
{"i": "5193256246706176", "t": "Given a Matrix A,\rThe rules for movement are as follows :\r1. Can only move Right or Down from any element\r2. Can only move within the row and column of element we start  from intially.\r3. You can only visit or cross an element if its value is lesser than the value of element you start from.\r Find total number of elements one can visit, If one starts from an element A(i,j) where i-> row and j-> column.\r Note : You have to print this output for each matrix element.\r Input : Matrix\r1 2 3\r2 3 1\r3 1 2\r Output: \r1 1 3\r1 3 1\r3 1 1", "k": ["rules for movement", "element", "matrix", "move", "matrix element"]}
{"i": "5069947735638016", "t": "Gives an array of unsorted int (may have negative number), \rrearrange the array such that the \rnum at the odd index is greater than the num at the even index.\rexample\rgiving 5, 2, 3, 4, 1, one of the expected result is 1,4,2,5,3,\rplease solve it in o(n) time, where n is the length of the array\rpublic void rearrange(int[] nums){\r }", "k": ["negative number", "odd index", "unsorted int", "array public void", "public void rearrange"]}
{"i": "5666765251018752", "t": "Given a string, find all possible combinations of the upper \r\nand lower case of each Alphabet char, keep the none Alphabet char as it is.\r\nexample1 s = \"ab\", return: \"Ab\", \"ab\", \"aB\", \"AB\"\r\nexample2 s = \"a1b\", return: \"A1b\", \"a1b\", \"a1B\", \"A1B\"\r\npublic List<String> getPermutation(String s){\r\n\t\r\n}", "k": ["alphabet char", "upper and lower", "lower case", "alphabet", "string"]}
{"i": "5668304191488000", "t": "Write a custom implementation of BlockingQueue using only intrinsic locking constructs in Java", "k": ["constructs in java", "intrinsic locking constructs", "write a custom", "java", "custom implementation"]}
{"i": "5723965491249152", "t": "Write a program to generate the anagrams of a word", "k": ["write a program", "program to generate", "generate the anagrams", "write", "word"]}
