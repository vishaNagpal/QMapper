{"i": "5702115818209280", "t": "Define a singleton class", "k": ["define a singleton", "singleton class", "define", "class", "singleton"]}
{"i": "5666933727821824", "t": "Find the number of ways you can have breakfast in 'n' days, given Bread-butter can be eaten every day, Pizza can be eaten every alternate day and Burger can be eaten every two days.", "k": ["eaten every alternate", "find the number", "eaten", "alternate day", "pizza"]}
{"i": "5198251864096768", "t": "First asked how you can write a tree in a file?\rNext question was lets say value of one node is changed, how can you update that in that file without writing the whole tree in file again?d", "k": ["write a tree", "file", "tree", "asked", "write"]}
{"i": "5761201817518080", "t": "Give you an unsorted integer iterator \rand a percentage that is expressed in double (for example, 0.4 for 40%), \rand find the number of the sorted array at the percentage position. \rExample: Enter [1 3 2 5 4 6 7 9 8 10], and 0.6, you will return 6\rpublic int findNumber(Iterator<Integer> nums, double percent){\r}", "k": ["unsorted integer iterator", "percentage position", "find the number", "sorted array", "unsorted integer"]}
{"i": "5693100010766336", "t": "/*Find minimum size of text window which contain all keywords of a search query from document. \r        Order of keywords don't matter.\r              Input: \r            Document: \"MS(1) x y Is MS(5) x y MS(8) x Is Awesome x y z Awesome\"\r             doc index dictionary: \r             { \r              Keyword: Index Position for keyword in doc\r              \"MS\": [1,5,8],\r              \"Is\": [4,10]\r              \"Awesome\": [ 11, 15] (n)\r            } \r            Search Input 1 : \"MS is\"  ( k)\r                  Result: \"Is MS Ms\" --> [Ms: 5 ; \"Is\" : 4]  -->  2 \r           Search Input 2: \"Ms is Awesome\",  \r                  Result : \"MS x is Awesome\" --> [Ms:8, Is: 10, Awesome: 11] ---> 4\r                   for -> n \r                  n^k\r                   [1 4 5 8 10 11 15]\r */", "k": ["find minimum size", "find minimum", "search input", "minimum size", "size of text"]}
{"i": "5690270969495552", "t": "An ABC notation in a tree is defined as folllows:\r1. \"0\" means travel left\r2. \"1\" means travel right\r3. \"Undefined\" means hit the root\r4. \"Not Found\" means not present in tree\r Given a BST insertion order, {5,2,8,3,6,9,1} find the ABC notation for 6, 1, 10, 2 which is \"10\",\"00\",\"NotFound\", \"0\"", "k": ["defined as folllows", "abc notation", "abc", "folllows", "travel left"]}
{"i": "5746715966570496", "t": "Design an IEvictionPolicy interface that allows users to perform put , get, delete functions based on user specified eviction policy.\r Tried to use the strategy pattern here but the interviewer wasn't happy. He did not want me to have reference to the cache in the eviction policy's concrete implementation", "k": ["delete functions based", "design an ievictionpolicy", "perform put", "delete functions", "ievictionpolicy interface"]}
{"i": "5653839983149056", "t": "Google On-site in May\r Create a class with a collection of integers.\r Enable 3 APIs:\r void append(int x),\r int get(int idx),\r void add_to_all(int x)\uff0c//add  x to all numbers in collection\rThese methods should run in O(1) time.\r  Follow-up\rIn addition, implement\rvoid multiply_to_all(int x)\rThe same required to run in O(1) time", "k": ["google on-site", "create a class", "int", "on-site", "create"]}
{"i": "5757868788678656", "t": "can you use union find to Detect Cycle in a Directed Graph? why or why not", "k": ["directed graph", "detect cycle", "find to detect", "union find", "graph"]}
{"i": "5629856080461824", "t": "Rotate a Cube without Using Any Predefined Functions or Libraries", "k": ["functions or libraries", "predefined functions", "rotate a cube", "libraries", "cube"]}
{"i": "5760945461657600", "t": "There are around 40 million files in a directory which needs to be transferred to another system via FTP in order of oldest file first. What's the ideal way to iterate over files and store it in a data structure from where it can be transferred?", "k": ["system via ftp", "ftp in order", "order of oldest", "million files", "ftp"]}
{"i": "5752220671803392", "t": "Shell command, there is a log file, you want all the \"error\" inside the line to find out into another file inside,\rWhat instruction,", "k": ["shell command", "line to find", "log file", "error", "file inside"]}
{"i": "5662094373421056", "t": "how to design github", "k": ["design github", "github", "design"]}
{"i": "5087589246697472", "t": "Given Map<char,<List<char>> and an input string. Return all possible combinations by replacing each char in input string by one char in mapped set.\re.g. 1 -> a,x; 2 -> b,y\r12 -> ab,ay,xb,xy", "k": ["list", "input string", "map", "char", "input"]}
{"i": "5082885552865280", "t": "Given an array of numbers and n, find n numbers with most occurrences", "k": ["find n numbers", "find", "occurrences", "array of numbers", "numbers"]}
{"i": "5687021021429760", "t": "Find length of longest palindrome in a string", "k": ["find length", "length of longest", "longest palindrome", "find", "string"]}
{"i": "4891338064527360", "t": "Implement a cache with timeouts. Keys timeout after a certain expiry time.", "k": ["implement a cache", "implement", "keys timeout", "cache", "cache with timeouts"]}
{"i": "6284213138489344", "t": "Convert number to text. ex. 101 One hundred and one", "k": ["convert number", "number to text.", "convert", "number", "text."]}
{"i": "5711152832053248", "t": "WAP which accepts a number and keeps track of the median of all the numbers seen till now. You do not have memory to store the entire stream of received numbers.", "k": ["wap which accepts", "wap", "accepts", "track", "median"]}
{"i": "6273845624307712", "t": "PhoneBook search. Given input phone book - John, JohnDavis, Ted, JackMay\rSearching J should return John, JohnDavis and JackMay\rSeaching JD should return JohnDavis", "k": ["phonebook search", "john", "return john", "ted", "phonebook"]}
{"i": "5710657300201472", "t": "Make 100 HTTP GET requests to http://en.wikipedia.org/wiki/Main_Page and print the following in Java\r statistics for the response time to stdout:\r \u2022 10th, 50th, 90th, 95th, 99th Percentile\r \u2022 Mean\r \u2022 Standard Deviation\r Your solution must be parallel. You must make at least N (say 10, but should be configurable)\r requests at a time.\r Explain design choices, known limitations and edge cases.\r What challenges did you face? How would you improve the code if you had more time?", "k": ["standard deviation", "java statistics", "deviation your solution", "percentile", "http get requests"]}
{"i": "5644205566197760", "t": "Enhancements to schema by adding another table lot\rSELECT *\rFROM Amazon_lot p,\r     amazon_vehicles v\rWHERE p.lotid= 1\r    AND p.lotid = v.lotid\r    AND v.vehicleid = 1;\r -- was struck for a moment, Interviewer helped me with hint\rSELECT count(1)\rFROM amazon_residents r,\r     Amazon_lot l,\r     amazon_vehicles v\rWHERE r.residentid = l.residentid\r    AND l.lotid = v.lotid\r    AND r.residentid = v.residentid\r    AND (v.vehicleid = 1\r         OR v.lotid = 2);", "k": ["hint select count", "table lot select", "interviewer helped", "select count", "l.residentid and l.lotid"]}
{"i": "4887390352048128", "t": "SQL Questions & Answers  ,and followup questions\rgiven schema\rTables:\r\tResidents:\r\t\tresident_ID (num)\r\t\tApartment Number\r\t\tName\r\t\t...etc\r \tVehicles:\r\t\tvehicle_ID (num)\r\t\t(FK): Resident_ID (num)\r\t\tLicense Plate\r\t\tVehicle Size (\"small\", \"large\", \"motorcycle\"...)\r Get all the residents who has vehicle size large\r SELECT *\rFROM amazon_residents res\rWHERE EXISTS\r        ( SELECT 1\r         FROM amazon_vehicles veh\r         WHERE veh.residentid = res.residentid\r             AND veh.type = 'large' );", "k": ["license plate vehicle", "plate vehicle size", "apartment number", "license plate", "sql questions"]}
{"i": "5692538980663296", "t": "-- Introduction\r-- what do you know about Idemoptence, was struck for a minute, Hint - Distrubuted Systems\r-- what is Network Latency, ways to improve.\r-- How to improve Webserver Peformance", "k": ["distrubuted systems", "network latency", "improve webserver peformance", "introduction", "hint"]}
{"i": "5207032018763776", "t": "Want Facebook Customer Service Number ?", "k": ["customer service number", "facebook customer service", "service number", "facebook customer", "customer service"]}
{"i": "5173857154498560", "t": "Hello ,\ri have 64 gb ram. but used only 7 gb .how to increase ram ussage?", "k": ["increase ram ussage", "ram", "ram ussage", "increase ram", "ussage"]}
{"i": "5681615704424448", "t": "Return the most popular 10 words in the past 24 hours for twitter\rFollow up in order to reduce the size of each log, do not write timestamp, how to get the same answer,", "k": ["twitter follow", "hours for twitter", "write timestamp", "order to reduce", "reduce the size"]}
{"i": "5708966056165376", "t": "Find out if the given string forms a valid lottery number. \r - A valid lottery number contains 7 unique digits between 1 and 59.\r e.g.\r 4938532894754 (yes)  -> 49 38 53 28 9 47 54\r 1634616512 (yes) -> 1 6 34 6 16 51 2\r 1122334 (no)", "k": ["valid lottery number", "valid lottery", "lottery number", "string forms", "forms a valid"]}
{"i": "5714519549542400", "t": "A mission-critical production system has n stages that have to be performed sequentially; stage\ri is performed by machine Mi. Each machine Mi has a probability ri of functioning reliably and\ra probability 1 \u2212 ri of failing (and the failures are independent). Therefore, if we implement\reach stage with a single machine, the probability that the whole system works is r1 \u00b7 r2 \u00b7 \u00b7 \u00b7 rn.\rTo improve this probability we add redundancy, by having mi copies of the machine Mi that\rperforms stage i. The probability that all mi copies fail simultaneously is only (1 \u2212 ri)mi, so the\rprobability that stage i is completed correctly is 1 \u2212 (1 \u2212 ri)mi and the probability that the whole\rsystem works is Qni=1(1 \u2212 (1 \u2212 ri)mi). Each machine Mi has a cost ci, and there is a total budget\rB to buy machines. (Assume that B and ci are positive integers.)\rGiven the probabilities r1, . . . , rn, the costs c1, . . . , cn, and the budget B, find the redundancies\rm1, . . . , mn that are within the available budget and that maximize the probability that the\rsystem works correctly", "k": ["mission-critical production system", "probability", "performed sequentially", "machine", "mission-critical production"]}
{"i": "5738498251292672", "t": "Given a Calendar class (there are three fields, year, month, day) and a number of N,\rImplement a function that returns the calendar after N days,\rFor example, if the input is {2017, 3,20} and 12, then the return is {2017,4, 1}", "k": ["implement a function", "calendar class", "implement", "year", "month"]}
