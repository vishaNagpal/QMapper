{"i": "6189985468252160", "t": "Given two Binary trees. these trees \"may\" have right and left branches swapped. Now compare it.", "k": ["binary trees", "binary", "trees", "left branches swapped", "branches swapped"]}
{"i": "5482486612099072", "t": "Given a undirected graph, clone it. Now if the undirected graph has the neighbors with the nodes as same data - how do you make sure you create the exact same branches and also how do you make sure you don't run into loops for the exact node. He gave a empty directed graph and asked me write code after that.", "k": ["undirected graph", "graph", "undirected", "clone", "make"]}
{"i": "5971123598524416", "t": "{Ques.. Sum of  nos. nos. like(very very long no.s)\rA=123456278798238093532765432662476427646456353425635454854\rB=1234562787982380935327654326624764276464563534248758758756\rC=123456278798238093532765432662476427646456353425634436746432}", "k": ["ques.", "sum of nos.", "nos. nos", "sum", "nos"]}
{"i": "4536364540362752", "t": "there are a million nodes, it is a DAG, a startpoint is a node with no edges into it and an endpoint is a node with no edges out of it. Each query asks the question - is there a path between a specified pair of start and endpoint nodes. To perform a thousand such queries on a graph that has million nodes, using DFS/BFS is order (1000 * 1000000). I was asked for a solution with better runtime than that.", "k": ["million nodes", "endpoint nodes", "dag", "edges", "nodes"]}
{"i": "5344154741637120", "t": "Sink Zero in Binary Tree. Swap zero value of a node with non-zero value of one of its descendants \rso that no node with value zero could be parent of node with non-zero.", "k": ["binary tree", "tree", "binary", "node with non-zero", "sink"]}
{"i": "4672122920108032", "t": "Given an array of +ve as well as -ve numbers, find out whether it is possible or not to convert it to 0 by adding/subtracting operations on all the elements.\r e.g arr[]={1,2,3}\rYES (1+2-3)\r arr[]={3,6,2}\r3+6-2 != 0\r3-6-2 !=0\r-3-6-2 !=0\r-3-6+2 !=0\r-3+6-2 !=0\r-3+6+2 !=0\r3-6+2 !=0\r3+6+2 !=0\r Hence ans= NO", "k": ["subtracting operations", "numbers", "find", "adding", "subtracting"]}
{"i": "4531385431752704", "t": "Write a Program that takes an array of integers representing the heights of the trees in the row as input and prints the list of the visible trees.", "k": ["write a program", "array of integers", "integers representing", "representing the heights", "row as input"]}
{"i": "5008384499646464", "t": "Given a table of the form:\r\nProduct    Sold on\r\nA           1/1/1980\r\nB           1/1/1980\r\nC           1/1/1980\r\nA           1/1/1980\r\nB           1/1/1980\r\nC           2/1/1980\r\nA           2/1/1980\r\nThere are 30 products and 10,000 records of such type. Also the month period during which sales happened is given to u.\r\nWrite the program to display the result as:\r\nProduct  Month     No. of copies\r\nA           January       12\r\nA           February     15\r\nA           March         27\r\nB           January        54\r\nB           February     15\r\nB           March         10\r\nC           January        37", "k": ["product sold", "product month", "january", "sold", "product"]}
{"i": "5539036299001856", "t": ". We need to write the function to check the password entered is correct or not based on the following conditions..\r\na) It must have atleast one lower case character and one digit.\r\nb)It must not have any Upper case characters and any special characters\r\nc) length should be b/w 5-12.\r\nd) It should not have any same immediate patterns like\r\nabcanan1 : not acceptable coz of an an pattern\r\nabc11se: not acceptable, coz of pattern 11\r\n123sd123 : acceptable, as not immediate pattern\r\nadfasdsdf : not acceptable, as no digits\r\nAasdfasd12: not acceptable, as have uppercase character", "k": ["write the function", "function to check", "check the password", "password entered", "entered is correct"]}
{"i": "5555260974170112", "t": "Write a function to check if two rectangles defined as below, have common area or not. The functions take the top left and\rbottom right coordinate as input and return 1 if they have common area, otherwise return 0.\r  // you can write your additional functions here\rint doesRectOverlap(rect ra, rect rb){\r/* For your reference\rstruct rect{\rint topx,topy,botx,boty;\r};\rThe above has already been declared please do not redclare */", "k": ["common area", "rectangles defined", "common", "area", "return"]}
{"i": "4900821338685440", "t": "There are 10,000 balls and may be 500 different colors of ball\r Example: There are:\r    4 - red ball\r5900 - Blue ball\r3700 - Green ball\r 396 - mintcream ball\rOr there may be 10,000 red balls.\r Or all balls are has same range, i.e. 500 red, 500 blue, etc.\r We don\u2019t know the range of any ball and number of color balls, but the minimum is 1 color and maximum is 500 colors, and we have auxiliary array of size 500. how to arrange all same color ball together in minimum passes over balls? is it possible to do in less than two passes ??", "k": ["green ball", "ball", "green", "red", "blue ball"]}
{"i": "5430596964712448", "t": "Input : a1,a2,...,an, b1, b2, ..., bn\rTransform it to a1, b1, a2, b2, .... an, bn.\rIt has to be done in-place", "k": ["input", "transform", "in-place"]}
{"i": "6321126120620032", "t": "{write a function to give demostrate the functionality of 3D matrix in 1D matirx.function prototye: void set (int value,int indexX,int indexY,int indexZ, int [] 1dArray);void get (int value,int indexX,int indexY,int indexZ, int [] 1dArray);}", "k": ["int value,int indexx,int", "indexx,int indexy,int indexz", "value,int indexx,int indexy,int", "int value,int", "indexy,int indexz"]}
{"i": "6291347770179584", "t": "There's a matrix. Each element in the matirx is a bit (0 or 1). Write a method to reverse this matrix. The matrix is stored in a one dimensional char array. The length of each row is given.\rHow do you improve your solution when handling large amount of data?", "k": ["matrix", "write a method", "bit", "element", "matirx"]}
{"i": "5040313454297088", "t": "A chessboard was given to us. Where in there was a Knight and King was placed oncertain positions. Our aim is to reach the king from the knight in minimum no of counts.As we know, knight can either move 2 steps vertical/horizontal and 1 stephorizontal/vertical. same goes here as well. Proper image of the chess board was given inthe question paper, and all the positions(max 8) were given that knight can take in thefirst step. Sol : Most of us implemented using recursive func", "k": ["knight", "king", "positions", "vertical", "chessboard"]}
{"i": "5104146164219904", "t": "Seat Reservation prog for the theatre. Write a function for seat allocation for the movietickets. Total no of seats available are 200. 20 in each row. Each row is referred by theCharacter, \"A\" for the first row and ,J, for the last. And each seat in a row is represented by the no. 1-20. So seat in diffrent rows would be represented asA1,A2....;B1,B2.....;........J1,J2... Each cell in the table represent either 0 or 1. 0 rep wouldseat is available , 1 would represent seat is reserved.Booking should start from the last row (J) to the first row(A). At the max 20 seats can be booked at a time. if seats are available, then print all the seat nos like \"B2\" i.e (2 row, 3col) otherwise Print \"Seats are not available.\" and we must book consecutive seats only", "k": ["seat reservation prog", "reservation prog", "seat reservation", "reservation", "row"]}
{"i": "6706074107248640", "t": "suppose u r given a 4*3 rectangle like (take these values from user)Now u have to calculate the no. of squares in this rectangle like:No. of squares of dimension 1 is 12No. of squares of dimension 2 is 6No. of squares of dimension 3 is 2No. of squares of dimension 4 is 0Total no. of squares are 2", "k": ["squares of dimension", "squares", "dimension", "rectangle", "suppose"]}
{"i": "6530997281619968", "t": "suppose u r given a 4*3 rectangle like (take these values from user)Now u have to calculate the no. of squares in this rectangle like:No. of squares of dimension 1 is 12No. of squares of dimension 2 is 6No. of squares of dimension 3 is 2No. of squares of dimension 4 is 0Total no. of squares are 2", "k": ["squares of dimension", "squares", "dimension", "rectangle", "suppose"]}
{"i": "6253711340863488", "t": "Test cases for int rand() which returns a random number between 0 - 999", "k": ["test cases", "int rand", "cases for int", "returns a random", "random number"]}
{"i": "5203498857660416", "t": "Given a number give its english form\r1-> One\r999 -> Nine hundred and ninety nine\r Max number is: 999, 999, 999", "k": ["ninety nine max", "max number", "english form", "give its english", "hundred and ninety"]}
{"i": "5127811434020864", "t": "Design a webservice which would take a word, and return all anagrams", "k": ["design a webservice", "return all anagrams", "design", "word", "anagrams"]}
{"i": "5088710051758080", "t": "Given a graph that where A->B indicates that node A should be processed before processing B. Design an parallel algorithm to process all the nodes", "k": ["processed before processing", "design an parallel", "graph", "processed", "processing"]}
{"i": "6281061692604416", "t": "Smart pointers, how are they implemented. Any usecase for using smart pointers in languages that already have garbage collectors", "k": ["smart pointers", "implemented", "smart", "pointers", "garbage collectors"]}
{"i": "6032987502149632", "t": "Design a voicemail system. Would you use RDBMS or File system, provide rationale.", "k": ["design a voicemail", "voicemail system", "file system", "rdbms or file", "system"]}
{"i": "6030034980569088", "t": "An application is crashing the moment it is opened, how would you test it.", "k": ["application is crashing", "crashing the moment", "opened", "application", "crashing"]}
{"i": "5686646808772608", "t": "How do you add two numbers that are larger/longer than Integer datatype? I said I would use BigInteger , then he asked how will you add if the number is larger than BigInteger?", "k": ["longer than integer", "integer datatype", "integer", "longer", "datatype"]}
{"i": "5194746351845376", "t": "Implement Stack operations using two queues. I wrote some code, later he asked, how many elements could be added to this queue. (My code was like this Queue<Integer> q1 = new Queue<Integer>();  ) What would be the maximum number of elements that this queue would accomodate? My code was in java.", "k": ["implement stack operations", "implement stack", "stack operations", "queue", "stack"]}
{"i": "6110581555724288", "t": "Design a object oriented class for a vending machine. My idea is that it should have the ability to take in money, item selection, serving item. But I am not sure how to put everything together using good object-oriented principles.", "k": ["object oriented class", "design a object", "vending machine", "object oriented", "oriented class"]}
{"i": "5710891899158528", "t": "Increment a integer array with value between 0-9\rEx:\rinput [1,2,3]\routput [1,2,4]", "k": ["input", "output", "increment a integer", "integer array", "increment"]}
{"i": "5645831734558720", "t": "Lowest common ancestor binary tree.\r1) Given left() right().\r2) Given just parent()\r3) Increase the performance to o(logn) with parent().", "k": ["lowest common ancestor", "ancestor binary tree", "common ancestor binary", "lowest common", "binary tree"]}
