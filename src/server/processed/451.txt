{"i": "8855737", "t": "What are the different types of cast in C++? Difference between static, dynamic, reinterpret cast.", "k": ["difference between static", "dynamic", "reinterpret cast", "cast", "types"]}
{"i": "8857691", "t": "There is an array a[10] which contains 1's and 0's. Write a program to have all 1's in the start of the array and then the 0's. \rThe complexity should be O(n/2).", "k": ["array", "write a program", "write", "program", "start"]}
{"i": "8856722", "t": "Detect loop in a linked list. What is its complexity. Optimize it to O(n).", "k": ["detect loop", "linked list", "detect", "list", "loop"]}
{"i": "8852570", "t": "Difference between pointer and reference. Can a NULL pointer be used as a reference?", "k": ["reference", "difference", "null pointer", "difference between pointer", "pointer"]}
{"i": "8853528", "t": "You have a Word Processor type Program. There are  2^16 fonts. Each font is associated with a 4MB geometric instruction set. This is written in a flat file.\rEverytime a user selects a font this file is searched linearly. Develop a program to optimize the font search. (You could either add some functionality improvement in the word processor application while font selection or in the font search file).", "k": ["word processor type", "processor type program", "word processor", "processor type", "type program"]}
{"i": "8638361", "t": "Write test cases for on-line money transfer in a bank.", "k": ["write test cases", "on-line money transfer", "write test", "test cases", "cases for on-line"]}
{"i": "8638360", "t": "Write test cases for testing a installer. (eg: Firefox installer )", "k": ["write test cases", "write test", "test cases", "cases for testing", "firefox installer"]}
{"i": "8853736", "t": "Write a program to count the number of vowels in a string.", "k": ["write a program", "program to count", "count the number", "number of vowels", "write"]}
{"i": "8762276", "t": "Write test data for a program which returns the third largest number in a given array.", "k": ["write test data", "write test", "test data", "program which returns", "largest number"]}
{"i": "8853728", "t": "Write a program to ensure given String is well formed or not. The string contains both opening (eg: {,[, ( ) and closing ( eg: }, ]. )) braces. Well formed means open braces should have corresponding closing braces. It can come nested.\r Ans : Use Stack to keep track of this. When ever you get a open brace push to stack. when ever you get a closing brace pop the top from stack and match whether it is proper brace.", "k": ["write a program", "program to ensure", "string", "ensure given string", "closing"]}
{"i": "8762271", "t": "Explain the QA process in your organization", "k": ["explain", "organization", "process"]}
{"i": "8847405", "t": "You have installed a program in your PC. Its not working. How to debug?", "k": ["installed a program", "installed", "program", "working", "debug"]}
{"i": "8852175", "t": "Write a program to get the sum of digits in a number till it become a single digit.\reg: 789 --> 7+8+9 = 24 ---> 2+4 = 6", "k": ["write a program", "number till", "single digit", "sum of digits", "write"]}
{"i": "8762270", "t": "Write testcases for cart in a online shopping site.", "k": ["online shopping site", "write testcases", "shopping site", "testcases for cart", "online shopping"]}
{"i": "8847389", "t": "A MxN matrix is given. All rows and columns are sorted in ascending order. Search for a given number in this matrix efficiently.", "k": ["mxn matrix", "mxn", "matrix", "ascending order", "order"]}
{"i": "8762253", "t": "There are 25 horses and only 5 race tracks. Need to find the fastest horse among them in minimum trials. You dont have any stop watch. Find second fastest also.", "k": ["race tracks", "race", "tracks", "find", "fastest"]}
{"i": "8850266", "t": "1. Write program to find the number of given sub-string in a string ?", "k": ["write program", "write", "string", "program", "find"]}
{"i": "8846791", "t": "Find whether given binary tree T1 is subtree of binary tree T2 ? duplicates are allowed in both the tree nodes.", "k": ["duplicates are allowed", "binary tree", "tree nodes", "subtree of binary", "tree"]}
{"i": "8837116", "t": "Given a building of H number of floors and an elevator composed of N boxes such that only one box stops at a particular floor and that if a box stops at x-th floor than the box on top of that would stop at (x+d)-th floor for some constant d.\r Given H and N, find the number of different elevator configurations. Two elevators are different if their bottommost box is at first floor than there exits an \"i\" such that a box is at i-th floor in one elevator and no box is at i-th floor in other elevator.\r For example,\rif H = 9 and N = 3,\rthen there are 2 configurations possible.\r 1) First box stops at 1-st,2nd,3rd floor. Second box stops at 4-th,5th,6th floor and third box stops at 7th, 8th, 9th floor.\r2) First box stops at 1st,4th, 7th floor. Second box at 2nd,5th,8th floor and third box at 3rd, 6th, 9th floor.", "k": ["box stops", "box", "floor", "stops", "elevator"]}
{"i": "8833102", "t": "How would you design transfer of data packets from NY to Tokio?\r First I thought of traveling salesman problem where weight of connections between nodes is throughput of network. This problem is NP which lead just to interviewers reply that I should care about design of system, recovery of data and acknowledge whether data has been transferred.", "k": ["data packets", "design transfer", "tokio", "transfer of data", "traveling salesman problem"]}
{"i": "8825719", "t": "Implement a Memory Pool using ByteBuffer.\roperations: public ByteBuffer allocate(int size) // Creates and returns memory of size 'size' from Memory pool\r            public ByteBuffer free(ByteBuffer buffer) // frees ByteBuffer referred by buffer from Memory Pool", "k": ["memory pool", "memory pool public", "pool public bytebuffer", "memory", "pool"]}
{"i": "8825718", "t": "Implement various operations of a double ended queue (Deque).\rDeque is a data structure where items can be inserted and removed from both ends.\rOperations :- insertToLeft(), removeFromLeft(), insertToRight(),removeFromRight().", "k": ["double ended queue", "ended queue", "double ended", "deque", "implement"]}
{"i": "8825717", "t": "Design a online Auction system (similar to e-bay)\rFunctionalities include enlisting a product for auction by bid owner, Placing bid for a product by bidders,Bid winner selection,Notification of bid winner etc ). Interviewer was mainly looking for Objects involved in the system and their relationship and use of design patterns", "k": ["functionalities include enlisting", "bidders,bid winner selection,notification", "online auction system", "functionalities include", "placing bid"]}
{"i": "8780639", "t": "Find the mid of linked list. Sometimes it\u2019s not returning the mid what can be issue. If this class is accessing by multiple threads how to avoid that. If we use Synchronize the performance will be reduced how to tackle that. This class has some other methods as well like addNode, deleteNode, findNode etc.", "k": ["linked list", "find the mid", "find", "list", "mid"]}
{"i": "8817710", "t": ". we have an array of length 1\u2026n and every elements can contain number between 1 to 50. Find out the occurrence of every number and one can not use any other data structure or extra memory.", "k": ["array of length", "length", "number", "array", "elements"]}
{"i": "8801301", "t": "You have an input file which has one word per line. Write a java\rprogram which takes this input file and produces an output file satisfying\r the following conditions:\ra. Each line of output file should have 1 word\rb. Output file should contain input file words sorted by frequency\ri.e. most frequent words appear at the top and least frequent words at\rthe bottom\rc. For two words having same frequency in the input file, they should\rappear sorted alphabetically. for e.g. if A appears thrice and B\rappears thrice in input file, output file should have A appearing on\rthree lines and then B appearing on three lines\rd. If an input word is repeated X times, it should appear on X lines\rin the output file.\r Sample input/output file are as follows:\r Input           Output\r Dog            Abhishek\rAmar          Abhishek\rAbhishek    Abhishek\rAbhishek    Amar\rAmar          Amar\rAbhishek    Amar\rAmar          Dog\rBoy            Dog\rBall            Ball\rDog            Boy", "k": ["abhishek abhishek abhishek", "abhishek amar amar", "abhishek amar", "abhishek abhishek", "amar amar"]}
{"i": "8787101", "t": "Algorithms - insertion into a sorted linked list, reader writer problem (pref to writers), Dijkstra, MST\r Data structure - to implement a phone book", "k": ["mst data structure", "reader writer problem", "sorted linked list", "mst data", "data structure"]}
{"i": "8780341", "t": "Many c++ questions - Virtual destructors, Multimap, how to identify memory leak", "k": ["virtual destructors", "identify memory leak", "multimap", "questions", "memory leak"]}
{"i": "8700834", "t": "How to identify deadlocks, When should we use multi threading, what is virtualization", "k": ["identify deadlocks", "multi threading", "deadlocks", "threading", "virtualization"]}
{"i": "8806995", "t": "Write a function\r int triangle(const vector<int> &A);\r that given a zero-indexed array A consisting of N integers returns 1 if there exists a triple (P, Q, R) such that $0 \\leq P < Q < R < N$ and\rA[P] + A[Q] > A[R],\rA[Q] + A[R] > A[P],\rA[R] + A[P] > A[Q].\rThe function should return 0 if such triple does not exist. Assume that $0 \\leq N \\leq 100,000$. Assume that each element of the array is an integer in range [-1,000,000..1,000,000].\r For example, given array A such that\r A[0]=10, A[1]=2, A[2]=5, A[3]=1, A[4]=8, A[5]=20\r the function should return 1, because the triple (0, 2, 4) fulfills all of the required conditions.\r For array A such that\r A[0]=10, A[1]=50, A[2]=5, A[3]=1\r the function should return 0", "k": ["function int triangle", "int triangle", "const vector", "function int", "function should return"]}
