{"i": "13394663", "t": "Given a dictionary of strings [ strings are in sorted order] you have to find the precedence of characters according to the dictionary..\reat\rbxy\re is ranked above b according to the dictionary.", "k": ["sorted order", "find the precedence", "precedence of characters", "strings", "order"]}
{"i": "13389672", "t": "N players played in  a tournament and the results are out. Each player has played all other players. To print out a combination 1,2,3, .. , i-1, i, i+1,....n such that i-1 has lost to player i and player i has lost to i+1. \r What would be the complexity for the same?", "k": ["player", "played", "tournament", "results", "players"]}
{"i": "13391662", "t": "Given a BST and a integer k. Wap to print all pairs of two numbers with sum k. \rpairs should be different. \rex. {2,4} and {4,2} are same so only one gets printed\r Assume all the numbers in BST are different.", "k": ["bst", "integer", "pairs", "numbers", "wap to print"]}
{"i": "13380664", "t": "Determine if the given string is of form pZq.\rq consist the reverse of p.\rand p and q will consist only X and Y.\rfor ex.  p=XYXX  and  q=XXYX(reverse of p). then\rstring XYXXABXXYX  is a valid string.\rThe constraint is : you can access only next character at each point.", "k": ["form pzq", "xxyx", "determine", "pzq", "string"]}
{"i": "13394662", "t": "What is a process.\rWhat is a stack.\rHow many stacks can a process have.\rWhat is a thread.\rHow many threads can a process have.\rDo the threads have their own stacks, or share the process stack(s), or both?", "k": ["process", "stack", "stacks", "threads", "process stack"]}
{"i": "13382663", "t": "write a program to implement doubly linked list as a circular linked list", "k": ["implement doubly linked", "doubly linked list", "circular linked list", "write a program", "linked list"]}
{"i": "13383662", "t": "write a program to implement stack as a circular linked list", "k": ["circular linked list", "write a program", "linked list", "program to implement", "implement stack"]}
{"i": "13383661", "t": "print 2n+1 prime numbers if any one of them not prime then print factors for that number", "k": ["print factors", "prime numbers", "print", "prime", "factors"]}
{"i": "13382661", "t": "write a program to print the given string as alphabets in order next integres fallowed by sum\r example: CAE2W3A is input and output should be\r ACDEW5", "k": ["write a program", "program to print", "string as alphabets", "alphabets in order", "order next integres"]}
{"i": "13380661", "t": "what is the output\r main()\r{\r   char x=-1>>2;\r   printf(\"%d\",x);\r}", "k": ["output main", "printf", "main", "char", "output"]}
{"i": "13375668", "t": "Implement a stack with 3 operations: push, pop and findmiddle(). At any point in time, findmiddle() should return the middle element of the stack (n/2+1) without popping out the elements. ie. in O(1) time", "k": ["pop and findmiddle", "operations", "push", "implement a stack", "findmiddle"]}
{"i": "13374667", "t": "Give you an array of String,\rreturn number of distinct strings in that array.", "k": ["return number", "distinct strings", "number of distinct", "give", "return"]}
{"i": "13374666", "t": "Randomly return a node in a binary tree, program in C/C++, and define the class or struct of the binary tree by yourself.", "k": ["randomly return", "binary tree", "return a node", "define the class", "class or struct"]}
{"i": "13378661", "t": "Interest problems:\r when you deposit a mount of money x1 in a one year , then you get amount of money x2 in n years later. the interest rate  R, x1 and x2 is known, calculate n. Write a C/C++ API, return the year. The rate is compound interest rate.", "k": ["mount of money", "money", "deposit a mount", "interest problems", "interest"]}
{"i": "13364665", "t": "Identify whether an math expression is legal.\r for example: {[3*(3+2)]+1}*5  is legal\r{(]3++}+4  is illegal", "k": ["expression is legal", "math expression", "legal", "identify", "math"]}
{"i": "13376661", "t": "How to test a whiteboard?", "k": ["test a whiteboard", "whiteboard", "test"]}
{"i": "13367663", "t": "Reverse the word in a string.\rfor example:\r\"hello world\" after is \r\"olleh dlrow\"\r desgin test cases", "k": ["reverse the word", "reverse", "string", "olleh dlrow", "desgin test cases"]}
{"i": "13374664", "t": "print out the start and end index of the subarray that has the largest sum in an integer array.\rDesign test case", "k": ["integer array", "start and end", "end index", "largest sum", "design test case"]}
{"i": "13372663", "t": "return the 2nd largest number in an integer array, then design test cases:", "k": ["design test cases", "largest number", "integer array", "test cases", "design test"]}
{"i": "13364661", "t": "Suppose you have a graph  G(V,E).\rYou are supposed to find the shortest path from a vertex 's' to vertex 'e' for 'n' different cases.\r In each case one of the edges  'Ei' (any one edge) of the graph will be blocked/deleted only for that case and we have to find the shortest path in the graph with that edge removed.\r Guys finding the shortest path is easy. But how can I make the algo so fast that even if I remove one of the edges my algo should still be very fast. O(n log n) or  faster.\rRemember we are not deleting the edges permanently. We are just temporary removing one edge per case.\rIn each case only one edge is removed.\rSuppose we blocked one edge E in one case. We have to find the shortest path for the graph.\rIn next case, we will reconnect the last edge and we will block/remove a new edge. And again for this new case we have to find the shortest path.\r Another way of understanding the problem is suppose there are cities connected to each other.\rAnd every day one of the roads gets blocked because of heavy rain. what is the shortest path every day from city s to e.\rAlso one more important thing to note that each road can be used only once.\rBut there could be more than 1 direct road from city a to city b.\r FInd the shortest path distance from city s to e on a day when all direct roads from city f to city h are blocked. If there is no connecting path return -1", "k": ["shortest path", "find the shortest", "shortest", "path", "edge"]}
{"i": "13338666", "t": "what is complexity of the code\rfor(int k=1;k<n;k++)\r{\r  j=k;\r  while(j>0)\r  {\r     j=j/2;\r  }\r}", "k": ["int", "complexity", "code"]}
{"i": "13300671", "t": "given three strings X, Y and Z. Find all solutions to a numeric puzzle: X + Y = Z where each character in a string corresponds to some digit.\rFor simplicity, you may assume that strings are of the same length.\r e.g.: X =  \"abcd\", Y = \"dbcc\", Z = \"cdda\"\rhence we get: 2275 + 5277 = 7552", "k": ["find all solutions", "numeric puzzle", "strings", "string corresponds", "find"]}
{"i": "13346664", "t": "Implement the stack  using single Queue", "k": ["single queue", "implement the stack", "queue", "stack using single", "implement"]}
{"i": "13336679", "t": "How do we decide which column we should partition on and which column to index on", "k": ["decide which column", "column to index", "column", "decide", "partition"]}
{"i": "13336678", "t": "Table TEAM( TEAM_ID, TEAM_NAME).\rThis table has all the football team names.\rSay entries are\r 1  France\r2  Germany\r3  Spain\r Write a SQL to generate match Fixtures between the teams. No hard coding. No repeation.\r Sample out put will be \rC1         C2\rFrance  Germany\rFrance  Spain\rSpain    Germany", "k": ["team", "france germany france", "germany france spain", "france spain spain", "spain spain germany"]}
{"i": "13336676", "t": "Given X different vectors. Find the combined median in an efficient way\rDiscuss both when they are sorted and not sorted", "k": ["vectors", "efficient way discuss", "find the combined", "discuss", "sorted"]}
{"i": "13336675", "t": "Given a number. And one permutation of that number.  Find out in how many steps can you get back to the original number from the permutation if you use the same mapping again and again. If its not possible, then state so.\rExample: 2315 -> 5213 \rSo in this example Mapping is number at\t 1st index -> 2nd index\r\t\t\t\t\t   \t2nd index -> 4th index\r\t\t\t\t\t\t3rd index -> 3rd index\r\t\t\t\t\t\t4th index -> 1st index\r\t\tSo using same mapping can we come back to 2315. If yes then in how many steps?", "k": ["index", "number", "mapping", "permutation", "back"]}
{"i": "13334683", "t": "consider binary representation of all numbers\r 1 : 1\r2 : 10\r3 : 11\r.\r.\r.\r7 : 1 1 1\r...\r how many ones are requred to write numbers from 1 to n.\reg how many 1's are needed to write numbers from 1 to 7 : 12\rexpected complexity : logn", "k": ["binary representation", "write numbers", "numbers", "binary", "representation"]}
{"i": "13337667", "t": "Given a string. Tell its rank among all its permutations sorted lexicographically", "k": ["permutations sorted lexicographically", "string", "sorted lexicographically", "permutations sorted", "lexicographically"]}
{"i": "13301689", "t": "consider any string of characters\r aabbbccdeef\rbreak it into partitions such that each partition is a palindrome\raa|bbb|cc|d|ee|f so 6 partitions", "k": ["characters aabbbccdeef break", "string of characters", "characters aabbbccdeef", "aabbbccdeef break", "bbb"]}
