{"i": "14208664", "t": "int main(){\rshort int a, b, c, d, e, f;\rscanf(\"%d %d\",&a,&b);\rscanf(\"%d %d\",&e,&d);\rc=a+b;f=d+e;\rprintf(\"%d %d\",c,f);}\rWhat does the above code output on giving inputs 10, 10, 10, 10? and why ?", "k": ["giving inputs", "int main", "short int", "code output", "output on giving"]}
{"i": "14095774", "t": "main(){\runion d{\runsigned int a:1;\runsigned int b:3;\runsigned c:2;};\runion d aa;\raa.b=6;aa.c=2;aa.a=1;\rprintf(\"%d %d %d\",aa.a,aa.b,aa.c);}\rWhat does the above code output?", "k": ["unsigned int", "code output", "unsigned", "union", "int"]}
{"i": "14120713", "t": "#include<stdio.h>\r#include<conio.h>\rint main()\r{\r    int i;\r    i=5;\r    i=++i/i++;\r    printf(\"%d\",i);\r    getch();\r}\rExplain the output .", "k": ["explain the output", "int main", "include", "int", "explain"]}
{"i": "14110666", "t": "Given an inorder of a tree....build a tree where root is always greater than its left & right child", "k": ["build a tree", "tree where root", "tree", "build", "left"]}
{"i": "14185703", "t": "n numbers (both +ve and -ve) are arranged in a circle. find the maximum sum of consecutive nos. Do this in O(n) time\r E.g.: {8,-8,9,-9,10,-11,12}\rmax = 22 (12 + 8 - 8 + 9 - 9 + 10)", "k": ["numbers", "circle", "find the maximum", "consecutive nos", "arranged"]}
{"i": "14177718", "t": "Write the code for mutex in c that is threadsafe", "k": ["write the code", "code for mutex", "write", "threadsafe", "code"]}
{"i": "14183704", "t": "There is a stream of numbers and you need to find the maximum k numbers at any instant when minimum of k numbers have passed.", "k": ["find the maximum", "instant when minimum", "maximum k numbers", "numbers have passed", "numbers"]}
{"i": "14183703", "t": "Prove that addition of consecutive odd numbers from 1 will result in number that is the square of the count of numbers added.\r e.g. 1+3+5 = 9           here count is 3 and the sum is 3^2 = 9\r Give a mathematical proof", "k": ["consecutive odd numbers", "prove that addition", "numbers added", "addition of consecutive", "consecutive odd"]}
{"i": "14180697", "t": "Write a code to in place sort the strings of the type \"s1d3b2m0\" to \"sdbm1320\". Solution must be of O(n) without the use of extra space. At max one temp variable could be used.", "k": ["write a code", "place sort", "sort the strings", "write", "type"]}
{"i": "14182701", "t": "Effect of synchronize keyword in static and non-static methods in java", "k": ["effect of synchronize", "methods in java", "synchronize keyword", "keyword in static", "static and non-static"]}
{"i": "14184701", "t": "There are 25 horses. A group of maximum 5 can only be made. You need to find the best three horses in minimum number of races", "k": ["horses", "group of maximum", "maximum", "made", "number of races"]}
{"i": "14184700", "t": "There are three people and they need to know the average of their salaries without knowing each other's salary. How will you do that?", "k": ["salaries without knowing", "salary", "people", "average", "salaries"]}
{"i": "14177715", "t": "Reverse a linked list", "k": ["reverse a linked", "linked list", "reverse", "list", "linked"]}
{"i": "14185700", "t": "There are four couples on one side of the river. There is an island in between that can hold only two people at a time. There is a boat that can carry maximum of two people. You need to transfer all 8 of them to the other side of the river. Condition is that a wife can not stay in the absence of her husband if any other male is present. She can stay with other females but not with other males in the absence of her husband.", "k": ["river", "couples", "side", "people", "absence"]}
{"i": "14181697", "t": "Design and code a heap memory manager", "k": ["heap memory manager", "design and code", "memory manager", "code a heap", "heap memory"]}
{"i": "14178704", "t": "What is MVC model.", "k": ["mvc model", "mvc", "model"]}
{"i": "14140701", "t": "How is Java different from javascript.", "k": ["java", "javascript"]}
{"i": "14183702", "t": "Divide a trapezium in 4 equal parts", "k": ["equal parts", "divide a trapezium", "divide", "equal", "parts"]}
{"i": "14183701", "t": "There are two person A with Lock L1 and B with Lock L2 and a messenger M two send the box from one end to another. How to send the box so that M can never open the box.", "k": ["lock", "send the box", "box", "send", "open the box"]}
{"i": "14180693", "t": "What is the difference between a programming and scripting  language.", "k": ["scripting language", "programming and scripting", "language", "difference", "programming"]}
{"i": "14105710", "t": "There is an ant in a cube placed at one corner and you need to find the shortest path to the diagonally opposite corner. The ant can not fly tht is obvious.", "k": ["diagonally opposite corner", "find the shortest", "shortest path", "diagonally opposite", "opposite corner"]}
{"i": "14118714", "t": "Questions on Unions and its initialization and its memory usage.", "k": ["questions on unions", "memory usage", "unions", "questions", "usage"]}
{"i": "14184694", "t": "How to implement classes in C", "k": ["implement classes", "implement", "classes"]}
{"i": "14179695", "t": "There is a channel which can send and receive signals and there is a sender and receiver. Sender can only send and receiver can only receive the message. Design classes for all three with the restrictions.", "k": ["receive signals", "send and receiver", "send", "receiver", "receive"]}
{"i": "14183700", "t": "Design a base class that is uncopyable(need to take care of the = operator)", "k": ["operator", "design a base", "base class", "design", "uncopyable"]}
{"i": "14184693", "t": "Questions on virtual methods and inheritence and C++", "k": ["questions on virtual", "virtual methods", "methods and inheritence", "questions", "virtual"]}
{"i": "14180692", "t": "A stream of bits is passing, at any instance tell whether it is divisible by 3 or not.", "k": ["bits is passing", "stream of bits", "passing", "stream", "bits"]}
{"i": "14177714", "t": "atoi() implementation.", "k": ["atoi", "implementation"]}
{"i": "14140700", "t": "There are coins of 25 10 5 and 1 Rs. You got to tell in how many ways you can make change for an amount X. A working code was required,", "k": ["coins", "make change", "code was required", "required", "make"]}
{"i": "14182698", "t": "Find the first character in the given string that is non repeating --- O(n) solution expected", "k": ["solution expected", "find", "repeating", "solution", "expected"]}
