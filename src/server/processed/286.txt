{"i": "5983877285806080", "t": "How do you remove duplicates from an array of integers", "k": ["array of integers", "remove duplicates", "integers", "remove", "duplicates"]}
{"i": "5603540751876096", "t": "Write down the fibonacci algorithm.", "k": ["fibonacci algorithm", "write", "algorithm", "fibonacci"]}
{"i": "5493649718640640", "t": "How do you remove repeated values from a Int Array returning the resultant array in the same order as the original.", "k": ["int array returning", "int array", "array returning", "resultant array", "remove repeated"]}
{"i": "4711192576655360", "t": "What happens when you click on a link and get the web page? meaning what's the process behind that", "k": ["web page", "page", "click", "link", "web"]}
{"i": "5895641477677056", "t": "for an array of integers find the first sequence in which the sum it's elements is equal to a given value and explain the complexity.", "k": ["explain the complexity", "array of integers", "integers find", "sum it elements", "elements is equal"]}
{"i": "5395260607823872", "t": "Take any array of integers and only copy the first occurrence of each value to another array. Explain the complexity of the algorithm.", "k": ["array of integers", "array", "explain the complexity", "integers", "copy"]}
{"i": "6212850582290432", "t": "Usage of a linked list, Differences with a vector. In which situations is better to use a vector or a list and why.", "k": ["linked list", "differences", "usage", "vector", "list"]}
{"i": "6077919889719296", "t": "Given a list of n integers, find top k integers. What is time-complexity of your solution", "k": ["find top", "integers", "top k integers", "find", "list"]}
{"i": "4857977378963456", "t": "Two arrays with integers. Find the values that are present in both of them. What is the time complexity?\r    How to do you ensure that there are no duplicates in the final output? --> time complexity. Can you get this done with O(n2)?", "k": ["arrays with integers", "time complexity", "integers", "complexity", "arrays"]}
{"i": "5293418343301120", "t": "Design class structure for a building, floors and space. The space can be an apartment, a store or an office. Include any properties, fields and methods you think would be interesting to have.", "k": ["design class structure", "design class", "class structure", "design", "building"]}
{"i": "5689792285114368", "t": "Write a function to search for the existence of a string (target) in another string (str). The function takes two strings as the input and returns the index where the second string is found. If the target string cannot be found, then return -1", "k": ["write a function", "string", "str", "function to search", "function"]}
{"i": "5032353051181056", "t": "[Question asked during online Test.]\rGiven a list of 'N' coins, their values being in an array A[], return the minimum number of coins required to sum to 'S' (you can use as many coins you want). If it's not possible to sum to 'S', return -1\r Sample Test Cases:\rInput :\rCoin denominations: { 1,3,5 }\rRequired sum (S): 11\r Output :\r3", "k": ["question asked", "sample test cases", "asked during online", "online test", "question"]}
{"i": "5374996952121344", "t": "Giving a 2D (N*N) Matrix of characters, construct every possible  words out of it. A cell in the matrix can only be used one time.", "k": ["matrix of characters", "giving", "characters", "construct", "matrix"]}
{"i": "5575254097264640", "t": "Construct ancesstor matrix of a given binary tree.", "k": ["construct ancesstor matrix", "construct ancesstor", "binary tree", "ancesstor matrix", "construct"]}
{"i": "4714473931669504", "t": "Find all the nodes at a distance 'k' from a given node. Should be k anywhere not just up and down.", "k": ["find", "distance", "nodes", "node"]}
{"i": "6154593645887488", "t": "Is it possible to compare two Binary trees for equality in iterative manner without using extra space?", "k": ["compare two binary", "binary trees", "extra space", "trees for equality", "equality in iterative"]}
{"i": "6662636737396736", "t": "Given a list of test results (each with a test date, Student ID, and the student\u2019s Score), return the Final Score for each student. A student\u2019s Final Score is calculated as the average of his/her 5 highest test scores. You can assume each student has at least 5 test scores.\r You may use the JDK or the standard template library. The solution will be evaluated on correctness, runtime complexity (big-O), and adherence to coding best practices. A complete answer will include the following:\r Document your assumptions\rExplain your approach and how you intend to solve the problem\rProvide code comments where applicable\rExplain the big-O run time complexity of your solution. Justify your answer.\rIdentify any additional data structures you used and justify why you used them.\rOnly provide your best answer to each part of the question.\r  Use the following skeleton for your solutions.\r Java:class TestResult {\r\n      int studentId;\r\n      String testDate;\r\n      int testScore;\r\n   }\r\n \r\npublic class FinalScoreQuestion {\r\n \r\n   Map <Integer, Double> calculateFinalScores (List<TestResult> results) {\r\n \r\n}", "k": ["final score", "test scores", "highest test scores", "student", "return the final"]}
{"i": "4655753138798592", "t": "Print the actual phone number when given an alphanumeric phone number. For e.g. an input of 1-800-COM-CAST should give output as 18002662278 (note: output also does not contain any special characters like \"-\").", "k": ["actual phone number", "alphanumeric phone number", "phone number", "print the actual", "actual phone"]}
{"i": "5534786915401728", "t": "Two tables. Country and City\r    country --> countryid, country name\r    city --> countryid, city name\r     1. how do you get the countries that has no cities?\r    2. how do you get the countries that has less than 3 cities and also make sure the countries with no cities also show up.", "k": ["countryid", "city", "countries", "tables", "cities"]}
{"i": "4913631565185024", "t": "Design Elevator system. And then write an algorithm for that Design such that, the user request should be completed in logN time in a N story building with M elevators,", "k": ["design elevator system", "elevator system", "design elevator", "system", "design"]}
{"i": "6005446611566592", "t": "Given a server that has requests coming in. Design a data structure such that you can fetch the count of the number requests in the last second, minute and hour.", "k": ["requests coming", "minute and hour", "design a data", "number requests", "requests"]}
{"i": "5598833467719680", "t": "Given an 8x8 chess board, you have a bishop that moves from the current to the target position. write a code to find the minimum path from the current to the target position.", "k": ["target position", "chess board", "bishop that moves", "position", "current"]}
{"i": "6430339136225280", "t": "Design an API that will support constant time add, remove, search and random find operations.  Random find will get a random number and return that element.  Note: Only hash map will not be sufficient since it cannot support random read.", "k": ["constant time add", "design an api", "support constant time", "random find operations", "time add"]}
{"i": "4812957531766784", "t": "Given a family tree for a few generations for the entire population and two people write a routine that will find out if they are blood related.  Siblings are blood related since they have the same parents.  Cousins are blood related since one of their parents have the same parents etc.  Design the data structure first and then write the routine.", "k": ["blood related", "family tree", "entire population", "blood", "related"]}
{"i": "5388826746814464", "t": "Given multiple stream of input numbers each of which may not fit in memory (we can assume each source to be individually sorted) give an API design to merge and store a fully sorted array. Design must be object oriented which can handle any number of input source types.  Obviously output also cannot fit in memory.", "k": ["fully sorted array", "give an api", "api design", "sorted array", "multiple stream"]}
{"i": "5683135085805568", "t": "Given a sequence of numbers such that A[0] >= A[1] and A[N-1] >= A[N-2] find at-least one triplet such that A[n-1] >= A[n]  <= A[n+1].  Better than linear time is expected.\r Example: 9 8 5 4 3 2 6 7\rAnswer: 3 2 6", "k": ["find at-least", "sequence of numbers", "at-least one triplet", "time is expected", "find"]}
{"i": "5200260502650880", "t": "Find the majority number in a given sequence of numbers (a number that occurs more than N/2 times where N is the count of numbers in the sequence).  Don't maintain a map of all occurring numbers along with a count.  No number may be a majority.\r Example: 1 1 2 3 4 1 6 1 7 1 1\rMajority number is 1 since it occurs 6 times (> 11/2)", "k": ["majority number", "sequence", "majority", "number", "numbers"]}
{"i": "5361081258082304", "t": "Given a file with a set of space separated numbers in a file write a program to remove duplicate rows.  Two rows are duplicate if they contain the same numbers regardless of the order in which they occur.  Constant time algorithm expected.  LogN time is not good enough.\r Given file:\r1 2 3 4 5\r3 6 7 8 9\r2 4 7\r1 5 3 2 4\r Answer expected:\r1 2 3 4 5\r3 6 7 8 9\r2 4 7", "k": ["space separated numbers", "remove duplicate rows", "set of space", "space separated", "write a program"]}
{"i": "5711103912837120", "t": "Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles.\rExample:\rletter tiles: SAPAPER\rword dictionary: A AA AAA APE PEA PARE PEAR FEAR SPARE APPEARS REAPPEARS\rwould return: A AA APE PEA PARE PEAR SPARE APPEARS", "k": ["ape pea pare", "pea pare pear", "aaa ape pea", "pare pear fear", "pare pear spare"]}
{"i": "5242643239927808", "t": "Is this even possible?  Move the spaces to the starting of the string in a c style string. In place within one iteration.", "k": ["move the spaces", "string", "style string", "move", "iteration"]}
