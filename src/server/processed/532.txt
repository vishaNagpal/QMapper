{"i": "1363665", "t": "return a min from an array? extend this to return kth min element?\r The first part is trivial and the second part is selection sort with outer loop running k times.", "k": ["array", "return", "min", "kth min element", "min element"]}
{"i": "1301666", "t": "What is an array? what is a linked list? when would you use an array and linked list?", "k": ["linked list", "list", "array", "linked", "array and linked"]}
{"i": "1284672", "t": "How would you suffice array with increasing size? or how would you handle dynamic increase on size using arrays. spoke about hash tables.", "k": ["handle dynamic increase", "handle dynamic", "dynamic increase", "suffice array", "increasing size"]}
{"i": "1293678", "t": "diff b/w java and c#... Details of how garbage collector works..", "k": ["diff", "java", "collector works.", "details", "works."]}
{"i": "1327666", "t": "Difficult bug and how you resolved it.", "k": ["difficult bug", "difficult", "bug", "resolved"]}
{"i": "1341666", "t": "Generate anagrams. complexity", "k": ["generate anagrams. complexity", "generate anagrams.", "anagrams. complexity", "generate", "complexity"]}
{"i": "1144875", "t": "Given a node in an SSL, delete it..", "k": ["ssl", "delete", "node"]}
{"i": "1155859", "t": "winamp or any media player random play a plalist feature\r Bsically the question is to design a \"Shuffle Play\" feature which ensure that all the songs can be played once in random fashion with best efficiency.", "k": ["plalist feature bsically", "player random play", "media player random", "shuffle play", "bsically the question"]}
{"i": "1133869", "t": "network ip add is given in str form\r    read dat, parse it and from left to right\r    push into integer\r    4 parts of ip . each part can be stored in one bit", "k": ["form read dat", "str form read", "network ip add", "read dat", "push into integer"]}
{"i": "1150857", "t": "There is long list of natural numbers.\r    Remove every 2nd no from list in 1st pass\r    Remove every 3rd no from list in 2nd pass\r   Now find whether nth natural no will exist after p passes. n and p are inputs", "k": ["natural numbers", "long list", "list", "pass remove", "numbers"]}
{"i": "1145844", "t": "design a int server\rsay user are having acc for five servers\rsay data base of diff info\r now u need to design a integration server\rso that if u change the password for one server\rit will change the password on all five.\r another part is to write the prototypes of APIs which u will use.", "k": ["change the password", "design a int", "design a integration", "data base", "base of diff"]}
{"i": "1153846", "t": "find head of Linklist\rAn array of linked list nodes are given and act as pool of nodes.\rA list use a free node from array to make new node.\rWhen list want to free a node it just changes pointer.\rCase 1: No initialization of nodes happen.\rCase 2: Initialization of nodes happen. means next pointer is set to NULL.\rNow look at array of nodes and find the head of linked list. Can you find it. Why or why not.\rHow to find optimally. Tell for both cases.", "k": ["head of linklist", "linklist", "act as pool", "linklist an array", "nodes"]}
{"i": "1108877", "t": "There are 3 files in a program.\r // File: foo.c\r static int var;\r void foo()\r{\r   var++;\r}\r// end of file foo.c\r // File bar.c:\rstatic int var;\r void bar()\r{\r   var++;\r}\r// end of file bar.c\r // file main.c\rstatic int var;\rvoid main()\r{\r   foo();\r   bar();\r   printf(\"%d\", var);\r}\r// end of file main.c\r Question: Will the above program compile ? If so what will be the result ?", "k": ["static int var", "file main.c question", "int var", "file bar.c", "file"]}
{"i": "1205693", "t": "Probability question: Persons A and B go  shopping together. Say person A spent X amount of money and B Y. What is the probability that the sum total of their purchases [i.e. X+Y] has 0 cents [i.e. is a whole number]. ?", "k": ["probability question", "person a spent", "question", "shopping", "persons"]}
{"i": "1184783", "t": "Why is this not allowed in C++ ? Explain problems with this approach\r Derived *d = new Base()", "k": ["explain problems", "approach derived", "explain", "derived", "base"]}
{"i": "1144836", "t": "If I create an object of class Foo, and send its address and sizeof to memset and set it all to 0, will it work? I answered yes, it ll set it to 0.\rthen he asked, if everything sets to 0, will u still be able to call functions? i answered yes, but if the function uses any data, it might not work, as data would have been corrupted.\rhe asked, will any function not work? yes, if there are virtual functions, call to virtual functions will fail, as pointer to vtable will be corrupted.", "k": ["class foo", "create an object", "object of class", "send its address", "address and sizeof"]}
{"i": "1103848", "t": "implement a function to_dollar(int a) that takes in an int, say '10200', and prints $10,200.", "k": ["implement a function", "dollar", "implement", "prints", "int"]}
{"i": "1162824", "t": "write the prototype for strcat function in C", "k": ["write the prototype", "prototype for strcat", "strcat function", "write", "prototype"]}
{"i": "1093862", "t": "why do u want to work at bloomberg", "k": ["work at bloomberg", "bloomberg", "work"]}
{"i": "1113856", "t": "how do you handle the deadlines when there are other important things happening.", "k": ["important things happening", "things happening", "handle the deadlines", "important things", "happening"]}
{"i": "1122808", "t": "Print the longest sequence of numbers that appear in ascending order in an array(need not be contiguous). Suppose your array has values a={8,6,5,1,9,3,7,4,2,10}, the output would be 1,3,4,10.", "k": ["print the longest", "longest sequence", "sequence of numbers", "ascending order", "print"]}
{"i": "1108782", "t": "Explain all the packets exchanged/transmitted by your system from the time of boot to the time I try to access google.com", "k": ["packets exchanged", "access google.com", "time of boot", "time", "explain"]}
{"i": "1153762", "t": "How to find the maximum rectangle in a histogram, and write C++ to implement it.", "k": ["find the maximum", "maximum rectangle", "histogram", "find", "maximum"]}
{"i": "1118777", "t": "write a function that accepts an array, a number. it need to find the first two numbers in the array to have the sum as the number passed. You know the length of the array", "k": ["write a function", "function that accepts", "array", "number passed", "write"]}
{"i": "1189672", "t": "You have a stream of sentences. you don't know total number of sentences until you exhaust the stream. you have to choose one sentence randomly from the input stream. you don't have space to store all sentences at your end. randomly means probability of choosing any sentence is equal.", "k": ["stream", "sentences", "sentence", "randomly", "total number"]}
{"i": "1091749", "t": "Class Design:\rUsing char*,\rdesign an CString implementation.\rList the functions that are supported,\rImplementation of \"operator=\".", "k": ["class design", "cstring implementation", "design", "design an cstring", "class"]}
{"i": "1163753", "t": "Static members,\rWhat are they?\rTheir reason of existence?\rChallenges they have? (Link initilization)......", "k": ["static members", "static", "members", "link initilization", "reason of existence"]}
{"i": "1108764", "t": "I/P: Set of Words\rO/p: Group anagrams and print them on same line.", "k": ["set of words", "group anagrams", "anagrams and print", "set", "group"]}
{"i": "1106759", "t": "An investment, 16% chance to lose money on a quarter, and each quarter follows i.i.d. normal distribution.\rQ: what is the probability of losing money by the end of the year?", "k": ["normal distribution", "chance to lose", "lose money", "quarter", "investment"]}
{"i": "1152758", "t": "You need to spend an exact amount from given types of coins of various denominations. There is a cost associated with the type of the coin. You would like to minimize the cost subject to constraint that you can only spend a limited number of coins of each denomination\rInput :\rcoinDenoms = {100,100,300,400,500,600};\rcoinDenomSize = 6\rcoinCost = {125,150,425,525,625,725};\rcoinCostSize = 6\ramount = 400\rlimitPerDenomination = 4\rOutput :\rThe function findMinCost() returns an array containing \r125,125,125,125", "k": ["exact amount", "denomination input", "types of coins", "coins", "spend an exact"]}
