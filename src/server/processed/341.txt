{"i": "14686739", "t": "Write a program to print the code structure. \r(Basically it was to print the nodes of Tree in DFS. )", "k": ["write a program", "code structure", "tree in dfs", "program to print", "print the code"]}
{"i": "14688752", "t": "Write an API to find valid IP address. \r(Asked followup questions like which kind or IP format, return type, range specific, etc.)", "k": ["write an api", "api to find", "valid ip address", "find valid", "asked followup questions"]}
{"i": "14692764", "t": "Design SkyDrive. (open ended question. )", "k": ["design skydrive", "design", "skydrive", "open ended question", "open ended"]}
{"i": "14694744", "t": "Implement IEnumerable<string> foo(IEnumerable<string> a, IEnumerable<string> b) such that foo returns string in either a or b but not both", "k": ["foo returns string", "implement ienumerable", "foo returns", "returns string", "ienumerable"]}
{"i": "14692760", "t": "class base{}\rclass derived {}\rmain()\r{\rbase b;\rderived *d=dynamic_casr<base>&b;\r}\r it gives compiler error - because above inheritance is not polymorphic.\r any reason why dynamic_cast, instead of returning 0 looks for polymorphic structure ?", "k": ["class derived", "compiler error", "class base", "class", "derived"]}
{"i": "14692759", "t": "Who initializes 'this' pointer ?\ris it initialized before constructor call?", "k": ["this' pointer", "constructor call", "initialized before constructor", "initializes", "this'"]}
{"i": "14683742", "t": "Given 2 sorted arrays..\rfind the median of the merged array without using extra space in O(logn)", "k": ["sorted arrays.", "sorted", "arrays.", "logn", "find the median"]}
{"i": "14691721", "t": "what is the difference between\r const int *i;\rint const *i;\rint *const i;", "k": ["const", "int", "const int", "int const", "difference between const"]}
{"i": "14681714", "t": "Given a set {1,2,3,4,5...n} of n elements, write code that outputs all subsets of length k. For example, if n = 4 and k = 2, the output would be {1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}", "k": ["write code", "subsets of length", "code that outputs", "outputs all subsets", "set"]}
{"i": "14704663", "t": "Given a file of N bytes. Find a sub-string of minimal length that is not present in the file.", "k": ["bytes", "file", "find a sub-string", "sub-string of minimal", "minimal length"]}
{"i": "14691685", "t": "Given an N x M matrix having only positive values, we have to nullify the matrix i.e make all entries 0.\rWe are given two operations\r1) multiply each element of any one column at a time by 2.\r2) Subtract 1 from all elements of any one row at a time\r Find the minimum number of operations required to nullify the matrix.\rNote: no range of input was given", "k": ["make all entries", "nullify the matrix", "time find", "matrix", "nullify"]}
{"i": "14688681", "t": "Is this possible?\r A BST is given. Without using any extra memory AND WITHOUT USING recursion.\r 1. Convert the BST into Sorted single Linked List.\r2. Convert the Sorted Linked List in (1) to exactly identical original BST.\r Suppose tree is:\r  \t\t\t10\r\t\t    /           \\\r\t\t1\t\t\tN\r\t    /       \\\r\tN\t\t5\r\t            /        \\\r\t\t2\t\tN\r\t    /       \\\r\tN\t\t4", "k": ["linked list", "sorted linked list", "convert", "bst", "single linked list"]}
{"i": "14691683", "t": "reverse a string in the following format :\rkullu   manali   shimla\rto \rshimla   manali   kullu\rthere can any number of spaces in between the words in the string.", "k": ["kullu manali shimla", "shimla manali kullu", "number of spaces", "kullu manali", "manali shimla"]}
{"i": "14685675", "t": "Given an array of Integers of size n, Find element appearing more than n/2 times", "k": ["find element appearing", "find element", "array of integers", "integers of size", "element appearing"]}
{"i": "14686667", "t": "....", "k": []}
{"i": "14680681", "t": "How to store a 100+ digit no. in  a variable?", "k": ["digit", "variable", "store"]}
{"i": "14695662", "t": "Unix command which will display content of file which has more than 45 characters?", "k": ["unix command", "display content", "content of file", "characters", "unix"]}
{"i": "14681670", "t": "Find the maximum element per level in a BST .? \rIn O(n) time and O(1) space ..? or O(logn) time and O(n) space.. telephonic interview", "k": ["find the maximum", "maximum element", "element per level", "bst", "time"]}
{"i": "14684669", "t": "Swap two nodes in place without using any extra node. For example,  if you have lists   a->b->c   then output should be   b->a->-c- and so on..", "k": ["extra node", "swap two nodes", "swap", "nodes in place", "place"]}
{"i": "14685664", "t": "Find out the square root of a double number. The result should be with in +/- 0.00001 of the actual result.", "k": ["double number", "square root", "find", "number", "square"]}
{"i": "14666725", "t": "design the backend system(data structure) of facebook's \"like\" button", "k": ["data structure", "button", "design the backend", "backend system", "design"]}
{"i": "14656728", "t": "Write a non-recursive function to delete an entire binary tree.", "k": ["entire binary tree", "write a non-recursive", "binary tree", "non-recursive function", "function to delete"]}
{"i": "14663725", "t": "Given a binary tree:                   \r                         1\r                        / \\\r                       2   6\r                      / \\   \\\r                     3  4    7\r                        /\r                       5\r Given the pre-order, in-order traversals of the tree, reconstruct the tree.", "k": ["binary tree", "in-order traversals", "reconstruct the tree", "tree", "pre-order"]}
{"i": "14664720", "t": "Given a matrix with letters in each square and you have to find words which are there in the dictionary (like Children's Crosswords). You have been given a function which outputs 1 if the given word is in the dictionary. The word could be bidirectionally horizontal, vertical or diagonal. Write an optimal algorithm for printing all such words.", "k": ["children crosswords", "matrix with letters", "crosswords", "children", "dictionary"]}
{"i": "14669705", "t": "There are two sets A and B with n integers, write a program to  check the whether there exists two numbers a in A and b in B such that > a+b = val ( val is given );", "k": ["write a program", "program to check", "exists two numbers", "val", "integers"]}
{"i": "14660714", "t": "#include<stdio.h> #include<stdlib.h> \r\nint main(){\r\n    union A {  \r\n         long int y[5];  \r\n              union B{  \r\n                    double g; \r\n                    union C{  \r\n                           int k;\r\n                           union D{ \r\n                                 char ch;\r\n                                 int x[5]; \r\n                           } s; \r\n                     }a;  \r\n                }b; \r\n          }*p;\r\n          p=(union A * ) malloc ( sizeof (union A));  \r\n          p->b.a.k=15;\r\n          printf(\"%d %d \\n\",p->b.a.s.x[0],p->y[0]);  \r\n}output : 15 15 \rplz explain with working", "k": ["plz explain", "explain with working", "union", "int main", "long int"]}
{"i": "14676665", "t": "//what will be the output of the program if characters 'hello world' and enter are supplied to the program ?#include<stdio.h>\r\nint main()\r\n{\r\n    void fun();\r\n    fun();\r\n    printf(\"\\n\");\r\n    return 0;\r\n   \r\n}\r\n\r\nvoid fun()\r\n{\r\n     char c;\r\n     if((c=getchar())!= '\\n')\r\n                        fun();\r\n                        printf(\"%c \", c);\r\n                        \r\n                        }output :  d l r o w  o l l e h\r(plz Explain...)", "k": ["void fun", "plz explain", "int main", "enter are supplied", "fun"]}
{"i": "14664702", "t": "Write a function called reverseReplace that takes three arguments.  The first will be a string of many words, the second will be a single word that we are going to search for, and the third and final will be the string we want to replace the second word with.  Example output:reverseReplace(\"I like cats\", \"cats\", \"dogs\") -> \"dogs like I\"\r\nreverseReplace(\"I like cats\", \"mice\", \"dogs\") -> \"cats like I\"You should test it against the examples above as well as a larger test suite.", "k": ["function called reversereplace", "write a function", "function called", "called reversereplace", "cats"]}
{"i": "14667688", "t": "Table: persons\r\nid\r\nfirst_name\r\nlast_name\r\nfavorite_ride_idTable: rides\r\nid\r\nnameWrite a query that will return the names and votes for the top 10 most popular rides in order from most to least popular.", "k": ["namewrite a query", "popular rides", "table", "idtable", "persons"]}
{"i": "14663692", "t": "Merge Two Arrays A & B where A has enough capacity to hold elements of array B. Also give the number of elements of A & B array.  Follow Up- Test this code.\r I need to test if the array is having -ve numbers also. Here is my code :", "k": ["capacity to hold", "hold elements", "array", "elements", "merge"]}
