{"i": "4757895", "t": "Write automation design for testing ping.exe. Write classes you need to support validation of inputs and return values. Show what specific input values and return values you would use to validate it. \rC:\\>ping.exe /?\rUsage: ping [-t] [-a] [-n count] [-l size] [-f] [-i TTL] [-v TOS]\r            [-r count] [-s count] [[-j host-list] | [-k host-list]]\r            [-w timeout] [-R] [-S srcaddr] [-4] [-6] target_name", "k": ["write automation design", "automation design", "design for testing", "write automation", "testing ping.exe"]}
{"i": "4660994", "t": "Lets assume we have a rat maze as represented by the following NxM matrix\rwhere S is the start location and F is the end location.\r S    0    0    0    0    0\r1    1    0    0    0    0\r1    0    1    0    0    0\r1    0    1    0    0    0\r0    1    0    1    0    0\r1    0    0    0    1    0\r0    1    1    1    1    F\r The idea (as with any rat maze) is to traverse from S to F. The matrix can\rhave only 0 and 1 as values. 1 represents a path that can be taken and 0\rrepresents a blocked path.\r We can make the following assumption:\rS will always be (0,0) and F will always be (N,M).\r As seen from above, there can be many paths from S to F.\r How do we find the shortest (or longest) path from S to F without actually\rtraversing all the possible paths.\r Please post (with proof/explantion) your algorithms. Also can you then think\rof ways to optimize the algo?", "k": ["start location", "end location", "rat maze", "nxm matrix", "location"]}
{"i": "4651990", "t": "Write a \"C\" function,\rint AddOvf(int* result, int a, int b)\r If there is no overflow, the function places the reusltant\rsum a+b in \"result\" and returns 0. Otherwise it returns -1.\r The solution of casting to long and adding to find detecting the\roverflow is not allowed :-)", "k": ["int addovf", "result", "int", "places the reusltant", "reusltant sum"]}
{"i": "4644993", "t": "You are given a mathematical expression containing operans , operators and parantheness.\rTest weather it is a valid expression or not.", "k": ["operators and parantheness", "mathematical expression", "expression containing operans", "operans", "operators"]}
{"i": "4634987", "t": "You are given a sorted array such that all the number is repeated except one.\rFind that non repeated number in O(n)", "k": ["sorted array", "number", "repeated", "sorted", "array"]}
{"i": "4757879", "t": "You are given an array of positive integers.\r Find a subarray such that the (length of subarray)* mininum value in that subarray is maximum.", "k": ["positive integers", "array of positive", "integers", "subarray", "array"]}
{"i": "4692970", "t": "You are given an array of integers. \rFind the mininum value of all the subarrays of size k in O(n)", "k": ["array of integers", "integers", "find the mininum", "array", "subarrays of size"]}
{"i": "4701952", "t": "Given an input sequence of characters like abcd... . Write a function which tells if the input received so far is palindrome. is it possible to tell without storing all the input sequence?\rsomething like an infinite stream of characters.", "k": ["input sequence", "input", "abcd", "characters like abcd", "sequence"]}
{"i": "4682948", "t": "an array contain +ve and -ve element, find subarray whose sum =0;", "k": ["find subarray", "subarray whose sum", "element", "find", "sum"]}
{"i": "4678853", "t": "Explain the memory alignment for advancing an short array pointer cast to a void", "k": ["short array pointer", "array pointer cast", "explain the memory", "memory alignment", "alignment for advancing"]}
{"i": "4766695", "t": "How to find duplicate words in a string and their frequency", "k": ["find duplicate words", "find duplicate", "duplicate words", "frequency", "find"]}
{"i": "4652850", "t": "implement the double trouble game in Java", "k": ["game in java", "double trouble game", "implement the double", "java", "double trouble"]}
{"i": "4709845", "t": "In a nxn board, some nodes are black colored. Given a black node, highlight all the black node connected to this given node directly or indirectly.", "k": ["nxn board", "black colored", "black node", "black node connected", "black"]}
{"i": "4760681", "t": "Implement a circular queue using an array. Implement enque and deque.", "k": ["circular queue", "implement", "array", "implement a circular", "implement enque"]}
{"i": "4710864", "t": "Given\rclass Node\r{\r  string A,\r  NodeList children;\r}\r class NodeList\r{\r  int count;\r  Node GetAt(int index);\r  void AddNode(Node node);\r}\r Implement deep copying a Node.", "k": ["implement deep copying", "implement deep", "void addnode", "int count", "int index"]}
{"i": "4716817", "t": "How will you delete duplicate odd numbers from a linked list? (delete only duplicates, keep one copy, list is not sorted) Interviewer was expecting O(n) answer. He didn't say anything clear about the extra space.", "k": ["duplicate odd numbers", "odd numbers", "delete duplicate odd", "interviewer was expecting", "duplicate odd"]}
{"i": "4655759", "t": "Implement the following Interface with a Tree implementation of a Map.\r public interface Map<K extends Comparable, V> {\r     public void put(K key, V value);\r     public V get(K key);\r     public int size();\r }", "k": ["public interface map", "tree implementation", "interface map", "map", "tree"]}
{"i": "4658727", "t": "2,2,4,11,_\r Find the next number in the series.No more clues. \r [I had 1 hour and gave many possible answers like 50,28,67 and 18 but could not convince them. This is such a short series.]", "k": ["series.no more clues", "find", "clues", "hour and gave", "short series"]}
{"i": "4675728", "t": "You have an Array of a million numbers. Duplicates exist in the array. \rPrint out all duplicate numbers.\rGive best way to do this.", "k": ["million numbers", "array", "numbers", "million", "duplicate numbers"]}
{"i": "4741723", "t": "Xbox for Zombies:\rThere are 10 zombies wating for the new Xbox in a line at a store. The store has 4 lanes, i.e. 3 waiting lanes and 1 purchase lane. The zombies are standing in the first waiting lane (ordered 1st to 10th)\r All zombies have to end up in purchase lane in the same order, you can use the other waiting lanes and can move only one zombie at a time. You can talk to and move only the front zombie in any lane if you talk to any other zombie behind the first one then it will eat you. Ex: if zombies 3,6,7 are in lane 2 then you have to move zombie 3 to other lane if you want to move zombie 6. \rAlso, if the i'th zombie sees any zombie greater than i in the same lane then it will kill all zombies. Ex: if zombie 4 sees zombie 5 or greater in front of it in the same lane then all zombies will be killed.\rAnd you can only move zombie's from the front of the lane, the back of the lanes are closed. So if you move zombie3 to purchase lane then only zombies 1&2 can be moved to that lane because any other zombie greater than 3 cannot stand in front of zombie3.\rThink of the lanes as a stack.\rIn how many moves can you move all zombies into purchase lane without killing yourself and any zombies?", "k": ["lane", "zombie", "zombies", "xbox", "move"]}
{"i": "4714735", "t": "Give several examples that static class function is useful.", "k": ["static class function", "static class", "class function", "give", "static"]}
{"i": "4529943", "t": "Find the width of a tree pointed by head", "k": ["find the width", "pointed by head", "tree pointed", "find", "head"]}
{"i": "4557896", "t": "description of a class that you designed.", "k": ["description", "designed", "class"]}
{"i": "4546892", "t": "operator++, op<<, copy ctor, assignment syntax,", "k": ["copy ctor", "assignment syntax", "operator", "copy", "ctor"]}
{"i": "4547898", "t": "name 3 process synchronization methods.", "k": ["process synchronization methods", "process synchronization", "synchronization methods", "process", "methods"]}
{"i": "4594890", "t": "which is tightily coupled containment or inheritance", "k": ["tightily coupled containment", "containment or inheritance", "tightily coupled", "coupled containment", "inheritance"]}
{"i": "4521874", "t": "How would you design http://www.google.com from the ground up?", "k": ["design", "ground"]}
{"i": "4587896", "t": "A Binary Tree is represented in an int array such that if P is parent and c is its children..a[c]=p\ra) Construct a Binary Tree if Such An Array is given\u2026\rb) u\u2019ve given an index of node representing root of sub tree.. If we ignore the node and all of its descendants , tell the no.of nodes remaining in tree\u2026.", "k": ["construct a binary", "binary tree", "node representing root", "int array", "binary"]}
{"i": "4538880", "t": "Given two strings, find the number of occurrences of one within the other . eg s1=\" the cow ran over the dog\" s2=\"the\" answer =2. Also, take care of repetitions eg. if s1= \"ABCBCBC\" and s2=\"BCBC\" then answer=2", "k": ["find the number", "number of occurrences", "cow ran", "answer", "strings"]}
{"i": "4602847", "t": "Given a n array of positive and negative integers, find the subarray with max sum in O(n) and one loop.", "k": ["negative integers", "find the subarray", "array of positive", "positive and negative", "subarray with max"]}
