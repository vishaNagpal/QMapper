{"i": "5713417215148032", "t": "object oriented design for robot vacuum cleaner. \rwrite use cases, draw class diagram and interfaces \rbetween them.", "k": ["object oriented design", "robot vacuum cleaner", "object oriented", "vacuum cleaner", "oriented design"]}
{"i": "5706698544119808", "t": "You have a buffer of 1024 only.There are packets coming from infinite sources. Need to design a data structure that can list the sources based on highest number of packets received from a source. After every 5 min, a scan is done and top 50 sources from where max packets are received are to be removed.", "k": ["coming from infinite", "packets coming", "infinite sources", "packets", "only.there"]}
{"i": "5630390128607232", "t": "Write a C program to check biggest among two numbers without using any relational operators", "k": ["relational operators", "program to check", "check biggest", "write", "operators"]}
{"i": "5675417223561216", "t": "How to print from 3rd column to till last columns using awk command in unix, if there are 'n' columns in a file.", "k": ["command in unix", "awk command", "unix", "file", "column to till"]}
{"i": "5705110748397568", "t": "A company is looking for algorithm to show item recommendations.\r If a customer bought A and B items and another buys A item, B should come as recommendations.\rThere are two types of recommendations based on the connections\r1) Two items are strongly connected if a customer buys those items.\r2) Two items are weakly connected if each items are strongly/weakly connected to another third item.\r Provided the sample input\rABC\r 10\r first:ABC\rfirst:HIJ\rsec:HIJ\rsec:KLM\rthird:NOP\rfourth:ABC\rfourth:QRS\rfirst:DEF\rfifth:KLM\rfifth:TUV\r first, sec, third.. represents the customer names\rABC, HIJ... represents the item codes\r For the Input item Id \"ABC\", since \"ABC\" is strongly connected to HIJ, DEF, QRS \rand whereas ABC is weakly connected to KLM and TUV\r the output should be count of strong and weak connection i.e., [3,2]", "k": ["abc", "algorithm to show", "hij", "connected", "show item recommendations"]}
{"i": "5662698751655936", "t": "http://www.dermayouth.org/beard-czar-review", "k": []}
{"i": "4827659935678464", "t": "Given a string consisting only of digits, find the missing number. For instance, given the string 596597598600601602 the missing number is 599. You may assume all the numbers are positive integers and the sequence increases by one at each number except the missing number. The numbers will have no more than six digits and the string will have no more than four hundred characters.\r Your task is to write a function to find the missing number in the sequence. If there should no missing number whatsoever, return a value of -1", "k": ["missing number", "missing", "number", "string consisting", "find the missing"]}
{"i": "6267265864433664", "t": "a = 0, b=0, c=1 are the 1st three terms. All other terms in the Lucas sequence are generated by the sum of their 3 most recent predecessors.\r Write a program to generate the first n terms of a Lucas Sequence.", "k": ["lucas sequence", "lucas", "terms", "sequence", "recent predecessors"]}
{"i": "5190781032726528", "t": "JSON PARSING ( Print all the data from a Json String).\r Input : {'firstname' : 'abc'} \rOutput : firstname -> abc\r Input : {'firstname' : 'abc', 'lastname' : 'Lincoln'} \rOutput : firstname -> abc lastname -> Lincoln\r Input : {'address' : '365 KG', 'lastname' : 'Lincoln'} \rOutput : address -> 365 KG lastname -> Lincoln\r Ideally, you must parse the JSON string into a map data, and then print out the elements of the map. Among other things, it will help print out the data in alphabetical order as well.", "k": ["lincoln output", "json parsing", "json string", "lincoln ideally", "lincoln input"]}
{"i": "5759625560326144", "t": "Lets say someone accidentally deleted all the whitespaces from a sentence. Write a program to reconstruct the sentence from that stripped out string. Assume you have access to a dictionary function that returns if a given string is a valid word or not.\r Example input: thisisavalidsentence\rOutput: this is a valid sentence\r If multiple solutions are possible, any one valid solution should be given. Assume there is always a valid solution. No invalid input will be given.", "k": ["accidentally deleted", "valid", "sentence", "valid solution", "valid sentence"]}
{"i": "5746668180865024", "t": "Given a BST and a number n, find two numbers in the tree that sums up to n. This was to be done in place i.e. without any extra space.", "k": ["tree that sums", "bst", "find two numbers", "find", "tree"]}
{"i": "5660351552028672", "t": "Return the sum of all the leaf nodes at minimum level in a binary tree. If there exists no tree, then return -1.", "k": ["leaf nodes", "nodes at minimum", "minimum level", "binary tree", "tree"]}
{"i": "5746972452454400", "t": "given a sorted array in ascending order arrange the elements of array in such a way that largest element is at first position and second largest element at last position third largest at second position and fourth largest at last second position and so on.try to do it without any extra space.", "k": ["ascending order arrange", "extra space", "ascending order", "order arrange", "largest element"]}
{"i": "5644778403266560", "t": "Ideal goal:\r Given data set of strings divide them into equivalence classes such that the equivalence relation is fuzzyMatchingOfString\r Problem: as far as I know there isn\u2019t a relation function fuzzyMatchingOfString such that it is transitive, i.e. given A,B,C and fuzzyMatchingOfString(A,B), fuzzyMatchingOfString(B,C) does not imply fuzzyMatchingOfString(A,C)\r e.g. foo ~ goo and goo~gol but not foo~gol\r given that I think we have to compromise about our goal and create a set to each string In our data set \u2013 that is n^2 for each run when the basic action is fuzzyMatchingOfString", "k": ["relation function fuzzymatchingofstring", "data set", "fuzzymatchingofstring problem", "ideal goal", "basic action"]}
{"i": "5713658404405248", "t": "Mickey got an assignment from his school that he has to collect money from each house for next day's event. The city is built just like a 2-D array and each house owner kept certain amount for Mickey (for ex: The house owner at (i,j) coordinate kept A[i,j] for Mickey). Mickey is in a hurry and he wants to reach home as soon as possible otherwise he will miss the match between India and Bangladesh. Also he can only move to any adjacent house from his location, and he cannot move diagonally. So please find a way so that he will collect maximum amount from everyone if he will reach home earliest.\r *Input Specification*\rinput1 = first input will tell you size of the array\rinput2 = String as shown in the example and you have to parse it to build your 2-D array\r *Output Specification*\routput1 = You need to set maximum amount collected to this global variable (type int)\r *Example*\rConsider input1 = 4 and it means school is at (0,0) and his house is at (4,4). In between the houses are like input2 = '(1,7,5,2),(5,12,3,6),(100,9,23,16),(16,4,5,9)'.\rTo collect maximum amount, Mickey should take his path {1,5,100,9,23,16,9} so that the total amount collected,output1 = 1 + 5 + 100 + 9 + 23 + 16 + 9 = 163**CLARIFICATION **\rThe programming test was like this, you store the input into the variablesinput1andinput2and store the output to the variableoutput1", "k": ["day event", "mickey", "collect maximum amount", "house", "maximum amount"]}
{"i": "5715149731135488", "t": "Given a multi-dimensional array as input which consists of 0's and 1's. Traverse from starting {0,0} to end {n,n} in a shortest path with any direction. You have to move to next item only when next item is 1, if it is 0, you can't move.", "k": ["multi-dimensional array", "array as input", "input which consists", "traverse from starting", "multi-dimensional"]}
{"i": "5679897813975040", "t": "Given a undirected graph with weights, return the sum of the weight of each path between two nodes (shortest path between two vertices). Assume there are no cycles.\r Example:Input:\r\n       A\r\n       | 1\r\n       B\r\n   2 /   \\ 3\r\n    C     D\r\n    \r\nOutput:\r\n18\r\nsince \r\nA to B has weight 1\r\nA to C has weight 3\r\nA to D has weight 4\r\nB to C has weight 2\r\nB to D has weight 3\r\nC to D has weight 5Edit: Thanks, wangchenClark0512, forgot about C to D\rEdit2: @Lukas, The question is just the sum of the shortest paths between two vertices. Also, all edges are positive.\rEdit3: Assume the graph has no cycles, did not get to the follow-up, but follow-up probably is probably change your algorithm so that is works for cycles", "k": ["weight", "return the sum", "undirected graph", "cycles", "shortest path"]}
{"i": "5754343992066048", "t": "interview would be easy. For freshers it would be okay\rfor experienced no salary hike is available", "k": ["interview", "easy", "experienced no salary", "salary hike", "freshers"]}
{"i": "5716842753556480", "t": "Design a deck of cards that can be used for different card game applications.\r Please code out what you would need for the deck class and a card class.\r Implement a deal method.", "k": ["card game applications", "game applications", "card game", "design a deck", "design"]}
{"i": "5679084353880064", "t": "Given two numbers M and N, P is from [M,N] and Q is from [1,P-1]. Find all irreducible fraction of P/Q.", "k": ["find all irreducible", "numbers", "irreducible fraction", "find", "irreducible"]}
{"i": "5100582055444480", "t": "pair programming example question with  code for thoughworks  interview", "k": ["pair programming", "thoughworks interview", "programming example question", "question with code", "code for thoughworks"]}
{"i": "5679389833428992", "t": "Design unix file system in database.", "k": ["design unix file", "unix file system", "design unix", "system in database", "unix file"]}
{"i": "5683013443649536", "t": "You are given an integer N. Write a code to calculate 1! - 2! + 3! ... up to N terms.", "k": ["integer", "write a code", "code to calculate", "write", "calculate"]}
{"i": "5727676540125184", "t": "You are given a function F6() which return 1,2,3,4,5,6 randomly with equal probability. Implement a new function F12() which returns 1 to 12 randomly with equal probability using F6().", "k": ["randomly with equal", "equal probability", "randomly", "function", "equal"]}
{"i": "5084421972557824", "t": "Suggest a data structure and implement efficient phrase search along with word search in a huge chunk of text.", "k": ["implement efficient phrase", "efficient phrase search", "suggest a data", "chunk of text", "data structure"]}
{"i": "5706271228428288", "t": "New technologies will cause end of JAVA, Is it right or wrong? And why reason.?", "k": ["end of java", "java", "wrong", "technologies", "end"]}
{"i": "5738847481626624", "t": "* Given an unsorted integer array, place all zeros to the end of the array without changing the sequence of non-zero\r * elements. (i.e. [1,3,0,8,12, 0, 4, 0,7] --> [1,3,8,12,4,7,0,0,0])", "k": ["unsorted integer array", "sequence of non-zero", "unsorted integer", "changing the sequence", "integer array"]}
{"i": "5743296530874368", "t": "* Implement a tick server the has multiple clients interested in different tickers. Clients have Plotters that are updated\r * in real-time with the top 10 tickers that have the most price updates on the top. What data structure would you choose\r * for the server and client plotters?", "k": ["implement a tick", "multiple clients interested", "implement", "multiple clients", "clients interested"]}
{"i": "5665093766348800", "t": "* Royal titles consist of name followed by space and a Roman numeral. Example: Richard IV. The Roman numeral in the title\r * can go to L (50). You are given the roman numerals from 1 to 10:\r * I II III IV V VI VII VIII IX X. And you are given the 10 multiples up to 50: XX XXX IL L. Numbers between 10 and 50 that\r * are not given can be formed from 10 multiples and a numeral b/w 1 and 9. Example: 48 is XLVIII wichi is XL (40) plus\r * VIII (8).\r * <p>\r * You are given an array of Roman titles sort it as follows: sort it on the name unless the names are equal, in which\r * case you have to sort it on the ordinal of the numerals.\r * Examples:\r * Henry II, Edward VIII => Eward VII, Henry II\r * Richard V, Richard II, Richard X => Richard II, Richard V, Richard X", "k": ["royal titles consist", "richard", "royal titles", "roman", "royal"]}
{"i": "5752808943910912", "t": "Design a system for searching strings in files present on a fileserver under a directory. there won't be any sub-directories. There could be more than thousand/lakhs files. And the file size could be in GBs. The matching line should be written to a single file. user will execute grep \"string\"\rThe sub-questions are \r1) Design where the application executes on single machine.\r2) Design where the application can execute on multiple machine.\r3) Where could be the potential bottleneck.\r4) What component would be bottleneck if 50 cores and slow disk.\r5) What component would be the bottleneck if we 4 cores and fast disks.", "k": ["system for searching", "design", "files present", "searching strings", "directory"]}
