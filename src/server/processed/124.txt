{"i": "5643372036358144", "t": "Given a number n.find (l X b) dimension such that it is maximally close .\r E.g:--\r12---o/p->4X3 not 6X2\r13---o/p->5X3 // as it is close", "k": ["number n.find", "maximally close", "close", "n.find", "dimension"]}
{"i": "5688549589385216", "t": "given a LinkedList like 1->2->3->4->5->6\rModify it as:\r1->6->2->5->3->4", "k": ["modify", "linkedlist"]}
{"i": "5663058421612544", "t": "How do I solve this simple geometrical programming problem?\rhttps://s32.postimg.org/sm75dimol/hurdle1.jpg", "k": ["geometrical programming problem", "simple geometrical programming", "programming problem", "solve this simple", "simple geometrical"]}
{"i": "5723222591930368", "t": "How do I find the longest possible route in a matrix?\rThere are some hurdles in the path.\rDetails in image : https://s31.postimg.org/7nwp4gmzv/hurdle1.jpg", "k": ["find the longest", "longest possible route", "matrix", "find", "longest"]}
{"i": "5635945366814720", "t": "The question is in the image.\rhttps://s32.postimg.org/xv0x002p1/mcq_1.jpg", "k": ["image", "question"]}
{"i": "5672458091757568", "t": "Problem : Christmas Tree\r Chirag is a boy. And his one and only dream is to meet Santa Claus. He decided to decorate a Christmas tree for Santa on coming Christmas. Chirag made an interesting Christmas tree that grows day by day.\r The Christmas tree is comprised of the following\r     Parts\r    Stand\r Each Part is further comprised of Branches. Branches are comprised of Leaves.\r How the tree appears as a function of days should be understood. Basis that print the tree as it appears on the given day. Below are the rules that govern how the tree appears on a given day. Write a program to generate such a Christmas tree whose input is number of days.\r Rules:\r If tree is one day old you cannot grow. Print a message \"You cannot generate christmas tree\"\r Tree will die after 20 days; it should give a message \"Tree is no more\"\r Tree will have one part less than the number of days.\r    E.g.\r    On 2nd day tree will have 1 part and one stand.\r    On 3rd day tree will have 2 parts and one stand\r    On 4th day tree will have 3 parts and one stand and so on.\r    Top-most part will be the widest and bottom-most part will be the narrowest.\r    Difference in number of branches between top-most and second from top will be 2\r    Difference in number of branches between second from top and bottom-most part will be 1\r Below is an illustration of how the tree looks like on 4th day\t\rhttps://s31.postimg.org/5s1txk4zf/christmas_tree.jpg\rhttps://s32.postimg.org/i2c6i850l/christmas_tree_2.jpg", "k": ["christmas tree", "tree", "christmas", "christmas tree chirag", "meet santa claus"]}
{"i": "5145370309951488", "t": "Given two object arrays of \"id,weight\" (sorted by weight), merge them together and create a one single array. If the \"id\"s are same values should be merged. Final resulting array should be sorted by weight. Result should be O(nlogn) in time complexity.", "k": ["sorted by weight", "id,weight", "weight", "object arrays", "single array"]}
{"i": "5761756233203712", "t": "Mario wants to reach to his princess who is waiting for him in a castle. But the way to the castle is full of dragons. Each dragon is an enemy of the dragon who is located just before him on that path. The dragons in this world are quite peculiar. They have some number of diamonds each. Although they are dragons, they won't burn, instead they will give Mario their diamonds, but if and only if, Mario didn't take any diamonds from the dragon standing directly before the current one. If Mario does, then that dragon will burn him. Mario is in your control. You have to make Mario collect maximum number of diamonds for his princess and reach castle safely.\r Input- Each test case starts with a number N, the number of dragons, 0 <= N <= 10^4. The next line will have N numbers, number of diamonds each dragon has, 0 <= The number of diamonds with each dragon <= 10^9. Dragons described in the order they are encountered on the way to the castle.\r Output- Print the maximum number of diamonds you can collect (and reach to castle safely).\r Sample Input\r  5 1 2 3 4 5\r Sample Output\r  9\r Explanation\r Input - 5 ==> Represents number of Dragons 1 2 3 4 5 ==> Represents the diamonds each of the Dragon has consecutively. The first dragon has 1 , the second has 2 and so on....\r Output- 9\r Explanation- If Mario collects diamonds from 1st, 3rd and 5th dragon (1+3+5). He will get 9 diamonds which is the maximum number of diamonds he can collect. Two of the other possible ways in which he can collect diamonds is, from 2nd and 4th dragon, (2+4),i.e.(6) or from 2nd and 5th dragon (2+5) i.e.,7 . He can\u2019t obtain more than 9 diamonds in any case.\r Therefore the output would be 9, the maximum he can collect.", "k": ["dragon", "diamonds", "mario", "number", "dragons"]}
{"i": "6194336212451328", "t": "Jacob and Peter have their favorite number X and Y. We have given an array with positive interger number and we need to find the longest prefix index which contain equal number of X and Y. return -1 if there is no prefix with equal number of X and Y. \r Suppose we have an array A = [7,42,5,6,42,8,7,5,3,6,7]\rX = 7 \rY =42\rOutput should be 9 as prefix will be index from 0 to 9 with equal number of X and Y.\r I wrote below code but this has some bug which I could not find.public int findIndex(int A[],int N,int X,int Y)\r\n{\r\nint nx =0;\r\nint ny=0;\r\nint result = -1;\r\nfor( int i=0;i<N;i++)\r\n{\r\nif(A[i] == X) nx+=1;\r\nelse if(A[i] == Y) ny+=1;\r\nif(nx== ny&& nx!=0&&ny!=0)\r\nresult = i;\r\n}\r\n\r\nreturn result;\r\n}", "k": ["jacob and peter", "equal number", "number", "favorite number", "peter"]}
{"i": "5676588776554496", "t": "Given a dictionary and a string, find all the substrings that are valid words in dictionary.\r I was thinking of a Trie solution but I'm not sure a Trie will work easily to match sub words that begin in the middle of the string.", "k": ["valid words", "dictionary", "trie solution", "string", "trie"]}
{"i": "5683589036376064", "t": "Given a String input and a tree, write a code to return the same node for same input string. Also each node will should be given equal amount of weight between nodes at the same level while choosing a path.", "k": ["write a code", "string input", "input string", "code to return", "string"]}
{"i": "5663291826241536", "t": "Given an array: 1,2,3 ,5,8,7,6,9,5,7,3,0,5\r               subarry:5,7\r Find the subarray in the large array and return the minimum length and index where you can find the subarray. Note: that the subarray may be present in the large array non-contiguous.\r In the above case : the answer is length = 2 and \rindex = 8", "k": ["find the subarray", "large array non-contiguous", "large array", "return the minimum", "find"]}
{"i": "5637167285010432", "t": "Swap the elements in Kth position from the start and end of a link list.\r ex: \rinput: list: 1,2,4,5,7,8 \t& \t K=2\routput: 1,7,4,5,2,8", "k": ["elements in kth", "kth position", "swap the elements", "start and end", "link list"]}
{"i": "5157662506352640", "t": "Write a program to check if the given string is repeated substring or not.\rex 1: abcabcabc - yes - abc is repeated.\r2: abcdabababababab - no.", "k": ["write a program", "program to check", "string is repeated", "repeated substring", "write"]}
{"i": "5759776119062528", "t": "The following is the design question I was asked.\r Design a dash board. \rShould be very realistic. \rShould be scalabe . \rShould have very less latency . \rCan expect millions of updates per second.\rDash board should show : \rfor each day : \r1. city name , \r2.total trips in that city for that day , \r3.total fare it could collect in that city on that day, \r4. fare collected from old clients \r5. fare collected from new clients (new client is the client who is having his first ride in Uber after registration)\rInput : we get two strings s1 , s2. \rthe format of s1 : trip_id , client_id , city , datetime\rthe format of s2 : trip_id , fare.\r Could you please suggest how to proceed for this kind of question?", "k": ["fare", "day", "city", "design", "asked"]}
{"i": "5633208935776256", "t": "you have millions of records in DB. How could you display those records efficiently  as a paginated view. Which UI technology would you use and why? how will you design  the back end?", "k": ["millions of records", "records", "records efficiently", "paginated view", "millions"]}
{"i": "5665115039858688", "t": "You have a big .csv file (say the size is 3GB). How efficiently you can process it and put the records in database?", "k": ["csv file", "big", "csv", "file", "records in database"]}
{"i": "5201688068620288", "t": "http://www.indianapolisinseo.com", "k": []}
{"i": "5099844864573440", "t": "The SEO solutions talked about listed here are all next major corner gemstones from the SEO world.", "k": ["seo solutions talked", "major corner gemstones", "seo world", "seo solutions", "solutions talked"]}
{"i": "5662794817994752", "t": "Utilizing various search engine optimization services is as essential as selecting a business to delegate these too.", "k": ["search engine optimization", "engine optimization services", "utilizing various search", "search engine", "engine optimization"]}
{"i": "5636314868219904", "t": "Given two strings, print all the inter-leavings of the Strings in which characters from two strings should be in same order as they were in original strings.\r e.g.\rfor \"abc\", \"de\", print all of these:\radebc, abdec, adbce, deabc, dabce, etc, etc", "k": ["original strings", "strings", "print", "inter-leavings", "characters"]}
{"i": "5725333299920896", "t": "Given a matrix of positive integers, you have to reach from the top left corner to the bottom right in minimum cost. You can only go one square right, down or diagonally right-down. Cost is the sum of squares you've covered. Return the minimum cost.\re.g.\r4 5 6\r1 2 3\r0 1 2\r Answer: 8 (4+1+0+1+2)", "k": ["top left corner", "positive integers", "matrix of positive", "top left", "left corner"]}
{"i": "5656053464170496", "t": "Find the length of maximum number of consecutive numbers jumbled up in an array.\r e.g.: 1, 94, 93, 1000, 2, 92, 1001 should return 3 for 92, 93, 94", "k": ["consecutive numbers jumbled", "find the length", "length of maximum", "maximum number", "consecutive numbers"]}
{"i": "5699124738392064", "t": "Given an array of numbers, find the maximum and minimum sum of sub sequences at a distance > m\r Example \u2013\r arr = {3, 4, -2, 1, -2, 4, 6, -3, 5} & m = 2\r Solution \u2013 max = 13 {4 + 4 + 5}, min = -5 {-2-3}", "k": ["array of numbers", "find the maximum", "maximum and minimum", "minimum sum", "solution"]}
{"i": "5717797377146880", "t": "Given some resources in the form of linked list you have to canceled out all the resources whose sum up to 0(Zero) and return the remaining list.\r E.g-->> 6 -6 8 4 -12 9 8 -8 \r the above example lists which gets canceled :\r6 -6\r8 4 -12\r8 -8\ro/p : 9\rcase 3 : 4 6 -10 8 9 10 -19 10 -18 20 25\rO/P : 20 25", "k": ["form of linked", "return the remaining", "linked list", "remaining list", "resources whose sum"]}
{"i": "6238758388105216", "t": "In an incoming stream of +ve integers, return true if 2 numbers with sum equal to 10 has occurred till now.\r How to handle stream of numbers", "k": ["return true", "sum equal", "occurred till", "incoming stream", "integers"]}
{"i": "5749063396884480", "t": "Given an array,find all valid ip-address form this array.", "k": ["valid ip-address form", "form this array", "array,find all valid", "valid ip-address", "ip-address form"]}
{"i": "5709807932669952", "t": "An unsorted array is given . Find the no of greater elements on right side on current element in array. Find this for every element of array Expected time complexity is lesser then O(n^2)", "k": ["side on current", "find", "array expected time", "expected time complexity", "unsorted array"]}
{"i": "5693956416339968", "t": "A monotonically increasing function F(X) exists. For a given no N , find the value of X when F(X) = N.", "k": ["monotonically increasing function", "monotonically increasing", "increasing function", "exists", "monotonically"]}
{"i": "5768497855463424", "t": "Sort an unsorted array containing o's and 1's. For eg: [0,1,1,1,1,0,0,1]. Do it in-place as well as in O(n) time. While sorting you are not allowed to change the original ordering of same element.", "k": ["sort an unsorted", "unsorted array", "sort", "unsorted", "array"]}
