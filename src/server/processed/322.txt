{"i": "14995830", "t": "Given the string of parentheses only, write the function to check if they are balanced. ((())) is balanced, )( is not.\r Follow up: Now the string also contains curly and square braces. You already have boolean functions, isOpenBrace() , isCloseBrace() and bracesMatch(char brace1, char brace2) as required. How do you check if braces are balanced?", "k": ["balanced", "char", "write", "string", "write the function"]}
{"i": "15013745", "t": "write an algorithm to shuffle a play list (list of music titles); a random number generation function is provided which will generate a number between two given numbers (included). However, repeated call to the random number function is not guaranteed to return unique numbers; i.e., random sequence is not unique.", "k": ["number generation function", "random number generation", "write an algorithm", "music titles", "algorithm to shuffle"]}
{"i": "14990381", "t": "find the first non-repeated character in a string.", "k": ["non-repeated character", "find", "string", "non-repeated", "character"]}
{"i": "15022678", "t": "Given two arrays, write a program to merge them to a new sorted array ? and give test cases..", "k": ["give test cases.", "write a program", "test cases.", "sorted array", "program to merge"]}
{"i": "15006782", "t": "Write a program that finds whether the two binary trees are mirror image of each other?", "k": ["write a program", "program that finds", "binary trees", "trees are mirror", "mirror image"]}
{"i": "14995816", "t": "#include <iostream>\r\n#include <stdio.h>\r\nusing namespace std;\r\nclass A{\r\npublic:\r\nvoid fun(int& temp){cout<<\"am inside fun()\"<<endl;\r\ntemp = 2000;\r\nprintf(\"in fun() temp[%p] temp val[%d]\\n\",&temp, temp);\r\n}\r\n};\r\n\r\nconst int temp=100;\r\n\r\nint main()\r\n{\r\nA a;\r\nprintf(\"in main() temp[%p] temp val[%d]\\n\",&temp, temp);\r\na.fun(const_cast<int&>(temp));\r\ncout<<\"temp:\"<<temp<<endl;\r\n}Questions:\r1> when i run this pgm @ line \"temp=2000;\" pgm will crash. what is the reason for sigsegv in this case?\r2> if i make const int temp=100; declaration inside main() then, no crash and value change (i.e. temp=2000;) persists only inside fun(). But in the scope of main() this changed value is not seen. whats happening here? But address of temp in both the cases shows the same!! how is this possible??", "k": ["temp", "const int temp", "temp val", "inside fun", "int"]}
{"i": "15022669", "t": "write code to find the height of a character which is written on the m*n Grid. where 1 denote the character on the grid.", "k": ["write code", "code to find", "find the height", "grid", "write"]}
{"i": "14994669", "t": "Tree with black and white nodes is given. Find a longest path of white nodes in the given tree.", "k": ["white nodes", "white", "nodes", "black and white", "tree"]}
{"i": "14996804", "t": "Implement your own API and library for a synchronization OS problem.Write your own semaphore.\rEg: Capacity of TAM is 5 .. Queue of people outside is 100. Synchronization reqd.", "k": ["api and library", "capacity of tam", "api", "implement", "semaphore"]}
{"i": "14991213", "t": "Implement queue using stacks.", "k": ["implement queue", "queue using stacks", "implement", "stacks", "queue"]}
{"i": "15011735", "t": "Delete the nth last element from a singly linked list. Don't count number of nodes initially.", "k": ["singly linked list", "delete the nth", "linked list", "nth last element", "singly linked"]}
{"i": "14998816", "t": "The dynamic-set operation UNION takes two disjoint sets S1 and S2 as input, and\rit returns a set S = S1 U S2 consisting of all the elements of S1 and S2. The\rsets S1 and S2 are usually destroyed by the operation. Show how to support UNION\rin O(1) time using a suitable list data structure.", "k": ["dynamic-set operation union", "dynamic-set operation", "disjoint sets", "operation union", "union"]}
{"i": "14990334", "t": "Implement a bus reservation system asume bus' seats are as follows\r HHHHHH\r HHHHHH\r HHHHHH\r  . . . . . . . .\ryou can assume 10 rows in bus.\r Now if user enters 4 as required seat no then the prefrence order would be\r4\r3,1\r2,2\r2,1,1\r1,1,1,1\rand the function should return the seat number.", "k": ["hhhhhh hhhhhh hhhhhh", "hhhhhh hhhhhh", "hhhhhh", "reservation system asume", "system asume bus'"]}
{"i": "14990323", "t": "Given An Array with N integer with values ranging from 1 to N. there is only one duplicate in the Array.\rFind out Duplicate value.\ri.e. \rA = { 10,6,3,4,7,5,2,4,9,1}\r values from 1 to 10.\rin this example, Duplicate element is 4.\r N could be quite large.", "k": ["array", "duplicate", "integer", "ranging", "duplicate element"]}
{"i": "15012691", "t": "You do have two linked list L1 and L2. The size of linked lists is huge and in billions. Linked List contains numbers (both negative and positive). For simplicity you can assume they are all integers.\rYou have been given a number say N. now you need to find out all of the pairs where one element from L1 + one element from L2 = N.\ri.e. \rL1 = 28, -7, 0, 56, 6, -8, 0, 72, 1000, -33\rL2 = 53, 20, 27, -52, 99, 14, -8\rN = 20\rThe answer will be:\r(28, 8), (-7, 27), (0, 20), (6, 14), (0, 20), (72, -52)\r more questions at http://dsalgointerview.wordpress.com/", "k": ["linked list", "linked", "list", "element", "lists"]}
{"i": "15006717", "t": "Find the lexicographic rank of a string in the list of permutations of all characters of that string.", "k": ["find the lexicographic", "lexicographic rank", "list of permutations", "string", "find"]}
{"i": "14990308", "t": "Find the first missing number in an array of sorted numbers. \rEg: Input : 4,5,6,7,9,11,14,18,19\rOutput : 8\rExpected complexity : O(log n)\r Approach is similar to binary search", "k": ["array of sorted", "missing number", "sorted numbers", "expected complexity", "approach is similar"]}
{"i": "15006691", "t": "Write a function to calculate the difference between the sum of all nodes' value at even and level of  a Tree.", "k": ["write a function", "function to calculate", "calculate the difference", "tree", "write"]}
{"i": "14990282", "t": "Write a function to sort linear Linked list without using extra memory.", "k": ["sort linear linked", "linear linked list", "linear linked", "linked list", "write a function"]}
{"i": "14968601", "t": "Reverse word in the string", "k": ["reverse word", "reverse", "string", "word"]}
{"i": "14992127", "t": "Find the least common ancestors for two tree node. Given the parent point.", "k": ["tree node", "common ancestors", "find", "node", "parent point"]}
{"i": "14968600", "t": "Given two arrays, array1 and array2\rusing the rule of array1 to sort array2.\rEx. \rarray1 = { B, A, C}\rarray2 = {A, B, A, C, A, B, B, C, A}\routput: sortedArray2 = {B,B,B,A,A,A,A,C,C}\r What if array2 existed some element not existed in Array1? Can you put it in the end? and sorted by alphabetical? What if array have lower case and upcases letter?", "k": ["sort", "rule", "existed", "output", "arrays"]}
{"i": "15011669", "t": "Got FB interview questions is not difficult, basically, he is asking to count number of identical chars in a given string with with some special case handling, and return the number with highest count, question is pretty long leaving you to dig an algorithm. \r Etc, given string \"coffee tuffee\", should return 4.\r I was having my usual interview brain freeze, and start doing initializing with int, how silly\r well after interview when I cool down, it doesn't take long to figure out as code below, little over weighted algorithm but the most concise I can wrote, someone please give more efficient code.def parseword(a_word):\r\n\ta_word=a_word.lower()\r\n\tcount=list(map(a_word.count, a_word))\r\n\treturn (max(count))", "k": ["special case handling", "pretty long leaving", "case handling", "question is pretty", "identical chars"]}
{"i": "14995748", "t": "Given a string we have to find first non-repeating character in the string....\rExample:    str=\"aabbbccccddeffffgg\";\r      Answer is : e", "k": ["find first non-repeating", "non-repeating character", "string", "answer", "str"]}
{"i": "14968587", "t": "Write a function to check whether the two strings are rotation of each other or not. \rExample: str1=\"Password\"  str2=\"ordPassw\"    \rMy Solution was.........#include<stdio.h>\r\nvoid fn(char * str1, char * str2)\r\n{\r\n    int i=0, j=0,flag=0;\r\n    while(str2[i])\r\n    {\r\n        if(str2[i]== *str1)\r\n        {\r\n            flag=1;\r\n            break;\r\n        }\r\n        i++;\r\n    }\r\n    if(!flag)\r\n    {\r\n        printf(\"2nd String is not a rotation of other\\n\");\r\n        return;\r\n    }\r\n    j=i;\r\n    while(str2[i])\r\n    {\r\n        if( !(str2[i]==*str1))\r\n        {\r\n            printf(\"2nd String is not a rotation of other\\n\");\r\n            return;\r\n        }\r\n        i++;\r\n        str1++;\r\n    }\r\n    i=0;\r\n    while(i<j)\r\n    {\r\n        if( !(str2[i]==*str1))\r\n        {\r\n            printf(\"2nd String is not a rotation of other\\n\");\r\n            return;\r\n        }\r\n        i++;\r\n        str1++;\r\n    }\r\n    if(*str1=='\\0')\r\n        printf(\"String are rotation of each other\\n\");\r\n    else\r\n        printf(\"2nd String is not a rotation of other\\n\");\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    char * str1=\"Password\";\r\n    char * str2=\"ordPassw\";\r\n    fn(str2, str1);\r\n    return 0;\r\n}", "k": ["string", "write a function", "rotation", "function to check", "char"]}
{"i": "14955612", "t": "given two ascending sorted arrays, how to combine the two arrays into one sorted array.", "k": ["ascending sorted arrays", "ascending sorted", "sorted arrays", "sorted", "arrays"]}
{"i": "14946610", "t": "given 3 by 3 matrix ( all the entries are 1,2,3) defining 9 multiplication relationships. e.g Matrix(1,2) = 1 means 1*2 = 1. \rFor a sequence 112333222111, determine wether you can put parentheses on it to make it equals to 1?", "k": ["multiplication relationships", "matrix", "defining", "multiplication", "relationships"]}
{"i": "14946605", "t": "You are given a grid of numbers. A snake sequence is made up of adjacent numbers such that for each number, the number on the right or the number below it is +1 or -1 its value. For example, \r  1  3  2  6  8\r-9  7  1 -1  2\r 1  5  0  1  9\r In this grid, (3, 2, 1, 0, 1) is a snake sequence.\r Given a grid, find the longest snake sequences and their lengths (so there can be multiple snake sequences with the maximum length).", "k": ["snake sequence", "snake", "number", "grid", "longest snake sequences"]}
{"i": "14968560", "t": "A pxq size matrix is given, and a matrix of size axb is removed from top right corner. Find the total no. of paths from top left to bottom right, with only right and down movements allowed. No path should go into the removed matrix.\reg- \r _\r|_|_\r|_|_|\r this is (2x2) matrix after removing (1x1) matrix from top right corner. no. of ways - 5.\r The algorithm should be fast enough.", "k": ["pxq size matrix", "pxq size", "size axb", "top right corner", "top"]}
{"i": "14928632", "t": "There are 100's of html files in a folder. The files contain phone numbers in formats xxxxxxxxxx, xxxxx-xxxxx, xxx-xxx-xxxx. Have to search all the files and return unique phone numbers from those files.", "k": ["html files", "files", "phone numbers", "folder", "html"]}
