{"i": "5564407157358592", "t": "Given a string of numbers in sequence order. find the missing number.Range is not given.\rsample input:\"9899100101103104105\"\rAnswer:102", "k": ["sequence order", "string of numbers", "numbers in sequence", "order", "answer"]}
{"i": "5737979670691840", "t": "Design a stack in such a way that the operations Push, Pop and Find Minimum can be done in O(1). Assume space as not a constraint.", "k": ["pop and find", "find minimum", "operations push", "design a stack", "push"]}
{"i": "5172027535130624", "t": "Given an array write a function to print all continuous subsequences in the array which sum of 0.\re.g: \rInput:\rArray = [-1, -3, 4, 5, 4]\routput: \r-1, -3, 4", "k": ["write a function", "function to print", "print all continuous", "continuous subsequences", "array write"]}
{"i": "5172577290944512", "t": "Given an array write a function to print all triplets in the array which sum of 0.\re.g: \rInput:\rArray = [-1, -3, 5, 4]\routput: \r-1, -3, 4", "k": ["write a function", "function to print", "print all triplets", "array write", "array"]}
{"i": "6450931356925952", "t": "Conway's game of life on a grid", "k": ["conway game", "game of life", "conway", "grid", "game"]}
{"i": "5748755743637504", "t": "write the object model of a json structure", "k": ["write the object", "json structure", "object model", "write", "structure"]}
{"i": "6301758552801280", "t": "given a crosscut in an island with buildings of different heights with water collecting on top of the island how much water is collected on the island", "k": ["collecting on top", "water collecting", "island", "heights with water", "water is collected"]}
{"i": "5325031450083328", "t": "squarest possible container to house n number of squares", "k": ["squarest possible container", "number of squares", "container to house", "house n number", "squarest"]}
{"i": "6657802751705088", "t": "c  program to find square root of an interger without using in built functions", "k": ["find square root", "built functions", "program to find", "find square", "square root"]}
{"i": "6173364800454656", "t": "A special type of tree is given, Where all leaf are marked with 0 and others are marked with 1. every node can have 0 or at most 2 nodes. Trees level order traversal is given give a algorithm to build tree from this traversal.", "k": ["leaf are marked", "special type", "marked", "special", "type"]}
{"i": "4748947486670848", "t": "Given an array, with positive and negative integers, arrange it in such a way that, positive numbers occupy even positions and negative numbers occupy odd position. All the remaining extra positive or negative integers should be stored at the end of the array. Remember, the elements of the array should remain in the same order.\r EG: Input array {1,-2,3,-4,-5,-6,-7,8,9,4,10,11,12}\routput array      {1,-2,3,-4,8,-5,9,-6,4,-7,10,11,12}", "k": ["numbers occupy odd", "occupy odd position", "negative numbers occupy", "positive numbers occupy", "numbers occupy"]}
{"i": "4503756393676800", "t": "Given a 2D array of strings : A[][]={ fog, fool, food, fruit,for}.\rFind a substring such that after removing this substring from beginning of all the strings in A , the length of remaining strings + length of substring is minimum.\rexample: \rif substring is \"f\"  then total length= 1+{2+3+3+4+2} = 15\rif substring is \"foo\" total len is= 3+{3+1+1+5+3}=16\rif substring is \"fo\" total len is= 2+{1+2+2+5+1}=13\rsince minimum is 13 so output should be \"fo\"", "k": ["substring", "strings", "fog", "fool", "food"]}
{"i": "5807203806085120", "t": "What happens when \"new\" fails to allocate memory. \rI answered as, it will return NULL. But he was not sastisfied.", "k": ["fails to allocate", "allocate memory", "fails", "memory", "return null"]}
{"i": "4681303899242496", "t": "What happenes when the \"new\" operator fails to allocate the memory from the heap?\rI answered it will return NULL. But still he was unhappy...", "k": ["operator fails", "fails to allocate", "allocate the memory", "return null", "operator"]}
{"i": "6542250951573504", "t": "How do you dynamically allocate memory for an integer array of 10 bytes?", "k": ["dynamically allocate memory", "bytes", "dynamically allocate", "allocate memory", "integer array"]}
{"i": "5930374878199808", "t": "Given an array of positive integers, create another array of the same integer such that in the new array the integer at index i is the integer with highest frequency in the input integer.\r input array: {1,2,3,6,1,3,6,7,3,9,4,2}\routput: {1,1,1,1,3,3,3,3,3,3,3}", "k": ["highest frequency", "positive integers", "integer", "input integer", "array"]}
{"i": "4722947902144512", "t": "find the maximum no. of paths from (0,0) to (m,n) in a m*n matrix", "k": ["find the maximum", "find", "matrix", "maximum", "paths"]}
{"i": "6552535250763776", "t": "Check if a singly linkedlist of Integer is a palindron or not. \rExtraspace: O(1)", "k": ["linkedlist of integer", "singly linkedlist", "integer", "check", "extraspace"]}
{"i": "4752145089822720", "t": "Considering a stream of integers coming in. Design a datastructre to store only n of them. Insert if if does not exist in the datastructre. And if it reaches n, remove the first one inserted into the datastructure. \r Datastructure should provide, addition, deletion and search all in O(1) time.", "k": ["stream of integers", "integers coming", "stream", "integers", "coming"]}
{"i": "6581732438441984", "t": "Given 3 Arrays of integer sorted in ascending order, get the sum of minimum difference using one element from each array.\r where a, b, c are the elements from each array.\r diff = |a-b| + |b-c|+|c-a|\r complexitiy: worst case O(n)", "k": ["ascending order", "integer sorted", "sorted in ascending", "sum of minimum", "minimum difference"]}
{"i": "5261732222074880", "t": "how to merge two binary search tree into  balanced binary search tree.. Let there be m elements in first tree and n elements in the other tree. Your merge function should take O(m+n) time with in constant space.\r Examples:\r   A Balanced BST 1\r     90\r   /  \\\r  70    110 \r   A Balanced BST  2\r       60\r    /  \\\r   5    800\r output :-->     \r                        70\r \t \t   /            \\\r                 60            90\r                /                    \\\r               5\t\t\t800", "k": ["binary search tree.", "balanced binary search", "binary search", "search tree.", "balanced bst"]}
{"i": "5032758925590528", "t": "The question was that you need to implement virtual directory using dynamic structure . For example :-\rVIT is the root directory then\rVIT>CS\rVIT>Building Science\r.\r.\rThen each department should have its branch\rVIT>CS>CSE\rVIT>CS>IT\rVIT>CS>MCA\rFurthermore each branch will have a number of files i.e\rVIT>CS>CSE>file1.txt\rVIT>CS>CSE>file2.txt\r VIT>CS>IT>file1.txt\r Note-No need to create actual files just store the name .\rEach file should have properties :-\r1) RO(Read Only) or WO(Write Only)\r2) Hidden or Visible etc.\r List of Commands :-\r1) addFile(<file name>)  to add file\r2) addHiddenFile(<filename>)  to add hidden file\r3) setReadOnly<filename> to set read only property\r4) gotoDir to go to a particular directory\r5) listFiles to list files\r6) listAllFiles to list all files including hidden files\r7) details to display all details of files\r8) delete to just to mark the file as deleted but you don't need to actually delete it.\r I used nested structures to implement it. Can anyone give a more proper solution with the code?", "k": ["building science", "vit", "cse vit", "implement virtual directory", "branch vit"]}
{"i": "5073520312713216", "t": "Create an array from unbalanced binary tree, such that it should re create the same tree again.", "k": ["unbalanced binary tree", "array from unbalanced", "unbalanced binary", "binary tree", "create an array"]}
{"i": "5643032976162816", "t": "what is the data structure used to build a text editor", "k": ["text editor", "data structure", "build a text", "editor", "data"]}
{"i": "5716253578625024", "t": "create the mirror tree for the given BST, provided with the root node of the tree", "k": ["create the mirror", "root node", "mirror tree", "bst", "tree"]}
{"i": "5313007689138176", "t": "reverse the doubly linked list without using extra space", "k": ["doubly linked list", "reverse the doubly", "extra space", "doubly linked", "linked list"]}
{"i": "5758945553547264", "t": "Find lowest common ancestor of two nodes in a binary tree iteratively. Root in  the binary search tree is not given.", "k": ["find lowest common", "lowest common ancestor", "find lowest", "binary tree iteratively", "lowest common"]}
{"i": "6275922177032192", "t": "Design a System Which contains multiple components, And all components are in same Assembly. All These Components are independent.\rDesign a Communication System such that:-\t\ra. Sender is Not Aware of Reciever\rb. Any New Component Addition Should Not Change the System Implementation.\r ( I Guess Interviewer also Not aware What he was asking ;) :P  When he told sender is not aware if receiver hehehe)\r 2. Design a System to Handle Different Type of Objects \r And Perform an Operation on the Sender Object.\ra. Design to scale , it should handle huge number of Different kind of objects.", "k": ["assembly", "system", "multiple components", "components", "design"]}
{"i": "5837148318072832", "t": "Find Whether a Input string had Palindrome? \rExample : \rInput Samples : \"1234xyzyx5678\" ,  \"abcdefeabc\"\rOutput : A Bool Value, True if Contains a Palindrome , False otherwise. ( In this Example input string conatins \"xyzyx\"  and efe\"  Palindrome respectively)", "k": ["input samples", "input string", "palindrome", "input", "input string conatins"]}
{"i": "4973000898117632", "t": "Design a Sudoko Game.", "k": ["sudoko game", "design a sudoko", "game", "sudoko", "design"]}
