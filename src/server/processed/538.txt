{"i": "412093", "t": "find nth largest element in an array of m elements where n->0 (n is much smaller than m) without sorting", "k": ["find nth largest", "nth largest element", "find nth", "nth largest", "largest element"]}
{"i": "412092", "t": "design deck of cards.", "k": ["design deck", "deck of cards", "design", "cards", "deck"]}
{"i": "412891", "t": "return the common string from 2 strings of arrays in optimal running time.", "k": ["optimal running time", "return the common", "running time", "arrays in optimal", "optimal running"]}
{"i": "402758", "t": "you are given the data value pair of nodes in  a tree. construct the tree. e.g. lets say root has two children and root's data value is 5 and one  child's value is 8 and other child is 10. you will be provided 5,8 and 5,10. you need to construct the tree. this way you will be given all the pairs.. construct the tree", "k": ["pair of nodes", "tree", "construct the tree", "data value pair", "construct"]}
{"i": "410558", "t": "Given a table:\rTABLE\r Cust ID, Order ID, Date\r Retrieve the customer who has ordered on two days ie., say 1st and 10th.\r Also, is your query the most optimal one.", "k": ["date retrieve", "table cust", "retrieve the customer", "order", "date"]}
{"i": "410022", "t": "Have you ever had a conflict with a teammate? How did you handle it then?", "k": ["teammate", "conflict", "handle"]}
{"i": "410021", "t": "Explain what was the most challenging thing you have ever done?", "k": ["challenging thing", "explain", "challenging", "thing"]}
{"i": "410856", "t": "How would you go about designing a website for providing credit card and other services for commercial banks?", "k": ["providing credit card", "commercial banks", "designing a website", "website for providing", "providing credit"]}
{"i": "410746", "t": "Given a diagonalizable square matrix A and a noise matrix E, find conditions on A and E such that for each eigenvalue L of A, there is an eigenvalue M of (A+E) such that abs(L-M) < K for a given K. (this is obviously an open ended question, try to tighten the bounds to the best of your ability)", "k": ["diagonalizable square matrix", "find conditions", "square matrix", "noise matrix", "diagonalizable square"]}
{"i": "410690", "t": "Program takes 3 inputs startdate,enddate and dayoftheStartDate.We should return the enddate day of the week.\rExample:StartDate=2/25/2010 ,EndDate=2/26/2010,\"Thurday\" and outputshould be \"Friday\"", "k": ["inputs startdate,enddate", "startdate,enddate and dayofthestartdate.we", "dayofthestartdate.we should return", "enddate day", "thurday"]}
{"i": "406421", "t": "char a[] = \" \";\rQ. What will be sizeof(a)", "k": ["char", "sizeof"]}
{"i": "406420", "t": "class Foo {\rpublic:\r\tvoid virtual abc() throw (int , double, long) {\r \t}; \r};\r class DFoo : public Foo {\r public :\r\tvoid abc() throw (double , int , long ) {} \t\r };\r// Will it compile \rint main(){\r DFoo d;\r return 0; \r}", "k": ["void virtual abc", "compile int main", "class foo", "public foo", "void abc"]}
{"i": "406419", "t": "Go through all the C++ Qs put on careercup , in online test most of these Qs repeat . \r // Online Test \rclass Someclass {\rpublic:\r\tint x;\rpublic :\r\tSomeclass(int xx) : x(xx) { }\r\tSomeclass(const Someclass& a) { x = a.x ; x++;} \r\tSomeclass& operator =(const Someclass& a1) { x = a1.x ; x--;}\r};\rint main( )\r{\t\r \t/*Someclass a(4);\r\tSomeclass b = a;\r}\rQ. What will be output", "k": ["test class someclass", "online test class", "const someclass", "online test", "someclass"]}
{"i": "405592", "t": "Take a tree (binary or otherwise), write a method in any language that, when given the root node, will print out the tree in level order. With a new line after the end of every level. \r Helper methods are ok, big O run time efficiency doesn't matter (though obviously a quicker solution is better). Do not destroy original tree.", "k": ["root node", "level order", "write a method", "binary", "write"]}
{"i": "405086", "t": "1)     Bus route Database -\rI want to design a database about bus route of a city like bangalore. Where u know all bus stop name and need a DB such that it will be easy to add new bus stop in our list. We would like to handle two kind of queries a) user will give route number ......we have to retrieve whole route i.e we have to print all the bus stop where this bus will stop and b) user will give source(S) and destination(D) name .....we have to find all possible route number that a person can take to reach D from S considering one case where we dont have direct connectivity from S to D so it should show via routes as well like the results of makemytrip.com or yatra.com when u want to travel from bangalore to guwahati ..though no direct flight is there we will get some via list. Also DB should be easily expandable (ie their should be some easy way of adding new routes and stops).", "k": ["bus route database", "bus stop", "bus", "route database", "design a database"]}
{"i": "404221", "t": "Given a set of pairs of key-value..ex:[1,2],[2,4]..such that 1 maps to 2 and 2 maps to 4. Now give a data structure and a solution to print the output such that any key from the input appears before to its mapped value.\rFor ex: input [1,2](now 1 should appear before 2 in the output),[3,6](3 should appear before 6 in the ouput),[2,5](similarly..)\rand the output is 1 2 3 5 6\rNote: the key value pair is gone in the output.need not worry for that.", "k": ["maps", "output", "set of pairs", "print the output", "set"]}
{"i": "401540", "t": "Given a cube. A ant is placed in a corner and cannot move. A spider starts from the opposite corner, and can move along cube edges in any direction (x,y,z) with probablity 1/3. What is the expected number of steps for this spider to get to the ant?", "k": ["cube", "corner", "move", "ant", "spider"]}
{"i": "393337", "t": "Find out duplicates from unsorted integer array (including -ve and + ve numbers).\rState different approaches and complexities.\rIf using sorting approach which sorting algorithm you will use??", "k": ["unsorted integer array", "find out duplicates", "integer array", "duplicates from unsorted", "unsorted integer"]}
{"i": "393336", "t": "Return whether a given string contains any palindromic substring or not....again complexity discussion and other ways of doing it using suffix trees and discussed complexities of approaches.", "k": ["complexities of approaches", "palindromic substring", "complexity discussion", "suffix trees", "trees and discussed"]}
{"i": "392511", "t": "Selection sort algorithm and code it...discussed complexity of it...what is big O??? what do we mean by exactly finding out run time complexity?\rDiscussed other sorting algos and their complexities", "k": ["selection sort algorithm", "selection sort", "sort algorithm", "algorithm and code", "selection"]}
{"i": "389781", "t": "security code takes numbers but one key is allowed to be faulty, other numbers should be same in sequence ex 124 is accepted if actual number is 12646..", "k": ["security code", "key is allowed", "accepted if actual", "actual number", "security"]}
{"i": "388107", "t": "You are given a segment with length 1. Randomly pick two points from it. What is the expectation of the distance of the two points?", "k": ["segment with length", "length", "segment", "randomly pick", "points"]}
{"i": "388929", "t": "Given a n-by-n matrix, and computers as many as you want. Design a distributed algorithm for self-multiplication of the matrix, which is stored in one of the computers. What is the time complexity of your algorithm? You need to reduce the time from O(n^3) that is the time for multiplication on a single computer.", "k": ["matrix", "time", "computers", "design a distributed", "algorithm"]}
{"i": "388864", "t": "Given a time find the angle between hour and minute hand", "k": ["minute hand", "time find", "find the angle", "angle between hour", "hour and minute"]}
{"i": "388863", "t": "Reverse a linked list", "k": ["reverse a linked", "linked list", "reverse", "list", "linked"]}
{"i": "388843", "t": "Reverse a linked list.", "k": ["reverse a linked", "linked list", "reverse", "list", "linked"]}
{"i": "387979", "t": "Design an elevator.", "k": ["design an elevator", "design", "elevator"]}
{"i": "387978", "t": "Design a furniture management system. You will have have to design class Furniture, WoodChair, SteelChair, WoodTable, SteelTable, etc. Each furniture has material(s) -- wood, steel, cotton. You have to design functions: applyFire(), applyWeight(), etc. Make your system easy to extend in order to include more materials and more subclasses like Futon.", "k": ["furniture management system", "furniture management", "design class furniture", "furniture", "design"]}
{"i": "388817", "t": "Design a cache by Least Recently Used method (LRU).", "k": ["recently used method", "lru", "design a cache", "recently", "design"]}
{"i": "387429", "t": "What keywords would your peers use to describe you, and why?", "k": ["keywords", "peers", "describe"]}
