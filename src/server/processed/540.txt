{"i": "386535", "t": "Without using sophisticated debuggers, how do you estimate the memory usage in your program? (Stack/Heap)", "k": ["sophisticated debuggers", "stack", "heap", "estimate the memory", "memory usage"]}
{"i": "386528", "t": "Explain what happens when you called the fopen function from your program.", "k": ["called the fopen", "fopen function", "explain", "program", "called"]}
{"i": "386527", "t": "How would you go about designing a SMP scheduler?", "k": ["smp scheduler", "designing a smp", "smp", "scheduler", "designing"]}
{"i": "386522", "t": "Find the two closest values (fabs) in an array of float numbers.", "k": ["fabs", "float numbers", "array of float", "find", "numbers"]}
{"i": "387382", "t": "If you have multiple threads waiting on a mutex, which one gets the lock when it is released?", "k": ["multiple threads waiting", "multiple threads", "threads waiting", "mutex", "released"]}
{"i": "387381", "t": "Given a Binary tree, create a mirror image of it.", "k": ["binary tree", "create a mirror", "mirror image", "binary", "tree"]}
{"i": "387377", "t": "Give me an example of when you had to go the extra mile to meet a project deadline.", "k": ["project deadline", "extra mile", "mile to meet", "meet a project", "give"]}
{"i": "386519", "t": "Describe the key differences in NAS and SAN.", "k": ["nas and san", "differences in nas", "describe the key", "san", "key differences"]}
{"i": "386518", "t": "Describe the function of the Heap in an Operating System.", "k": ["operating system", "describe the function", "system", "heap", "operating"]}
{"i": "387375", "t": "Write a C function to return whether the stack grows up or grows down.", "k": ["function to return", "stack grows", "write", "grows", "function"]}
{"i": "386515", "t": "What happens during a page fault? a segmentation fault?", "k": ["page fault", "fault", "segmentation fault", "page", "segmentation"]}
{"i": "386514", "t": "Describe what happens when a function is called from another function.", "k": ["describe", "function is called", "function", "called"]}
{"i": "386456", "t": "Tell me about your projects mentioned in the resume.", "k": ["projects mentioned", "resume", "projects", "mentioned"]}
{"i": "387031", "t": "write a function ftoa(float n)", "k": ["write a function", "function ftoa", "write", "ftoa", "float"]}
{"i": "387030", "t": "Give a Tree, create a linked list such that each node in the list is sum of nodes of  tree in each level.\rexample:\rTree\r  2\r / \\\r1   3\r then list should be \r2->4->NULL\r I answered the question well but did not clear the round :(", "k": ["create a linked", "tree", "linked list", "null i answered", "give a tree"]}
{"i": "386151", "t": "Write code for finding length of largest monotonically increasing sequence in an array of integers.\rOptimize it (not the usual O(n) in worst case, but a better approach in average case).", "k": ["largest monotonically increasing", "monotonically increasing sequence", "write code", "array of integers", "code for finding"]}
{"i": "386985", "t": "How do you write a TCP server? Give pseudocode.", "k": ["tcp server", "write a tcp", "tcp", "server", "give pseudocode"]}
{"i": "386111", "t": "Explain how a byte in a file is accessed. Let us say you called getchar() on a file you open. Explain what happens behind the scenes from opening it till giving you that one byte.", "k": ["file is accessed", "accessed", "file", "explain", "called getchar"]}
{"i": "386984", "t": "How do you implement memcpy? What can go wrong and how do you fix it?", "k": ["implement memcpy", "memcpy", "implement", "wrong", "fix"]}
{"i": "383557", "t": "A car travelling with a speed of 100 km/hr reduces it speed at 2km /hr.What is the peed of the car after 5 hours.", "k": ["car travelling", "hours", "hr.what", "reduces it speed", "car"]}
{"i": "384185", "t": "Given two pointer in a tree find the nearest parents of those pointers place in a tree.", "k": ["find the nearest", "nearest parents", "tree find", "pointers place", "tree"]}
{"i": "383260", "t": "Convert any BST into doubly linked list inplace.", "k": ["linked list inplace", "convert any bst", "doubly linked list", "bst into doubly", "list inplace"]}
{"i": "383154", "t": "//Online Test\rextern void print(int *ia, int sz);\rvoid print(int *ia, int sz);\r Q. Will it compile", "k": ["online test extern", "test extern void", "extern void print", "online test", "void print"]}
{"i": "384064", "t": "//Online Test\rstruct A{\r int i , j;\r A(int ii , int jj) :i(ii),j(ii){}\r A(const A&a){\r\t cout << a.i << a.j;\r }\r void operator = (const A& a){\r\t cout <<a.i << a.j\r } \t\r };\r Q. \tA a(1,2);\r\tA b(2,3);\r\tA z = (a = b);\rwhat will be output", "k": ["online test struct", "online test", "test struct", "void operator", "int"]}
{"i": "383153", "t": "//Online Test\r template <class T>\r struct sum {\r\t static void foo(T op1 , T op2){\r\t\tcout << op1 <<op2;\r\t }\r };\r Q. sum::foo(1,3); will it compile , what will it take to compile", "k": ["online test template", "static void foo", "online test", "test template", "struct sum"]}
{"i": "384062", "t": "//Online Test\rclass Base {\rpublic :\r\tvirtual void method () = 0;\rprivate :\r\tint n;\r};\rvoid Base::method() { n = 1;}\rclass D1 : Base {};\rclass D2 : public D1{\r\tint i;\r\tvoid method() {i = 2;}\r};\rQ.Does it compile , what will it have to add to compile", "k": ["online test class", "test class base", "virtual void method", "online test", "void method"]}
{"i": "383152", "t": "//online Test\rCLASS A{\rPUBLIC :\r\tINT &I;\r\tINT J;\r\tA(){\r\tINT J;\r\tI = J;\r\t}\r};\r//Where to init reference , in member init list or ctor", "k": ["online test class", "member init list", "test class", "online test", "int"]}
{"i": "384061", "t": "//From online Test\r class String{\rpublic:\r\texplicit String(char ch , int n = 1){}\r\tString(const char *p){}\rprivate :\r\tvoid operator=(const char*){}\r};\rQ.Will it compile", "k": ["test class string", "online test class", "explicit string", "const char", "class string"]}
{"i": "382535", "t": "You are given an array containing only 0,1 and 2. Sort this array in one pass.You can't use anything like counting the no. of 0s and 1s.", "k": ["array", "sort", "sort this array", "pass.you", "counting"]}
{"i": "381643", "t": "Write code to find the median of a binary search tree.", "k": ["binary search tree", "write code", "search tree", "code to find", "find the median"]}
