{"i": "5191595567611904", "t": "How write your own annotations in Java ?", "k": ["annotations in java", "java", "write", "annotations"]}
{"i": "5083169789313024", "t": "In JDBC, When you do the followingClass.forName(\"driver class name\")\r\nConnection conn = DriverManager.getConnection()How does JVM recognizes to give the exact driver's connection object which has been loaded by Class.forNAme in the previous line ?", "k": ["exact driver connection", "driver connection object", "jvm recognizes", "connection conn", "previous line"]}
{"i": "5766735711961088", "t": "What is dependency injection and Inversion of Control in Spring ?", "k": ["control in spring", "inversion of control", "injection and inversion", "spring", "dependency injection"]}
{"i": "5698133541519360", "t": "Given an input Array which contains elements as below\r[a1,a2,a3,....an,b1,b2,b3,...bn]\r Output Should be\r[a1,b1,a2,b2,a3,b3,.....an,bn]\r Do it without any additional Memory.", "k": ["additional memory", "an,bn", "input array", "output", "memory"]}
{"i": "5204443156971520", "t": "In Java Threadpool Executor, what are the possible rejection policies if all the threads are used.", "k": ["java threadpool executor", "threadpool executor", "java threadpool", "rejection policies", "executor"]}
{"i": "5646119742734336", "t": "Assume a Bank Branch, with few teller counters.\r There is a token system, from which customers can procure tokens for the type of transaction (cash withdrawal, cheque deposit, account opening, loan etc).\r Each teller needn't have the capability to handle all possible types of transactions. each Teller can handle only a subset of transactions and there could be a overlap of transactions handling capabilities between tellers.\r Design this banking system such that, each customer is served on a first cum First serve basis as per the token number for each transaction type.\r Hint : Publisher-Subscriber Model", "k": ["bank branch", "assume a bank", "branch", "bank", "teller counters"]}
{"i": "6322341002870784", "t": "Assume a Game where a player can jump from one step to other to reach the final step.\r From any given step Player can go to another step in any direction North, South, East or West. (i.e ) from Any given step user has a choice of multiple steps to choose from to proceed towards final step.\rSome steps may not lead you in right direction to final step, in that case he need to retrace back.\r To jump from one step to another Player uses a ladder. Distance between adjacent steps is not constant, they differ for each pair.\r What is longest length of a ladder needed for the player to reach the final step from the starting step.", "k": ["assume a game", "east or west", "step", "final step", "game"]}
{"i": "5748126960844800", "t": "/* do not use any JAVA APIs(Ex:Calenders) \rWrite a method that takes an instance of our new class SimpleDate and returns the first day of the next calendar quarter (i.e. Jan 1, 2000; April 1, 2000, etc.) as a SimpleDate.\r/**\r Simple data structure representing a Date\r*/\rpublic class SimpleDate {\r  protected int year = 0;\r  protected int month = 0;\r  protected int day = 0;\r   public SimpleDate (int year, int month, int day) {...}\r  public void setDate (int year, int month, int day) {...}\r  public void setYear (int year) {...}\r  public int getYear () {...}\r  public void setMonth (int month) {...}\r  public int getMonth () {...}\r  public void setDay (int day) {...}\r  public int getDay () {...}\r}\r // 3/17/2009 -> 4/1/2009", "k": ["public class simpledate", "java apis", "write a method", "int day", "protected int day"]}
{"i": "5197516716900352", "t": "Suppose you have a huge data of students. This data is in RAM (around 48 GB). Student has following attributes:\r1) RollNo\r2) Name\r3) Address\r Now I need to implement three method:\r getStudentByRollNo(int rollno)\rgetStudentsByName(String name)\rgetStudentsByAddress(String address)\r In what data structure I can keep these students so that these methods can return the results really fast.", "k": ["string", "huge data", "string address", "suppose", "data"]}
{"i": "5645040497983488", "t": "Given a Integer, find the maximum number that can be formed from the digits.\rInput : 8754365\routput : 8765543\r I told solution in nlogn. He asked me optimize further.", "k": ["find the maximum", "maximum number", "integer", "find", "digits"]}
{"i": "5103600948740096", "t": "Given a tokenized PHP file, give me a map from class to list of functions", "k": ["tokenized php file", "php file", "tokenized php", "list of functions", "map from class"]}
{"i": "5678837729853440", "t": "Given two sparse Vectors, compute the Dot Product.\rInput Format : The first line will contain two numbers(k and n), which are the number of entries for the two vectors respectively.\rThe next k lines are the entries for the first vector, of the form : x y\rwhere x is the position and y is the value at that position in the vector.\rThe n lines are the entries of the second vector.\rAny entries not specified indicate zero at that position.\rThe two vectors will always be of the same length\r Example input:\r3 3\r1 4\r4 2\r5 3\r1 7\r2 6\r5 1\r Sample Answer: Dot Product = 4*7+3*1 = 31 (only print 31)", "k": ["dot product", "sparse vectors", "entries", "vectors", "vector"]}
{"i": "5702361131515904", "t": "Write a method that takes the root of a tree as input and check if the tree is a Binary Search Tree (BST).", "k": ["binary search tree", "binary search", "search tree", "write a method", "input and check"]}
{"i": "5687263784599552", "t": "Given a sorted array of integers, using the same array, shuffle the integers to have unique elements and return the index.\r Sample input : [3, 3, 4, 5, 5, 6, 7, 7, 7]\rSample output : [3, 4, 5, 6, 7, X, X, X, X]\rIn this case, it returns an index of 4.\rThe elements in the array after that index is negligible (don't care what value it is).", "k": ["shuffle the integers", "unique elements", "sorted array", "sample input", "sample output"]}
{"i": "5672470843490304", "t": "I was asked to give corresponding number of days for the date string. Say for example, if we have string date variable as follows:\r String date = \"2011-12-31\"; \r the output should be : 365\r If we have ; String date =  \"2015-01-01\"\r The output should be : 01\r I kind of started like the following but had no clue how to move forward:public class DayPrint {\r\n\r\n    \r\n    public static void main(String[] args) {\r\n       \r\n        String jdate = \"2011-12-31\";\r\n        \r\n        String months = jdate.substring(5,7);\r\n        \r\n        int intMonths = Integer.valueOf(months);\r\n        \r\n        String date = jdate.substring(8,10);\r\n        \r\n        int intdate = Integer.valueOf(date);\r\n        \r\n        System.out.println(\"Months = \" + months + \"Date =\" + date);\r\n\r\n      for (int i = 0 ; i <= intMonths ; i++) {\r\n      int count = 0;\r\n        for (int j = 0 ; j < intdate ; j++){\r\n         count ++ ;\r\n       }\r\n\r\n\r\n        \r\n        \r\n    }\r\n\r\n}", "k": ["string date", "string date variable", "string", "asked to give", "give corresponding number"]}
{"i": "5673481771417600", "t": "You are given a bar graph with bars of varying heights. Create a function to calculate the total amount of water that could be stored if we poured water on that graph. \r Assume water pours until the maximum amount of storage is achieved, and treat the ends of the graph as areas where water can pour off the graph.\r Example:\r[5,4,2,4,5,1]\rwould have a total of 5 units of water stored.\r Do this without using any additional data structures (primitive variables i.e. integers are fine)\rYour solution should run in O(n) time.", "k": ["varying heights", "bar graph", "bars of varying", "graph", "water"]}
{"i": "5081391001763840", "t": "1\r  1\t1\r  1\t2\t1\r  1\t3\t3\t1\r  1\t4\t6\t4\t1\r  1\t5\t10\t10\t5\t1\r  Write a function that prints N rows of the pattern above.  BONUS points if you can do this recursively.", "k": ["write a function", "function that prints", "prints n rows", "bonus points", "write"]}
{"i": "6258244924211200", "t": "Write test cases for,\r Testing a API , which takes URL as input which points to a html page, finds a specific TAG and extracts all integers between the tags, sorts the numbers in ascending order and writes it to a file", "k": ["write test cases", "testing a api", "url as input", "html page", "finds a specific"]}
{"i": "5722392322113536", "t": "Tell the following 3 letter in the sequence\rA E F H I K _ _ _", "k": ["letter", "sequence"]}
{"i": "5635749544198144", "t": "Write a program to modify the string in following pattern,\rChange odd words to uppercase and Reverse the even words. Make sure that the spaces (multiple) between the words remains as it is.\rE.g.:\rInput   : \"This is a test        String!!\"\rOutput: \"THIS si A tset        STRING!!\"", "k": ["change odd words", "change odd", "uppercase and reverse", "write a program", "program to modify"]}
{"i": "4814574077345792", "t": "hi i have one question, for example : convert A2B2A to A3B2, that is simple but but string can also have parentheses like AB3((CB)2(CB)2)3 which to converted to AB15C12", "k": ["convert", "question", "simple", "string", "parentheses"]}
{"i": "5668114807128064", "t": "Given a list of child->parent relationships, build a binary tree out of it. All the element Ids inside the tree are unique. \r Example:\r Given the following relationships:\r Child   Parent  IsLeft\r15      20      true\r19      80      true\r17      20      false\r16      80      false\r80      50      false\r50      null    false\r20      50      true\r  You should return the following tree:\r    50\r   /  \\\r  20   80\r / \\   / \\\r15 17 19 16\r  Function Signature\r  /**\r * Represents a pair relation between one parent node and one child node inside a binary tree\r * If the _parent is null, it represents the ROOT node\r */\rpublic class Relation {\r    public Integer _parent;\r    public Integer _child;\r    public boolean _isLeft;\r}\r  /**\r * Represents a single Node inside a binary tree\r */\rpublic class Node {\r    public Integer _id;\r    public Node _left;\r    public Node _right;\r}\r /**\r * Implement a method to build a tree from a list of parent-child relationships\r * And return the root Node of the tree\r */\rpublic Node buildTree (List<Relation> data)\r{\r}", "k": ["public integer", "node", "public node", "public", "binary tree"]}
{"i": "5681702473039872", "t": "Given an array Of integers build a new array of integers such that every 2nd element of the array is greater than its left and right element. \r eg: \r[1,4,5,2,3]\r o/p:\r[1,4,2,5,3]\r Soln proposed:\r Step 1:Sort The array -> O(nlogn)\rStep 2:Use 2 indices: one starting at leftmost index and other at rightmost index. \rand populate the new array alterntely using the left pointer(index) first and then the right pointer and then increment the pointer used. till both the pointers meet/cross each other. -> O(n).", "k": ["integers build", "array", "array of integers", "step", "integers"]}
{"i": "5708795663613952", "t": "given an expression like 3*4 + 8-9 (only +, - , * operators) as a string evaluate it strictly from left to right", "k": ["operators", "string evaluate", "evaluate it strictly", "strictly from left", "expression"]}
{"i": "5082818004647936", "t": "snake sequence. same as in other interviews", "k": ["snake sequence", "snake", "sequence", "interviews"]}
{"i": "5175660836290560", "t": "given a horizontal array of strings convert it to vertical. like english characters are read left to right. convert them to a chinese format which is read vertically.\reg. \repic is a healthcare company.\rinterviewing for software developer.\r print this vertically sentence by sentence.", "k": ["horizontal array", "array of strings", "strings convert", "vertical", "horizontal"]}
{"i": "4832389870125056", "t": "Point errors (if any) in the following pointer code and explain what it does...\r char* cp(char *a)\r{\rchar *f;\rf=(char*)malloc(strlen(a)*sizeof(char));\rwhile(*a != 0)\r{\r *f=*a;\r f++;\r a++;\r}\rcout<< f;    \rreturn f;\r }", "k": ["point errors", "char", "pointer code", "code and explain", "point"]}
{"i": "5695780033658880", "t": "Check if the given binary tree is a unival tree. (all nodes have same value)\r Follow up- Count the number of unival subtrees in a binary tree.", "k": ["binary tree", "count the number", "tree", "check", "binary"]}
{"i": "5650651738537984", "t": "Given an integer of a certain bit length, does it have an even or odd number of parity bits?  \r Optimization - Can you do this recursively in one line of code?", "k": ["bit length", "odd number", "number of parity", "parity bits", "length"]}
{"i": "5743480477319168", "t": "Design the backend system for a website like HackerRank", "k": ["design the backend", "website like hackerrank", "backend system", "design", "hackerrank"]}
