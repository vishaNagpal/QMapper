{"i": "10018895", "t": "A)\r long fib_A(unsigned long n) {\rif (n <= 1) {\rreturn n;\r} else {\rreturn fib_A(n-1) + fib_A(n-2);\r}\r}\r  B)\r long fib_B(unsigned long n) {\rint previous = -1;\rint result = 1;\rfor (int i = 0; i <= n; i++)\r{\rint sum = result + previous;\rprevious = result;\rresult = sum;\r}\rreturn res\r Which is more CPU Intensive?", "k": ["cpu intensive", "unsigned long", "long fib", "return fib", "int sum"]}
{"i": "10019865", "t": "In mapreduce, which type of join is more efficient, map side join or reduce side join and why?", "k": ["map side join", "reduce side join", "map side", "side join", "reduce side"]}
{"i": "10019864", "t": "Write in your most comfortable language) code that prints the numbers from 1 to 1 million. \rBut for multiples of prime number seven print \"Multi\" instead of the number and\rfor the multiples of prime number thirteen print \"Attribution\". \rFor numbers which are multiples of both three and five print \"Multi-Attribution\".", "k": ["comfortable language", "multiples of prime", "prime number", "million", "multiples"]}
{"i": "10018885", "t": "Given an array of size n, find all the possible sub set of the array of size k(all the subsets must be of size k).", "k": ["array of size", "size", "array", "find", "set"]}
{"i": "9941232", "t": "Ad Center SDET interview always asks \rRegular expression problems\r Implement a lexical analyzer\rInput string - a C program with Comments \rOutput- the input C program string without comments", "k": ["center sdet interview", "regular expression problems", "expression problems implement", "lexical analyzer input", "center sdet"]}
{"i": "10007209", "t": "How are events handled in COM ?", "k": ["events handled", "events", "handled"]}
{"i": "10009154", "t": "SCVMM - Or Server tools -SDET position\r Test the find /replace dialog", "k": ["sdet position test", "server tools", "test the find", "replace dialog", "sdet position"]}
{"i": "10007208", "t": "Find the element closest to a given input element in a BST", "k": ["element closest", "input element", "bst", "find the element", "find"]}
{"i": "9941175", "t": "key pad question - you how your phone has letters on the number keys. for example, number 2 has ABC on it, number 3 has DEF, 4 number has GHI,... , and number 9 has WXYZ.\u00a0 Write a program that will print out all of the possible combination of those letters depending on the users input.\u00a0 For example, say a user presses 234, the output should be\r ADG, ADH, ADI, AEG, AEH, AEI, AFG, AFH, AFI\rBDG, BDH, BDI, BEG, BEH, BEI, BFG, BFH, BFI\rCDG, CDH, CDI, CEG, CEH, CEI, CFG, CFH, CFI", "k": ["key pad question", "pad question", "key pad", "number", "number keys"]}
{"i": "9986113", "t": "you are to write a program that figures out the total cost of an airline ticket.\u00a0 The base-fare is $40, tax rate is 4%, a customer is charged $10 per segment but only a maximum of 2 segments will ever be charge, and $10 per security screens but only a maximum of 3 security segments will ever be charged.\u00a0 Something like that, simple linear programming.", "k": ["airline ticket", "write a program", "program that figures", "total cost", "ticket"]}
{"i": "10009098", "t": "you are to write a program that simulates a cash register.\u00a0 for example, if something cost $10.25 and the customer pays with a $20 bill, the program will print out the most efficient \"change-breakdown\" which is 1 five, 4 ones, and 3 quarters.", "k": ["cash register", "simulates a cash", "register", "program that simulates", "write a program"]}
{"i": "9941174", "t": "you have to create a program that accepts a stream of inputs from a user and when the user enters 0, the user has signal the end of their inputs.\u00a0 From the stream of input, find the max and min, however the max must be an even number and the min must be an odd number.", "k": ["user enters", "create a program", "program that accepts", "signal the end", "user"]}
{"i": "10009096", "t": "reverse the words of a string.\u00a0 i.e This is great -> great is This", "k": ["reverse the words", "reverse", "string", "words", "great"]}
{"i": "9986079", "t": "1.\u00a0 when would you prefer to use a linked list over an array and vice versa\r2.\u00a0 given a binary tree, find the path from the root to all nodes whose id are multiples of five.\r3.\u00a0 what data structures will you use if you have a program that accepts a stream of inputs and just stores those inputs\r4.\u00a0 what is abstraction\r5.\u00a0 how would you remove duplicates", "k": ["vice versa", "linked list", "array and vice", "inputs", "binary tree"]}
{"i": "10018760", "t": "Let us assume that we store integers in strings. Right an increment function in C that will increment a given integer by one.", "k": ["store integers", "strings", "integers in strings", "assume", "store"]}
{"i": "10007941", "t": "Written Round1: Given two sorted arrays a[] and b[]. Merge them and answer should be stored in a[] with minimum complexity", "k": ["sorted arrays", "written", "minimum complexity", "sorted", "arrays"]}
{"i": "9941006", "t": "Written Round1: To get mirror image of a binary tree.", "k": ["written", "binary tree", "mirror image", "tree", "mirror"]}
{"i": "9941005", "t": "There are a row of houses, each house can be painted with three colors red, blue and green. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color. You have to paint the houses with minimum cost. How would you do it?\r Note: Painting house-1 with red costs different from painting house-2 with red. The costs are different for each house and each color.", "k": ["blue and green", "houses", "painting", "house", "color"]}
{"i": "9967552", "t": "You are given a document having lot of words in it and many words have been used it the document more than once ... you are supposed to find each word with their occurrences in the document means its count .... assume you have been given a function char * GetNextWord() which fetches you next word from the document ....\r1) propose the best data structure u will use to tackle this problem.\r2) Write an algo to implement this\r3) Tell the complexity", "k": ["document", "lot", "words", "word", "document having lot"]}
{"i": "10006905", "t": "you are given a linked list and you are supposed to take it as input and return its node values as an integer ---\rfor example \rif linked list it 2->3->4->5->NULL\rit should return 2345 integer use functions definition as ---\rint myconvert(Node *);\rand structure for Node is \rstruct Node{\rint data;\rstruct Node *root;\r};\r 2) now you are given num1: 2->3->4->NULL;\r and num2: 3->4->NULL;\ryou should take two linked list as input and return a list like 2->6->8->NULL; sum of corresponding elements and return a list\rNode * newlist(Node *num1,Node *num2);\r 3) Write test cases to test 2nd program completely...", "k": ["write test cases", "struct node", "linked list", "write test", "input and return"]}
{"i": "10007849", "t": "Find the output of the following code -\r int find(int j)\r{\rif(j>1)\r{\rj=find(j/10)-(j%10);\rprintf(\"%d\",j);\r}\relse\r{\rj=0;\r}\rreturn j;\r}\r int main()\r{\rint i=19222;\rint k;\rk=find(i);\r}", "k": ["int main", "int find", "int", "find", "find the output"]}
{"i": "9982410", "t": "fill all the numbers from 1 to 8 in the diagram shown below such that no two consecutive numbers are next to each other(either horizontally vertically or diagonally) i hope i am clear .. i mean 1 can not have a neighbor as 2 , 5 can't have neighbor as 6 or 4 ...-----\r\n     |     |\r\n-------------------\r\n|    |     |      |\r\n-------------------\r\n|    |     |      |\r\n-------------------\r\n     |     |\r\n     -------", "k": ["vertically or diagonally", "diagram shown", "horizontally vertically", "consecutive numbers", "numbers"]}
{"i": "9985888", "t": "These question were asked in Written test held in delhi...\r1) find the bug in the following code which concatenates 2 strings ---\r char * concatenate(char *s1,char *s2)\r{\rchar buffer[1024];\rint i=0;\rwhile(*s1)\r{\r  buffer[i++]=*s1;\r  s1++;\r}\r while(*s2)\r{\r buffer[++i]=s2;\r s2++;\r}\rreturn buffer;\r}", "k": ["written test held", "asked in written", "written test", "held in delhi", "question were asked"]}
{"i": "9967547", "t": "These question were asked in Written test held in delhi...\r1) find the bug in the following code which concatenates 2 strings ---\r char * concatenate(char *s1,char *s2)\r{\rchar buffer[1024];\rint i=0;\rwhile(*s1)\r{\r  buffer[i++]=*s1;\r  s1++;\r}\r while(*s2)\r{\r buffer[++i]=s2;\r s2++;\r}\rreturn buffer;\r}", "k": ["written test held", "asked in written", "written test", "held in delhi", "question were asked"]}
{"i": "9964880", "t": "what does following program do?\r int main(main)\r{\rprintf(\"%d\",main);\rreturn 0;\r}", "k": ["main", "int main", "program", "printf", "return"]}
{"i": "9992858", "t": "How do you implement abstraction and encapsulation? Explain with example.", "k": ["abstraction and encapsulation", "implement abstraction", "encapsulation", "implement", "abstraction"]}
{"i": "9992675", "t": "Given a triangle like the following3\r\n    4 6\r\n   1 5 01. How many nodes would you have, for 20 rows?\r2. How to find the largest sum from the top of the triangle to the one of the nodes at the bottom. In other words, if you consider it as a tree, find the max sum of all paths from root to the leaf.", "k": ["triangle", "nodes", "find", "find the largest", "sum"]}
{"i": "9946980", "t": "write down the output...even after knowing , i did wrong...:P u guys be careful..:Pint b=3;\r\ncout<<b++*++b<<endl;", "k": ["guys be careful.", "cout", "endl", "pint", "write"]}
{"i": "9976821", "t": "Q. If you are given 2 number U & V then Write a program to find the GCD of the numbers. complexity of the program shoud be of the order {(log MN)^2 }.", "k": ["find the gcd", "write a program", "write", "gcd", "program to find"]}
{"i": "9976815", "t": "Phone screen for a software developer role in wireless:\r1) What is  Fourier Transorm?\r2)What is Capacitor\r3)What is Nyquist frequency  ?\r4) what is CDMA FDMA TDMA", "k": ["software developer role", "fourier transorm", "cdma fdma tdma", "phone screen", "role in wireless"]}
