{"i": "5636353676017664", "t": "given a dictionary, output the longest List <String>. The result of a String is the previous String add a character at any position.\rexample: {i, in, ing, sing, sting, string}", "k": ["longest list", "output the longest", "list", "string", "previous string add"]}
{"i": "5671220757397504", "t": "Find a \u201clocal minimum\u201d in a binary tree\r a local min is a node whose value is smaller than that of any other nodes that are connected to it", "k": ["local minimum", "binary tree", "local min", "tree a local", "local"]}
{"i": "5703518911463424", "t": "1. merge intervals with value\rPD: there are a series of continuous intervals, and each interval has a value. Initially, the ith\rinterval is (i - 1, i - 1), merge these intervals and return the result.\rMerge Rule:\ra. We can only merge the ith interval with i-1 th or i + 1 interval. The value of new interval is the\rmean of these two original intervals.\rb. Define cost as absolute difference of two neighboring intervals,\revery time merge two intervals with the smallest cost.\rc. If the smallest cost exceeds a threshold t, then stop.\rd. There may be multiple valid result, just return one.\rfor example:\rvalue: 3 7 6 5 1\rintervals: (0,0) (1,1) (2,2) (3,3) (4,4)\rthreshold: t = 2\rfirst iteration:\rmin cost = |7 - 6| = 1, notice that |6 - 5| is also okay.\rafter merging:\rvalue: 3 6.5 5 1\rintervals: (0,0) (1,2) (3,3) (4,4)\rsecond iteration:\rmin cost = |6.5 - 5| = 0.5\rafter merging:\rvalue: 3 5.75 1\rintervals: (0,0) (1,3) (4,4)\rsecond iteration:\rmin cost = |3 - 5.75| = 2.75 > t = 2, stop\rreturn [(0,0), (1,3), (4,4)]", "k": ["intervals", "merge", "interval", "cost", "min cost"]}
{"i": "5754849944666112", "t": "Well design a master controller/scheduler which should be configurable and capable of running multiple processors at a same time\r Scheduler Operation :- \r scheduler process should be able to perform various operations below are the examples\r 1. execute sql queries and stored procedures in the database\r2 should be able to send emails with given set of arguments and attachment to business\r3 should be able to send ftp files based on input arguments\r4 should be able to execute batch files \r process should have below capabilities \r  Process Operation :- \r  1 Remotely start/stop a child process\r 2 Raise alerts when any above process fails\r 3 Automatically restart the process if it fails\r 4Remotely kill a child process that breaches a pre set timeout limit\r   so for scheduler and processor I have to come to design with\r  1 High level design\r 2 Class level diagram\r 3 Design should be flexible t incorporate more operations\r 4 any design pattern you think we can use", "k": ["running multiple processors", "time scheduler operation", "master controller", "high level design", "configurable and capable"]}
{"i": "6019175586725888", "t": "You have to implement the following function:\rint MinColoring(int k, char* str);int MinColoring(int k, char* str);static int MinColoring(int k, String str) {}static int MinColoring(int k, string str) {}\rThe function takes a string 'str' of size 'n' and an integer 'k' as its arguments and returns the minimum no. of paint operation required to achieve the final colored sequence as represented by 'str'.\rA paint operation is defined as coloring exactly 'k' consecutive balls out of 'n' balls with a single color.\rAssumptions:\rn > 0\r0  < k  <= n\rNote:\rPaint operation always starts from the ball at index 0\rAny ball can be repainted any no. of times\rEach character in 'str', represented by small letter alphabets, denotes the final coloring of the ball at that index\rIf the colored sequence cannot be obtained by any no. of paint operations, return -1\rPaint operation can not be performed for less than 'k' balls\r Example:\rInput:\rk: 3\rstr: rrggg\rOutput:\r2\rExplanation:\rSince we can color 3 balls at a time, we can first color the balls {0, 1, 2} with color \"r\". Next, we can color the balls {2, 3, 4} with color \"g\". As a result, color sequence of the ball will be rrggg. And this was achieved in 2 paint operations.", "k": ["static int mincoloring", "int mincoloring", "static int", "string str", "int"]}
{"i": "5153031342522368", "t": "Give all n cities the distance between them, and then you have to follow all the cities in the order of small to large index of the city, which means you must visit the cities in ascending order, and now you can choose not to visit k cities (k < n), ask choose not to go to which k cities can make the path shortest? Return the shortest journey.  \rint findShortestPath(int[][] matrix, int k){\r}", "k": ["cities", "ascending order", "small to large", "large index", "make the path"]}
{"i": "5686036783955968", "t": "3. Complete the following function-\r Node * alternateReverse( Node* head1, Node*head2){\r   // code goes here\r}\rWhere \u2018Node\u2019 is the structure of a linked list node defined as:\r struct Node{\r  int data;\r  struct Node *next;\r}; \ralternateReverse() must remove the even number nodes from the linked list and append them to the end in reverse order. No extra space was allowed. It was for 5 marks.\rExample:\r Input-1->2->3->4->5->6\rOutput-1->3->5->6->4->2\r Input-1->2->3->4->5->6->7->8->9\rOutput-1->3->5->7->9->8->6->4->2", "k": ["struct node", "node", "linked list node", "list node defined", "linked list"]}
{"i": "5739534896594944", "t": "We were given an array. Values of the array were memory sizes and the memory that is required by the system can only be represented in powers of  We had to return the size of the memory required by the system.\rEx: \u2013 arr = {2,1,4,5}\rTotal = 12\rSo, memory required =16", "k": ["memory required", "memory", "required", "array", "system"]}
{"i": "5670699992612864", "t": "Given an array arr[], find the maximum j \u2013 i such that arr[ j ] > arr[ i ]", "k": ["find the maximum", "array arr", "arr", "find", "array"]}
{"i": "5703822780399616", "t": "Given two arrays find the min in first array and max in the second array and return the product of the two elements", "k": ["find the min", "return the product", "arrays find", "array and max", "array and return"]}
{"i": "5747117124485120", "t": "Third question was to find length of longest AP in given set of numbers.", "k": ["set of numbers", "find length", "length of longest", "numbers", "question"]}
{"i": "5115175500775424", "t": "Find the nth number that contains the digit k or is divisible by k. (2 <= k <= 9)\rExample \u2013\rif n = 15 & k = 3\rAnswer : 33\r(3, 6, 9, 12, 13, 15, 18, 21, 23, 24, 27, 30, 31, 32, 33)", "k": ["find the nth", "nth number", "find", "answer", "nth"]}
{"i": "5670830183809024", "t": "Given 2 numbers m and n , find if the sum m+n has the same number of digits as n . If true then print m+n otherwise print n.", "k": ["number of digits", "true then print", "print", "find", "sum"]}
{"i": "5770171435188224", "t": "The question which has been asked is : how to share a variable across two unrelated process in Linux without using IPC.", "k": ["process in linux", "ipc", "share a variable", "unrelated process", "linux"]}
{"i": "5916267700551680", "t": "The question which has been asked to me is : Print right angle triangle with stars(*) without nested loops. Implement in C programming language.", "k": ["print right angle", "triangle with stars", "nested loops", "print", "angle triangle"]}
{"i": "6414984270577664", "t": "How two compare two database using entity framework.", "k": ["entity framework", "compare two database", "database using entity", "framework", "compare"]}
{"i": "5121790555717632", "t": "Generate a random MxN starting board. It cannot have 3 or more pieces in a \rrow (horizontally or vertically) of the same color. K colors.", "k": ["mxn starting board", "random mxn starting", "generate a random", "starting board", "random mxn"]}
{"i": "5675828586217472", "t": "Implement a rate limiter  attribute/decoration/annotation on top of an API endpoint. caps to N requests per minute with a rolling window (implement from scratch / test / compiling + working code. Was made to write the code in front of a computer.", "k": ["rate limiter attribute", "api endpoint", "limiter attribute", "annotation on top", "rate limiter"]}
{"i": "5649611032100864", "t": "Design a task execution service, which accepts tasks from clients and runs them and returns result. Following is how the \r Client Registration (client name, callback method)\rSubmit Job to service\rOnce executed service will return the result to client\r Lets assume that 20k jobs are getting submitted per second, you need to scale it in such a way that we are able to process as much jobs per second as possible.\r Further questions:\r So the components are going to be a load balancer, workstations, cache, task runner and DB. How will you make sure that data is consistent among them, mimimal duplication of data and every job is ran only once.\r If any machine is down, say DB, workstation etc. how that is going to be handled.", "k": ["task execution service", "client registration", "execution service", "client", "submit job"]}
{"i": "5647017811378176", "t": "find the longest substring with at most k repeating characters,\rto make it more clear, at most k repeating characters means in the substring, the max count(frequency) of one or more chars is k", "k": ["repeating characters", "find the longest", "max count", "longest substring", "repeating"]}
{"i": "5638315536547840", "t": "Robot walked from the upper left to the lower right, can only go down and to the right, the number of each grid is height,\rIf the next cell height is higher than the current, we must pay the difference cost, otherwise no cost, \rFind the minimum cost to reach the lower right corner,\rFollow up 1, print the minimum cost path;", "k": ["minimum cost path", "minimum cost", "find the minimum", "lower right corner", "print the minimum"]}
{"i": "5671537377017856", "t": "Description : Develop an application that transfer data from the test database to live database after showing comparison and user selection.\r Precondition: database and schema information provided and list of tables.\r Condition Of Acceptance:\r1. Application should select the source and destination databases and be capable of showing comparisons.\r2. It should be capable transferring data from source to destination database/deleting the selected data from destination.\rTechnologies: C#, Sql server, entity framework, object oriented design principle.", "k": ["user selection", "develop", "develop an application", "transfer data", "database"]}
{"i": "5664070039502848", "t": "give a list of cities a to city b the price of air tickets for example\ra b 100 $\rb c 200 $\re f 200 $\r...\r Now let you from city x to city y, you cannot transfer more than twice between the two city,  find the cheap flight from x to y,  follow up print out the flight", "k": ["give a list", "list of cities", "price of air", "air tickets", "city"]}
{"i": "5712169009152000", "t": "Gas station problem, give you a starting point A and End B. An array of oil prices at each gas station index represents the location of each gas station. MPG = V, find the minimum cost of gas from A to B", "k": ["station index represents", "gas station problem", "gas station index", "gas station", "station problem"]}
{"i": "5683201166016512", "t": "given a string, and integer k, check if this string contain all the binary string of length k\rFor example, k is 2, then 00,10,01,11. \rFollowup 1,  find a string that can contain all binary string of length k. \rFollowup 2,  find a shortest string that can contain all binary string of length k.", "k": ["binary string", "string", "string of length", "length", "binary"]}
{"i": "5714599960641536", "t": "Expression evolution \rexpr :: = int | '(' op expr + ')'\rop :: = '+' | '*'\rCite a few examples:\r\"3\" -> 3\r\"(+ 1 2)\" -> 3\r\"(+ 3 4 5)\" -> 12\r\"(+7 (* 8 12) (* 2 (+ 9 4) 7) 3)\" -> ...\rPublic int getValue(String s){\r}", "k": ["expression evolution expr", "evolution expr", "expression evolution", "public int getvalue", "expr"]}
{"i": "5709720340922368", "t": "Given a list of daily temperatures, produce a list that, for each day in the input, tells you how many days you would have to wait until a warmer temperature.\r[73, 74, 75, 71, 70, 76, 72] -> [1, 1, 3, 2, 1, nothing, nothing]", "k": ["produce a list", "daily temperatures", "warmer temperature", "list of daily", "list"]}
{"i": "5646536540160000", "t": "Given an array which is in ascending order till some point and then descending order till end. find peak element", "k": ["order till end", "ascending order till", "order till", "till end", "ascending order"]}
{"i": "5701573324832768", "t": "Given a tree find shorted path to a specified element from root. Actual question is different but theory behind it is same.", "k": ["tree find shorted", "find shorted path", "element from root", "tree find", "find shorted"]}
{"i": "5137224151597056", "t": "You have given height array of array. Generate the original array.\r Input: [6,3,0,2,2,0,0]\rOutput : [ 1,5,7,3,2,6,4]\r A[i] value in input array is the number of greater element on right side.", "k": ["height array", "array", "output", "height", "generate the original"]}
