{"i": "5164812231245824", "t": "Find all paths in binary tree that add up to a given sum. \rGiven a tree like this:2\r\n 3   5 \r\n4 8 6 -2\r\n           2return {3,4}, {2,5}, {2, 5, -2, 2}", "k": ["find all paths", "paths in binary", "binary tree", "tree that add", "find"]}
{"i": "6299620974002176", "t": "Design the \"what other people bought feature.\" This was focused on database design/creating an api to lie on top of it, and he asked questions to see if I understood how dbs actually work(like what does group by do). I was given an example table with the schema of like \ritemID, purchaseDate, customerID\rHe asked big O complexity of sql query as well.", "k": ["people bought feature", "bought feature", "people bought", "feature", "design"]}
{"i": "5141206285680640", "t": "Design Amazon Questions and Answers. This question was to see how I code, and how I would modularize things. He wanted me to code every single thing as realistically as possible on a whiteboard.", "k": ["design amazon questions", "design amazon", "amazon questions", "questions and answers", "answers"]}
{"i": "5167925411446784", "t": "Design a push notification system for android. Assume that we have 1 million users this year, but next year we will have 15 million. Assume that Google can handle infinite notifications per second.\r I would love to see this answered, as I did not answer it well.", "k": ["design a push", "system for android", "push notification system", "assume that google", "assume"]}
{"i": "5734688356302848", "t": "Given an array such that it is increasing until a point and then decreasing. Return the index of the number n in the array in sub-linear time.\rEx.\r[1,2,5,8,13,9,3,-1] n = 5 \rOutput = 2\r Next: Can you do it without finding the maximum element?", "k": ["decreasing", "array", "return the index", "sub-linear time", "increasing"]}
{"i": "5714949223481344", "t": "Design an application which sends the user the 10 closest hotels based on his geo location.\rWhen i asked roughly how many hotels in total are we talking about, i was asked to estimate how many hotels are there in the world...", "k": ["closest hotels based", "design an application", "geo location", "application which sends", "sends the user"]}
{"i": "5718388418543616", "t": "You are given a bunch of nodes evenly spaced in a rectangular shape. The rectangle is M nodes long and N nodes wide. Node A is in the upper left hand corner and node B is at the bottom right hand corner. How many different paths are there from A to B?\r What is a brute-force solution? What is better than a brute force solution?", "k": ["nodes evenly spaced", "rectangular shape", "evenly spaced", "nodes evenly", "nodes"]}
{"i": "5645007694331904", "t": "If 2 employees are travelling and they have a start date and an end date, how many overlaps are possible?", "k": ["employees are travelling", "start date", "end date", "employees", "date"]}
{"i": "5652327660781568", "t": "How to sort an array of integers using two priority queues ?", "k": ["priority queues", "sort an array", "array of integers", "queues", "sort"]}
{"i": "5700764422897664", "t": "You are given 2 documents. We want to know how similar they are through N-Grams. \r Given an input n (n = number of word in the Ngram) and two documents(strings) find the intersection of the  NGrams of two document. \r E.g doc1 = 'This is a dog'\r       doc2 = 'This is a cat'\rn = 3\rNgrams for doc1 = 'This is a', 'is a dog'\rNgrams for doc2 = 'This is a', 'is a cat'\r Output 'This is a'\r Find a efficient way and give its complexity.", "k": ["ngrams", "documents", "find", "dog", "cat"]}
{"i": "5709839151923200", "t": "std C library has pow(x, n) function - implement that function", "k": ["std c library", "library has pow", "implement that function", "function", "std"]}
{"i": "5658288605626368", "t": "numbers are coming\rcontinuously containing 0\u2019s and 1\u2019s same as above. Now tell me what data structure\ryou will use to tell me the starting of 1\u2019s in least common time ??", "k": ["numbers are coming", "coming continuously", "numbers", "common time", "coming"]}
{"i": "5733974989078528", "t": "Can we find majority element optimally than O(n) ?\rFollowing with what if array is sorted ?", "k": ["find majority element", "majority element optimally", "array is sorted", "find majority", "majority element"]}
{"i": "5656133001805824", "t": "Can we tell in almost constant time that a perticuler array dont have majority element ?", "k": ["perticuler array dont", "majority element", "constant time", "perticuler array", "array dont"]}
{"i": "5764169414475776", "t": "What does the error \"Null Pointer Assignment\" mean and what causes this error ?\rIf found, what are basic approaches to debug this type of error ?", "k": ["null pointer assignment", "null pointer", "pointer assignment", "basic approaches", "approaches to debug"]}
{"i": "5702990558134272", "t": "What is sister delegation and how is it implemented ?", "k": ["sister delegation", "implemented", "sister", "delegation"]}
{"i": "5112702601003008", "t": "find sum of longest increasing subsequence ?\rNot the maximum sum,sum of longest subsequence.\rEg. 1, 8,2, 3\rans-> 6", "k": ["longest increasing subsequence", "find sum", "increasing subsequence", "longest subsequence", "maximum sum,sum"]}
{"i": "5654505477636096", "t": "I have been asked to do the following by the interviewer before the Interview:\r\"\rIn the meantime we're asking each of the candidates to prepare an analysis of our current School Of Architecture website as a well-informed and objective user. This will be a topic of discussion during the interviews.\"\r I am not sure what does that means , well-formed and objective user? Could any one please explain?", "k": ["school of architecture", "current school", "architecture website", "candidates to prepare", "prepare an analysis"]}
{"i": "5633308471853056", "t": "Given a N-ary Tree. Return true if it follows Sum Property otherwise false.", "k": ["n-ary tree", "tree", "n-ary", "sum property", "property otherwise false"]}
{"i": "5766696197423104", "t": "Given a collection of pair representing intervals write a function which inserts new interval into collection and merges overlapping intervals.\rExample:\r[-10, -1], [0,2], [4,10]\rinsert [-5, 1]\routput: [-10, 2], [4, 10]", "k": ["pair representing intervals", "merges overlapping intervals", "representing intervals write", "pair representing", "write a function"]}
{"i": "5705060732370944", "t": "Given a mxn grid, each of it\u2019s element be either \u2018.\u2019, \u2018R\u2019, \u2018G\u2019 or \u2018B\u2019,\rwhere \u2018.\u2019 -> empty, \u2018R\u2019 -> Red, \u2018G\u2019 -> Green, \u2018B\u2019 -> Blue\rA Blue strip has width 1 and length greater or equal to one.\rA Red strip has length 1 and width greater or equal to one.\rIf a Red strip and a Blue strip overlaps, the overlapped portion will become \u2018G\u2019.\rFind the minimum number of strips required to cover the whole grid.\r 1<= m,n <=100\r Input\r5 5\r..B..\r..GRR\r..B..\rR....\rR....\rOutput\r4", "k": ["red strip", "blue strip", "red", "blue", "blue strip overlaps"]}
{"i": "5756230435864576", "t": "write a shell script to append the contents of one file to another file. If any word is common in both files that need not be appended.", "k": ["write a shell", "shell script", "script to append", "append the contents", "write"]}
{"i": "5675917835763712", "t": "Given a sorted array and n, find the count of sum of 2 numbers greater than or equal to n", "k": ["find the count", "numbers greater", "sorted array", "count of sum", "find"]}
{"i": "5066934355755008", "t": "There is a log file with writes processes details in the below mentioned format .\r---\rProcess_Name - RID(MB) - Time \r---\rIt is updated every second. write bash script to report processes which is having RID greater than 30. \rNB: Avoid reading the file line by line as it is very huge and updated every second", "k": ["writes processes details", "mentioned format", "process", "time", "processes details"]}
{"i": "5766344614084608", "t": "Given a sorted array with only 0's and 1's.Count the number of 0's.\re.g: 0 0 0 0 1 1\rAns: 4.", "k": ["sorted array", "ans", "sorted", "array", "number"]}
{"i": "5991240778645504", "t": "Given n (of size m) Linked lists\r Print all set(head of linked list) of link list that intersect with each other.\r e.g.\r 1-->2-->3-->4-->5\r6-->7-->8-->4-->5\r8->9->10->11->12\r13->14->15->12\r16->17->18\r 1 6\r8 13\r16", "k": ["linked lists print", "print all set", "lists print", "linked lists", "head of linked"]}
{"i": "6315677910564864", "t": "An array consist of elements whose difference is positive or negative 1. I have to find the given elements without using linear search. \rSay\rInt arr[]={1,2,3,4,3,4,5,6,7\r To find : 6\r.\rPlease provide some one code/algorithm for this problem.", "k": ["positive or negative", "array consist", "difference is positive", "negative", "int arr"]}
{"i": "6239886770176000", "t": "You are given a String S that consists of characters '0' and '1' only.Return the smallest positive integer K such that it is possible to cut S into K pieces, each of them being a power of 5. If there is no such K, return -1 instead.\rExamples\r0)\t\r \"101101101\"\rReturns: 3\rWe can split the given string into three \"101\"s.\r Note that \"101\" is 5 in binary.\r 1)\t\r \"1111101\"\rReturns: 1\r\"1111101\" is 5^3.\r 2)\t\r \"110011011\"\rReturns: 3\rSplit it into \"11001\", \"101\" and \"1\".\r 3)\t\r \"1000101011\"\rReturns: -1\r 4)\t\r \"111011100110101100101110111\"\rReturns: 5", "k": ["smallest positive integer", "returns", "consists of characters", "only.return the smallest", "smallest positive"]}
{"i": "6257006711144448", "t": "Design an Email sender, need to send 100,000000 emails and you have 5 machines how could you do it efficiently.", "k": ["email sender", "design an email", "design", "sender", "send"]}
{"i": "5180832123715584", "t": "Given an URL you need to analyze all the images( they may be in 1000\u2019s of number) and return the cumulative quality of images present in that url.\rlets say: you can configure image quality as very good, good, average, poor..etc, so you have to return one value among them.The given URL may contain several other URLs and they also contain lot of images . you need to consider all of them. lot of questions like how to avoid visiting same url again,\rhow would you determine the quality of an image if you encounter an url that contains only an image..etc.", "k": ["url", "cumulative quality", "images present", "configure image quality", "quality"]}
