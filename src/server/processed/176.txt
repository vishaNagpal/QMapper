{"i": "5676518481068032", "t": "write custom pattern match function to match following logic\r.\u2019 Matches any single character.\r\u2018*\u2019 Matches zero or more of the preceding element.\rThe matching should cover the entire input string (not partial).\rThe function prototype should be:bool isMatch(const char *s, const char *p)\r\nSome examples:\r\nisMatch(\u201caa\u201d,\u201da\u201d) \u2192 false\r\nisMatch(\u201caa\u201d,\u201daa\u201d) \u2192 true\r\nisMatch(\u201caaa\u201d,\u201daa\u201d) \u2192 false\r\nisMatch(\u201caa\u201d, \u201ca*\u201d) \u2192 true\r\nisMatch(\u201caa\u201d, \u201c.*\u201d) \u2192 true\r\nisMatch(\u201cab\u201d, \u201c.*\u201d) \u2192 true\r\nisMatch(\u201caab\u201d, \u201cc*a*b\u201d) \u2192 true\r\nisMatch(\u201cccca\u201d, \u201cc*a\u201d) \u2192 true", "k": ["write custom pattern", "custom pattern match", "true ismatch", "pattern match function", "ismatch"]}
{"i": "5654062512996352", "t": "Write a program that deletes every 5th byte from a file, but without using a temporary file or allocating a buffer in the memory. For adjusting the size of the file you may use the truncate function.", "k": ["write a program", "program that deletes", "allocating a buffer", "temporary file", "file"]}
{"i": "5759234450915328", "t": "Given an integer array with multiple repeated elements, print all distinct elements in array. O(n) c code/link??", "k": ["multiple repeated elements", "print all distinct", "multiple repeated", "integer array", "repeated elements"]}
{"i": "5687998123343872", "t": "The person who wrote this problem is going through the bad phase of his life. But, fortunately he won some cash in his last programming event.\rNow to make his girlfriend feel special, he wants to buy her some chocolates. As mentioned, he is not having good time so he want to spend as less as possible.\rKeeping that in mind, he decided to play a game with her. The rule of game is as follows:\r1) There are N chocolates represented by type 1..N\r2) He will arrange them in a row in some random order\r3) Now she (his girlfriend ofcourse) has to pick an index say i, then she will get all the chocolates at index j such that j>i and type of chocolate at j is strictly less than type of chocolate at index i.\r He believes that his girlfriend is not that clever and will surely not choose the most optimal index, but he wants to know that if by any chance she picked the optimal index then how many chocolates will he have to buy.\r Input:\rFirst line contain N. then next line contain N space separated integers.\r output :\rA single integer which is the answer.\r Constraints :\r1 \u2264 N \u2264 105\r 1<=A[i]<=10^5\rSample Input (Plaintext Link)\r 10\r7 6 10 5 2 8 1 9 3 4 \r Sample Output (Plaintext Link)\r 7\r Explanation\rIf she chooses i=3, then all the elements in right of i have type less than 10, hence ans is 7. In none of the other case she can get more chocolates.", "k": ["person who wrote", "wrote this problem", "bad phase", "plaintext link", "chocolates"]}
{"i": "5671585342029824", "t": "I needed to develop next system:\r We have a lot of servers. Every server generate logs. Every log has two data types: first is numeric metrics. These numeric metrics are integer. Second is strings. We need to collect logs from all servers on other server (storage). Then we have to execute queries and get some data from storage. In our queries we have to use numeric metrics and strings as well. For numerics metrics we have to be able get aggregation data as well.\r Develop Storage server, database. Describe how will you scale this system, what database will you use, how will you save data and how will you execute this queries.", "k": ["metrics", "data", "storage", "numeric", "server"]}
{"i": "5689376707182592", "t": "public interface Triangle {\r\n \r\n    /**\r\n     * Three segments of lengths A, B, C form a triangle iff\r\n     *\r\n     *      A + B > C\r\n     *      B + C > A\r\n     *      A + C > B\r\n     *\r\n     * e.g.\r\n     *  6, 4, 5 can form a triangle\r\n     * 10, 2, 7 can't\r\n     *\r\n     * Given a list of segments lengths algorithm should find at least one triplet of segments that form a triangle (if any).\r\n     *\r\n     * Method should return an array of either:\r\n     * - 3 elements: segments that form a triangle (i.e. satisfy the condition above)\r\n     * - empty array if there are no such segments\r\n     */\r\n    int[] getTriangleSides(int[] segments);\r\n}", "k": ["public interface triangle", "segments lengths algorithm", "form a triangle", "public interface", "algorithm should find"]}
{"i": "5636490358947840", "t": "I have an two arrays int[] 1 = {2,5,8,9}; and int[] 2={6,3,4,7,1};\rI need to merge this two array in third array int[] 3 = new int[1.Length + 2.Length]; and give the output in sorted form.\rAlso I need to provide and optimized code with minimal complexity...\r Output: {1,2,3,4,5,6,7,8,9} \r Plz Help...", "k": ["arrays int", "array int", "int", "sorted form", "array"]}
{"i": "5646666210213888", "t": "tower Of Hanoi using priority queue", "k": ["tower of hanoi", "hanoi using priority", "priority queue", "hanoi", "tower"]}
{"i": "5641222070730752", "t": "Find the second most repeating number in an array without using extra storage. (I had given solution using a hash table)", "k": ["extra storage", "repeating number", "find", "storage", "hash table"]}
{"i": "5769897411870720", "t": "Implement a stack that supports push, pop and median (the one from statistics) operation in the most efficient way", "k": ["pop and median", "implement a stack", "supports push", "stack that supports", "implement"]}
{"i": "5642213939740672", "t": "Implement a stack that supports push, pop and mode(the one from statistics) operation in the most efficient way", "k": ["pop and mode", "implement a stack", "supports push", "stack that supports", "implement"]}
{"i": "5635989726822400", "t": "Write a program to test whether a string and all strings that can be made using the characters of that string are palindrome or not.\rEg:\rInput\t\tOutput\rmmo\t\t\tTrue\ryakak\t\tTrue\rtravel\t\tFalse\r Note : Please do not use any inbuilt functions.", "k": ["write a program", "input output mmo", "travel false note", "program to test", "output mmo true"]}
{"i": "5766511903899648", "t": "You need to generate all possible permutations of phone numbers of a certain length, except\ra) two digits can not be next to each other,\rb) cannot contain digits from a given list of exclusion\rc) if number contains 4, must start with 4 as well.", "k": ["permutations of phone", "list of exclusion", "phone numbers", "digits", "length"]}
{"i": "5651582337155072", "t": "I was given 90 minutes to complete this test.\rI didn't understand how the sample test cases arrived at their return output.  Can anyone explain?  \r================\rApproximate Matching (Coding)\r You are given 3 strings: text, pre_text and post_text. Let L be a substring of text.\rFor each substring L of text, we define pattern_score as follows:\r* pre_text_pattern_score = highest n, such that first n characters of L are equal to the last n characters of pre_text and occur in the same exact order.\r* post_text_pattern_score = highest n such that last n characters of L are equal to the first n characters of post_text and occur in the same exact order.\r* pattern_score = pre_text_pattern_score + post_text_pattern_score\rFor example, if L = \"nothing\", pre_text = \"bruno\", and post_text = \"ingenious\", then \r* pre_text_pattern_score of L is 2 because the substring \"no\" is matched, and\r* post_text_pattern_score is 3 because the substring \"ing\" is matched.\r* pattern_score is 5 = 2 + 3\rYour program should find a non-empty substring of text that maximizes pattern_score.\r*  If there is a tie, return the substring with the maximal pre_text_pattern_score.\r*  If multiple answers still have a tied score, return the answer that comes first lexicographically.\rComplete the definition of function string calculateScore(string text, string prefix,string suffix)\rConstraints:\r* text, pre_text, and post_text contain only lowercase letters ('a' - 'z')\r* 1 <= |text| <= 50\r* 1 <= |pre-text| <= 50\r* 1 <= |post-text| <= 50\r(where |S| denotes the number of characters in string S)\r*  It is guaranteed that an answer will always exist; i.e. there will always be a substring in text that matches either at least one character at the end of pre-text or at least one character at the beginning of post-text.\r Sample case #1\rtext: \"nothing\"\rprefix: \"bruno\"\rsuffix: \"ingenious\"\rReturns: \"nothing\"\r Sample case #2\rtext: \"ab\"\rprefix: \"b\"\rsuffix: \"a\"\rReturns: \"b\"", "k": ["text", "pattern", "score", "pre", "post"]}
{"i": "5083971002040320", "t": "C program given two strings and print common character from both:\rInput:  bangalore\r\t   mysore\routput: ore", "k": ["bangalore mysore output", "input", "print common character", "ore", "bangalore mysore"]}
{"i": "5738850972336128", "t": "Given an array of ints, return a string identifying the range of numbers \r Example\rInput arr - [0 1 2 7 21 22 1098 1099]\rOutput - \"0-2,7,21-22,1098-1099\"", "k": ["input arr", "numbers example input", "array of ints", "return a string", "string identifying"]}
{"i": "5093494286712832", "t": "Take a string as input and add the digits present in that \r string.\rEx:I/P=\"asdf12bgt3bh5j\"\r      O/P=20\r         I/P=\"iuy2hjg4jhg8\"\r        O/P=14\r          I/P=\"7   13\"\r         O/P=20", "k": ["input and add", "add the digits", "digits present", "string as input", "string"]}
{"i": "5164768866336768", "t": "Take an array of integers as input. print the pair of \r prime number and even number. Remaining numbers \r should appear at the last.\rEx: I/P=[1,5,9,7,3,6,8,13,2,4]\r      O/P=[5,6,7,8,3,4,1,9,13,2]", "k": ["integers as input", "array of integers", "input", "array", "integers"]}
{"i": "4787065684230144", "t": "Given N co-ordinates on a 2D plane, find two co-ordinates such that their slope is maximum. An efficient solution was asked.", "k": ["slope is maximum", "plane", "find two co-ordinates", "find", "maximum"]}
{"i": "5113392333324288", "t": "Given an array such that every next element differs from the previous by +/- 1. (i.e. a[i+1] = a[i] +/-1 ) Find the local max OR min in O(1) time. The interviewer mentioned one more condition that the min or max should be non-edge elements of the array\rExample: 1 2 3 4 5 4 3 2 1 -> Local max is 5\r1 2 3 4 5 -> No local max or min exists\r5 4 3 2 1 -> No local max or min exists", "k": ["local max", "local", "max", "element differs", "min exists"]}
{"i": "5185822661804032", "t": "Given an array of int return the maximum difference of any pair of numbers such that larger number of the pair occurs at higher index than the smaller.", "k": ["array of int", "int return", "return the maximum", "maximum difference", "occurs at higher"]}
{"i": "5668419280044032", "t": "Find minimum number of swaps to convert one binary array to another.\rNote: It is always possible.\rYou are given two integer array having only 0's and 1's. Find minimum number of swaps to convert array1 to array2.\rNOTE: You can only swap adjacent elements.", "k": ["find minimum number", "find minimum", "minimum number", "note", "binary array"]}
{"i": "5186975457869824", "t": "Sparse number is an integer if there are no adjacent 1 in it's binary representation.\rLike: 5 -> 101 (no adjacent 1)\r          9 ->  1001  (no adjacent 1)\rwhile 6-> 110  is not sparse number.\rNow you are given an integer find the NEXT BIGGER sparse number.Please mind 'it is next bigger'.", "k": ["binary representation", "adjacent", "sparse number", "sparse", "representation"]}
{"i": "5743643082096640", "t": "Graph problem:\rCritical node: If a node reaches another node only through one node.\rEg: A-C-B and A-E-B are critical nodes. (A reach B through one node which is C or E)\rIf A reaches B through more than one node, then they are not critical nodes.\r1) A-C-B\rA-D-E-B (A reach B thro C which might lead to critical node but A has another path to B thro D and E, so they are not critical nodes).\r2) X-Y-Z\rX-A-Z (X and Z are critical nodes)\rNow find all critical nodes.", "k": ["critical nodes", "critical", "graph problem", "node", "nodes"]}
{"i": "5698940928262144", "t": "public class MyClass {\r \tpublic static int num=1;\r\t\tpublic static boolean flag=false;\r \t\tpublic static void main(String[] args) {\r\t\t\tThread t =new Thread(new MyThread());\r\t\t\tt.start();\r\t\t\tMyClass.flag=true;\r\t\t\tMyClass.num=10;\r\t}\r }\r  class MyThread implements Runnable{\r \tpublic void run() {\r \t\twhile(!MyClass.flag){\r\t\t\t\tThread.yield();\r\t\t}\r \t\t\tSystem.out.println(MyClass.num);\r  \t}\r}\r Output of this code and the reason  for the output?", "k": ["mythread implements runnable", "public class myclass", "public void run", "public static int", "public static boolean"]}
{"i": "5634304891682816", "t": "Given a number such as 123 having digits 1,2 and 3.\rNow Product of Number and its digits is  = 123*1*2*3 = 768. Now 123 is the seed number for 768. You would be given a number and you have to identify whether any seed element exists for that number.  for Ex: - 4977 has two such seed numbers 79 and 711. You have to print both.", "k": ["number", "seed", "digits", "product", "seed number"]}
{"i": "5699331501850624", "t": "During appraisal due to bell curve funda a manager is restricted to give promotion to only one of his team members. Three of his team members are equally competant. He wanted to select one by giving a puzzle. He called his three talented team members and blidfolded them. He placed a hat on  each of their heads. Manager took off their blindfolds and gave following clues and conditions\r1) Each hat is either white or blue\r2) There is atleast one blue hat\r3) Contest is fair for all the three team members\r4) Each team member can see the hat of other team members but not his.\r5) The team members should not communicate to each other.\r The manager declared that who ever comes up first with right answer shall be given promotion.\r The most talented of his team members came up with right answer and explanation.What is the answer and the logic behind that?", "k": ["bell curve funda", "team members", "team", "members", "appraisal due"]}
{"i": "5646285971390464", "t": "Given two sorted LinkedLists, merge them into one sorted LinkedList", "k": ["sorted linkedlists", "linkedlists", "sorted", "merge"]}
{"i": "5100846062764032", "t": "Hashmap(what is it, time complexity of insertion and deletion)", "k": ["hashmap", "time complexity", "insertion and deletion", "complexity of insertion", "time"]}
{"i": "5688831380553728", "t": "WORD PROBLEM:\rTara has already spent 6 minutes on the telephone and she expects to spend 9 more minutes with every phone call she routes. In all, how many phone calls does Tara have to route to spend a total of 14400 seconds on the phone?\r Print the result.", "k": ["word problem", "word", "problem", "expects to spend", "tara"]}
