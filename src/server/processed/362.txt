{"i": "14180691", "t": "Delete a node in Lined List", "k": ["lined list", "node in lined", "delete a node", "list", "lined"]}
{"i": "14178701", "t": "Level Order traversal in BST", "k": ["level order traversal", "level order", "traversal in bst", "order traversal", "bst"]}
{"i": "14178700", "t": "Print the path whose some is S", "k": ["print the path", "print", "path"]}
{"i": "14181694", "t": "Depth of BST.", "k": ["depth of bst", "bst", "depth"]}
{"i": "14198663", "t": "Considering all features in a notepad like insertion,deletion,searching etc . Which would be the best data structure to be used for a notepad and why ?", "k": ["data structure", "notepad", "features", "data", "structure"]}
{"i": "14193663", "t": "There is an unlimited stream of integer numbers . As soon as 500 comes in the stream stop and return all elements which came before 500 in an array. All elements should be stored at contigous memory location.", "k": ["integer numbers", "stop and return", "unlimited stream", "stream stop", "return all elements"]}
{"i": "14120686", "t": "In C\rHow Can we move the output pointer some point back?\r(say I want to print ABCD, but ABD is already printed now I have to print C in between B & D without deleting anything.)", "k": ["point back", "move the output", "output pointer", "pointer some point", "print abcd"]}
{"i": "14185683", "t": "int fun(char *a){\rprintf(\"%d\\n\",sizeof(a));\rreturn 1;  }\rint main()\r{\rchar a[20];\rprintf(\"%d\\n\",sizeof(fun(a)));\r}\rExplain the output.", "k": ["explain the output", "int main", "int fun", "printf", "sizeof"]}
{"i": "14184685", "t": "file 1 : int a[80];\rfile 2 : extern int *a;\r           int main(){\r           a[12]=100;\r           printf(\"%d\\n\",a[12]); }\rBoth files are compiled together . It's showing runtime error  .\rWhy not linker error ?", "k": ["showing runtime error", "runtime error", "linker error", "showing runtime", "extern int"]}
{"i": "14118698", "t": "int main()\r{ \r      int val,x=3,y=2,z=1,q=4;\r      val=(x>y?(x<z?20:10&&y>x?50:100):(y<z?40:9||x>q?30:10));\r      printf(\"%d\\n\",val);\r}\rExplain the output .", "k": ["explain the output", "int main", "int val,x", "val", "int"]}
{"i": "14178685", "t": "sublist of a sorted (ascending order)link list is reversed...\rcorrect it\r1--->2--->3--->4--->8--->7--->6--->5--->9--->10--->NULL", "k": ["ascending order", "link list", "list is reversed", "null", "sublist"]}
{"i": "14197663", "t": "The following C program segfaults of IA-64, but works fine on IA-32.\r  int main()\r  {\r      int* p;\r      p = (int*)malloc(sizeof(int));\r      *p = 10;\r      return 0;\r  }\rWhy does it happen so?", "k": ["program segfaults", "works fine", "int", "int main", "program"]}
{"i": "14199662", "t": "#include<stdio.h>\r  int main()\r  {\r          int a=10;\r          switch(a)\r          {\r                  case '1':\r                      printf(\"ONE\\n\");\r                      break;\r                  case '2':\r                      printf(\"TWO\\n\");\r                      break;\r                  defa1ut: // There should be an error .\r                      printf(\"NONE\\n\");\r          }\r          return 0;\r  }\r Check the output .. and explain why is it not showing an error ?", "k": ["check the output", "showing an error", "int main", "printf", "case"]}
{"i": "14186676", "t": "The character 'a' to 'z' are encoded as 1 - 26. Given a string of digits, compute the number of valid decodings of the string. For example, both 'aa' and 'k' can be encoded as '11'. Hence num_valid_encodings('11') = 2.", "k": ["character", "encoded", "compute the number", "string", "valid"]}
{"i": "14178676", "t": "Given an array, print combinations of the array elements such that it is printed only once and the order is not important between the elements. Eg. array = [a,b,c,d]\ro/p should be \"\", a,b,c,d,ab,ac,ad,bc,bd,cd,abc,abd,acd,bcd, abcd.. so it should not repeat abc in the form cab or bca etc..\r Output number wil always be 2^n and do this in O(1) space.", "k": ["print combinations", "array elements", "elements", "array", "print"]}
{"i": "14118674", "t": "Explain the output \r#include<stdio.h>\rvoid f()\r{\rint a[12];\rint i=0;\rfor(i=0;i<12;i++)\r\ta[i]=1;\r}\rvoid g()\r{\rint b[12];\rint i=0;\rfor(i=0;i<12;i++)\r\tprintf(\"%d\\n\",b[i]);\r}\rint main()\r{\rf();\rg();\rreturn 0;\r}", "k": ["int main", "explain the output", "int", "void", "include"]}
{"i": "14140663", "t": "You are given intervals in form of Interval(i)={a(i), b(i)} where a,b are start and end points on a straight line. Given an array of intervals, Can you determine whether any such pair exist such that Interval(i) is contained in Interval(j). I told them the O(n log(n)) approach. If we have to find how many such pairs exist is it possible to do it in time less than O(n^2)??\rWhat if i also have to print all such pairs??", "k": ["straight line", "start and end", "end points", "interval", "intervals"]}
{"i": "14100760", "t": "There are 1000 tokens numbered as 1001-2000. Two functions allocate and release the tokens and their signatures are as follows, write their implementationint alloc_token() { \r\n//returns token number\r\n} \r\n\r\nvoid free_token(int token) {\r\n}", "k": ["numbered as 1001-2000", "returns token number", "tokens numbered", "token", "void free"]}
{"i": "14084765", "t": "What is address alignment?struct xx {\r\nchar a;\r\nint b;\r\n};\r\n\r\nprintf(\"%d\", sizeof(struct xx));what would be output of this printf statement? and what would it be if it is union?", "k": ["address alignment", "printf statement", "struct", "sizeof", "printf"]}
{"i": "14091752", "t": "Consider you have a grid of size m x n. There are stones placed randomly in some of the squares of this grid. Design a way to find out minimum rectangular area which covers all the stones in this grid.", "k": ["grid", "size", "stones", "grid of size", "design"]}
{"i": "14085762", "t": "A) Write a function that takes input as integer and converts it into a linked list where each node represents a digit of the input integer. \r e.g.  i/p : 123\rexpected result:  [1] => [2] => [3] => [null]\r(catch: don't forget to consider case of negatives like -433 etc.)\r B) Write a function that takes input as two linked lists shown as above (which are basically integers represented in linked list format) and calculate sum.", "k": ["write a function", "node represents", "represents a digit", "linked list", "write"]}
{"i": "14087784", "t": "Consider any social networking website like facebook etc. \rDesign an algorithm / function that calculates minimum degree of connection between given two users. Assume that you are have already written function that returns a list of friends of given user :getFriends(username/id)[EDIT]\rSorry guys for the wrong choice of words and caused confusion. It is \"minimum degree of separation\" and not connection. \r(I still think there isn't much different but quite sure it has already confused so many people...anyways... :) )\r follow this link for explanation : http://en.wikipedia.org/wiki/Six_degrees_of_separation", "k": ["social networking website", "social networking", "networking website", "website like facebook", "minimum degree"]}
{"i": "14093755", "t": "Write a function that prints pairs for target sum.\r e.g.\rarray : 1 2 3 4 5           target: 6\rpairs: (1,5) and (2,4)\r void printPairs (int *a[], int target)", "k": ["write a function", "function that prints", "target sum", "prints pairs", "write"]}
{"i": "14084762", "t": "Design a class for maze.", "k": ["design a class", "class for maze", "design", "maze", "class"]}
{"i": "14100755", "t": "You have yesterday's and today's log files that contains ids of users who logged in on amazon's website (there could be million entries). Design and implement way to find out user ids who logged in on both days.", "k": ["today log files", "amazon website", "million entries", "yesterday and today", "today log"]}
{"i": "14086766", "t": "Write a function that checks a Sudoku solution for its correctness and returns true if correct, false if not.", "k": ["checks a sudoku", "sudoku solution", "write a function", "true if correct", "function that checks"]}
{"i": "14092764", "t": "Techniques to shuffle an array?", "k": ["techniques to shuffle", "shuffle an array", "techniques", "array", "shuffle"]}
{"i": "14087769", "t": "Why doesn't *p in printf statement print 10.\r int main()\r{\r\tint *p,i=10;\r\tp=&i;\r\tprintf(\"Enter the pointer\\n\");\r\tscanf(\"%p\",p);\r\tprintf(\"%u\\t%d\\t%u\",p,*p,&i);\r\treturn 0;\r }", "k": ["printf statement print", "statement print", "printf statement", "enter the pointer", "printf"]}
{"i": "14092751", "t": "Given an array of positive integers of 2*n elements, you need to divide the array in two equal halves such that the sum of two halves are closest(or the difference of the sum is least). For e.g\rArray = {1,2,3,4,5,6,7,8,9,10}\rThe desired two halves will be :\r{1,4,6,7,10} and {5,2,3,8,9}\rDifference between two halves = |28 - 27 | = 1 which is least among all other combination's.\rYou can safely assume that sum of whole array < 10^6", "k": ["positive integers", "equal halves", "halves", "array", "difference"]}
{"i": "14087749", "t": "WAP to delete all the nodes from given BST.", "k": ["wap to delete", "wap", "bst", "delete", "nodes"]}
