{"i": "11446728", "t": "There are three arrays of numbers A,B and C. You have to find out all tuples <a,b,c> such that a-b = c where a is from A,b is from B and c is from C.", "k": ["arrays of numbers", "arrays", "numbers", "tuples", "find"]}
{"i": "11603664", "t": "convert a double-precision number to rational, i.e.:\r 0.125 -> 1/8\rdon't care about arithmetic overflow", "k": ["convert a double-precision", "number to rational", "arithmetic overflow", "double-precision number", "care about arithmetic"]}
{"i": "11525706", "t": "Given an array and a number K. You have to \r\nfind out longest subset from the array whose \r\nall pair sum will be greater than k.\r\nex: {8,3,4,1,6,2,5,7,9} and K=12\r\nans: {8,6,7,9} or {5,7,8,9}", "k": ["ans", "array", "number", "find out longest", "longest subset"]}
{"i": "11590687", "t": "Under which conditions the default assignment operator\ris not generated by the compiler for your class ? \r(assuming that you do not declare the assignment operator yourself)", "k": ["default assignment operator", "assignment operator", "conditions the default", "default assignment", "declare the assignment"]}
{"i": "11585834", "t": "You have coins with different denominations and you have limited number of each denominations (some maybe zero), how will you determine if you can supply the given change. DP , are you sure? think again.", "k": ["limited number", "denominations", "change", "coins", "limited"]}
{"i": "11515910", "t": "You are given 'n' appointments. Each appointment contains startime and \rendtime. You have to retun all conflicting appointments efficiently \r starttime and endtime can range from a few min to few years.", "k": ["endtime", "appointments", "startime and endtime", "conflicting appointments", "appointments efficiently"]}
{"i": "11581661", "t": "Explain virtual function, up-casting and  applications?", "k": ["explain virtual function", "up-casting and applications", "explain virtual", "virtual function", "explain"]}
{"i": "11580661", "t": "How will you restrict the memory allocated to a program by an operating system ?", "k": ["operating system", "restrict the memory", "memory allocated", "system", "restrict"]}
{"i": "11570851", "t": "Write a function that takes in two arguments, a string and a list of delimiters and gives the output as a list of string seperated by the delimiters where each word takes one space in the list. For example: if string is  \"How are you, Mr. X?\" and list of delimiters is {space, comma, dot} the output would be: \rHow|are|you|Mr|X?", "k": ["write a function", "list", "string seperated", "list of delimiters", "delimiters"]}
{"i": "11570826", "t": "We have a job sequence like this.\r            A\r           /  \\\r          B --C\r This case A's dependent jobs are B & C\rB's dependent job is C\rC's Dependent job is null\r If we need to complete any of the steps we should need to complete the dependent object.\r This case job sequence will be C->B->A\r Can anyone comeup with simple o(n) solution for this?", "k": ["dependent job", "job sequence", "job", "dependent", "case job sequence"]}
{"i": "11558734", "t": "You have given a file containing sentences. Now you are given a sequence of characters. You have to find the starting location of each word containing one of the permutation of the word. \r e.g File - 'She submitted her assignment.' Input Sequence - imt. Since the file contains the word 'submitted' containing the sequence 'mit' which is a permutation of 'imt' So it will return 1. Similiarly it will return for all other words.", "k": ["file", "sequence", "sentences", "imt", "word"]}
{"i": "11553713", "t": "How to rotate the array with o(n) or o(nlogn)/\r eg) A[]={A,B,C,D,E} rotate Index - 2\r It should be {C,D,E,A,B}", "k": ["rotate index", "nlogn", "index", "rotate the array", "rotate"]}
{"i": "11531083", "t": "output all dates \"Fridays, 13th\" in the format dd.mm.yyyy starting from 1st Jan 1900 (Monday)", "k": ["output all dates", "fridays", "jan", "monday", "output"]}
{"i": "11532099", "t": "Given a Big XML File. You have to design and implement the Data Structure which stored their keys and its value accordingly in C/C++ language.\r Write a Program to Store all the given XML content to your designed Data Structure and Retrive it . Basically SAX/DOM parser :)\r Contraints :-\r 1> Data Structure should not be a flat file type.\r2> Every Program code must be modular and each module should not exceed 15 lines of code.\r3> No Usage of STL library functions.\r4> Each Module should not have return type other than success and failure of operation.\r5> Use Memory management at the most.\r6> Design and problem approach crutial.\r7> Minimal Space and Time Complexity for each code.\r8> No Static variable usage and all memory allocation should be dynamic.\r9> There are occasion like a parent has more than one child you have to take care of such cases.\r10> Handle all possible error condition.", "k": ["big xml file", "data structure", "big xml", "designed data structure", "xml file"]}
{"i": "11451243", "t": "How you will test a random number generator?", "k": ["random number generator", "number generator", "test a random", "random number", "generator"]}
{"i": "11530836", "t": "Assume we have a sorted list of document_id-s for every keyword. Given a search string, how to find the documents that have all keywords in the search string? Basically how to find the intersection in a set of sorted arrays? What is the complexity? How to improve if there are only two arrays and one is much smaller compared to the other? How to distribute this on a set of different machines?", "k": ["search string", "sorted list", "string", "assume", "list of document"]}
{"i": "11532811", "t": "Given an array A[], find (i, j) such that A[i] < A[j] and (j - i) is maximum.", "k": ["find", "maximum", "array"]}
{"i": "11534830", "t": "Given a large file of integers, how to compress the file so that we can also do search efficiently?", "k": ["search efficiently", "large file", "file of integers", "integers", "efficiently"]}
{"i": "11534829", "t": "Given a positive integer N, arrange the integers 1 to N such the position of the average of two numbers (if present) falls outside the two numbers. For example, for a[i] and a[j], if b = (a[i] + a[j])/2, then if a[k] = b, k < i or k > j. \rHint :- If the average of two numbers is not an integer then we can assume that they do not have an average.", "k": ["positive integer", "average", "numbers", "arrange", "present"]}
{"i": "11485781", "t": "Implement a RandomAccessContainer and its iterator in C++, like std::vector", "k": ["vector", "implement a randomaccesscontainer", "implement", "std", "randomaccesscontainer"]}
{"i": "11485753", "t": "4 subjective questions.\rImplement blocking queue\rExplain Producer Consumer \rhow to design tweeter like application.", "k": ["subjective questions", "explain producer consumer", "explain producer", "producer consumer", "queue explain producer"]}
{"i": "11531762", "t": "20 objective based on pattern of SCJP exam. easy", "k": ["scjp exam. easy", "pattern of scjp", "scjp exam.", "objective based", "exam. easy"]}
{"i": "11533722", "t": "A forgetful professor wants to know the names of all the students in a class of strength 'n'. For this, he makes 'm' students stand up at a time. He remembers the names of all the students who are standing and the ones who are sitting but doesn't remember the name of each student individually. He does this operation 'k' number of times and tries to infer all the names. What can be the value for 'k' when n=13 and m=5", "k": ["class of strength", "forgetful professor", "students", "strength", "students stand"]}
{"i": "11450916", "t": "come up with a solution, where u r given a single pointer in a single link list and u shoudl be able to return (+/-)nth node from it.\r My solution:list * returnN (list *node, int n)\r\n{\r\n  if (n>0) {\r\n  traverse and reverse list from node to nth node \r\n} else {\r\ntraverse and negatereverse from node till nth node\r\n}he asked for algo only, so this worked fine.\r eg list=1->2->3->4->5\rreturnN(1, 3)\routput 4\rlist=1<-2<-3<-4->5\r returnN(4, -2)\routput 2\rlist: 1<-2->3->4->5\r Any other suggestions??", "k": ["single link list", "nth node", "single pointer", "single link", "node"]}
{"i": "11533662", "t": "Write an algorithm to find an element in an 2D array such that the element should be maximum in the row and minimum in the column?", "k": ["write an algorithm", "algorithm to find", "row and minimum", "find an element", "element"]}
{"i": "11516953", "t": "One another question given two arrays A[i[ and B[i] print the product such that B[i] = A[0] * A[1]...A[i-1]  i.e other than its position all products\rAlgorithms can be use a kind of additional storage to figure out pre prods - from i to i-1 and from i+1 to i and then combine\rDivision wasnt allowed !!!", "k": ["division wasnt allowed", "combine division wasnt", "combine division", "division wasnt", "products algorithms"]}
{"i": "11522923", "t": "Question on printing the string equivalent of an integer number", "k": ["question on printing", "integer number", "printing the string", "string equivalent", "question"]}
{"i": "11516952", "t": "To build a tree expression  -   (1 +3)  * 4   - all numbers and operators are nodes in a tree. Was a reversal tree I guess....wrote my custom logic", "k": ["numbers and operators", "operators are nodes", "tree expression", "tree", "build a tree"]}
{"i": "11520774", "t": "How to print given Number in word(Example: 9995 should be printed like \"Nine Thousand Nine Hundred ninety five\")", "k": ["thousand nine hundred", "number in word", "print given number", "hundred ninety", "number"]}
{"i": "11519758", "t": "How to prints all possible permutations of \"TURING\"?", "k": ["turing", "prints", "permutations"]}
