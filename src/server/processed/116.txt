{"i": "5744801090633728", "t": "Given a set of numbers, find out all subsets of the set such that \rthe sum of all the numbers in the subset is equal to a target number.s = [ 1, 2, 3, 4, 5 ] \r\ntarget = 5 \r\nop = [ [ 1,4 ] , [2,3] , [5] ]Application: Given a fixed budget, and work items  we are doing back filling to check what all we can attain with the budget. \r Continuation.   Imagine the set is actually a set of work items, with cost and utility  involved :def work_item : {  name  : 'foo bar' , cost :  10 ,  utility : 14 }Now, solve this to maximise utility.\r Continuation. Imagine that the work items are related, so that, if work item w1 is already in the \rsubset of the work items selected, w2 's utility increases further!.\r( Can you imagine how it can happen? Effectiveness of Mesi increases when he plays for Barca)\rSo, you are given a list like this :w1 -> normal utility 14, with w2 20, ....Now maximize payoff.\rNOTE: Payoff is a matrix. This comes from game theory. \rHence, a payoff matrix looks like :w1  w2  w3  w4 .... \r\nw1 w1  \r\nw2        w2\r\nw3               w3      \r\nw4                      w4A cell ( i,j) is filled up with if a list contains both wi and wj, then how much the payoff would be. It is a symmetric matrix.", "k": ["fixed budget", "work items", "target number.s", "work", "application"]}
{"i": "5762146852929536", "t": "We tend to use computer to solve practical problems that actually earns or save dollars. Here is something that happens across the stock exchanges : people buy and sell stocks.\rWe generally use automated intelligent systems to buy and sell stocks. That part is too much mathematics, and beyond scope of this interview. There is another part. Suppose the system issues a buy order : buy 1000 Microsoft stock. Now, there are more than 1 ( in fact 10 ) active exchanges from where we can buy MSFT.  There is a slight price delta, which keeps changing over time. There is another problem. In each stock exchange, prices are stacked, that is :\r1. For first 100 stocks prices are 55$.\r2. Next 200 stocks, prices are 55.2$.\r... etc, and you got the idea. Even this stacks are changing over time. \rThus, here is the problem to solve. Design and implement a system such that one can buy  n stocks with minimal price.\rAlso, in the same spirit, the same system should be able to sell n stocks with maximum payoff possible.\r This is a non trivial problem, for Quant systems.\rThere are always k no of exchanges to hit.", "k": ["save dollars", "earns or save", "buy", "stocks", "sell"]}
{"i": "5678349356630016", "t": "As you know, Computers were invented to solve practical business problems, we tend to ask practical applied questions. One of the key areas where we want to apply computers is simulation. As most of the people working in software are Engineers, here is the problem. It is called 3 body problem.\r3 Bodies with masses [ m1, m2, m3 ] are initially positioned in the 3 points in the space, thus, having positions [ P1, P2, P3 ].\rObserve that each Pi is nothing but [ xi, yi, zi ].\r Once the initial condition is set, definitely gravity would work and they would start falling against each other. Write code to simulate this problem. Imagine G, the constant of gravity as 1.\r How do you go about simulating it?\rHint : feynmanlectures.caltech.edu/I_09.html see 9.5 \r Face to face. Pen and Paper. Panel Interview, 2 person Panel. 60 Minutes. For Engineers only, was specifically told about it.", "k": ["practical applied questions", "solve practical business", "practical business problems", "solve practical", "practical business"]}
{"i": "5669859816898560", "t": "Given a convex polygon ( is planer as opposed to a polytope) and a point one had to tell if the point lies inside the polygon or outside the polygon.\rTo understand convexity : mathopenref.com/polygonconvex.html\r Thus the question comprise of 3 sub problems :\r1. How to store a polygon.\r2. How to define inside and outside of a polygon.\r3. How to solve the actual one, given 1,2 ?", "k": ["point lies inside", "point lies", "planer as opposed", "polygon", "point"]}
{"i": "5129879348576256", "t": "As you guys know, C did not have,and does not have anything called class. C++ has them. Now, C++ was written using C. In fact, C++ initially was called C with classes.\rThus, here is the problem for you.\rGiven you have C, and you need to implement class like behaviour, how you would do it? Specifically, implement the following in C :\r 1. A Simple Hello class with hello() function printing \"Hello, World\" .\r2. A new operator which enables creating this constructor less class. \r3. A delete operator that deletes the pointer.\r How would you do it?", "k": ["class", "guys", "have,and", "called", "implement"]}
{"i": "5744878668480512", "t": "Linux has this nice command called *tree*.\rIf you did not use it, please take a look around.\rYou do not have to write one. BUT, you have to do something similar. Given a file name ( not a path ), and an initial directory, you have to list all the file paths, which matches the file name, case should not be considered.\rAlso allow regex match.\r Again, the problem is non trivial.\rIt was expected to ask the right questions.", "k": ["nice command called", "command called", "nice command", "tree", "linux"]}
{"i": "5756009613099008", "t": "There is this nice tiny *nix utility called *wc*.\rThe idea here is :wc  file_nameprints :\rcharacter count of the file.\rWord count of the file.\rLine count of the file.\r You have to implement your own *wc* program.\rNOTE: The problem is non trivial for 3 reasons.\rIt was expected to ask about the non triviality.", "k": ["nix utility called", "nice tiny", "nix utility", "utility called", "file"]}
{"i": "5191781101600768", "t": "None actually understands how garbage collection works, albeit people ask this in the interviews. Nonetheless, we are going to ask you something very similar. Here is the problem.\r Take an array of bytes, perhaps 1MB in size.\rImplement these two operations:ptr_structure = alloc ( amount_of_storage ) \r\n     freeed = free ( ptr_structure )Now, here is your problem. alloc must allocate contiguous storage. If it is not possible, you need to compact ( defragment ) memory. So, you need to implicitly write a :defragment() // defragments memoryWorse is coming. Even imagining you have written a stop the world defragmenter, after you reallocate, how the ptr_structures would actually work? \r Solve this whole problem.\rTime allocated was 1 hour. Face to face, panel with 2 interviewers.", "k": ["garbage collection works", "albeit people", "understands how garbage", "garbage collection", "collection works"]}
{"i": "5768558165360640", "t": "Imagine there are brick boulders, all of integer size.\rTheir sizes are stored in an array. \rThe figure looks something like this :\rpeltiertech.com/Excel/pix2/Histogram2.gif\r Now, suppose someone is pouring water into it till water starts spilling. \r You have to answer how much water the boulders are holding up.def  water_holding( arr ) { /* answer this  */ }", "k": ["integer size", "brick boulders", "imagine", "water", "excel"]}
{"i": "5645123489628160", "t": "XPATH implementation problem.\rHere is the problem.\rImplement XPATH expressions, given there is a DOM tree :\r 1. $x('//*[text() = \"abc\"])\rHow do you think it is implemented? Write  code, imagine you have a general purpose tree.\r 2. $x('//span[text() = \"abc\"])\rHow do you think it is implemented? Write  code, imagine you have a general purpose tree.\r Now, explain which one would be faster, and why? \rExplain from the design and the code you have written.", "k": ["xpath implementation problem", "xpath implementation", "implementation problem", "xpath", "implement xpath expressions"]}
{"i": "5071782802358272", "t": "As you know, every OS comes up with this tiny application called the calculator. It is good. Now, here is our problem. If we try to implement the functiondef calculate( operand, operator, operand ) { /* Do Interviewers bidding here */ }I have to write if upon if upon if upon if to do for all operators. Moreover, some operators are not even binary! Take example the abs() or say the negate()!\r Bigger problem persists. With the if mode, we can not even add operators as we wish to without changing code! \rBut that is a sin. So, what do we do? That is question 1.\r In question 2, as a software tester, how do you propose to test and automate the above? Writing more if than the developer is not allowed.", "k": ["tiny application called", "called the calculator", "tiny application", "application called", "calculator"]}
{"i": "5661212973989888", "t": "We all know databases are very very slow. In fact they are so slow that very serious people who wants to do volumes of read operation and search operations write their own implementation. In this question, you would be asked to do the same, for a very limited operation - select.\r Every item stored has this field called timestamp.\rNow, here is the problem you need to solve :select items where time < some_time \r\n     select items where time < some_time and time < another_time \r\n     select items where time > some_timeImagine you have millions of data rows. How to store it in HDD, and how to load, entirely your problem. None is going to insert anything on existing data - only read. \r Write an algorithm that solves this problem, and a data structure that works as storage for the data.", "k": ["time", "select items", "select", "time select items", "time select"]}
{"i": "5746493844619264", "t": "Imagine you are given the instructions :GOTO  <LABEL> WHEN <CONDITION>\r\nNOP ; no operationImplement the following using it:\r1. If condition.\r2. If else condition.\r3. If else if else condition.\r4. While loop \r5. for loop.", "k": ["goto", "label", "nop", "condition", "imagine"]}
{"i": "5699947539202048", "t": "Given brackets, e.g. '(' and ')' as the only symbols, write a function that would generate : true, if the brackets are matching, false if the brackets are not matching.\rAlmost everyone can do the above.\rNow, prove that it works.\rAlso tell which class of grammar the string belongs to.\rShowcase why your algorithm is a language recogniser for the same.", "k": ["write a function", "brackets", "brackets are matching", "matching", "true"]}
{"i": "5641662685511680", "t": "You are given 20 questions to solve in 20 minutes.\rIf you successfully solve the question, you would receive 2 marks.\rIf you failed to solve the question, and you do not try it  ( let it untouched ) , you would receive  0 marks. If you solve it wrong ( i.e. not the correct answer ) - you would receive -1 ( negative) .\rWith the story, here are the problems:\r 1. Write an algorithm, which, given an input array ( set )  of questions, and varying probability ( 0 <= p <= 1 )  of can do and can not do per question, generates a strategy for solving the paper to generate maximum expected pay off.\r 2. Given the question paper is multiple choice, between 4 choices ( a,b,c,d )  do a bias analysis ( e.g. if more a's are coming than 'c's ), and decide if you would like to probabilistically take risk and mark some to increase pay off.\r Obviously, you can get a maximum 40, and a minimum -20.\r 3. Now, put yourself in the position of the examiner, and try to ensure it is almost impossible to increase payoff by random selection over the questions. Try to negate the bias. That is question 3.\r In all 3 cases write an algorithm. Face to face interview, time allocated was 60 minutes. Panel Interview.", "k": ["solve", "question", "receive", "questions", "successfully solve"]}
{"i": "6217926366461952", "t": "Given that an external service gives a list of credit cards that have become fraud, design a fraud management system for a shopping website for bookings with fraud credit cards", "k": ["fraud management system", "fraud credit cards", "credit cards", "external service", "management system"]}
{"i": "5141703393542144", "t": "Given a list of shops each of which have a list of toys with their prices and max number of children who can play with it at a time. Output the a list of best possible toy option from each shop given the number of children who are shopping.\r ToyShopping\r{\r getListOfBestToysFromEachShop(List<Shop> shops);\r }\r Shop\r{\r    int id,\r    List<Toy> listOfToys;\r}\r Toy\r{\r    int toyId;\r    int shopId;\r    int price;\r    int maxChildren; //max number of children who can play with this toy\r}", "k": ["number of children", "list", "max number", "children", "toy"]}
{"i": "5738341996691456", "t": "Given an un-directed weighted graph G(V,E), find the minimum weight between two given nodes X & Y\r(i.e. sum of weights of edges between X & Y).\rYou can add an extra egde with weight W between any two nodes in the graph exactly one time (if required).", "k": ["un-directed weighted graph", "find the minimum", "un-directed weighted", "weighted graph", "minimum weight"]}
{"i": "5640880330375168", "t": "This questing was something related to parse trees. I really don't remember the semantics but needed to extract the complete sentences from the provided parse tress.\r Input: A full sentence: (S (NP (NNP James)) (VP (VBZ is) (NP (NP (DT a) (NN boy)) (VP (VBG eating) (NP (NNS sausages))))))\rOutput: James is a boy eating sausages\r Input: (NNS Sausages)\rOutput: Sausages\r Input: (NP(DT a) (NN boy))\rOutput: a boy", "k": ["nns sausages", "sausages input", "output", "parse trees", "eating sausages input"]}
{"i": "5195490611167232", "t": "For a given string sentence, reverse it.\rInput : Hello World\rOutput : Dlorw Olleh\r Input: How Are You Doing Today\rOutput: Yadot Ginod Uoy Era Woh", "k": ["yadot ginod uoy", "uoy era woh", "dlorw olleh input", "ginod uoy era", "string sentence"]}
{"i": "5164991108874240", "t": "You will be given a sequence of passages, and must filter out any passage whose text (sequence of whitespace-delimited words) is wholly contained as a sub-passage of one or more of the other passages.\r When comparing for containment, certain rules must be followed:\r The case of alphabetic characters should be ignored\r Leading and trailing whitespace should be ignored\r Any other block of contiguous whitespace should be treated as a single space\r non-alphanumeric character should be ignored, white space should be retained\r Duplicates must also be filtered - if two passages are considered equal with respect to the comparison rules listed above, only the shortest should be retained. If they are also the same length, the earlier one in the input sequence should be kept. The retained passages should be output in their original form (identical to the input passage), and in the same order.\r Input: For each test case a single line comprising the passages (strings) to be processed, delimited by | characters. The | characters are not considered part of any passage.\r Output: A single line of filtered passages in the same |-delimited format.\r Input1: IBM cognitive computing|IBM \"cognitive\" computing is a revolution| ibm cognitive computing|'IBM Cognitive Computing' is a revolution? \r Output1: IBM \"cognitive\" computing is a revolution\r Input2: IBM cognitive computing|IBM \"cognitive\" computing is a revolution|the cognitive computing is a revolution\r Output2: IBM \"cognitive\" computing is a revolution|the cognitive computing is a revolution", "k": ["ibm cognitive computing", "ibm cognitive", "cognitive computing", "ibm", "computing"]}
{"i": "5744267709382656", "t": "Function to print shortestpathsum between start and end node of given weighted undirected graph \rComlite the function: \rShortestPathSum(graph g,start,end)\r Node(1)----wieght--->node(2)\rNode(2)--weight-->node(3)\rNode(2)----W----node(4)\rNode(3)-----w----->node(5)\rNode(4)---w--->node(5)\rsuppose node(1) is stat node and node(5) is end node\rPlease write the complite function", "k": ["undirected graph comlite", "weighted undirected graph", "end node", "graph comlite", "node"]}
{"i": "5718937200230400", "t": "Need to traverse below n-ary in postorder and throw error message if the node are cyclic\r\n\r\nNode001\r\n/ | \\\r\n/ | \\\r\n/ \\ \\\r\nNode002 Node003 Node004\r\n/ / | \\\r\n/ / | \\\r\nNode005 Node006 Node007 Node008\r\n/\r\n/\r\nNode009\r\n\\\r\n\\\r\nNode003\r\nIn above case it should through error because Node009 has child Node003 which is derived from it.", "k": ["throw error message", "node are cyclic", "traverse below n-ary", "n-ary in postorder", "postorder and throw"]}
{"i": "5706319660056576", "t": "Need to traverse below n-ary in postorder and throw error message if the node are cyclic \r \t\t\t\tNode001\r\t  \t\t /\t  |\t  \t\\\t \t  \r\t  \t\t/\t  |  \t         \\\r\t  \t     /\t   \t  \\               \\\r\t   Node002   Node003    Node004\r\t  /                   /\t\t |   \t\t \\\r\t /\t   \t     /           |     \t          \\\rNode005         Node006  Node007    Node008\r\t  \t\t\t\t /\r\t  \t\t\t\t/\r\t  \t\t\t  Node009\r\t                 \t\t\\\r\t                  \t\t\\\r\t                 \t Node003\rIn above case it should through error because Node009 has child Node003 which is derived from it.", "k": ["throw error message", "node are cyclic", "traverse below n-ary", "n-ary in postorder", "postorder and throw"]}
{"i": "5114481085513728", "t": "Find the n'th Ugly no. An ugly no. is defined as a no. which are of the form :n = ( 2 ** p ) * ( 3 ** q )  * ( 5 ** r )with p,q,r >= 0 and are integers not all equal to zero. \rYou must not memorise  the whole sequence, as n can be really large.\rHint : use number theory to figure out the pattern of the increasing sequence.", "k": ["find the n'th", "n'th ugly", "ugly", "find", "n'th"]}
{"i": "5112255352930304", "t": "Given an array, move the smaller no to the left and the larger nos to the right. The relative positioning between the small no's and the relative positions between the large nos should not change.\rThe original ( ill formulated ) question can be found here :\rquestion?id=5756583549075456.\rExample :a = [ 6 4 5 0 2 1 11 -1 ]  \r\n   after_a = [  0 , 2, 1, -1,  6, 4, 5, 11 ]Note, for lack of good explanation, please do not laugh at the poster in the solutions. After all, they are trying to help or get help.", "k": ["move the smaller", "larger nos", "large nos", "relative positioning", "relative positions"]}
{"i": "5682751563890688", "t": "table RSVP\r Name, Decision, Date\rJon,  Y,  1 jan 2016\rJon,  N,  2 Jan 2016\rLinda, Y, 1 Jan 2016\rMark, Y,  5 Jan 2016\rRob, N,  5 Jan 2016\r -- SQL query to find out how many of your friends are coming to party?, make sure that, they haven't said N after saying Y like Jon, check date.\rSo the answer should be 2", "k": ["jan", "date jon", "table rsvp", "sql query", "check date"]}
{"i": "5072846746288128", "t": "There is a DNA Strand having values as A , T , C , G.\rAll combinations are present in the the file.\r Write a method which takes starting mutation string , ending mutation string and string bank and calculates the minimum mutation distance required. But the condition is that either of the start or end must be present in the bank.\r Input:\rAATTGGCC is starting and TTTTGGCA is ending then mutation distance will be 3.\rAATTGGCC - TATTGGCC - TTTTGGCC - TTTTGGCA   as it takes three mustaion for start to reach the end string and for this , all intermediate string and final string must be present in the bank.\r   static int findMutationDistance(String start, String end, String[] bank) {\r      }", "k": ["dna strand", "string", "dna", "strand", "mutation"]}
{"i": "5676572716564480", "t": "You have a string of phrases present. For your simplicity consider them to be integer length.\r String s= \" I am Tom\"\rwill be stored in an interger array as [1,2,3] where each represents length of each word in the string.\r Write a method to compute the longest subsequence such that it is less than given k value.\r Input:\r3 //length of array\r1 //a[0]\r2 //a[1]\r3 //a[2]\r4 // value of k\r Output:\r2\r Input:\r4 //length of array\r3\r1\r2\r1\r4 //value of k\r Output:\r3\r  static int maximumLength(int[] a, int k) {\r      }", "k": ["phrases present", "length", "output", "input", "string"]}
{"i": "5165588511981568", "t": "You are a string conscious guy. You categorise strings into 3 types: good, bad, mixed. If a string has 3 consecutive vowels or 5 consecutive consonants or both, it is bad. Else it is good. If a string has \u2018?\u2019, that can be replaced with any character. Thus, string \u2018?aa\u2019 can be bad if \u2018?\u2019 is vowel or good if consonant. Thus, it is mixed. Implement function which takes string s as input and returns good, bad or mixed", "k": ["string conscious guy", "conscious guy", "string", "bad", "good"]}
