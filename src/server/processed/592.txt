{"i": "58178", "t": "write a macro to give offset of particular field in structure.Like struct abc { int a,int b,char c}. Write a macro like offset(abc , c) to find offset of c from top.", "k": ["int a,int b,char", "structure.like struct abc", "write a macro", "int a,int", "field in structure.like"]}
{"i": "58177", "t": "reverse binary representation of number.", "k": ["reverse binary representation", "reverse binary", "representation of number", "binary representation", "reverse"]}
{"i": "58176", "t": "I have a number in float like 2.5. Store this number in int in such a way that store 2 in bits \r31-16 and 5 in 15-0.write a function to do that to convert it and vice versa.", "k": ["number in float", "number in int", "number", "vice versa", "float"]}
{"i": "58175", "t": "print any tree without using recursion (difficult)", "k": ["difficult", "print any tree", "print", "recursion", "tree"]}
{"i": "57964", "t": "What is \"group by\"?", "k": ["group"]}
{"i": "57963", "t": "Difference between inner join & outer join", "k": ["outer join", "join", "difference", "outer"]}
{"i": "57962", "t": "Difference between final & finally", "k": ["difference between final", "finally", "difference", "final"]}
{"i": "57961", "t": "What is the significance of virtual destructor?", "k": ["virtual destructor", "significance of virtual", "destructor", "significance", "virtual"]}
{"i": "57960", "t": "Discussion on virtual inheritance", "k": ["discussion on virtual", "virtual inheritance", "discussion", "inheritance", "virtual"]}
{"i": "57959", "t": "Different ways to pass parameters to a function (by value, by reference, by pointer). for the following cases.\r6.1 Basic data type (int, char etc)\r6.2 Array of integers\r6.3 an object of Structure\r6.4 an object of a class\r Discussed about possiblities of passing constant argument values (by reference, by pointer etc) & their syntax", "k": ["pass parameters", "basic data type", "object of structure", "reference", "array of integers"]}
{"i": "57958", "t": "What is the effect by keeping a constructor private? (in terms of inheritance)", "k": ["constructor private", "effect by keeping", "keeping a constructor", "private", "effect"]}
{"i": "58174", "t": "Diference between deep copy & shallow copy", "k": ["shallow copy", "diference between deep", "deep copy", "copy", "diference"]}
{"i": "58173", "t": "What are local static variables? Its usage & comparison with global static variables & class level static data members", "k": ["local static variables", "static variables", "variables", "local static", "static data members"]}
{"i": "58172", "t": "Difference between Malloc vs Realloc", "k": ["malloc vs realloc", "difference between malloc", "realloc", "malloc", "difference"]}
{"i": "58171", "t": "Given a regular expression and a text, find the min no of replacements to be done.", "k": ["find the min", "regular expression", "text", "find", "regular"]}
{"i": "58170", "t": "Check if there is a common node in 2 linked lists.", "k": ["linked lists", "common node", "check", "linked", "lists"]}
{"i": "58169", "t": "How to find min element in a stack in O(1), where the only operations are Push and Pop.", "k": ["find min element", "push and pop", "operations are push", "find min", "min element"]}
{"i": "58168", "t": "Write code in any language to check if a string is a palindrome", "k": ["write code", "language to check", "write", "palindrome", "code"]}
{"i": "57957", "t": "What happens if you write an integer to disk on one OS and read it on another OS? I said endianess and explained why it matters.", "k": ["write an integer", "integer to disk", "write", "integer", "disk"]}
{"i": "57956", "t": "When asked to code fibonacci, I asked iteratively or recursively? He asked what's the trade-off between the two? Then I coded both. He said, there's a bug in your iterative solution. I looked and it and said, int's can be negative. He said, bingo. Then I said, \"but I made a precondition that the input is positive.\" He was like, oh okay and how would you check the condition? I said partitioned equivalence testing for <0,==0,>0.", "k": ["code fibonacci", "iteratively or recursively", "asked iteratively", "asked", "fibonacci"]}
{"i": "57955", "t": "What VTBL is and why it's useful?", "k": ["vtbl"]}
{"i": "57945", "t": "Print a binary tree in zig zag way... that is:\r......a.........\r....b....c.......\r..d...e...f...g..\r.h.i.j.k.l.m.n.o.\r should be printed as a-c-b-d-e-f-g-o-n-m-l-k-j-i-h\r what data structure will u use for that?", "k": ["print a binary", "binary tree", "tree in zig", "zig zag", "print"]}
{"i": "57944", "t": "Convert a binary tree to a binary search tree... inplace...", "k": ["binary search tree", "convert a binary", "binary search", "search tree", "binary tree"]}
{"i": "57938", "t": "Amazon uses a fixed price delivery from city A to city B.  How would you save this price info?", "k": ["fixed price delivery", "fixed price", "price delivery", "amazon", "city"]}
{"i": "57937", "t": "Given an array of integers, partition the array into odd one side and even numbers other side.", "k": ["partition the array", "array of integers", "integers", "partition", "odd one side"]}
{"i": "57936", "t": "Given an ancestor matrix for an n-ary tree where a[i][j]=1 if \"i\" is parent to \"j\", create the n-ary tree.", "k": ["n-ary tree", "ancestor matrix", "create the n-ary", "n-ary", "tree"]}
{"i": "57935", "t": "Create a balanced binary tree from a given link list", "k": ["balanced binary tree", "create a balanced", "link list", "balanced binary", "binary tree"]}
{"i": "57934", "t": "Given a series of alphabetic letters, find the letter occurring second most.", "k": ["series of alphabetic", "alphabetic letters", "letter occurring", "find the letter", "find"]}
{"i": "57933", "t": "Design a function to find whether a given tree is a mirror of another other tree.", "k": ["design a function", "function to find", "tree", "design", "function"]}
{"i": "57929", "t": "This question was asked at a career fair. There is a string where each and every word is separated by one or more spaces. The string has to be modified in such a way that half of the spaces are put in the first half and the other half of the spaces in the next half with the characters in between. For example, if my initial string is \"This  is  test\"(there are totally four spaces), then the output should be\r\"  thisisatest  \".", "k": ["career fair", "question was asked", "spaces", "half", "string"]}
