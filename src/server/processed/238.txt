{"i": "6107808416137216", "t": "void state1(string st)\r{\rfor (int i = 0; i < st.Length; i++)\r            {\r                if (st[i] == 's')\r                {\r                    i++;\r                    state2(st);\r                }\r             }\rpublic void state2(string st[i])\r        {\r            if (st[i] == 'e')\r?????????\r}\rin main\r{\rstate1(str); // we are taking dynamically a string and passing. how will we pass incremented index to 2nd function????????/\r}", "k": ["public void", "void", "string", "st.length", "int"]}
{"i": "5648092296642560", "t": "Serling Enterprises buys long steel roads and cuts them into shorter rods, which it then sells. Each cut is free. The management of Serling Enterprises charges for a road of length i inches. Road lengths are always an integral number of inches.\rThe rod-cutting problem is the following: Given a rod of length n and a table of prices V for {1,2...n}  determine the maximum revenue Rn obtain by cutting up the road and selling the pieces.  \r Table:length i  1,  2, 3 ,4  ,5 , 6 , 7 , 8 ,  9, 10\r\nprice Pi  1, 5, 8, 9, 10,17,17,20,24,30", "k": ["enterprises buys long", "buys long steel", "serling enterprises buys", "serling enterprises", "long steel roads"]}
{"i": "5627358342021120", "t": "Write a routine to reverse every k nodes in a given linked list without using additonal memory.\r input : 1,2,3,4,5,6   k:3\routput : 3,2,1,6,5,4", "k": ["write a routine", "additonal memory", "routine to reverse", "linked list", "write"]}
{"i": "6233120529448960", "t": "Write a routine to reverse every k nodes in a given linked list\rinput : 1,2,3,4,5,6   k:3\routput : 3,2,1,6,5,4", "k": ["linked list input", "write a routine", "list input", "routine to reverse", "linked list"]}
{"i": "5751792134520832", "t": "Find all nodes that are at a distance k from leaf nodes", "k": ["leaf nodes", "find all nodes", "find", "nodes", "distance"]}
{"i": "6723475871891456", "t": "if you are given 2 arrays\rone has n elements and another has n+2 elements \rand the elements in the array are same except the 2 elements\rfind those two extra elements..\rgive the optimal solution.", "k": ["extra elements.", "elements find", "elements", "elements.", "find"]}
{"i": "6413660553478144", "t": "Print all palindromes of size greater than equal to 3 of a given string. (DP)", "k": ["print all palindromes", "palindromes of size", "size greater", "greater than equal", "print"]}
{"i": "5727310284062720", "t": "given an 2D matrix M, is filled either using X or O, you need to find the region which is filled by O and surrounded by X\rand fill it with X.\r example 1:\r X X X X X\rX X O O X\rX X O O X\rO X X X X\r Answer :\r X X X X X\rX X X X X\rX X X X X\rO X X X X\r example 2:\r X X X X X\rX X O O X\rX X O O O\rO X X X X\r answer 2:\rX X X X X\rX X O O X\rX X O O O\rO X X X X", "k": ["find the region", "answer", "filled", "matrix", "find"]}
{"i": "5709517308297216", "t": "Explain the output of the following code:int main( )\r\n      {\r\n\tint x = 10, y = 20;/.\r\n\tx =!x;\r\n\ty =!x&&!y;\r\n\tprintf(\u201cx =%d y =%d\u201d, x, y);\r\n        return 0;\r\n       }", "k": ["int main", "explain the output", "int", "explain", "code"]}
{"i": "6407924087783424", "t": "Given an array of n elements (a1,a2,..ai,...,an). You are allow to chose any index i and j, such that (i!=j) and allow to perform increment operation on ai = ai+1 and decrements operation on aj = aj - 1 infinite number of times.  How many maximum number of elements you can find that have same number.\r example 1:\r1 4 1\rans: 3\r example 2:\r2 1 \rans : 1", "k": ["perform increment operation", "number", "infinite number", "ans", "increment operation"]}
{"i": "5144997544329216", "t": "Given an array of n elements (a1,a2,..ai,...,an). You can allow to chose any index i and j, such that (i!=j) and allow to perform \rincrement operation on ai = ai+1 and decrement operation on aj = aj-1 infinite number of times.\rHow many number of elements you can find which have same numbers.\r example 1:\r1 4 1\rans: 3\r example 2:\r2 1 \rans : 1", "k": ["perform increment operation", "ans", "infinite number", "array", "operation"]}
{"i": "5712388493934592", "t": "Given a number N, find the smallest 3 digits number  such that product of its digits is equal to N.For example for N=100 , 3 digits number is  455.", "k": ["find the smallest", "equal to n.for", "digits number", "number", "digits"]}
{"i": "5753456971218944", "t": "Given a function \u201cf\u201d in which 0 occurs with probability 0.4 and 1 occurs with probability 0.6. Using function \u201cf\u201d deduce a new function \u201cf1\u201d such that both 0 and 1 occurs with probability 0.5", "k": ["occurs with probability", "occurs", "probability", "function", "deduce"]}
{"i": "5605893974523904", "t": "Write an application in Java to simulate file system. For e.g. implement commands: ls -l (list contents of director sorted by name), cd .. (to go to parent directory), pwd to return the complete path to current directory etc. It was a 2 hour remote programming test.\r Your system will have Directory and Files. A directory can contain files and other directories.", "k": ["application in java", "java to simulate", "write an application", "java", "simulate file system"]}
{"i": "5394117727092736", "t": "Subset Sum\rGiven a target value and a list of numbers to pick from, pick numbers from the list such that the numbers picked add up to the target value.\rFor example, if given a target value of 150 and a list of numbers to pick from consisting of 1, 2, 100, 22 and 28, the correct answer would be 100, 22 and 28 because 100 + 22 + 28 =150. If given a target value of 30 and the sample numbers to pick from were 1, 2, 100, 22 and 28, the correct answer would be 28 and 2 because 28 + 2 = 30.\rNOTE: Once you use a number from the list you cannot pick it again.\rNOTE: If no combination of numbers adds up to the requested value, the correct answer is \"No combination matches\".\rNOTE: There can be more than one correct answer. For example, for target value 3 and list 1, 2 and 3 the correct answer would be either: 1, 2 or 3. You only need to return 1 correct answer not all of them.\rWrite a program that takes a list of numbers from the command line. The first number is the target value and the reminder of the numbers (however many there may be) is the set of numbers you have to pick from. The program should either output a subset whose sum equals the target or \"No combination matches\" if no such subset exists. We would prefer you use Java or C# on this program, but you can use another procedural language if you don't know Java or C#.\rFor example, the following inputs should yield the following results:\rSubsetSum 15 1 2 3 5 7 10\r{3,7,5}\rSubsetSum 9 1 2 3 5 7 10\r{2,7}\rSubsetSum 100 1 2 3 5 7 10\rNo combination matches", "k": ["correct answer", "numbers", "target", "pick", "correct"]}
{"i": "5326480582115328", "t": "why will the code show error when tried to compiled\rbelow given is a C program snippet to get height of a binary tree.int height (struct node * root)\r\n{\r\n\tif(root=NULL)\r\n\treturn 0;\r\n\r\n\telse\r\n\t{\r\n\t\treturn max(height(root->left),\theight(root->right))+1;\r\n\t}\r\n\r\n}\r\n\r\nint max(int a,int b)\r\n{\r\n\treturn ((a>b)?a:b);}", "k": ["code show error", "binary tree.int height", "root", "struct node", "int max"]}
{"i": "5293306254721024", "t": "In Java: Write a function in language of your choice that takes in two strings, and returns true if they match. Constraints are as follows: String 1, the text to match to, will be alphabets and digits. String 2, the pattern, will be alphabets, digits, '.' and '*'. '.' means either alphabet or digit will be considered as a \"match\". \"*\" means the previous character is repeat 0 or more # of times. For example: Text: Facebook Pattern: F.cebo*k returns true.", "k": ["write a function", "java", "write", "function in language", "string"]}
{"i": "5084295966228480", "t": "Design a parking lot system where you need to provide a token with the parking space number on it to each new entry for the space closest to the entrance.\rWhen someone leave you need update this  space as empty.\rWhat data structures will you use to perform the  closest empty space tracking, plus finding what all spaces are occupied at a give time.", "k": ["parking lot system", "parking space number", "lot system", "provide a token", "parking lot"]}
{"i": "5758468392747008", "t": "Find median from a stream of flowing numbers", "k": ["find median", "flowing numbers", "stream of flowing", "find", "numbers"]}
{"i": "6230236190474240", "t": "Write a piece of code to find out if the system is x86 architecure of Sparc", "k": ["architecure of sparc", "write a piece", "piece of code", "code to find", "sparc"]}
{"i": "6305995118608384", "t": "Write a function in C to create a new BST which is the mirror image of a given tree.", "k": ["write a function", "mirror image", "bst", "write", "tree"]}
{"i": "5180095211765760", "t": "Write a piece of code to find out if the system is x86 architecture of Sparc", "k": ["architecture of sparc", "write a piece", "piece of code", "code to find", "sparc"]}
{"i": "4905700488642560", "t": "Write multi threaded code in C so that one thread prints all even numbers and other all odd numbers with the output always in sequence ie. 0,1,2,3...etc", "k": ["write multi threaded", "multi threaded code", "write multi", "multi threaded", "threaded code"]}
{"i": "5665203177914368", "t": "Write a piece of code to find out if a system is x86 architecture or Sparc?", "k": ["architecture or sparc", "write a piece", "piece of code", "code to find", "sparc"]}
{"i": "5466631807434752", "t": "write test cases for a game on pc and mobile device and you can play that game on pc and pause it on pc and again resume this game on mobile.", "k": ["write test cases", "write test", "test cases", "mobile device", "game"]}
{"i": "6206431334236160", "t": "write test area and test case for a pen drive", "k": ["write test area", "pen drive", "write test", "test area", "test case"]}
{"i": "6236375846223872", "t": "find whether a  number is palindrome or not if number is not palindrome ( i.e 112 ) make it in a palindrome form and check if it is palindrome or not.\rExample -  121 this is a palindrome number but 112 is not palindrome so make it 121 and check.", "k": ["form and check", "palindrome", "palindrome form", "number", "palindrome number"]}
{"i": "5643481380814848", "t": "How to perform string matching using suffix tree? (code)", "k": ["perform string matching", "suffix tree", "perform string", "string matching", "matching using suffix"]}
{"i": "5130214535331840", "t": "Given a binary search tree of n nodes, find all the pair of  nodes whose sum is equal to a given number k in O(n) time and constant space.", "k": ["binary search tree", "time and constant", "constant space", "binary search", "search tree"]}
{"i": "6246224743104512", "t": "what is memory leak and write a shell script to find memory leak ?", "k": ["find memory leak", "memory leak", "write a shell", "shell script", "script to find"]}
